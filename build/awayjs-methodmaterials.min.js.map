{
  "version": 3,
  "sources": [
    "node_modules/browserify/node_modules/browser-pack/_prelude.js",
    "awayjs-methodmaterials/lib/MethodMaterialMode.ts",
    "awayjs-methodmaterials.js",
    "awayjs-methodmaterials/lib/MethodMaterial.ts",
    "awayjs-methodmaterials/lib/compilation/RenderMethodMaterialObject.ts",
    "awayjs-methodmaterials/lib/data/MethodVO.ts",
    "awayjs-methodmaterials/lib/methods/AmbientBasicMethod.ts",
    "awayjs-methodmaterials/lib/methods/AmbientEnvMapMethod.ts",
    "awayjs-methodmaterials/lib/methods/DiffuseBasicMethod.ts",
    "awayjs-methodmaterials/lib/methods/DiffuseCelMethod.ts",
    "awayjs-methodmaterials/lib/methods/DiffuseCompositeMethod.ts",
    "awayjs-methodmaterials/lib/methods/DiffuseDepthMethod.ts",
    "awayjs-methodmaterials/lib/methods/DiffuseGradientMethod.ts",
    "awayjs-methodmaterials/lib/methods/DiffuseLightMapMethod.ts",
    "awayjs-methodmaterials/lib/methods/DiffuseSubSurfaceMethod.ts",
    "awayjs-methodmaterials/lib/methods/DiffuseWrapMethod.ts",
    "awayjs-methodmaterials/lib/methods/EffectAlphaMaskMethod.ts",
    "awayjs-methodmaterials/lib/methods/EffectColorMatrixMethod.ts",
    "awayjs-methodmaterials/lib/methods/EffectColorTransformMethod.ts",
    "awayjs-methodmaterials/lib/methods/EffectEnvMapMethod.ts",
    "awayjs-methodmaterials/lib/methods/EffectFogMethod.ts",
    "awayjs-methodmaterials/lib/methods/EffectFresnelEnvMapMethod.ts",
    "awayjs-methodmaterials/lib/methods/EffectLightMapMethod.ts",
    "awayjs-methodmaterials/lib/methods/EffectMethodBase.ts",
    "awayjs-methodmaterials/lib/methods/EffectRefractionEnvMapMethod.ts",
    "awayjs-methodmaterials/lib/methods/EffectRimLightMethod.ts",
    "awayjs-methodmaterials/lib/methods/LightingMethodBase.ts",
    "awayjs-methodmaterials/lib/methods/NormalBasicMethod.ts",
    "awayjs-methodmaterials/lib/methods/NormalHeightMapMethod.ts",
    "awayjs-methodmaterials/lib/methods/NormalSimpleWaterMethod.ts",
    "awayjs-methodmaterials/lib/methods/ShadingMethodBase.ts",
    "awayjs-methodmaterials/lib/methods/ShadowCascadeMethod.ts",
    "awayjs-methodmaterials/lib/methods/ShadowDitheredMethod.ts",
    "awayjs-methodmaterials/lib/methods/ShadowFilteredMethod.ts",
    "awayjs-methodmaterials/lib/methods/ShadowHardMethod.ts",
    "awayjs-methodmaterials/lib/methods/ShadowMapMethodBase.ts",
    "awayjs-methodmaterials/lib/methods/ShadowMethodBase.ts",
    "awayjs-methodmaterials/lib/methods/ShadowNearMethod.ts",
    "awayjs-methodmaterials/lib/methods/ShadowSoftMethod.ts",
    "awayjs-methodmaterials/lib/methods/SpecularAnisotropicMethod.ts",
    "awayjs-methodmaterials/lib/methods/SpecularBasicMethod.ts",
    "awayjs-methodmaterials/lib/methods/SpecularCelMethod.ts",
    "awayjs-methodmaterials/lib/methods/SpecularCompositeMethod.ts",
    "awayjs-methodmaterials/lib/methods/SpecularFresnelMethod.ts",
    "awayjs-methodmaterials/lib/methods/SpecularPhongMethod.ts",
    "awayjs-methodmaterials/lib/passes/MethodPassMode.ts",
    "awayjs-methodmaterials/lib/passes/MethodPass.ts",
    "awayjs-methodmaterials/lib/passes/SingleObjectDepthPass.ts",
    "awayjs-methodmaterials/lib/pool/MethodRenderablePool.ts",
    "awayjs-methodmaterials/lib/pool/MethodRendererPool.ts"
  ],
  "names": [
    "require",
    "e",
    "t",
    "n",
    "r",
    "s",
    "o",
    "u",
    "a",
    "i",
    "f",
    "Error",
    "code",
    "l",
    "exports",
    "call",
    "length",
    "awayjs-methodmaterials/lib/MethodMaterialMode",
    "module",
    "MethodMaterialMode",
    "SINGLE_PASS",
    "MULTI_PASS",
    "awayjs-methodmaterials/lib/MethodMaterial",
    "__extends",
    "this",
    "d",
    "b",
    "p",
    "hasOwnProperty",
    "__",
    "constructor",
    "prototype",
    "Texture2DBase",
    "MaterialBase",
    "ContextGLCompareMode",
    "AmbientBasicMethod",
    "DiffuseBasicMethod",
    "NormalBasicMethod",
    "SpecularBasicMethod",
    "MethodMaterial",
    "_super",
    "textureColor",
    "smoothAlpha",
    "repeat",
    "mipmap",
    "_effectMethods",
    "Array",
    "_ambientMethod",
    "_diffuseMethod",
    "_normalMethod",
    "_specularMethod",
    "_depthCompareMode",
    "LESS_EQUAL",
    "_mode",
    "texture",
    "smooth",
    "color",
    "Number",
    "alpha",
    "Object",
    "defineProperty",
    "get",
    "set",
    "value",
    "_pInvalidateRenderObject",
    "enumerable",
    "configurable",
    "copyFrom",
    "_shadowMethod",
    "addEffectMethod",
    "method",
    "push",
    "getEffectMethodAt",
    "index",
    "addEffectMethodAt",
    "splice",
    "removeEffectMethod",
    "indexOf",
    "normalMap",
    "gloss",
    "ambient",
    "specular",
    "ambientColor",
    "diffuseColor",
    "specularColor",
    "getRenderObject",
    "renderablePool",
    "getMethodRenderObject",
    "awayjs-core/lib/textures/Texture2DBase",
    "undefined",
    "awayjs-display/lib/materials/MaterialBase",
    "awayjs-methodmaterials/lib/methods/AmbientBasicMethod",
    "awayjs-methodmaterials/lib/methods/DiffuseBasicMethod",
    "awayjs-methodmaterials/lib/methods/NormalBasicMethod",
    "awayjs-methodmaterials/lib/methods/SpecularBasicMethod",
    "awayjs-stagegl/lib/base/ContextGLCompareMode",
    "awayjs-methodmaterials/lib/compilation/RenderMethodMaterialObject",
    "BlendMode",
    "StaticLightPicker",
    "RenderObjectBase",
    "MethodPassMode",
    "MethodPass",
    "RenderMethodMaterialObject",
    "pool",
    "material",
    "renderableClass",
    "stage",
    "_material",
    "lightPicker",
    "numLightProbes",
    "numDirectionalLights",
    "numPointLights",
    "numCastingDirectionalLights",
    "numCastingPointLights",
    "_pUpdateRenderObject",
    "initPasses",
    "setBlendAndCompareModes",
    "_pClearScreenPasses",
    "mode",
    "_casterLightPass",
    "_pAddScreenPass",
    "_nonCasterLightPasses",
    "_screenPass",
    "numLights",
    "numEffectMethods",
    "initEffectPass",
    "removeEffectPass",
    "shadowMethod",
    "initCasterLightPass",
    "removeCasterLightPass",
    "numNonCasters",
    "initNonCasterLightPasses",
    "removeNonCasterLightPasses",
    "forceSeparateMVP",
    "Boolean",
    "setBlendMode",
    "NORMAL",
    "depthCompareMode",
    "firstAdditiveIndex",
    "ADD",
    "_pRequiresBlending",
    "EFFECTS",
    "LAYER",
    "blendMode",
    "alphaBlending",
    "colorTransform",
    "alphaMultiplier",
    "SUPER_SHADER",
    "preserveAlpha",
    "LIGHTING",
    "_renderableClass",
    "_stage",
    "castingLight",
    "diffuseMethod",
    "ambientMethod",
    "normalMethod",
    "specularMethod",
    "dispose",
    "_pRemoveScreenPass",
    "pass",
    "numDirLights",
    "dirLightOffset",
    "pointLightOffset",
    "probeOffset",
    "includeCasters",
    "directionalLightsOffset",
    "pointLightsOffset",
    "lightProbesOffset",
    "effectMethod",
    "len",
    "Math",
    "max",
    "removeEffectMethodAt",
    "id",
    "awayjs-core/lib/data/BlendMode",
    "awayjs-display/lib/materials/lightpickers/StaticLightPicker",
    "awayjs-methodmaterials/lib/passes/MethodPass",
    "awayjs-methodmaterials/lib/passes/MethodPassMode",
    "awayjs-renderergl/lib/compilation/RenderObjectBase",
    "awayjs-methodmaterials/lib/data/MethodVO",
    "MethodVO",
    "useMethod",
    "reset",
    "iReset",
    "texturesIndex",
    "vertexConstantsIndex",
    "fragmentConstantsIndex",
    "needsProjection",
    "needsView",
    "needsNormals",
    "needsTangents",
    "needsUV",
    "needsSecondaryUV",
    "needsGlobalVertexPos",
    "needsGlobalFragmentPos",
    "ShaderCompilerHelper",
    "ShadingMethodBase",
    "_color",
    "_alpha",
    "_colorR",
    "_colorG",
    "_colorB",
    "_ambient",
    "iInitVO",
    "shaderObject",
    "methodVO",
    "iInitConstants",
    "updateColor",
    "m",
    "iGetFragmentCode",
    "targetReg",
    "registerCache",
    "sharedRegisters",
    "ambientInputRegister",
    "getFreeTextureReg",
    "getTex2DSampleCode",
    "useSmoothTextures",
    "repeatTextures",
    "alphaThreshold",
    "cutOffReg",
    "getFreeFragmentConstant",
    "iActivate",
    "activateTexture",
    "useMipmapping",
    "fragmentConstantData",
    "data",
    "awayjs-methodmaterials/lib/methods/ShadingMethodBase",
    "awayjs-renderergl/lib/utils/ShaderCompilerHelper",
    "awayjs-methodmaterials/lib/methods/AmbientEnvMapMethod",
    "AmbientEnvMapMethod",
    "envMap",
    "_cubeTexture",
    "activateCubeTexture",
    "regCache",
    "cubeMapReg",
    "getTexCubeSampleCode",
    "normalFragment",
    "LightingMethodBase",
    "_multiply",
    "_diffuseColor",
    "_ambientColor",
    "_diffuseR",
    "_diffuseG",
    "_diffuseB",
    "_ambientR",
    "_ambientG",
    "_ambientB",
    "iIsUsed",
    "iInvalidateShaderProgram",
    "_pUseTexture",
    "generateMip",
    "_texture",
    "updateDiffuse",
    "updateAmbient",
    "format",
    "diff",
    "multiply",
    "iCleanCompilationData",
    "_pTotalLightColorReg",
    "_pDiffuseInputRegister",
    "iGetFragmentPreLightingCode",
    "_pIsFirstLight",
    "getFreeFragmentVectorTemp",
    "addFragmentTempUsages",
    "iGetFragmentCodePerLight",
    "lightDirReg",
    "lightColReg",
    "commons",
    "usesLightFallOff",
    "_iModulateMethod",
    "removeFragmentTempUsage",
    "iGetFragmentCodePerProbe",
    "weightRegister",
    "iGetFragmentPostLightingCode",
    "albedo",
    "shadowTarget",
    "pApplyShadow",
    "ambientColorRegister",
    "iSetRenderState",
    "renderable",
    "camera",
    "ambientR",
    "ambientG",
    "ambientB",
    "awayjs-methodmaterials/lib/methods/LightingMethodBase",
    "awayjs-methodmaterials/lib/methods/DiffuseCelMethod",
    "DiffuseCompositeMethod",
    "DiffuseCelMethod",
    "levels",
    "baseMethod",
    "_this",
    "_smoothness",
    "clampDiffuse",
    "_levels",
    "secondaryFragmentConstantsIndex",
    "_dataReg",
    "awayjs-methodmaterials/lib/methods/DiffuseCompositeMethod",
    "ShadingMethodEvent",
    "modulateMethod",
    "_onShaderInvalidatedDelegate",
    "event",
    "onShaderInvalidated",
    "pBaseMethod",
    "addEventListener",
    "SHADER_INVALIDATED",
    "removeEventListener",
    "iDeactivate",
    "iGetVertexCode",
    "awayjs-renderergl/lib/events/ShadingMethodEvent",
    "awayjs-methodmaterials/lib/methods/DiffuseDepthMethod",
    "DiffuseDepthMethod",
    "temp",
    "decReg",
    "awayjs-methodmaterials/lib/methods/DiffuseGradientMethod",
    "DiffuseGradientMethod",
    "gradient",
    "_gradient",
    "_gradientTextureRegister",
    "secondaryTexturesIndex",
    "awayjs-methodmaterials/lib/methods/DiffuseLightMapMethod",
    "DiffuseLightMapMethod",
    "lightMap",
    "useSecondaryUV",
    "_useSecondaryUV",
    "_lightMapTexture",
    "_blendMode",
    "MULTIPLY",
    "lightMapReg",
    "secondaryUVVarying",
    "awayjs-methodmaterials/lib/methods/DiffuseSubSurfaceMethod",
    "DiffuseSubSurfaceMethod",
    "depthMapSize",
    "depthMapOffset",
    "_translucency",
    "_scatterColor",
    "_scatterR",
    "_scatterG",
    "_scatterB",
    "scatterLight",
    "_scattering",
    "vertexConstantData",
    "secondaryVertexConstantsIndex",
    "_lightProjVarying",
    "_propReg",
    "_lightColorReg",
    "_colorReg",
    "_decReg",
    "_targetReg",
    "scatterColor",
    "lightProjection",
    "toTexRegister",
    "getFreeVertexVectorTemp",
    "getFreeVertexConstant",
    "getFreeVarying",
    "viewDirFragment",
    "_depthPass",
    "_iGetDepthMap",
    "_iGetProjection",
    "copyRawDataTo",
    "depthReg",
    "awayjs-methodmaterials/lib/methods/DiffuseWrapMethod",
    "DiffuseWrapMethod",
    "wrapFactor",
    "_wrapDataRegister",
    "_wrapFactor",
    "awayjs-methodmaterials/lib/methods/EffectAlphaMaskMethod",
    "EffectMethodBase",
    "EffectAlphaMaskMethod",
    "textureReg",
    "uvReg",
    "uvVarying",
    "awayjs-methodmaterials/lib/methods/EffectMethodBase",
    "awayjs-methodmaterials/lib/methods/EffectColorMatrixMethod",
    "EffectColorMatrixMethod",
    "matrix",
    "_matrix",
    "colorMultReg",
    "colorOffsetReg",
    "awayjs-methodmaterials/lib/methods/EffectColorTransformMethod",
    "EffectColorTransformMethod",
    "_colorTransform",
    "colorOffsReg",
    "inv",
    "redMultiplier",
    "greenMultiplier",
    "blueMultiplier",
    "redOffset",
    "greenOffset",
    "blueOffset",
    "alphaOffset",
    "awayjs-methodmaterials/lib/methods/EffectEnvMapMethod",
    "EffectEnvMapMethod",
    "_mask",
    "dataRegister",
    "temp2",
    "awayjs-methodmaterials/lib/methods/EffectFogMethod",
    "EffectFogMethod",
    "minDistance",
    "maxDistance",
    "fogColor",
    "_minDistance",
    "_maxDistance",
    "_fogColor",
    "_fogR",
    "_fogG",
    "_fogB",
    "fogData",
    "projectionFragment",
    "awayjs-methodmaterials/lib/methods/EffectFresnelEnvMapMethod",
    "EffectFresnelEnvMapMethod",
    "_fresnelPower",
    "_normalReflectance",
    "viewDirReg",
    "normalReg",
    "maskReg",
    "awayjs-methodmaterials/lib/methods/EffectLightMapMethod",
    "EffectLightMapMethod",
    "AbstractMethodError",
    "assetType",
    "awayjs-core/lib/errors/AbstractMethodError",
    "awayjs-methodmaterials/lib/methods/EffectRefractionEnvMapMethod",
    "EffectRefractionEnvMapMethod",
    "refractionIndex",
    "dispersionR",
    "dispersionG",
    "dispersionB",
    "_dispersionR",
    "_dispersionG",
    "_dispersionB",
    "_envMap",
    "_useDispersion",
    "_refractionIndex",
    "useDispersion",
    "data2",
    "refractionDir",
    "refractionColor",
    "awayjs-methodmaterials/lib/methods/EffectRimLightMethod",
    "EffectRimLightMethod",
    "strength",
    "power",
    "blend",
    "_strength",
    "_power",
    "dataRegister2",
    "MIX",
    "_useTexture",
    "normalDependencies",
    "iOutputsTangentNormals",
    "bnm",
    "_pNormalTextureRegister",
    "awayjs-methodmaterials/lib/methods/NormalHeightMapMethod",
    "NormalHeightMapMethod",
    "heightMap",
    "worldWidth",
    "worldHeight",
    "worldDepth",
    "_worldXYRatio",
    "_worldXZRatio",
    "width",
    "height",
    "dataReg",
    "dataReg2",
    "awayjs-methodmaterials/lib/methods/NormalSimpleWaterMethod",
    "NormalSimpleWaterMethod",
    "waveMap1",
    "waveMap2",
    "_useSecondNormalMap",
    "_water1OffsetX",
    "_water1OffsetY",
    "_water2OffsetX",
    "_water2OffsetY",
    "secondaryNormalMap",
    "_texture2",
    "_normalTextureRegister2",
    "AssetBase",
    "iUsesTangentSpace",
    "dispatchEvent",
    "awayjs-core/lib/library/AssetBase",
    "awayjs-methodmaterials/lib/methods/ShadowCascadeMethod",
    "Event",
    "DirectionalLight",
    "ShadowMapMethodBase",
    "ShadowCascadeMethod",
    "shadowMethodBase",
    "_baseMethod",
    "_pCastingLight",
    "_cascadeShadowMapper",
    "shadowMapper",
    "CHANGE",
    "onCascadeChange",
    "tempVO",
    "fragmentData",
    "vertexData",
    "_cascadeProjections",
    "_depthMapCoordVaryings",
    "initProjectionsRegs",
    "numCascades",
    "globalPositionVertex",
    "depthMapRegister",
    "planeDistanceReg",
    "planeDistances",
    "inQuad",
    "uvCoord",
    "uvProjection",
    "_iGetCascadeFragmentCode",
    "depthMap",
    "vertexIndex",
    "depth",
    "_pEpsilon",
    "k",
    "getDepthProjections",
    "fragmentIndex",
    "_pAlpha",
    "nearPlaneDistances",
    "_iNearPlaneDistances",
    "iActivateForCascade",
    "awayjs-core/lib/events/Event",
    "awayjs-display/lib/entities/DirectionalLight",
    "awayjs-methodmaterials/lib/methods/ShadowMapMethodBase",
    "awayjs-methodmaterials/lib/methods/ShadowDitheredMethod",
    "BitmapData",
    "BitmapTexture",
    "ShadowMethodBase",
    "ShadowDitheredMethod",
    "numSamples",
    "range",
    "_depthMapSize",
    "_grainUsages",
    "_grainTexture",
    "initGrainTexture",
    "_numSamples",
    "_range",
    "_grainBitmapData",
    "vec",
    "step",
    "g",
    "random",
    "floor",
    "setArray",
    "rect",
    "_pGetPlanarFragmentCode",
    "customDataReg",
    "getSampleCode",
    "grainRegister",
    "projectionReg",
    "_pDepthMapCoordReg",
    "addSample",
    "decodeRegister",
    "depthTexture",
    "depthProjection",
    "targetRegister",
    "awayjs-core/lib/data/BitmapData",
    "awayjs-core/lib/textures/BitmapTexture",
    "awayjs-methodmaterials/lib/methods/ShadowMethodBase",
    "awayjs-methodmaterials/lib/methods/ShadowFilteredMethod",
    "ShadowFilteredMethod",
    "size",
    "depthCol",
    "predicate",
    "awayjs-methodmaterials/lib/methods/ShadowHardMethod",
    "ShadowHardMethod",
    "_pGetPointFragmentCode",
    "epsReg",
    "posReg",
    "depthSampleCol",
    "lightDir",
    "globalPositionVarying",
    "castsShadows",
    "_pShadowMapper",
    "PointLight",
    "_pUsePoint",
    "_pGetPointVertexCode",
    "pGetPlanarVertexCode",
    "depthMapProj",
    "iDepthProjection",
    "pow",
    "fallOff",
    "pos",
    "scenePosition",
    "x",
    "y",
    "z",
    "activateRenderTexture",
    "awayjs-display/lib/entities/PointLight",
    "awayjs-methodmaterials/lib/methods/ShadowNearMethod",
    "ShadowNearMethod",
    "fadeRatio",
    "_fadeRatio",
    "_nearShadowMapper",
    "epsilon",
    "getFreeFragmentSingleTemp",
    "near",
    "projection",
    "far",
    "coverageRatio",
    "awayjs-methodmaterials/lib/methods/ShadowSoftMethod",
    "PoissonLookup",
    "ShadowSoftMethod",
    "_offsets",
    "getDistribution",
    "texRange",
    "uv",
    "decode",
    "target",
    "offsets",
    "numRegs",
    "reg",
    "awayjs-core/lib/geom/PoissonLookup",
    "awayjs-methodmaterials/lib/methods/SpecularAnisotropicMethod",
    "SpecularAnisotropicMethod",
    "tangentVarying",
    "_pSpecularTexData",
    "_pSpecularDataRegister",
    "_gloss",
    "_specular",
    "_specularColor",
    "_iSpecularR",
    "_iSpecularG",
    "_iSpecularB",
    "updateSpecular",
    "bsm",
    "spec",
    "_pSpecularTextureRegister",
    "awayjs-methodmaterials/lib/methods/SpecularCelMethod",
    "SpecularCompositeMethod",
    "SpecularCelMethod",
    "specularCutOff",
    "_specularCutOff",
    "clampSpecular",
    "awayjs-methodmaterials/lib/methods/SpecularCompositeMethod",
    "awayjs-methodmaterials/lib/methods/SpecularFresnelMethod",
    "SpecularFresnelMethod",
    "basedOnSurface",
    "modulateSpecular",
    "_incidentLight",
    "awayjs-methodmaterials/lib/methods/SpecularPhongMethod",
    "SpecularPhongMethod",
    "PassMode",
    "LightSources",
    "ShaderLightingObject",
    "ShaderObjectBase",
    "RenderPassBase",
    "renderObject",
    "renderObjectOwner",
    "_maxLights",
    "_includeCasters",
    "_iMethodVOs",
    "_numEffectDependencies",
    "_onLightsChangeDelegate",
    "onLightsChange",
    "_onMethodInvalidatedDelegate",
    "onMethodInvalidated",
    "_shader",
    "_updateShader",
    "_updateLights",
    "_lightPicker",
    "enableLightFallOff",
    "diffuseLightSources",
    "specularLightSources",
    "_iInitConstantData",
    "colorTransformMethod",
    "_iColorTransformMethodVO",
    "_removeDependency",
    "_addDependency",
    "effectsDependency",
    "invalidatePass",
    "hasEffectMethod",
    "getDependencyForMethod",
    "_iNormalMethodVO",
    "_iAmbientMethodVO",
    "_iShadowMethodVO",
    "_iDiffuseMethodVO",
    "_iSpecularMethodVO",
    "_iActivate",
    "_iRender",
    "viewProjection",
    "_iDeactivate",
    "_iIncludeDependencies",
    "usesFragmentAnimation",
    "usesTangentSpace",
    "usesLights",
    "globalPosDependencies",
    "usesGlobalPosFragment",
    "setupAndCountDependencies",
    "projectionDependencies",
    "tangentDependencies",
    "viewDirDependencies",
    "uvDependencies",
    "secondaryUVDependencies",
    "_iGetPreLightingVertexCode",
    "_iGetPreLightingFragmentCode",
    "shadedTarget",
    "_iGetPerLightDiffuseFragmentCode",
    "diffuseColorReg",
    "_iGetPerLightSpecularFragmentCode",
    "specularColorReg",
    "_iGetPerProbeDiffuseFragmentCode",
    "texReg",
    "weightReg",
    "_iGetPerProbeSpecularFragmentCode",
    "_iGetPostLightingVertexCode",
    "_iGetPostLightingFragmentCode",
    "useAlphaPremultiplied",
    "_pEnableBlending",
    "_pUsesTangentSpace",
    "usesProbes",
    "_pOutputsTangentNormals",
    "_pOutputsNormals",
    "_iGetNormalVertexCode",
    "_iGetNormalFragmentCode",
    "removeVertexTempUsage",
    "_iGetVertexCode",
    "sharedReg",
    "_iGetFragmentCode",
    "alphaReg",
    "_iUsesShadows",
    "castingDirectionalLights",
    "castingPointLights",
    "_iUsesSpecular",
    "_iUsesDiffuse",
    "numDirectionalLightsOld",
    "numPointLightsOld",
    "numLightProbesOld",
    "calculateNumDirectionalLights",
    "calculateNumPointLights",
    "calculateNumProbes",
    "min",
    "numFree",
    "numChannels",
    "PROBES",
    "awayjs-display/lib/materials/LightSources",
    "awayjs-renderergl/lib/compilation/ShaderLightingObject",
    "awayjs-renderergl/lib/compilation/ShaderObjectBase",
    "awayjs-renderergl/lib/passes/RenderPassBase",
    "awayjs-methodmaterials/lib/passes/SingleObjectDepthPass",
    "TriangleSubGeometry",
    "Matrix3D",
    "RenderTexture",
    "ContextGLProgramType",
    "SingleObjectDepthPass",
    "_textureSize",
    "_polyOffset",
    "_projectionTexturesInvalid",
    "_textures",
    "key",
    "updateProjectionTextures",
    "_projections",
    "renderableOwner",
    "context",
    "light",
    "lights",
    "_renderObjectOwner",
    "allPickedLights",
    "rId",
    "iGetObjectProjectionMatrix",
    "sourceEntity",
    "setRenderTarget",
    "clear",
    "setProgramConstantsFromMatrix",
    "VERTEX",
    "setProgramConstantsFromArray",
    "FRAGMENT",
    "_enc",
    "activateBuffer",
    "getVertexData",
    "POSITION_DATA",
    "getVertexOffset",
    "POSITION_FORMAT",
    "NORMAL_DATA",
    "NORMAL_FORMAT",
    "drawTriangles",
    "getIndexBuffer",
    "getIndexData",
    "numTriangles",
    "awayjs-core/lib/data/TriangleSubGeometry",
    "awayjs-core/lib/geom/Matrix3D",
    "awayjs-core/lib/textures/RenderTexture",
    "awayjs-stagegl/lib/base/ContextGLProgramType",
    "awayjs-methodmaterials/lib/pool/MethodRenderablePool",
    "RenderablePoolBase",
    "RenderObjectPool",
    "MethodRenderablePool",
    "_methodMaterialRenderObjectPool",
    "getItem",
    "getPool",
    "pools",
    "_pools",
    "stageIndex",
    "awayjs-renderergl/lib/compilation/RenderObjectPool",
    "awayjs-renderergl/lib/pool/RenderablePoolBase",
    "awayjs-methodmaterials/lib/pool/MethodRendererPool",
    "BillboardRenderable",
    "LineSegmentRenderable",
    "LineSubMeshRenderable",
    "TriangleSubMeshRenderable",
    "CurveSubMeshRenderable",
    "RendererPoolBase",
    "MethodRendererPool",
    "renderer",
    "_pUpdatePool",
    "_billboardRenderablePool",
    "_pStage",
    "_lineSegmentRenderablePool",
    "_triangleSubMeshRenderablePool",
    "_lineSubMeshRenderablePool",
    "_curveSubMeshRenderablePool",
    "awayjs-renderergl/lib/pool/BillboardRenderable",
    "awayjs-renderergl/lib/pool/CurveSubMeshRenderable",
    "awayjs-renderergl/lib/pool/LineSegmentRenderable",
    "awayjs-renderergl/lib/pool/LineSubMeshRenderable",
    "awayjs-renderergl/lib/pool/RendererPoolBase",
    "awayjs-renderergl/lib/pool/TriangleSubMeshRenderable"
  ],
  "mappings": "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",
  "file": "awayjs-methodmaterials.min.js",
  "sourcesContent": [
    "(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})",
    "class MethodMaterialMode\n{\n\t/**\n\t *\n\t */\n\tpublic static SINGLE_PASS:string = \"singlePass\";\n\n\t/**\n\t *\n\t */\n\tpublic static MULTI_PASS:string = \"multiPass\";\n}\n\nexport = MethodMaterialMode;",
    null,
    "﻿import BlendMode\t\t\t\t\t= require(\"awayjs-core/lib/data/BlendMode\");\nimport Texture2DBase\t\t\t\t= require(\"awayjs-core/lib/textures/Texture2DBase\");\n\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport StaticLightPicker\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/StaticLightPicker\");\nimport IRenderObjectOwner\t\t\t= require(\"awayjs-display/lib/base/IRenderObjectOwner\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport IRenderObject\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderObject\");\n\nimport ContextGLCompareMode\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLCompareMode\");\n\nimport AmbientBasicMethod\t\t\t= require(\"awayjs-methodmaterials/lib/methods/AmbientBasicMethod\");\nimport DiffuseBasicMethod\t\t\t= require(\"awayjs-methodmaterials/lib/methods/DiffuseBasicMethod\");\nimport EffectMethodBase\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/EffectMethodBase\");\nimport NormalBasicMethod\t\t\t= require(\"awayjs-methodmaterials/lib/methods/NormalBasicMethod\");\nimport ShadowMapMethodBase\t\t\t= require(\"awayjs-methodmaterials/lib/methods/ShadowMapMethodBase\");\nimport SpecularBasicMethod\t\t\t= require(\"awayjs-methodmaterials/lib/methods/SpecularBasicMethod\");\nimport MethodMaterialMode\t\t\t= require(\"awayjs-methodmaterials/lib/MethodMaterialMode\");\n\nimport MethodRenderablePool\t\t\t= require(\"awayjs-methodmaterials/lib/pool/MethodRenderablePool\");\n\n/**\n * MethodMaterial forms an abstract base class for the default shaded materials provided by Stage,\n * using material methods to define their appearance.\n */\nclass MethodMaterial extends MaterialBase\n{\n\tprivate _effectMethods:Array<EffectMethodBase> = new Array<EffectMethodBase>();\n\tprivate _mode:string;\n\n\tprivate _ambientMethod:AmbientBasicMethod = new AmbientBasicMethod();\n\tprivate _shadowMethod:ShadowMapMethodBase;\n\tprivate _diffuseMethod:DiffuseBasicMethod = new DiffuseBasicMethod();\n\tprivate _normalMethod:NormalBasicMethod = new NormalBasicMethod();\n\tprivate _specularMethod:SpecularBasicMethod = new SpecularBasicMethod();\n\n\n\tprivate _depthCompareMode:string = ContextGLCompareMode.LESS_EQUAL;\n\n\t/**\n\t * Creates a new MethodMaterial object.\n\t *\n\t * @param texture The texture used for the material's albedo color.\n\t * @param smooth Indicates whether the texture should be filtered when sampled. Defaults to true.\n\t * @param repeat Indicates whether the texture should be tiled when sampled. Defaults to false.\n\t * @param mipmap Indicates whether or not any used textures should use mipmapping. Defaults to false.\n\t */\n\tconstructor(texture?:Texture2DBase, smooth?:boolean, repeat?:boolean, mipmap?:boolean);\n\tconstructor(color?:number, alpha?:number);\n\tconstructor(textureColor:any = null, smoothAlpha:any = null, repeat:boolean = false, mipmap:boolean = true)\n\t{\n\t\tsuper();\n\n\t\tthis._mode = MethodMaterialMode.SINGLE_PASS;\n\n\t\tif (textureColor instanceof Texture2DBase) {\n\t\t\tthis.texture = <Texture2DBase> textureColor;\n\n\t\t\tthis.smooth = (smoothAlpha == null)? true : false;\n\t\t\tthis.repeat = repeat;\n\t\t\tthis.mipmap = mipmap;\n\t\t} else {\n\t\t\tthis.color = (textureColor == null)? 0xFFFFFF : Number(textureColor);\n\t\t\tthis.alpha = (smoothAlpha == null)? 1 : Number(smoothAlpha);\n\t\t}\n\t}\n\n\n\tpublic get mode():string\n\t{\n\t\treturn this._mode;\n\t}\n\n\tpublic set mode(value:string)\n\t{\n\t\tif (this._mode == value)\n\t\t\treturn;\n\n\t\tthis._mode = value;\n\n\t\tthis._pInvalidateRenderObject();\n\t}\n\n\t/**\n\t * The depth compare mode used to render the renderables using this material.\n\t *\n\t * @see away.stagegl.ContextGLCompareMode\n\t */\n\n\tpublic get depthCompareMode():string\n\t{\n\t\treturn this._depthCompareMode;\n\t}\n\n\tpublic set depthCompareMode(value:string)\n\t{\n\t\tif (this._depthCompareMode == value)\n\t\t\treturn;\n\n\t\tthis._depthCompareMode = value;\n\n\t\tthis._pInvalidateRenderObject();\n\t}\n\n\t/**\n\t * The texture object to use for the ambient colour.\n\t */\n\tpublic get diffuseTexture():Texture2DBase\n\t{\n\t\treturn this._diffuseMethod.texture;\n\t}\n\n\tpublic set diffuseTexture(value:Texture2DBase)\n\t{\n\t\tthis._diffuseMethod.texture = value;\n\t}\n\n\t/**\n\t * The method that provides the ambient lighting contribution. Defaults to AmbientBasicMethod.\n\t */\n\tpublic get ambientMethod():AmbientBasicMethod\n\t{\n\t\treturn this._ambientMethod;\n\t}\n\n\tpublic set ambientMethod(value:AmbientBasicMethod)\n\t{\n\t\tif (this._ambientMethod == value)\n\t\t\treturn;\n\n\t\tif (value && this._ambientMethod)\n\t\t\tvalue.copyFrom(this._ambientMethod);\n\n\t\tthis._ambientMethod = value;\n\n\t\tthis._pInvalidateRenderObject();\n\t}\n\n\t/**\n\t * The method used to render shadows cast on this surface, or null if no shadows are to be rendered. Defaults to null.\n\t */\n\tpublic get shadowMethod():ShadowMapMethodBase\n\t{\n\t\treturn this._shadowMethod;\n\t}\n\n\tpublic set shadowMethod(value:ShadowMapMethodBase)\n\t{\n\t\tif (this._shadowMethod == value)\n\t\t\treturn;\n\n\t\tif (value && this._shadowMethod)\n\t\t\tvalue.copyFrom(this._shadowMethod);\n\n\t\tthis._shadowMethod = value;\n\n\t\tthis._pInvalidateRenderObject();\n\t}\n\n\t/**\n\t * The method that provides the diffuse lighting contribution. Defaults to DiffuseBasicMethod.\n\t */\n\tpublic get diffuseMethod():DiffuseBasicMethod\n\t{\n\t\treturn this._diffuseMethod;\n\t}\n\n\tpublic set diffuseMethod(value:DiffuseBasicMethod)\n\t{\n\t\tif (this._diffuseMethod == value)\n\t\t\treturn;\n\n\t\tif (value && this._diffuseMethod)\n\t\t\tvalue.copyFrom(this._diffuseMethod);\n\n\t\tthis._diffuseMethod = value;\n\n\t\tthis._pInvalidateRenderObject();\n\t}\n\n\t/**\n\t * The method that provides the specular lighting contribution. Defaults to SpecularBasicMethod.\n\t */\n\tpublic get specularMethod():SpecularBasicMethod\n\t{\n\t\treturn this._specularMethod;\n\t}\n\n\tpublic set specularMethod(value:SpecularBasicMethod)\n\t{\n\t\tif (this._specularMethod == value)\n\t\t\treturn;\n\n\t\tif (value && this._specularMethod)\n\t\t\tvalue.copyFrom(this._specularMethod);\n\n\t\tthis._specularMethod = value;\n\n\t\tthis._pInvalidateRenderObject();\n\t}\n\n\t/**\n\t * The method used to generate the per-pixel normals. Defaults to NormalBasicMethod.\n\t */\n\tpublic get normalMethod():NormalBasicMethod\n\t{\n\t\treturn this._normalMethod;\n\t}\n\n\tpublic set normalMethod(value:NormalBasicMethod)\n\t{\n\t\tif (this._normalMethod == value)\n\t\t\treturn;\n\n\t\tif (value && this._normalMethod)\n\t\t\tvalue.copyFrom(this._normalMethod);\n\n\t\tthis._normalMethod = value;\n\n\t\tthis._pInvalidateRenderObject();\n\t}\n\n\tpublic get numEffectMethods():number\n\t{\n\t\treturn this._effectMethods.length;\n\t}\n\n\t/**\n\t * Appends an \"effect\" shading method to the shader. Effect methods are those that do not influence the lighting\n\t * but modulate the shaded colour, used for fog, outlines, etc. The method will be applied to the result of the\n\t * methods added prior.\n\t */\n\tpublic addEffectMethod(method:EffectMethodBase)\n\t{\n\t\tthis._effectMethods.push(method);\n\n\t\tthis._pInvalidateRenderObject();\n\t}\n\n\t/**\n\t * Returns the method added at the given index.\n\t * @param index The index of the method to retrieve.\n\t * @return The method at the given index.\n\t */\n\tpublic getEffectMethodAt(index:number):EffectMethodBase\n\t{\n\t\treturn this._effectMethods[index];\n\t}\n\n\t/**\n\t * Adds an effect method at the specified index amongst the methods already added to the material. Effect\n\t * methods are those that do not influence the lighting but modulate the shaded colour, used for fog, outlines,\n\t * etc. The method will be applied to the result of the methods with a lower index.\n\t */\n\tpublic addEffectMethodAt(method:EffectMethodBase, index:number)\n\t{\n\t\tthis._effectMethods.splice(index, 0, method);\n\n\t\tthis._pInvalidateRenderObject();\n\t}\n\n\t/**\n\t * Removes an effect method from the material.\n\t * @param method The method to be removed.\n\t */\n\tpublic removeEffectMethod(method:EffectMethodBase)\n\t{\n\t\tthis._effectMethods.splice(this._effectMethods.indexOf(method), 1);\n\n\t\tthis._pInvalidateRenderObject();\n\t}\n\n\t/**\n\t * The normal map to modulate the direction of the surface for each texel. The default normal method expects\n\t * tangent-space normal maps, but others could expect object-space maps.\n\t */\n\tpublic get normalMap():Texture2DBase\n\t{\n\t\treturn this._normalMethod.normalMap;\n\t}\n\n\tpublic set normalMap(value:Texture2DBase)\n\t{\n\t\tthis._normalMethod.normalMap = value;\n\t}\n\n\t/**\n\t * A specular map that defines the strength of specular reflections for each texel in the red channel,\n\t * and the gloss factor in the green channel. You can use SpecularBitmapTexture if you want to easily set\n\t * specular and gloss maps from grayscale images, but correctly authored images are preferred.\n\t */\n\tpublic get specularMap():Texture2DBase\n\t{\n\t\treturn this._specularMethod.texture;\n\t}\n\n\tpublic set specularMap(value:Texture2DBase)\n\t{\n\t\tthis._specularMethod.texture = value;\n\t}\n\n\t/**\n\t * The glossiness of the material (sharpness of the specular highlight).\n\t */\n\tpublic get gloss():number\n\t{\n\t\treturn this._specularMethod.gloss;\n\t}\n\n\tpublic set gloss(value:number)\n\t{\n\t\tthis._specularMethod.gloss = value;\n\t}\n\n\t/**\n\t * The strength of the ambient reflection.\n\t */\n\tpublic get ambient():number\n\t{\n\t\treturn this._ambientMethod.ambient;\n\t}\n\n\tpublic set ambient(value:number)\n\t{\n\t\tthis._ambientMethod.ambient = value;\n\t}\n\n\t/**\n\t * The overall strength of the specular reflection.\n\t */\n\tpublic get specular():number\n\t{\n\t\treturn this._specularMethod.specular;\n\t}\n\n\tpublic set specular(value:number)\n\t{\n\t\tthis._specularMethod.specular = value;\n\t}\n\n\t/**\n\t * The colour of the ambient reflection.\n\t */\n\tpublic get ambientColor():number\n\t{\n\t\treturn this._diffuseMethod.ambientColor;\n\t}\n\n\tpublic set ambientColor(value:number)\n\t{\n\t\tthis._diffuseMethod.ambientColor = value;\n\t}\n\n\t/**\n\t * The colour of the diffuse reflection.\n\t */\n\tpublic get diffuseColor():number\n\t{\n\t\treturn this._diffuseMethod.diffuseColor;\n\t}\n\n\tpublic set diffuseColor(value:number)\n\t{\n\t\tthis._diffuseMethod.diffuseColor = value;\n\t}\n\n\t/**\n\t * The colour of the specular reflection.\n\t */\n\tpublic get specularColor():number\n\t{\n\t\treturn this._specularMethod.specularColor;\n\t}\n\n\tpublic set specularColor(value:number)\n\t{\n\t\tthis._specularMethod.specularColor = value;\n\t}\n\n\t/**\n\t *\n\t * @param renderer\n\t *\n\t * @internal\n\t */\n\tpublic getRenderObject(renderablePool:MethodRenderablePool):IRenderObject\n\t{\n\t\treturn renderablePool.getMethodRenderObject(this);\n\t}\n}\n\nexport = MethodMaterial;",
    "import BlendMode\t\t\t\t\t\t= require(\"awayjs-core/lib/data/BlendMode\");\nimport TriangleSubGeometry\t\t\t\t= require(\"awayjs-core/lib/data/TriangleSubGeometry\");\nimport ColorTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Matrix\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\nimport Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Matrix3DUtils\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport AbstractMethodError\t\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport Texture2DBase\t\t\t\t\t= require(\"awayjs-core/lib/textures/Texture2DBase\");\n\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport IRenderObjectOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderObjectOwner\");\nimport StaticLightPicker\t\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/StaticLightPicker\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport ContextGLCompareMode\t\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLCompareMode\");\n\nimport RendererBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/base/RendererBase\");\nimport RenderObjectPool\t\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/RenderObjectPool\");\nimport ShadingMethodEvent\t\t\t\t= require(\"awayjs-renderergl/lib/events/ShadingMethodEvent\");\nimport ShaderObjectBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderObjectBase\");\nimport RenderObjectBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/RenderObjectBase\");\nimport RenderableBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/pool/RenderableBase\");\nimport IRenderableClass\t\t\t\t\t= require(\"awayjs-renderergl/lib/pool/IRenderableClass\");\n\nimport MethodMaterial\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/MethodMaterial\");\nimport MethodPassMode\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/passes/MethodPassMode\");\nimport MethodPass\t\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/passes/MethodPass\");\nimport AmbientBasicMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/AmbientBasicMethod\");\nimport DiffuseBasicMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/DiffuseBasicMethod\");\nimport EffectColorTransformMethod\t\t= require(\"awayjs-methodmaterials/lib/methods/EffectColorTransformMethod\");\nimport EffectMethodBase\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/EffectMethodBase\");\nimport LightingMethodBase\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/LightingMethodBase\");\nimport NormalBasicMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/NormalBasicMethod\");\nimport ShadowMapMethodBase\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/ShadowMapMethodBase\");\nimport SpecularBasicMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/SpecularBasicMethod\");\nimport MethodMaterialMode\t\t\t\t= require(\"awayjs-methodmaterials/lib/MethodMaterialMode\");\n\n/**\n * CompiledPass forms an abstract base class for the default compiled pass materials provided by Away3D,\n * using material methods to define their appearance.\n */\nclass RenderMethodMaterialObject extends RenderObjectBase\n{\n\t/**\n\t *\n\t */\n\tpublic static id:string = \"method\";\n\n\tprivate _material:MethodMaterial;\n\tprivate _screenPass:MethodPass;\n\tprivate _casterLightPass:MethodPass;\n\tprivate _nonCasterLightPasses:Array<MethodPass>;\n\t\n\t/**\n\t * The maximum total number of lights provided by the light picker.\n\t */\n\tprivate get numLights():number\n\t{\n\t\treturn this._material.lightPicker? this._material.lightPicker.numLightProbes + this._material.lightPicker.numDirectionalLights + this._material.lightPicker.numPointLights + this._material.lightPicker.numCastingDirectionalLights + this._material.lightPicker.numCastingPointLights : 0;\n\t}\n\n\t/**\n\t * The amount of lights that don't cast shadows.\n\t */\n\tprivate get numNonCasters():number\n\t{\n\t\treturn this._material.lightPicker? this._material.lightPicker.numLightProbes + this._material.lightPicker.numDirectionalLights + this._material.lightPicker.numPointLights : 0;\n\t}\n\n\t/**\n\t * Creates a new CompiledPass object.\n\t *\n\t * @param material The material to which this pass belongs.\n\t */\n\tconstructor(pool:RenderObjectPool, material:MethodMaterial, renderableClass:IRenderableClass, stage:Stage)\n\t{\n\t\tsuper(pool, material, renderableClass, stage);\n\n\t\tthis._material = material;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdateRenderObject()\n\t{\n\t\tsuper._pUpdateRenderObject();\n\n\t\tthis.initPasses();\n\n\t\tthis.setBlendAndCompareModes();\n\n\t\tthis._pClearScreenPasses();\n\n\t\tif (this._material.mode == MethodMaterialMode.MULTI_PASS) {\n\t\t\tif (this._casterLightPass)\n\t\t\t\tthis._pAddScreenPass(this._casterLightPass);\n\n\t\t\tif (this._nonCasterLightPasses)\n\t\t\t\tfor (var i:number = 0; i < this._nonCasterLightPasses.length; ++i)\n\t\t\t\t\tthis._pAddScreenPass(this._nonCasterLightPasses[i]);\n\t\t}\n\n\t\tif (this._screenPass)\n\t\t\tthis._pAddScreenPass(this._screenPass);\n\t}\n\n\t/**\n\t * Initializes all the passes and their dependent passes.\n\t */\n\tprivate initPasses()\n\t{\n\t\t// let the effects pass handle everything if there are no lights, when there are effect methods applied\n\t\t// after shading, or when the material mode is single pass.\n\t\tif (this.numLights == 0 || this._material.numEffectMethods > 0 || this._material.mode == MethodMaterialMode.SINGLE_PASS)\n\t\t\tthis.initEffectPass();\n\t\telse if (this._screenPass)\n\t\t\tthis.removeEffectPass();\n\n\t\t// only use a caster light pass if shadows need to be rendered\n\t\tif (this._material.shadowMethod && this._material.mode == MethodMaterialMode.MULTI_PASS)\n\t\t\tthis.initCasterLightPass();\n\t\telse if (this._casterLightPass)\n\t\t\tthis.removeCasterLightPass();\n\n\t\t// only use non caster light passes if there are lights that don't cast\n\t\tif (this.numNonCasters > 0 && this._material.mode == MethodMaterialMode.MULTI_PASS)\n\t\t\tthis.initNonCasterLightPasses();\n\t\telse if (this._nonCasterLightPasses)\n\t\t\tthis.removeNonCasterLightPasses();\n\t}\n\n\t/**\n\t * Sets up the various blending modes for all screen passes, based on whether or not there are previous passes.\n\t */\n\tprivate setBlendAndCompareModes()\n\t{\n\t\tvar forceSeparateMVP:boolean = Boolean(this._casterLightPass || this._screenPass);\n\n\t\t// caster light pass is always first if it exists, hence it uses normal blending\n\t\tif (this._casterLightPass) {\n\t\t\tthis._casterLightPass.forceSeparateMVP = forceSeparateMVP;\n\t\t\tthis._casterLightPass.setBlendMode(BlendMode.NORMAL);\n\t\t\tthis._casterLightPass.depthCompareMode = this._material.depthCompareMode;\n\t\t}\n\n\t\tif (this._nonCasterLightPasses) {\n\t\t\tvar firstAdditiveIndex:number = 0;\n\n\t\t\t// if there's no caster light pass, the first non caster light pass will be the first\n\t\t\t// and should use normal blending\n\t\t\tif (!this._casterLightPass) {\n\t\t\t\tthis._nonCasterLightPasses[0].forceSeparateMVP = forceSeparateMVP;\n\t\t\t\tthis._nonCasterLightPasses[0].setBlendMode(BlendMode.NORMAL);\n\t\t\t\tthis._nonCasterLightPasses[0].depthCompareMode = this._material.depthCompareMode;\n\t\t\t\tfirstAdditiveIndex = 1;\n\t\t\t}\n\n\t\t\t// all lighting passes following the first light pass should use additive blending\n\t\t\tfor (var i:number = firstAdditiveIndex; i < this._nonCasterLightPasses.length; ++i) {\n\t\t\t\tthis._nonCasterLightPasses[i].forceSeparateMVP = forceSeparateMVP;\n\t\t\t\tthis._nonCasterLightPasses[i].setBlendMode(BlendMode.ADD);\n\t\t\t\tthis._nonCasterLightPasses[i].depthCompareMode = ContextGLCompareMode.LESS_EQUAL;\n\t\t\t}\n\t\t}\n\n\t\tif (this._casterLightPass || this._nonCasterLightPasses) {\n\t\t\t//cannot be blended by blendmode property if multipass enabled\n\t\t\tthis._pRequiresBlending = false;\n\n\t\t\t// there are light passes, so this should be blended in\n\t\t\tif (this._screenPass) {\n\t\t\t\tthis._screenPass.mode = MethodPassMode.EFFECTS;\n\t\t\t\tthis._screenPass.depthCompareMode = ContextGLCompareMode.LESS_EQUAL;\n\t\t\t\tthis._screenPass.setBlendMode(BlendMode.LAYER);\n\t\t\t\tthis._screenPass.forceSeparateMVP = forceSeparateMVP;\n\t\t\t}\n\n\t\t} else if (this._screenPass) {\n\t\t\tthis._pRequiresBlending = (this._material.blendMode != BlendMode.NORMAL || this._material.alphaBlending || (this._material.colorTransform && this._material.colorTransform.alphaMultiplier < 1));\n\t\t\t// effects pass is the only pass, so it should just blend normally\n\t\t\tthis._screenPass.mode = MethodPassMode.SUPER_SHADER;\n\t\t\tthis._screenPass.depthCompareMode = this._material.depthCompareMode;\n\t\t\tthis._screenPass.preserveAlpha = this._pRequiresBlending;\n\t\t\tthis._screenPass.colorTransform = this._material.colorTransform;\n\t\t\tthis._screenPass.setBlendMode((this._material.blendMode == BlendMode.NORMAL && this._pRequiresBlending)? BlendMode.LAYER : this._material.blendMode);\n\t\t\tthis._screenPass.forceSeparateMVP = false;\n\t\t}\n\t}\n\n\tprivate initCasterLightPass()\n\t{\n\n\t\tif (this._casterLightPass == null)\n\t\t\tthis._casterLightPass = new MethodPass(MethodPassMode.LIGHTING, this, this._material, this._renderableClass, this._stage);\n\n\t\tthis._casterLightPass.lightPicker = new StaticLightPicker([this._material.shadowMethod.castingLight]);\n\t\tthis._casterLightPass.shadowMethod = this._material.shadowMethod;\n\t\tthis._casterLightPass.diffuseMethod = this._material.diffuseMethod;\n\t\tthis._casterLightPass.ambientMethod = this._material.ambientMethod;\n\t\tthis._casterLightPass.normalMethod = this._material.normalMethod;\n\t\tthis._casterLightPass.specularMethod = this._material.specularMethod;\n\t}\n\n\tprivate removeCasterLightPass()\n\t{\n\t\tthis._casterLightPass.dispose();\n\t\tthis._pRemoveScreenPass(this._casterLightPass);\n\t\tthis._casterLightPass = null;\n\t}\n\n\tprivate initNonCasterLightPasses()\n\t{\n\t\tthis.removeNonCasterLightPasses();\n\t\tvar pass:MethodPass;\n\t\tvar numDirLights:number = this._material.lightPicker.numDirectionalLights;\n\t\tvar numPointLights:number = this._material.lightPicker.numPointLights;\n\t\tvar numLightProbes:number = this._material.lightPicker.numLightProbes;\n\t\tvar dirLightOffset:number = 0;\n\t\tvar pointLightOffset:number = 0;\n\t\tvar probeOffset:number = 0;\n\n\t\tif (!this._casterLightPass) {\n\t\t\tnumDirLights += this._material.lightPicker.numCastingDirectionalLights;\n\t\t\tnumPointLights += this._material.lightPicker.numCastingPointLights;\n\t\t}\n\n\t\tthis._nonCasterLightPasses = new Array<MethodPass>();\n\n\t\twhile (dirLightOffset < numDirLights || pointLightOffset < numPointLights || probeOffset < numLightProbes) {\n\t\t\tpass = new MethodPass(MethodPassMode.LIGHTING, this, this._material, this._renderableClass, this._stage);\n\t\t\tpass.includeCasters = this._material.shadowMethod == null;\n\t\t\tpass.directionalLightsOffset = dirLightOffset;\n\t\t\tpass.pointLightsOffset = pointLightOffset;\n\t\t\tpass.lightProbesOffset = probeOffset;\n\t\t\tpass.lightPicker = this._material.lightPicker;\n\t\t\tpass.diffuseMethod = this._material.diffuseMethod;\n\t\t\tpass.ambientMethod = this._material.ambientMethod;\n\t\t\tpass.normalMethod = this._material.normalMethod;\n\t\t\tpass.specularMethod = this._material.specularMethod;\n\t\t\tthis._nonCasterLightPasses.push(pass);\n\n\t\t\tdirLightOffset += pass.numDirectionalLights;\n\t\t\tpointLightOffset += pass.numPointLights;\n\t\t\tprobeOffset += pass.numLightProbes;\n\t\t}\n\t}\n\n\tprivate removeNonCasterLightPasses()\n\t{\n\t\tif (!this._nonCasterLightPasses)\n\t\t\treturn;\n\n\t\tfor (var i:number = 0; i < this._nonCasterLightPasses.length; ++i)\n\t\t\tthis._pRemoveScreenPass(this._nonCasterLightPasses[i]);\n\n\t\tthis._nonCasterLightPasses = null;\n\t}\n\n\tprivate removeEffectPass()\n\t{\n\t\tif (this._screenPass.ambientMethod != this._material.ambientMethod)\n\t\t\tthis._screenPass.ambientMethod.dispose();\n\n\t\tif (this._screenPass.diffuseMethod != this._material.diffuseMethod)\n\t\t\tthis._screenPass.diffuseMethod.dispose();\n\n\t\tif (this._screenPass.specularMethod != this._material.specularMethod)\n\t\t\tthis._screenPass.specularMethod.dispose();\n\n\t\tif (this._screenPass.normalMethod != this._material.normalMethod)\n\t\t\tthis._screenPass.normalMethod.dispose();\n\n\t\tthis._pRemoveScreenPass(this._screenPass);\n\t\tthis._screenPass = null;\n\t}\n\n\tprivate initEffectPass()\n\t{\n\t\tif (this._screenPass == null)\n\t\t\tthis._screenPass = new MethodPass(MethodPassMode.SUPER_SHADER, this, this._material, this._renderableClass, this._stage);\n\n\t\tif (this._material.mode == MethodMaterialMode.SINGLE_PASS) {\n\t\t\tthis._screenPass.ambientMethod = this._material.ambientMethod;\n\t\t\tthis._screenPass.diffuseMethod = this._material.diffuseMethod;\n\t\t\tthis._screenPass.specularMethod = this._material.specularMethod;\n\t\t\tthis._screenPass.normalMethod = this._material.normalMethod;\n\t\t\tthis._screenPass.shadowMethod = this._material.shadowMethod;\n\t\t} else if (this._material.mode == MethodMaterialMode.MULTI_PASS) {\n\t\t\tif (this.numLights == 0) {\n\t\t\t\tthis._screenPass.ambientMethod = this._material.ambientMethod;\n\t\t\t} else {\n\t\t\t\tthis._screenPass.ambientMethod = null;\n\t\t\t}\n\n\t\t\tthis._screenPass.preserveAlpha = false;\n\t\t\tthis._screenPass.normalMethod = this._material.normalMethod;\n\t\t}\n\n\t\t//update effect methods\n\t\tvar i:number = 0;\n\t\tvar effectMethod:EffectMethodBase;\n\t\tvar len:number = Math.max(this._material.numEffectMethods, this._screenPass.numEffectMethods);\n\n\t\twhile (i < len) {\n\t\t\teffectMethod = this._material.getEffectMethodAt(i);\n\t\t\tif (effectMethod != this._screenPass.getEffectMethodAt(i)) {\n\t\t\t\tthis._screenPass.removeEffectMethodAt(i);\n\n\t\t\t\tif (effectMethod != null) {\n\t\t\t\t\tif (i < this._screenPass.numEffectMethods)\n\t\t\t\t\t\tthis._screenPass.addEffectMethodAt(effectMethod, i);\n\t\t\t\t\telse\n\t\t\t\t\t\tthis._screenPass.addEffectMethod(effectMethod);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ti++;\n\t\t}\n\t}\n\t\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\n\t\t//TODO\n\t}\n}\n\nexport = RenderMethodMaterialObject;",
    "import ShadingMethodBase\t\t\t= require(\"awayjs-methodmaterials/lib/methods/ShadingMethodBase\");\n\n/**\n * MethodVO contains data for a given shader object for the use within a single material.\n * This allows shader methods to be shared across materials while their non-public state differs.\n */\nclass MethodVO\n{\n\tpublic useMethod:boolean = true;\n\n\tpublic method:ShadingMethodBase;\n\n\t// public register indices\n\tpublic texturesIndex:number;\n\tpublic secondaryTexturesIndex:number; // sometimes needed for composites\n\tpublic vertexConstantsIndex:number;\n\tpublic secondaryVertexConstantsIndex:number; // sometimes needed for composites\n\tpublic fragmentConstantsIndex:number;\n\tpublic secondaryFragmentConstantsIndex:number; // sometimes needed for composites\n\n\t// internal stuff for the material to know before assembling code\n\tpublic needsProjection:boolean;\n\tpublic needsView:boolean;\n\tpublic needsNormals:boolean;\n\tpublic needsTangents:boolean;\n\tpublic needsUV:boolean;\n\tpublic needsSecondaryUV:boolean;\n\tpublic needsGlobalVertexPos:boolean;\n\tpublic needsGlobalFragmentPos:boolean;\n\n\tpublic usesTexture:boolean;\n\n\t/**\n\t * Creates a new MethodVO object.\n\t */\n\tconstructor(method:ShadingMethodBase)\n\t{\n\t\tthis.method = method;\n\t}\n\n\t/**\n\t * Resets the values of the value object to their \"unused\" state.\n\t */\n\tpublic reset()\n\t{\n\t\tthis.method.iReset();\n\n\t\tthis.texturesIndex = -1;\n\t\tthis.vertexConstantsIndex = -1;\n\t\tthis.fragmentConstantsIndex = -1;\n\n\t\tthis.needsProjection = false;\n\t\tthis.needsView = false;\n\t\tthis.needsNormals = false;\n\t\tthis.needsTangents = false;\n\t\tthis.needsUV = false;\n\t\tthis.needsSecondaryUV = false;\n\t\tthis.needsGlobalVertexPos = false;\n\t\tthis.needsGlobalFragmentPos = false;\n\t}\n}\n\nexport = MethodVO;\n",
    "import Texture2DBase\t\t\t\t= require(\"awayjs-core/lib/textures/Texture2DBase\");\n\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport ShaderObjectBase\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderObjectBase\");\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterData\");\nimport ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterElement\");\nimport ShaderCompilerHelper\t\t\t= require(\"awayjs-renderergl/lib/utils/ShaderCompilerHelper\");\n\nimport MethodVO\t\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/data/MethodVO\");\nimport ShadingMethodBase\t\t\t= require(\"awayjs-methodmaterials/lib/methods/ShadingMethodBase\");\n\n/**\n * AmbientBasicMethod provides the default shading method for uniform ambient lighting.\n */\nclass AmbientBasicMethod extends ShadingMethodBase\n{\n\tprivate _color:number = 0xffffff;\n\tprivate _alpha:number = 1;\n\n\tprivate _colorR:number = 1;\n\tprivate _colorG:number = 1;\n\tprivate _colorB:number = 1;\n\n\tprivate _ambient:number = 1;\n\n\t/**\n\t * Creates a new AmbientBasicMethod object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iInitVO(shaderObject:ShaderObjectBase, methodVO:MethodVO)\n\t{\n\t\tmethodVO.needsUV = Boolean(shaderObject.texture != null);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iInitConstants(shaderObject:ShaderObjectBase, methodVO:MethodVO)\n\t{\n\t\tif (!methodVO.needsUV) {\n\t\t\tthis._color = shaderObject.color;\n\t\t\tthis.updateColor();\n\t\t}\n\t}\n\n\t/**\n\t * The strength of the ambient reflection of the surface.\n\t */\n\tpublic get ambient():number\n\t{\n\t\treturn this._ambient;\n\t}\n\n\tpublic set ambient(value:number)\n\t{\n\t\tif (this._ambient == value)\n\t\t\treturn;\n\n\t\tthis._ambient = value;\n\n\t\tthis.updateColor();\n\t}\n\n\t/**\n\t * The alpha component of the surface.\n\t */\n\tpublic get alpha():number\n\t{\n\t\treturn this._alpha;\n\t}\n\n\tpublic set alpha(value:number)\n\t{\n\t\tif (this._alpha == value)\n\t\t\treturn;\n\n\t\tthis._alpha = value;\n\n\t\tthis.updateColor();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic copyFrom(method:ShadingMethodBase)\n\t{\n\t\tvar m:any = method;\n\t\tvar b:AmbientBasicMethod = <AmbientBasicMethod> m;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iGetFragmentCode(shaderObject:ShaderObjectBase, methodVO:MethodVO, targetReg:ShaderRegisterElement, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tvar code:string = \"\";\n\t\tvar ambientInputRegister:ShaderRegisterElement;\n\n\t\tif (methodVO.needsUV) {\n\t\t\tambientInputRegister = registerCache.getFreeTextureReg();\n\n\t\t\tmethodVO.texturesIndex = ambientInputRegister.index;\n\n\t\t\tcode += ShaderCompilerHelper.getTex2DSampleCode(targetReg, sharedRegisters, ambientInputRegister, shaderObject.texture, shaderObject.useSmoothTextures, shaderObject.repeatTextures, false);\n\n\t\t\tif (shaderObject.alphaThreshold > 0) {\n\t\t\t\tvar cutOffReg:ShaderRegisterElement = registerCache.getFreeFragmentConstant();\n\t\t\t\tmethodVO.fragmentConstantsIndex = cutOffReg.index*4;\n\n\t\t\t\tcode += \"sub \" + targetReg + \".w, \" + targetReg + \".w, \" + cutOffReg + \".x\\n\" +\n\t\t\t\t\t\"kil \" + targetReg + \".w\\n\" +\n\t\t\t\t\t\"add \" + targetReg + \".w, \" + targetReg + \".w, \" + cutOffReg + \".x\\n\";\n\t\t\t}\n\n\t\t} else {\n\t\t\tambientInputRegister = registerCache.getFreeFragmentConstant();\n\t\t\tmethodVO.fragmentConstantsIndex = ambientInputRegister.index*4;\n\n\t\t\tcode += \"mov \" + targetReg + \", \" + ambientInputRegister + \"\\n\";\n\t\t}\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iActivate(shaderObject:ShaderObjectBase, methodVO:MethodVO, stage:Stage)\n\t{\n\t\tif (methodVO.needsUV) {\n\t\t\tstage.activateTexture(methodVO.texturesIndex, shaderObject.texture, shaderObject.repeatTextures, shaderObject.useSmoothTextures, shaderObject.useMipmapping);\n\n\t\t\tif (shaderObject.alphaThreshold > 0)\n\t\t\t\tshaderObject.fragmentConstantData[methodVO.fragmentConstantsIndex] = shaderObject.alphaThreshold;\n\t\t} else {\n\t\t\tvar index:number = methodVO.fragmentConstantsIndex;\n\t\t\tvar data:Array<number> = shaderObject.fragmentConstantData;\n\t\t\tdata[index] = this._colorR;\n\t\t\tdata[index + 1] = this._colorG;\n\t\t\tdata[index + 2] = this._colorB;\n\t\t\tdata[index + 3] = this._alpha;\n\t\t}\n\t}\n\n\t/**\n\t * Updates the ambient color data used by the render state.\n\t */\n\tprivate updateColor()\n\t{\n\t\tthis._colorR = ((this._color >> 16) & 0xff)/0xff*this._ambient;\n\t\tthis._colorG = ((this._color >> 8) & 0xff)/0xff*this._ambient;\n\t\tthis._colorB = (this._color & 0xff)/0xff*this._ambient;\n\t}\n}\n\nexport = AmbientBasicMethod;",
    "import CubeTextureBase\t\t\t\t\t= require(\"awayjs-core/lib/textures/CubeTextureBase\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport ShaderObjectBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderObjectBase\");\nimport ShaderRegisterCache\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterData\");\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterElement\");\nimport ShaderCompilerHelper\t\t\t\t= require(\"awayjs-renderergl/lib/utils/ShaderCompilerHelper\");\n\nimport MethodVO\t\t\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/data/MethodVO\");\nimport AmbientBasicMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/AmbientBasicMethod\");\n\n/**\n * AmbientEnvMapMethod provides a diffuse shading method that uses a diffuse irradiance environment map to\n * approximate global lighting rather than lights.\n */\nclass AmbientEnvMapMethod extends AmbientBasicMethod\n{\n\tprivate _cubeTexture:CubeTextureBase;\n\t\n\t/**\n\t * Creates a new <code>AmbientEnvMapMethod</code> object.\n\t *\n\t * @param envMap The cube environment map to use for the ambient lighting.\n\t */\n\tconstructor(envMap:CubeTextureBase)\n\t{\n\t\tsuper();\n\t\tthis._cubeTexture = envMap;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iInitVO(shaderObject:ShaderObjectBase, methodVO:MethodVO)\n\t{\n\t\tsuper.iInitVO(shaderObject, methodVO);\n\n\t\tmethodVO.needsNormals = true;\n\t}\n\t\n\t/**\n\t * The cube environment map to use for the diffuse lighting.\n\t */\n\tpublic get envMap():CubeTextureBase\n\t{\n\t\treturn this._cubeTexture;\n\t}\n\t\n\tpublic set envMap(value:CubeTextureBase)\n\t{\n\t\tthis._cubeTexture = value;\n\t}\n\t\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iActivate(shaderObject:ShaderObjectBase, methodVO:MethodVO, stage:Stage)\n\t{\n\t\tsuper.iActivate(shaderObject, methodVO, stage);\n\n\t\tstage.activateCubeTexture(methodVO.texturesIndex, this._cubeTexture, shaderObject.useSmoothTextures, shaderObject.useMipmapping);\n\t}\n\t\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iGetFragmentCode(shaderObject:ShaderObjectBase, methodVO:MethodVO, targetReg:ShaderRegisterElement, regCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tvar code:string = \"\";\n\t\tvar ambientInputRegister:ShaderRegisterElement;\n\t\tvar cubeMapReg:ShaderRegisterElement = regCache.getFreeTextureReg();\n\t\tmethodVO.texturesIndex = cubeMapReg.index;\n\t\t\n\t\tcode += ShaderCompilerHelper.getTexCubeSampleCode(targetReg, cubeMapReg, this._cubeTexture, shaderObject.useSmoothTextures, shaderObject.useMipmapping, sharedRegisters.normalFragment);\n\n\t\tambientInputRegister = regCache.getFreeFragmentConstant();\n\t\tmethodVO.fragmentConstantsIndex = ambientInputRegister.index;\n\t\t\n\t\tcode += \"add \" + targetReg + \".xyz, \" + targetReg + \".xyz, \" + ambientInputRegister + \".xyz\\n\";\n\t\t\n\t\treturn code;\n\t}\n}\n\nexport = AmbientEnvMapMethod;",
    "import Texture2DBase\t\t\t\t= require(\"awayjs-core/lib/textures/Texture2DBase\");\n\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\n\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport ShaderLightingObject\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderLightingObject\");\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterData\");\nimport ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterElement\");\nimport ShaderCompilerHelper\t\t\t= require(\"awayjs-renderergl/lib/utils/ShaderCompilerHelper\");\nimport RenderableBase\t\t\t\t= require(\"awayjs-renderergl/lib/pool/RenderableBase\");\n\nimport MethodVO\t\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/data/MethodVO\");\nimport ShadingMethodBase\t\t\t= require(\"awayjs-methodmaterials/lib/methods/ShadingMethodBase\");\nimport LightingMethodBase\t\t\t= require(\"awayjs-methodmaterials/lib/methods/LightingMethodBase\");\n\n/**\n * DiffuseBasicMethod provides the default shading method for Lambert (dot3) diffuse lighting.\n */\nclass DiffuseBasicMethod extends LightingMethodBase\n{\n\tprivate _multiply:boolean = true;\n\n\tpublic _pUseTexture:boolean;\n\tpublic _pTotalLightColorReg:ShaderRegisterElement;\n\tpublic _pDiffuseInputRegister:ShaderRegisterElement;\n\n\tprivate _texture:Texture2DBase;\n\tprivate _diffuseColor:number = 0xffffff;\n\tprivate _ambientColor:number = 0xffffff;\n\tprivate _diffuseR:number = 1;\n\tprivate _diffuseG:number = 1;\n\tprivate _diffuseB:number = 1;\n\tprivate _ambientR:number = 1;\n\tprivate _ambientG:number = 1;\n\tprivate _ambientB:number = 1;\n\n\tpublic _pIsFirstLight:boolean;\n\n\t/**\n\t * Creates a new DiffuseBasicMethod object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\tpublic iIsUsed(shaderObject:ShaderLightingObject):boolean\n\t{\n\t\tif (!shaderObject.numLights)\n\t\t\treturn false;\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Set internally if diffuse color component multiplies or replaces the ambient color\n\t */\n\tpublic get multiply():boolean\n\t{\n\t\treturn this._multiply;\n\t}\n\n\tpublic set multiply(value:boolean)\n\t{\n\t\tif (this._multiply == value)\n\t\t\treturn;\n\n\t\tthis._multiply = value;\n\n\t\tthis.iInvalidateShaderProgram();\n\t}\n\n\tpublic iInitVO(shaderObject:ShaderLightingObject, methodVO:MethodVO)\n\t{\n\t\tmethodVO.needsUV = this._pUseTexture;\n\t\tmethodVO.needsNormals = shaderObject.numLights > 0;\n\t}\n\n\t/**\n\t * Forces the creation of the texture's mipmaps.\n\t * @param stage The Stage used by the renderer\n\t */\n\tpublic generateMip(stage:Stage)\n\t{\n\t\tif (this._pUseTexture)\n\t\t\tstage.activateTexture(0, this._texture, true, true, true);\n\t}\n\n\t/**\n\t * The color of the diffuse reflection when not using a texture.\n\t */\n\tpublic get diffuseColor():number\n\t{\n\t\treturn this._diffuseColor;\n\t}\n\n\tpublic set diffuseColor(value:number)\n\t{\n\t\tif (this._diffuseColor == value)\n\t\t\treturn;\n\n\t\tthis._diffuseColor = value;\n\n\t\tthis.updateDiffuse();\n\t}\n\n\t/**\n\t * The color of the ambient reflection\n\t */\n\tpublic get ambientColor():number\n\t{\n\t\treturn this._ambientColor;\n\t}\n\n\tpublic set ambientColor(value:number)\n\t{\n\t\tif (this._ambientColor == value)\n\t\t\treturn;\n\n\t\tthis._ambientColor = value;\n\n\t\tthis.updateAmbient();\n\t}\n\n\n\t/**\n\t * The bitmapData to use to define the diffuse reflection color per texel.\n\t */\n\tpublic get texture():Texture2DBase\n\t{\n\t\treturn this._texture;\n\t}\n\n\tpublic set texture(value:Texture2DBase)\n\t{\n\t\tvar b:boolean = (value != null);\n\n\t\tif (b != this._pUseTexture || (value && this._texture && (value.format != this._texture.format)))\n\t\t\tthis.iInvalidateShaderProgram();\n\n\t\tthis._pUseTexture = b;\n\t\tthis._texture = value;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic dispose()\n\t{\n\t\tthis._texture = null;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic copyFrom(method:ShadingMethodBase)\n\t{\n\t\tvar diff:DiffuseBasicMethod = <DiffuseBasicMethod> method;\n\n\t\tthis.texture = diff.texture;\n\t\tthis.multiply = diff.multiply;\n\t\tthis.diffuseColor = diff.diffuseColor;\n\t\tthis.ambientColor = diff.ambientColor;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iCleanCompilationData()\n\t{\n\t\tsuper.iCleanCompilationData();\n\n\t\tthis._pTotalLightColorReg = null;\n\t\tthis._pDiffuseInputRegister = null;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iGetFragmentPreLightingCode(shaderObject:ShaderLightingObject, methodVO:MethodVO, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tvar code:string = \"\";\n\n\t\tthis._pIsFirstLight = true;\n\n\t\tthis._pTotalLightColorReg = registerCache.getFreeFragmentVectorTemp();\n\t\tregisterCache.addFragmentTempUsages(this._pTotalLightColorReg, 1);\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iGetFragmentCodePerLight(shaderObject:ShaderLightingObject, methodVO:MethodVO, lightDirReg:ShaderRegisterElement, lightColReg:ShaderRegisterElement, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tvar code:string = \"\";\n\t\tvar t:ShaderRegisterElement;\n\n\t\t// write in temporary if not first light, so we can add to total diffuse colour\n\t\tif (this._pIsFirstLight) {\n\t\t\tt = this._pTotalLightColorReg;\n\t\t} else {\n\t\t\tt = registerCache.getFreeFragmentVectorTemp();\n\t\t\tregisterCache.addFragmentTempUsages(t, 1);\n\t\t}\n\n\t\tcode += \"dp3 \" + t + \".x, \" + lightDirReg + \", \" + sharedRegisters.normalFragment + \"\\n\" +\n\t\t\t\t\"max \" + t + \".w, \" + t + \".x, \" + sharedRegisters.commons + \".y\\n\";\n\n\t\tif (shaderObject.usesLightFallOff)\n\t\t\tcode += \"mul \" + t + \".w, \" + t + \".w, \" + lightDirReg + \".w\\n\";\n\n\t\tif (this._iModulateMethod != null)\n\t\t\tcode += this._iModulateMethod(shaderObject, methodVO, t, registerCache, sharedRegisters);\n\n\t\tcode += \"mul \" + t + \", \" + t + \".w, \" + lightColReg + \"\\n\";\n\n\t\tif (!this._pIsFirstLight) {\n\t\t\tcode += \"add \" + this._pTotalLightColorReg + \".xyz, \" + this._pTotalLightColorReg + \", \" + t + \"\\n\";\n\t\t\tregisterCache.removeFragmentTempUsage(t);\n\t\t}\n\n\t\tthis._pIsFirstLight = false;\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iGetFragmentCodePerProbe(shaderObject:ShaderLightingObject, methodVO:MethodVO, cubeMapReg:ShaderRegisterElement, weightRegister:string, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tvar code:string = \"\";\n\t\tvar t:ShaderRegisterElement;\n\n\t\t// write in temporary if not first light, so we can add to total diffuse colour\n\t\tif (this._pIsFirstLight) {\n\t\t\tt = this._pTotalLightColorReg;\n\t\t} else {\n\t\t\tt = registerCache.getFreeFragmentVectorTemp();\n\t\t\tregisterCache.addFragmentTempUsages(t, 1);\n\t\t}\n\n\t\tcode += \"tex \" + t + \", \" + sharedRegisters.normalFragment + \", \" + cubeMapReg + \" <cube,linear,miplinear>\\n\" +\n\t\t\t\t\"mul \" + t + \".xyz, \" + t + \".xyz, \" + weightRegister + \"\\n\";\n\n\t\tif (this._iModulateMethod != null)\n\t\t\tcode += this._iModulateMethod(shaderObject, methodVO, t, registerCache, sharedRegisters);\n\n\t\tif (!this._pIsFirstLight) {\n\t\t\tcode += \"add \" + this._pTotalLightColorReg + \".xyz, \" + this._pTotalLightColorReg + \", \" + t + \"\\n\";\n\t\t\tregisterCache.removeFragmentTempUsage(t);\n\t\t}\n\n\t\tthis._pIsFirstLight = false;\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iGetFragmentPostLightingCode(shaderObject:ShaderLightingObject, methodVO:MethodVO, targetReg:ShaderRegisterElement, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tvar code:string = \"\";\n\n\t\tvar albedo:ShaderRegisterElement;\n\t\tvar cutOffReg:ShaderRegisterElement;\n\n\t\t// incorporate input from ambient\n\t\tif (sharedRegisters.shadowTarget)\n\t\t\tcode += this.pApplyShadow(shaderObject, methodVO, registerCache, sharedRegisters);\n\n\t\talbedo = registerCache.getFreeFragmentVectorTemp();\n\t\tregisterCache.addFragmentTempUsages(albedo, 1);\n\n\t\tvar ambientColorRegister:ShaderRegisterElement = registerCache.getFreeFragmentConstant();\n\t\tmethodVO.fragmentConstantsIndex = ambientColorRegister.index*4;\n\n\t\tif (this._pUseTexture) {\n\t\t\tthis._pDiffuseInputRegister = registerCache.getFreeTextureReg();\n\n\t\t\tmethodVO.texturesIndex = this._pDiffuseInputRegister.index;\n\n\t\t\tcode += ShaderCompilerHelper.getTex2DSampleCode(albedo, sharedRegisters, this._pDiffuseInputRegister, this._texture, shaderObject.useSmoothTextures, shaderObject.repeatTextures, shaderObject.useMipmapping);\n\n\t\t} else {\n\t\t\tthis._pDiffuseInputRegister = registerCache.getFreeFragmentConstant();\n\n\t\t\tcode += \"mov \" + albedo + \", \" + this._pDiffuseInputRegister + \"\\n\";\n\t\t}\n\n\t\tcode += \"sat \" + this._pTotalLightColorReg + \", \" + this._pTotalLightColorReg + \"\\n\" +\n\t\t\t\"mul \" + albedo + \".xyz, \" + albedo + \", \" + this._pTotalLightColorReg + \"\\n\";\n\n\t\tif (this._multiply) {\n\t\t\tcode += \"add \" + albedo + \".xyz, \" + albedo + \", \" + ambientColorRegister + \"\\n\" +\n\t\t\t\t\"mul \" + targetReg + \".xyz, \" + targetReg + \", \" + albedo + \"\\n\";\n\t\t} else {\n\t\t\tcode += \"mul \" + targetReg + \".xyz, \" + targetReg + \", \" + ambientColorRegister + \"\\n\" +\n\t\t\t\t\"mul \" + this._pTotalLightColorReg + \".xyz, \" + targetReg + \", \" + this._pTotalLightColorReg + \"\\n\" +\n\t\t\t\t\"sub \" + targetReg + \".xyz, \" + targetReg + \", \" + this._pTotalLightColorReg + \"\\n\" +\n\t\t\t\t\"add \" + targetReg + \".xyz, \" + targetReg + \", \" + albedo + \"\\n\";\n\t\t}\n\n\t\tregisterCache.removeFragmentTempUsage(this._pTotalLightColorReg);\n\t\tregisterCache.removeFragmentTempUsage(albedo);\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * Generate the code that applies the calculated shadow to the diffuse light\n\t * @param methodVO The MethodVO object for which the compilation is currently happening.\n\t * @param regCache The register cache the compiler is currently using for the register management.\n\t */\n\tpublic pApplyShadow(shaderObject:ShaderLightingObject, methodVO:MethodVO, regCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"mul \" + this._pTotalLightColorReg + \".xyz, \" + this._pTotalLightColorReg + \", \" + sharedRegisters.shadowTarget + \".w\\n\";\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iActivate(shaderObject:ShaderLightingObject, methodVO:MethodVO, stage:Stage)\n\t{\n\t\tif (this._pUseTexture) {\n\t\t\tstage.activateTexture(methodVO.texturesIndex, this._texture, shaderObject.repeatTextures, shaderObject.useSmoothTextures, shaderObject.useMipmapping);\n\t\t} else {\n\t\t\tvar index:number = methodVO.fragmentConstantsIndex;\n\t\t\tvar data:Array<number> = shaderObject.fragmentConstantData;\n\t\t\tdata[index + 4] = this._diffuseR;\n\t\t\tdata[index + 5] = this._diffuseG;\n\t\t\tdata[index + 6] = this._diffuseB;\n\t\t\tdata[index + 7] = 1;\n\t\t}\n\t}\n\n\t/**\n\t * Updates the diffuse color data used by the render state.\n\t */\n\tprivate updateDiffuse()\n\t{\n\t\tthis._diffuseR = ((this._diffuseColor >> 16) & 0xff)/0xff;\n\t\tthis._diffuseG = ((this._diffuseColor >> 8) & 0xff)/0xff;\n\t\tthis._diffuseB = (this._diffuseColor & 0xff)/0xff;\n\t}\n\n\t/**\n\t * Updates the ambient color data used by the render state.\n\t */\n\tprivate updateAmbient()\n\t{\n\t\tthis._ambientR = ((this._ambientColor >> 16) & 0xff)/0xff;\n\t\tthis._ambientG = ((this._ambientColor >> 8) & 0xff)/0xff;\n\t\tthis._ambientB = (this._ambientColor & 0xff)/0xff;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iSetRenderState(shaderObject:ShaderLightingObject, methodVO:MethodVO, renderable:RenderableBase, stage:Stage, camera:Camera)\n\t{\n\t\t//TODO move this to Activate (ambientR/G/B currently calc'd in render state)\n\t\tif (shaderObject.numLights > 0) {\n\t\t\tvar index:number = methodVO.fragmentConstantsIndex;\n\t\t\tvar data:Array<number> = shaderObject.fragmentConstantData;\n\t\t\tdata[index] = shaderObject.ambientR*this._ambientR;\n\t\t\tdata[index + 1] = shaderObject.ambientG*this._ambientG;\n\t\t\tdata[index + 2] = shaderObject.ambientB*this._ambientB;\n\t\t\tdata[index + 3] = 1;\n\t\t}\n\t}\n}\n\nexport = DiffuseBasicMethod;",
    "import Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport ShaderLightingObject\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderLightingObject\");\nimport ShaderObjectBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderObjectBase\");\nimport ShaderRegisterCache\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterData\");\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterElement\");\nimport ShaderCompilerHelper\t\t\t\t= require(\"awayjs-renderergl/lib/utils/ShaderCompilerHelper\");\n\nimport MethodVO\t\t\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/data/MethodVO\");\nimport DiffuseBasicMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/DiffuseBasicMethod\");\nimport DiffuseCompositeMethod\t\t\t= require(\"awayjs-methodmaterials/lib/methods/DiffuseCompositeMethod\");\n\n/**\n * DiffuseCelMethod provides a shading method to add diffuse cel (cartoon) shading.\n */\nclass DiffuseCelMethod extends DiffuseCompositeMethod\n{\n\tprivate _levels:number /*uint*/;\n\tprivate _dataReg:ShaderRegisterElement;\n\tprivate _smoothness:number = .1;\n\n\t/**\n\t * Creates a new DiffuseCelMethod object.\n\t * @param levels The amount of shadow gradations.\n\t * @param baseMethod An optional diffuse method on which the cartoon shading is based. If omitted, DiffuseBasicMethod is used.\n\t */\n\tconstructor(levels:number /*uint*/ = 3, baseMethod:DiffuseBasicMethod = null)\n\t{\n\t\tsuper(null, baseMethod);\n\n\t\tthis.baseMethod._iModulateMethod = (shaderObject:ShaderObjectBase, methodVO:MethodVO, targetReg:ShaderRegisterElement, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData) => this.clampDiffuse(shaderObject, methodVO, targetReg, registerCache, sharedRegisters);\n\n\t\tthis._levels = levels;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iInitConstants(shaderObject:ShaderLightingObject, methodVO:MethodVO)\n\t{\n\t\tvar data:Array<number> = shaderObject.fragmentConstantData;\n\t\tvar index:number /*int*/ = methodVO.secondaryFragmentConstantsIndex;\n\t\tsuper.iInitConstants(shaderObject, methodVO);\n\t\tdata[index + 1] = 1;\n\t\tdata[index + 2] = 0;\n\t}\n\n\t/**\n\t * The amount of shadow gradations.\n\t */\n\tpublic get levels():number /*uint*/\n\t{\n\t\treturn this._levels;\n\t}\n\n\tpublic set levels(value:number /*uint*/)\n\t{\n\t\tthis._levels = value;\n\t}\n\n\t/**\n\t * The smoothness of the edge between 2 shading levels.\n\t */\n\tpublic get smoothness():number\n\t{\n\t\treturn this._smoothness;\n\t}\n\n\tpublic set smoothness(value:number)\n\t{\n\t\tthis._smoothness = value;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iCleanCompilationData()\n\t{\n\t\tsuper.iCleanCompilationData();\n\t\tthis._dataReg = null;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iGetFragmentPreLightingCode(shaderObject:ShaderLightingObject, methodVO:MethodVO, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tthis._dataReg = registerCache.getFreeFragmentConstant();\n\t\tmethodVO.secondaryFragmentConstantsIndex = this._dataReg.index*4;\n\n\t\treturn super.iGetFragmentPreLightingCode(shaderObject, methodVO, registerCache, sharedRegisters);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iActivate(shaderObject:ShaderLightingObject, methodVO:MethodVO, stage:Stage)\n\t{\n\t\tsuper.iActivate(shaderObject, methodVO, stage);\n\t\tvar data:Array<number> = shaderObject.fragmentConstantData;\n\t\tvar index:number /*int*/ = methodVO.secondaryFragmentConstantsIndex;\n\t\tdata[index] = this._levels;\n\t\tdata[index + 3] = this._smoothness;\n\t}\n\n\t/**\n\t * Snaps the diffuse shading of the wrapped method to one of the levels.\n\t * @param vo The MethodVO used to compile the current shader.\n\t * @param t The register containing the diffuse strength in the \"w\" component.\n\t * @param regCache The register cache used for the shader compilation.\n\t * @param sharedRegisters The shared register data for this shader.\n\t * @return The AGAL fragment code for the method.\n\t */\n\tprivate clampDiffuse(shaderObject:ShaderObjectBase, methodVO:MethodVO, targetReg:ShaderRegisterElement, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"mul \" + targetReg + \".w, \" + targetReg + \".w, \" + this._dataReg + \".x\\n\" +\n\t\t\t\"frc \" + targetReg + \".z, \" + targetReg + \".w\\n\" +\n\t\t\t\"sub \" + targetReg + \".y, \" + targetReg + \".w, \" + targetReg + \".z\\n\" +\n\t\t\t\"mov \" + targetReg + \".x, \" + this._dataReg + \".x\\n\" +\n\t\t\t\"sub \" + targetReg + \".x, \" + targetReg + \".x, \" + this._dataReg + \".y\\n\" +\n\t\t\t\"rcp \" + targetReg + \".x,\" + targetReg + \".x\\n\" +\n\t\t\t\"mul \" + targetReg + \".w, \" + targetReg + \".y, \" + targetReg + \".x\\n\" +\n\n\t\t\t// previous clamped strength\n\t\t\t\"sub \" + targetReg + \".y, \" + targetReg + \".w, \" + targetReg + \".x\\n\" +\n\n\t\t\t// fract/epsilon (so 0 - epsilon will become 0 - 1)\n\t\t\t\"div \" + targetReg + \".z, \" + targetReg + \".z, \" + this._dataReg + \".w\\n\" +\n\t\t\t\"sat \" + targetReg + \".z, \" + targetReg + \".z\\n\" +\n\n\t\t\t\"mul \" + targetReg + \".w, \" + targetReg + \".w, \" + targetReg + \".z\\n\" +\n\t\t\t// 1-z\n\t\t\t\"sub \" + targetReg + \".z, \" + this._dataReg + \".y, \" + targetReg + \".z\\n\" +\n\t\t\t\"mul \" + targetReg + \".y, \" + targetReg + \".y, \" + targetReg + \".z\\n\" +\n\t\t\t\"add \" + targetReg + \".w, \" + targetReg + \".w, \" + targetReg + \".y\\n\" +\n\t\t\t\"sat \" + targetReg + \".w, \" + targetReg + \".w\\n\";\n\t}\n}\n\nexport = DiffuseCelMethod;",
    "import Texture2DBase\t\t\t\t\t= require(\"awayjs-core/lib/textures/Texture2DBase\");\n\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport ShaderLightingObject\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderLightingObject\");\nimport ShaderObjectBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderObjectBase\");\nimport ShaderRegisterCache\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterData\");\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterElement\");\nimport ShadingMethodEvent\t\t\t\t= require(\"awayjs-renderergl/lib/events/ShadingMethodEvent\");\nimport RenderableBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/pool/RenderableBase\");\n\nimport MethodVO\t\t\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/data/MethodVO\");\nimport DiffuseBasicMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/DiffuseBasicMethod\");\n\n/**\n * DiffuseCompositeMethod provides a base class for diffuse methods that wrap a diffuse method to alter the\n * calculated diffuse reflection strength.\n */\nclass DiffuseCompositeMethod extends DiffuseBasicMethod\n{\n\tpublic pBaseMethod:DiffuseBasicMethod;\n\n\tprivate _onShaderInvalidatedDelegate:Function;\n\n\t/**\n\t * Creates a new <code>DiffuseCompositeMethod</code> object.\n\t *\n\t * @param modulateMethod The method which will add the code to alter the base method's strength. It needs to have the signature clampDiffuse(t:ShaderRegisterElement, regCache:ShaderRegisterCache):string, in which t.w will contain the diffuse strength.\n\t * @param baseMethod The base diffuse method on which this method's shading is based.\n\t */\n\tconstructor(modulateMethod:(shaderObject:ShaderObjectBase, methodVO:MethodVO, targetReg:ShaderRegisterElement, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData) => string, baseMethod:DiffuseBasicMethod = null)\n\t{\n\t\tsuper();\n\n\t\tthis._onShaderInvalidatedDelegate = (event:ShadingMethodEvent) => this.onShaderInvalidated(event);\n\n\t\tthis.pBaseMethod = baseMethod || new DiffuseBasicMethod();\n\t\tthis.pBaseMethod._iModulateMethod = modulateMethod;\n\t\tthis.pBaseMethod.addEventListener(ShadingMethodEvent.SHADER_INVALIDATED, this._onShaderInvalidatedDelegate);\n\t}\n\n\t/**\n\t * The base diffuse method on which this method's shading is based.\n\t */\n\tpublic get baseMethod():DiffuseBasicMethod\n\t{\n\t\treturn this.pBaseMethod;\n\t}\n\n\tpublic set baseMethod(value:DiffuseBasicMethod)\n\t{\n\t\tif (this.pBaseMethod == value)\n\t\t\treturn;\n\n\t\tthis.pBaseMethod.removeEventListener(ShadingMethodEvent.SHADER_INVALIDATED, this._onShaderInvalidatedDelegate);\n\t\tthis.pBaseMethod = value;\n\t\tthis.pBaseMethod.addEventListener(ShadingMethodEvent.SHADER_INVALIDATED, this._onShaderInvalidatedDelegate);\n\t\tthis.iInvalidateShaderProgram();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iInitVO(shaderObject:ShaderLightingObject, methodVO:MethodVO)\n\t{\n\t\tthis.pBaseMethod.iInitVO(shaderObject, methodVO);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iInitConstants(shaderObject:ShaderLightingObject, methodVO:MethodVO)\n\t{\n\t\tthis.pBaseMethod.iInitConstants(shaderObject, methodVO);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic dispose()\n\t{\n\t\tthis.pBaseMethod.removeEventListener(ShadingMethodEvent.SHADER_INVALIDATED, this._onShaderInvalidatedDelegate);\n\t\tthis.pBaseMethod.dispose();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get texture():Texture2DBase\n\t{\n\t\treturn this.pBaseMethod.texture;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic set texture(value:Texture2DBase)\n\t{\n\t\tthis.pBaseMethod.texture = value;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get diffuseColor():number\n\t{\n\t\treturn this.pBaseMethod.diffuseColor;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic set diffuseColor(value:number)\n\t{\n\t\tthis.pBaseMethod.diffuseColor = value;\n\t}\n\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get ambientColor():number\n\t{\n\t\treturn this.pBaseMethod.ambientColor;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic set ambientColor(value:number)\n\t{\n\t\tthis.pBaseMethod.ambientColor = value;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iGetFragmentPreLightingCode(shaderObject:ShaderLightingObject, methodVO:MethodVO, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn this.pBaseMethod.iGetFragmentPreLightingCode(shaderObject, methodVO, registerCache, sharedRegisters);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iGetFragmentCodePerLight(shaderObject:ShaderLightingObject, methodVO:MethodVO, lightDirReg:ShaderRegisterElement, lightColReg:ShaderRegisterElement, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tvar code:string = this.pBaseMethod.iGetFragmentCodePerLight(shaderObject, methodVO, lightDirReg, lightColReg, registerCache, sharedRegisters);\n\t\tthis._pTotalLightColorReg = this.pBaseMethod._pTotalLightColorReg;\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iGetFragmentCodePerProbe(shaderObject:ShaderLightingObject, methodVO:MethodVO, cubeMapReg:ShaderRegisterElement, weightRegister:string, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tvar code:string = this.pBaseMethod.iGetFragmentCodePerProbe(shaderObject, methodVO, cubeMapReg, weightRegister, registerCache, sharedRegisters);\n\t\tthis._pTotalLightColorReg = this.pBaseMethod._pTotalLightColorReg;\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iActivate(shaderObject:ShaderLightingObject, methodVO:MethodVO, stage:Stage)\n\t{\n\t\tthis.pBaseMethod.iActivate(shaderObject, methodVO, stage);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iSetRenderState(shaderObject:ShaderLightingObject, methodVO:MethodVO, renderable:RenderableBase, stage:Stage, camera:Camera)\n\t{\n\t\tthis.pBaseMethod.iSetRenderState(shaderObject, methodVO, renderable, stage, camera);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iDeactivate(shaderObject:ShaderLightingObject, methodVO:MethodVO, stage:Stage)\n\t{\n\t\tthis.pBaseMethod.iDeactivate(shaderObject, methodVO, stage);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iGetVertexCode(shaderObject:ShaderObjectBase, methodVO:MethodVO, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn this.pBaseMethod.iGetVertexCode(shaderObject, methodVO, registerCache, sharedRegisters);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iGetFragmentPostLightingCode(shaderObject:ShaderLightingObject, methodVO:MethodVO, targetReg:ShaderRegisterElement, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn this.pBaseMethod.iGetFragmentPostLightingCode(shaderObject, methodVO, targetReg, registerCache, sharedRegisters);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iReset()\n\t{\n\t\tthis.pBaseMethod.iReset();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iCleanCompilationData()\n\t{\n\t\tsuper.iCleanCompilationData();\n\t\tthis.pBaseMethod.iCleanCompilationData();\n\t}\n\n\t/**\n\t * Called when the base method's shader code is invalidated.\n\t */\n\tprivate onShaderInvalidated(event:ShadingMethodEvent)\n\t{\n\t\tthis.iInvalidateShaderProgram();\n\t}\n}\n\nexport = DiffuseCompositeMethod;",
    "import ShaderLightingObject\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderLightingObject\");\nimport ShaderObjectBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderObjectBase\");\nimport ShaderRegisterCache\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterData\");\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterElement\");\nimport ShaderCompilerHelper\t\t\t\t= require(\"awayjs-renderergl/lib/utils/ShaderCompilerHelper\");\n\nimport MethodVO\t\t\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/data/MethodVO\");\nimport DiffuseBasicMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/DiffuseBasicMethod\");\n\n/**\n * DiffuseDepthMethod provides a debug method to visualise depth maps\n */\nclass DiffuseDepthMethod extends DiffuseBasicMethod\n{\n\t/**\n\t * Creates a new DiffuseBasicMethod object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iInitConstants(shaderObject:ShaderObjectBase, methodVO:MethodVO)\n\t{\n\t\tvar data:Array<number> = shaderObject.fragmentConstantData;\n\t\tvar index:number /*int*/ = methodVO.fragmentConstantsIndex;\n\t\tdata[index] = 1.0;\n\t\tdata[index + 1] = 1/255.0;\n\t\tdata[index + 2] = 1/65025.0;\n\t\tdata[index + 3] = 1/16581375.0;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iGetFragmentPostLightingCode(shaderObject:ShaderLightingObject, methodVO:MethodVO, targetReg:ShaderRegisterElement, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tvar code:string = \"\";\n\t\tvar temp:ShaderRegisterElement;\n\t\tvar decReg:ShaderRegisterElement;\n\n\t\tif (!this._pUseTexture)\n\t\t\tthrow new Error(\"DiffuseDepthMethod requires texture!\");\n\n\t\t// incorporate input from ambient\n\t\tif (shaderObject.numLights > 0) {\n\t\t\tif (sharedRegisters.shadowTarget)\n\t\t\t\tcode += \"mul \" + this._pTotalLightColorReg + \".xyz, \" + this._pTotalLightColorReg + \".xyz, \" + sharedRegisters.shadowTarget + \".w\\n\";\n\t\t\tcode += \"add \" + targetReg + \".xyz, \" + this._pTotalLightColorReg + \".xyz, \" + targetReg + \".xyz\\n\" +\n\t\t\t\t\"sat \" + targetReg + \".xyz, \" + targetReg + \".xyz\\n\";\n\t\t\tregisterCache.removeFragmentTempUsage(this._pTotalLightColorReg);\n\t\t}\n\n\t\ttemp = shaderObject.numLights > 0? registerCache.getFreeFragmentVectorTemp():targetReg;\n\n\t\tthis._pDiffuseInputRegister = registerCache.getFreeTextureReg();\n\t\tmethodVO.texturesIndex = this._pDiffuseInputRegister.index;\n\t\tdecReg = registerCache.getFreeFragmentConstant();\n\t\tmethodVO.fragmentConstantsIndex = decReg.index*4;\n\t\tcode += ShaderCompilerHelper.getTex2DSampleCode(temp, sharedRegisters, this._pDiffuseInputRegister, this.texture, shaderObject.useSmoothTextures, shaderObject.repeatTextures, shaderObject.useMipmapping) +\n\t\t\t\"dp4 \" + temp + \".x, \" + temp + \", \" + decReg + \"\\n\" +\n\t\t\t\"mov \" + temp + \".yz, \" + temp + \".xx\t\t\t\\n\" +\n\t\t\t\"mov \" + temp + \".w, \" + decReg + \".x\\n\" +\n\t\t\t\"sub \" + temp + \".xyz, \" + decReg + \".xxx, \" + temp + \".xyz\\n\";\n\n\t\tif (shaderObject.numLights == 0)\n\t\t\treturn code;\n\n\t\tcode += \"mul \" + targetReg + \".xyz, \" + temp + \".xyz, \" + targetReg + \".xyz\\n\" +\n\t\t\t\"mov \" + targetReg + \".w, \" + temp + \".w\\n\";\n\n\t\treturn code;\n\t}\n}\n\nexport = DiffuseDepthMethod;",
    "import Texture2DBase\t\t\t\t\t= require(\"awayjs-core/lib/textures/Texture2DBase\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport ShaderLightingObject\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderLightingObject\");\nimport ShaderRegisterCache\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterData\");\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterElement\");\nimport ShaderCompilerHelper\t\t\t\t= require(\"awayjs-renderergl/lib/utils/ShaderCompilerHelper\");\n\nimport MethodVO\t\t\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/data/MethodVO\");\nimport DiffuseBasicMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/DiffuseBasicMethod\");\n\n/**\n * DiffuseGradientMethod is an alternative to DiffuseBasicMethod in which the shading can be modulated with a gradient\n * to introduce color-tinted shading as opposed to the single-channel diffuse strength. This can be used as a crude\n * approximation to subsurface scattering (for instance, the mid-range shading for skin can be tinted red to similate\n * scattered light within the skin attributing to the final colour)\n */\nclass DiffuseGradientMethod extends DiffuseBasicMethod\n{\n\tprivate _gradientTextureRegister:ShaderRegisterElement;\n\tprivate _gradient:Texture2DBase;\n\n\t/**\n\t * Creates a new DiffuseGradientMethod object.\n\t * @param gradient A texture that contains the light colour based on the angle. This can be used to change\n\t * the light colour due to subsurface scattering when the surface faces away from the light.\n\t */\n\tconstructor(gradient:Texture2DBase)\n\t{\n\t\tsuper();\n\n\t\tthis._gradient = gradient;\n\t}\n\n\t/**\n\t * A texture that contains the light colour based on the angle. This can be used to change the light colour\n\t * due to subsurface scattering when the surface faces away from the light.\n\t */\n\tpublic get gradient():Texture2DBase\n\t{\n\t\treturn this._gradient;\n\t}\n\n\tpublic set gradient(value:Texture2DBase)\n\t{\n\t\tif (value.format != this._gradient.format)\n\t\t\tthis.iInvalidateShaderProgram();\n\t\tthis._gradient = value;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iCleanCompilationData()\n\t{\n\t\tsuper.iCleanCompilationData();\n\t\tthis._gradientTextureRegister = null;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iGetFragmentPreLightingCode(shaderObject:ShaderLightingObject, methodVO:MethodVO, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tvar code:string = super.iGetFragmentPreLightingCode(shaderObject, methodVO, registerCache, sharedRegisters);\n\t\tthis._pIsFirstLight = true;\n\n\t\tif (shaderObject.numLights > 0) {\n\t\t\tthis._gradientTextureRegister = registerCache.getFreeTextureReg();\n\t\t\tmethodVO.secondaryTexturesIndex = this._gradientTextureRegister.index;\n\t\t}\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iGetFragmentCodePerLight(shaderObject:ShaderLightingObject, methodVO:MethodVO, lightDirReg:ShaderRegisterElement, lightColReg:ShaderRegisterElement, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tvar code:string = \"\";\n\t\tvar t:ShaderRegisterElement;\n\n\t\t// write in temporary if not first light, so we can add to total diffuse colour\n\t\tif (this._pIsFirstLight)\n\t\t\tt = this._pTotalLightColorReg;\n\t\telse {\n\t\t\tt = registerCache.getFreeFragmentVectorTemp();\n\t\t\tregisterCache.addFragmentTempUsages(t, 1);\n\t\t}\n\n\t\tcode += \"dp3 \" + t + \".w, \" + lightDirReg + \".xyz, \" + sharedRegisters.normalFragment + \".xyz\\n\" +\n\t\t\t\"mul \" + t + \".w, \" + t + \".w, \" + sharedRegisters.commons + \".x\\n\" +\n\t\t\t\"add \" + t + \".w, \" + t + \".w, \" + sharedRegisters.commons + \".x\\n\" +\n\t\t\t\"mul \" + t + \".xyz, \" + t + \".w, \" + lightDirReg + \".w\\n\";\n\n\t\tif (this._iModulateMethod != null)\n\t\t\tcode += this._iModulateMethod(shaderObject, methodVO, t, registerCache, sharedRegisters);\n\n\t\tcode += ShaderCompilerHelper.getTex2DSampleCode(t, sharedRegisters, this._gradientTextureRegister, this._gradient, shaderObject.useSmoothTextures, shaderObject.repeatTextures, shaderObject.useMipmapping, t, \"clamp\") +\n\t\t\t//\t\t\t\t\t\"mul \" + t + \".xyz, \" + t + \".xyz, \" + t + \".w\\n\" +\n\t\t\t\"mul \" + t + \".xyz, \" + t + \".xyz, \" + lightColReg + \".xyz\\n\";\n\n\t\tif (!this._pIsFirstLight) {\n\t\t\tcode += \"add \" + this._pTotalLightColorReg + \".xyz, \" + this._pTotalLightColorReg + \".xyz, \" + t + \".xyz\\n\";\n\t\t\tregisterCache.removeFragmentTempUsage(t);\n\t\t}\n\n\t\tthis._pIsFirstLight = false;\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic pApplyShadow(shaderObject:ShaderLightingObject, methodVO:MethodVO, regCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tvar t:ShaderRegisterElement = regCache.getFreeFragmentVectorTemp();\n\n\t\treturn \"mov \" + t + \", \" + sharedRegisters.shadowTarget + \".wwww\\n\" +\n\t\t\tShaderCompilerHelper.getTex2DSampleCode(t, sharedRegisters, this._gradientTextureRegister, this._gradient, shaderObject.useSmoothTextures, shaderObject.repeatTextures, shaderObject.useMipmapping, t, \"clamp\") +\n\t\t\t\"mul \" + this._pTotalLightColorReg + \".xyz, \" + this._pTotalLightColorReg + \", \" + t + \"\\n\";\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iActivate(shaderObject:ShaderLightingObject, methodVO:MethodVO, stage:Stage)\n\t{\n\t\tsuper.iActivate(shaderObject, methodVO, stage);\n\n\t\tstage.activateTexture(methodVO.secondaryTexturesIndex, this._gradient, shaderObject.repeatTextures, shaderObject.useSmoothTextures, shaderObject.useMipmapping);\n\t}\n}\n\nexport = DiffuseGradientMethod;",
    "import Texture2DBase\t\t\t\t\t= require(\"awayjs-core/lib/textures/Texture2DBase\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport ShaderLightingObject\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderLightingObject\");\nimport ShaderRegisterCache\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterData\");\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterElement\");\nimport ShaderCompilerHelper\t\t\t\t= require(\"awayjs-renderergl/lib/utils/ShaderCompilerHelper\");\n\nimport MethodVO\t\t\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/data/MethodVO\");\nimport DiffuseBasicMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/DiffuseBasicMethod\");\nimport DiffuseCompositeMethod\t\t\t= require(\"awayjs-methodmaterials/lib/methods/DiffuseCompositeMethod\");\n\n/**\n * DiffuseLightMapMethod provides a diffuse shading method that uses a light map to modulate the calculated diffuse\n * lighting. It is different from EffectLightMapMethod in that the latter modulates the entire calculated pixel color, rather\n * than only the diffuse lighting value.\n */\nclass DiffuseLightMapMethod extends DiffuseCompositeMethod\n{\n\t/**\n\t * Indicates the light map should be multiplied with the calculated shading result.\n\t * This can be used to add pre-calculated shadows or occlusion.\n\t */\n\tpublic static MULTIPLY:string = \"multiply\";\n\n\t/**\n\t * Indicates the light map should be added into the calculated shading result.\n\t * This can be used to add pre-calculated lighting or global illumination.\n\t */\n\tpublic static ADD:string = \"add\";\n\n\tprivate _lightMapTexture:Texture2DBase;\n\tprivate _blendMode:string;\n\tprivate _useSecondaryUV:boolean;\n\n\t/**\n\t * Creates a new DiffuseLightMapMethod method.\n\t *\n\t * @param lightMap The texture containing the light map.\n\t * @param blendMode The blend mode with which the light map should be applied to the lighting result.\n\t * @param useSecondaryUV Indicates whether the secondary UV set should be used to map the light map.\n\t * @param baseMethod The diffuse method used to calculate the regular diffuse-based lighting.\n\t */\n\tconstructor(lightMap:Texture2DBase, blendMode:string = \"multiply\", useSecondaryUV:boolean = false, baseMethod:DiffuseBasicMethod = null)\n\t{\n\t\tsuper(null, baseMethod);\n\n\t\tthis._useSecondaryUV = useSecondaryUV;\n\t\tthis._lightMapTexture = lightMap;\n\t\tthis.blendMode = blendMode;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iInitVO(shaderObject:ShaderLightingObject, methodVO:MethodVO)\n\t{\n\t\tmethodVO.needsSecondaryUV = this._useSecondaryUV;\n\t\tmethodVO.needsUV = !this._useSecondaryUV;\n\t}\n\n\t/**\n\t * The blend mode with which the light map should be applied to the lighting result.\n\t *\n\t * @see DiffuseLightMapMethod.ADD\n\t * @see DiffuseLightMapMethod.MULTIPLY\n\t */\n\tpublic get blendMode():string\n\t{\n\t\treturn this._blendMode;\n\t}\n\n\tpublic set blendMode(value:string)\n\t{\n\t\tif (value != DiffuseLightMapMethod.ADD && value != DiffuseLightMapMethod.MULTIPLY)\n\t\t\tthrow new Error(\"Unknown blendmode!\");\n\n\t\tif (this._blendMode == value)\n\t\t\treturn;\n\n\t\tthis._blendMode = value;\n\n\t\tthis.iInvalidateShaderProgram();\n\t}\n\n\t/**\n\t * The texture containing the light map data.\n\t */\n\tpublic get lightMapTexture():Texture2DBase\n\t{\n\t\treturn this._lightMapTexture;\n\t}\n\n\tpublic set lightMapTexture(value:Texture2DBase)\n\t{\n\t\tthis._lightMapTexture = value;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iActivate(shaderObject:ShaderLightingObject, methodVO:MethodVO, stage:Stage)\n\t{\n\t\tstage.activateTexture(methodVO.secondaryTexturesIndex, this._lightMapTexture, shaderObject.repeatTextures, shaderObject.useSmoothTextures, shaderObject.useMipmapping);\n\n\t\tsuper.iActivate(shaderObject, methodVO, stage);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iGetFragmentPostLightingCode(shaderObject:ShaderLightingObject, methodVO:MethodVO, targetReg:ShaderRegisterElement, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tvar code:string;\n\t\tvar lightMapReg:ShaderRegisterElement = registerCache.getFreeTextureReg();\n\t\tvar temp:ShaderRegisterElement = registerCache.getFreeFragmentVectorTemp();\n\t\tmethodVO.secondaryTexturesIndex = lightMapReg.index;\n\n\t\tcode = ShaderCompilerHelper.getTex2DSampleCode(temp, sharedRegisters, lightMapReg, this._lightMapTexture, shaderObject.useSmoothTextures, shaderObject.repeatTextures, shaderObject.useMipmapping, sharedRegisters.secondaryUVVarying);\n\n\t\tswitch (this._blendMode) {\n\t\t\tcase DiffuseLightMapMethod.MULTIPLY:\n\t\t\t\tcode += \"mul \" + this._pTotalLightColorReg + \", \" + this._pTotalLightColorReg + \", \" + temp + \"\\n\";\n\t\t\t\tbreak;\n\t\t\tcase DiffuseLightMapMethod.ADD:\n\t\t\t\tcode += \"add \" + this._pTotalLightColorReg + \", \" + this._pTotalLightColorReg + \", \" + temp + \"\\n\";\n\t\t\t\tbreak;\n\t\t}\n\n\t\tcode += super.iGetFragmentPostLightingCode(shaderObject, methodVO, targetReg, registerCache, sharedRegisters);\n\n\t\treturn code;\n\t}\n}\n\nexport = DiffuseLightMapMethod;",
    "import Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport ShaderLightingObject\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderLightingObject\");\nimport ShaderObjectBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderObjectBase\");\nimport ShaderRegisterCache\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterData\");\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterElement\");\nimport RenderableBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/pool/RenderableBase\");\n\nimport MethodVO\t\t\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/data/MethodVO\");\nimport DiffuseBasicMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/DiffuseBasicMethod\");\nimport DiffuseCompositeMethod\t\t\t= require(\"awayjs-methodmaterials/lib/methods/DiffuseCompositeMethod\");\nimport SingleObjectDepthPass\t\t\t= require(\"awayjs-methodmaterials/lib/passes/SingleObjectDepthPass\");\n\n/**\n * DiffuseSubSurfaceMethod provides a depth map-based diffuse shading method that mimics the scattering of\n * light inside translucent surfaces. It allows light to shine through an object and to soften the diffuse shading.\n * It can be used for candle wax, ice, skin, ...\n */\nclass DiffuseSubSurfaceMethod extends DiffuseCompositeMethod\n{\n\tprivate _depthPass:SingleObjectDepthPass;\n\tprivate _lightProjVarying:ShaderRegisterElement;\n\tprivate _propReg:ShaderRegisterElement;\n\tprivate _scattering:number;\n\tprivate _translucency:number = 1;\n\tprivate _lightColorReg:ShaderRegisterElement;\n\tprivate _scatterColor:number /*uint*/ = 0xffffff;\n\tprivate _colorReg:ShaderRegisterElement;\n\tprivate _decReg:ShaderRegisterElement;\n\tprivate _scatterR:number = 1.0;\n\tprivate _scatterG:number = 1.0;\n\tprivate _scatterB:number = 1.0;\n\tprivate _targetReg:ShaderRegisterElement;\n\t\n\t/**\n\t * Creates a new <code>DiffuseSubSurfaceMethod</code> object.\n\t *\n\t * @param depthMapSize The size of the depth map used.\n\t * @param depthMapOffset The amount by which the rendered object will be inflated, to prevent depth map rounding errors.\n\t * @param baseMethod The diffuse method used to calculate the regular diffuse-based lighting.\n\t */\n\tconstructor(depthMapSize:number /*int*/ = 512, depthMapOffset:number = 15, baseMethod:DiffuseBasicMethod = null)\n\t{\n\t\tsuper(null, baseMethod);\n\n\t\tthis.pBaseMethod._iModulateMethod = (shaderObject:ShaderObjectBase, methodVO:MethodVO, targetReg:ShaderRegisterElement, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData) => this.scatterLight(shaderObject, methodVO, targetReg, registerCache, sharedRegisters);\n\n\t\t//this._passes = new Array<MaterialPassGLBase>();\n\t\t//this._depthPass = new SingleObjectDepthPass();\n\t\t//this._depthPass.textureSize = depthMapSize;\n\t\t//this._depthPass.polyOffset = depthMapOffset;\n\t\t//this._passes.push(this._depthPass);\n\t\tthis._scattering = 0.2;\n\t\tthis._translucency = 1;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iInitConstants(shaderObject:ShaderLightingObject, methodVO:MethodVO)\n\t{\n\t\tsuper.iInitConstants(shaderObject, methodVO);\n\n\t\tvar data:Array<number> = shaderObject.vertexConstantData;\n\t\tvar index:number /*int*/ = methodVO.secondaryVertexConstantsIndex;\n\t\tdata[index] = .5;\n\t\tdata[index + 1] = -.5;\n\t\tdata[index + 2] = 0;\n\t\tdata[index + 3] = 1;\n\t\t\n\t\tdata = shaderObject.fragmentConstantData;\n\t\tindex = methodVO.secondaryFragmentConstantsIndex;\n\t\tdata[index + 3] = 1.0;\n\t\tdata[index + 4] = 1.0;\n\t\tdata[index + 5] = 1/255;\n\t\tdata[index + 6] = 1/65025;\n\t\tdata[index + 7] = 1/16581375;\n\t\tdata[index + 10] = .5;\n\t\tdata[index + 11] = -.1;\n\t}\n\t\n\tpublic iCleanCompilationData()\n\t{\n\t\tsuper.iCleanCompilationData();\n\n\t\tthis._lightProjVarying = null;\n\t\tthis._propReg = null;\n\t\tthis._lightColorReg = null;\n\t\tthis._colorReg = null;\n\t\tthis._decReg = null;\n\t\tthis._targetReg = null;\n\t}\n\t\n\t/**\n\t * The amount by which the light scatters. It can be used to set the translucent surface's thickness. Use low\n\t * values for skin.\n\t */\n\tpublic get scattering():number\n\t{\n\t\treturn this._scattering;\n\t}\n\t\n\tpublic set scattering(value:number)\n\t{\n\t\tthis._scattering = value;\n\t}\n\t\n\t/**\n\t * The translucency of the object.\n\t */\n\tpublic get translucency():number\n\t{\n\t\treturn this._translucency;\n\t}\n\t\n\tpublic set translucency(value:number)\n\t{\n\t\tthis._translucency = value;\n\t}\n\t\n\t/**\n\t * The colour of the \"insides\" of the object, ie: the colour the light becomes after leaving the object.\n\t */\n\tpublic get scatterColor():number /*uint*/\n\t{\n\t\treturn this._scatterColor;\n\t}\n\t\n\tpublic set scatterColor(scatterColor:number /*uint*/)\n\t{\n\t\tthis._scatterColor = scatterColor;\n\t\tthis._scatterR = ((scatterColor >> 16) & 0xff)/0xff;\n\t\tthis._scatterG = ((scatterColor >> 8) & 0xff)/0xff;\n\t\tthis._scatterB = (scatterColor & 0xff)/0xff;\n\t}\n\t\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iGetVertexCode(shaderObject:ShaderObjectBase, methodVO:MethodVO, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tvar code:string = super.iGetVertexCode(shaderObject, methodVO, registerCache, sharedRegisters);\n\t\tvar lightProjection:ShaderRegisterElement;\n\t\tvar toTexRegister:ShaderRegisterElement;\n\t\tvar temp:ShaderRegisterElement = registerCache.getFreeVertexVectorTemp();\n\t\t\n\t\ttoTexRegister = registerCache.getFreeVertexConstant();\n\t\tmethodVO.secondaryVertexConstantsIndex = toTexRegister.index*4;\n\n\t\tthis._lightProjVarying = registerCache.getFreeVarying();\n\t\tlightProjection = registerCache.getFreeVertexConstant();\n\t\tregisterCache.getFreeVertexConstant();\n\t\tregisterCache.getFreeVertexConstant();\n\t\tregisterCache.getFreeVertexConstant();\n\t\t\n\t\tcode += \"m44 \" + temp + \", vt0, \" + lightProjection + \"\\n\" +\n\t\t\t\"div \" + temp + \".xyz, \" + temp + \".xyz, \" + temp + \".w\\n\" +\n\t\t\t\"mul \" + temp + \".xy, \" + temp + \".xy, \" + toTexRegister + \".xy\\n\" +\n\t\t\t\"add \" + temp + \".xy, \" + temp + \".xy, \" + toTexRegister + \".xx\\n\" +\n\t\t\t\"mov \" + this._lightProjVarying + \".xyz, \" + temp + \".xyz\\n\" +\n\t\t\t\"mov \" + this._lightProjVarying + \".w, va0.w\\n\";\n\t\t\n\t\treturn code;\n\t}\n\t\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iGetFragmentPreLightingCode(shaderObject:ShaderLightingObject, methodVO:MethodVO, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tthis._colorReg = registerCache.getFreeFragmentConstant();\n\t\tthis._decReg = registerCache.getFreeFragmentConstant();\n\t\tthis._propReg = registerCache.getFreeFragmentConstant();\n\t\tmethodVO.secondaryFragmentConstantsIndex = this._colorReg.index*4;\n\t\t\n\t\treturn super.iGetFragmentPreLightingCode(shaderObject, methodVO, registerCache, sharedRegisters);\n\t}\n\t\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iGetFragmentCodePerLight(shaderObject:ShaderLightingObject, methodVO:MethodVO, lightDirReg:ShaderRegisterElement, lightColReg:ShaderRegisterElement, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tthis._pIsFirstLight = true;\n\t\tthis._lightColorReg = lightColReg;\n\t\treturn super.iGetFragmentCodePerLight(shaderObject, methodVO, lightDirReg, lightColReg, registerCache, sharedRegisters);\n\t}\n\t\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iGetFragmentPostLightingCode(shaderObject:ShaderLightingObject, methodVO:MethodVO, targetReg:ShaderRegisterElement, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tvar code:string = super.iGetFragmentPostLightingCode(shaderObject, methodVO, targetReg, registerCache, sharedRegisters);\n\t\tvar temp:ShaderRegisterElement = registerCache.getFreeFragmentVectorTemp();\n\t\t\n\t\tcode += \"mul \" + temp + \".xyz, \" + this._lightColorReg + \".xyz, \" + this._targetReg + \".w\\n\" +\n\t\t\t\"mul \" + temp + \".xyz, \" + temp + \".xyz, \" + this._colorReg + \".xyz\\n\" +\n\t\t\t\"add \" + targetReg + \".xyz, \" + targetReg + \".xyz, \" + temp + \".xyz\\n\";\n\t\t\n\t\tif (this._targetReg != sharedRegisters.viewDirFragment)\n\t\t\tregisterCache.removeFragmentTempUsage(targetReg);\n\t\t\n\t\treturn code;\n\t}\n\t\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iActivate(shaderObject:ShaderLightingObject, methodVO:MethodVO, stage:Stage)\n\t{\n\t\tsuper.iActivate(shaderObject, methodVO, stage);\n\t\t\n\t\tvar index:number /*int*/ = methodVO.secondaryFragmentConstantsIndex;\n\t\tvar data:Array<number> = shaderObject.fragmentConstantData;\n\t\tdata[index] = this._scatterR;\n\t\tdata[index + 1] = this._scatterG;\n\t\tdata[index + 2] = this._scatterB;\n\t\tdata[index + 8] = this._scattering;\n\t\tdata[index + 9] = this._translucency;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iSetRenderState(shaderObject:ShaderObjectBase, methodVO:MethodVO, renderable:RenderableBase, stage:Stage, camera:Camera)\n\t{\n\t\tstage.activateTexture(methodVO.secondaryTexturesIndex, this._depthPass._iGetDepthMap(renderable), shaderObject.repeatTextures, shaderObject.useSmoothTextures, shaderObject.useMipmapping);\n\n\t\tthis._depthPass._iGetProjection(renderable).copyRawDataTo(shaderObject.vertexConstantData, methodVO.secondaryVertexConstantsIndex + 4, true);\n\t}\n\t\n\t/**\n\t * Generates the code for this method\n\t */\n\tprivate scatterLight(shaderObject:ShaderObjectBase, methodVO:MethodVO, targetReg:ShaderRegisterElement, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\t// only scatter first light\n\t\tif (!this._pIsFirstLight)\n\t\t\treturn \"\";\n\n\t\tthis._pIsFirstLight = false;\n\n\t\tvar code:string = \"\";\n\t\tvar depthReg:ShaderRegisterElement = registerCache.getFreeTextureReg();\n\n\t\tif (sharedRegisters.viewDirFragment) {\n\t\t\tthis._targetReg = sharedRegisters.viewDirFragment;\n\t\t} else {\n\t\t\tthis._targetReg = registerCache.getFreeFragmentVectorTemp();\n\t\t\tregisterCache.addFragmentTempUsages(this._targetReg, 1);\n\t\t}\n\n\t\tmethodVO.secondaryTexturesIndex = depthReg.index;\n\t\t\n\t\tvar temp:ShaderRegisterElement = registerCache.getFreeFragmentVectorTemp();\n\t\tcode += \"tex \" + temp + \", \" + this._lightProjVarying + \", \" + depthReg + \" <2d,nearest,clamp>\\n\" +\n\t\t\t// reencode RGBA\n\t\t\t\"dp4 \" + targetReg + \".z, \" + temp + \", \" + this._decReg + \"\\n\";\n\t\t// currentDistanceToLight - closestDistanceToLight\n\t\tcode += \"sub \" + targetReg + \".z, \" + this._lightProjVarying + \".z, \" + targetReg + \".z\\n\" +\n\t\t\t\n\t\t\t\"sub \" + targetReg + \".z, \" + this._propReg + \".x, \" + targetReg + \".z\\n\" +\n\t\t\t\"mul \" + targetReg + \".z, \" + this._propReg + \".y, \" + targetReg + \".z\\n\" +\n\t\t\t\"sat \" + targetReg + \".z, \" + targetReg + \".z\\n\" +\n\t\t\t\n\t\t\t// targetReg.x contains dot(lightDir, normal)\n\t\t\t// modulate according to incident light angle (scatter = scatter*(-.5*dot(light, normal) + .5)\n\t\t\t\"neg \" + targetReg + \".y, \" + targetReg + \".x\\n\" +\n\t\t\t\"mul \" + targetReg + \".y, \" + targetReg + \".y, \" + this._propReg + \".z\\n\" +\n\t\t\t\"add \" + targetReg + \".y, \" + targetReg + \".y, \" + this._propReg + \".z\\n\" +\n\t\t\t\"mul \" + this._targetReg + \".w, \" + targetReg + \".z, \" + targetReg + \".y\\n\" +\n\t\t\t\n\t\t\t// blend diffuse: d' = (1-s)*d + s*1\n\t\t\t\"sub \" + targetReg + \".y, \" + this._colorReg + \".w, \" + this._targetReg + \".w\\n\" +\n\t\t\t\"mul \" + targetReg + \".w, \" + targetReg + \".w, \" + targetReg + \".y\\n\";\n\t\t\n\t\treturn code;\n\t}\n}\n\nexport = DiffuseSubSurfaceMethod;",
    "import Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport ShaderLightingObject\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderLightingObject\");\nimport ShaderRegisterCache\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterData\");\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterElement\");\n\nimport MethodVO\t\t\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/data/MethodVO\");\nimport DiffuseBasicMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/DiffuseBasicMethod\");\n\n/**\n * DiffuseWrapMethod is an alternative to DiffuseBasicMethod in which the light is allowed to be \"wrapped around\" the normally dark area, to some extent.\n * It can be used as a crude approximation to Oren-Nayar or simple subsurface scattering.\n */\nclass DiffuseWrapMethod extends DiffuseBasicMethod\n{\n\tprivate _wrapDataRegister:ShaderRegisterElement;\n\tprivate _wrapFactor:number;\n\n\t/**\n\t * Creates a new DiffuseWrapMethod object.\n\t * @param wrapFactor A factor to indicate the amount by which the light is allowed to wrap\n\t */\n\tconstructor(wrapFactor:number = .5)\n\t{\n\t\tsuper();\n\n\t\tthis.wrapFactor = wrapFactor;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iCleanCompilationData()\n\t{\n\t\tsuper.iCleanCompilationData();\n\n\t\tthis._wrapDataRegister = null;\n\t}\n\n\t/**\n\t * A factor to indicate the amount by which the light is allowed to wrap.\n\t */\n\tpublic get wrapFactor():number\n\t{\n\t\treturn this._wrapFactor;\n\t}\n\n\tpublic set wrapFactor(value:number)\n\t{\n\t\tthis._wrapFactor = value;\n\t\tthis._wrapFactor = 1/(value + 1);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iGetFragmentPreLightingCode(shaderObject:ShaderLightingObject, methodVO:MethodVO, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tvar code:string = super.iGetFragmentPreLightingCode(shaderObject, methodVO, registerCache, sharedRegisters);\n\t\tthis._pIsFirstLight = true;\n\t\tthis._wrapDataRegister = registerCache.getFreeFragmentConstant();\n\t\tmethodVO.secondaryFragmentConstantsIndex = this._wrapDataRegister.index*4;\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iGetFragmentCodePerLight(shaderObject:ShaderLightingObject, methodVO:MethodVO, lightDirReg:ShaderRegisterElement, lightColReg:ShaderRegisterElement, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tvar code:string = \"\";\n\t\tvar t:ShaderRegisterElement;\n\n\t\t// write in temporary if not first light, so we can add to total diffuse colour\n\t\tif (this._pIsFirstLight) {\n\t\t\tt = this._pTotalLightColorReg;\n\t\t} else {\n\t\t\tt = registerCache.getFreeFragmentVectorTemp();\n\t\t\tregisterCache.addFragmentTempUsages(t, 1);\n\t\t}\n\n\t\tcode += \"dp3 \" + t + \".x, \" + lightDirReg + \".xyz, \" + sharedRegisters.normalFragment + \".xyz\\n\" +\n\t\t\t\"add \" + t + \".y, \" + t + \".x, \" + this._wrapDataRegister + \".x\\n\" +\n\t\t\t\"mul \" + t + \".y, \" + t + \".y, \" + this._wrapDataRegister + \".y\\n\" +\n\t\t\t\"sat \" + t + \".w, \" + t + \".y\\n\" +\n\t\t\t\"mul \" + t + \".xz, \" + t + \".w, \" + lightDirReg + \".wz\\n\";\n\n\t\tif (this._iModulateMethod != null)\n\t\t\tcode += this._iModulateMethod(shaderObject, methodVO, lightDirReg, registerCache, sharedRegisters);\n\n\t\tcode += \"mul \" + t + \", \" + t + \".x, \" + lightColReg + \"\\n\";\n\n\t\tif (!this._pIsFirstLight) {\n\t\t\tcode += \"add \" + this._pTotalLightColorReg + \".xyz, \" + this._pTotalLightColorReg + \".xyz, \" + t + \".xyz\\n\";\n\t\t\tregisterCache.removeFragmentTempUsage(t);\n\t\t}\n\n\t\tthis._pIsFirstLight = false;\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iActivate(shaderObject:ShaderLightingObject, methodVO:MethodVO, stage:Stage)\n\t{\n\t\tsuper.iActivate(shaderObject, methodVO, stage);\n\n\t\tvar index:number /*int*/ = methodVO.secondaryFragmentConstantsIndex;\n\t\tvar data:Array<number> = shaderObject.fragmentConstantData;\n\t\tdata[index] = this._wrapFactor;\n\t\tdata[index + 1] = 1/(this._wrapFactor + 1);\n\t}\n}\n\nexport = DiffuseWrapMethod;",
    "import Texture2DBase\t\t\t\t\t= require(\"awayjs-core/lib/textures/Texture2DBase\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport ShaderLightingObject\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderLightingObject\");\nimport ShaderObjectBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderObjectBase\");\nimport ShaderRegisterCache\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterData\");\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterElement\");\nimport ShaderCompilerHelper\t\t\t\t= require(\"awayjs-renderergl/lib/utils/ShaderCompilerHelper\");\n\nimport MethodVO\t\t\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/data/MethodVO\");\nimport EffectMethodBase\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/EffectMethodBase\");\n\n/**\n * EffectAlphaMaskMethod allows the use of an additional texture to specify the alpha value of the material. When used\n * with the secondary uv set, it allows for a tiled main texture with independently varying alpha (useful for water\n * etc).\n */\nclass EffectAlphaMaskMethod extends EffectMethodBase\n{\n\tprivate _texture:Texture2DBase;\n\tprivate _useSecondaryUV:boolean;\n\n\t/**\n\t * Creates a new EffectAlphaMaskMethod object.\n\t *\n\t * @param texture The texture to use as the alpha mask.\n\t * @param useSecondaryUV Indicated whether or not the secondary uv set for the mask. This allows mapping alpha independently.\n\t */\n\tconstructor(texture:Texture2DBase, useSecondaryUV:boolean = false)\n\t{\n\t\tsuper();\n\n\t\tthis._texture = texture;\n\t\tthis._useSecondaryUV = useSecondaryUV;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iInitVO(shaderObject:ShaderObjectBase, methodVO:MethodVO)\n\t{\n\t\tmethodVO.needsSecondaryUV = this._useSecondaryUV;\n\t\tmethodVO.needsUV = !this._useSecondaryUV;\n\t}\n\n\t/**\n\t * Indicated whether or not the secondary uv set for the mask. This allows mapping alpha independently, for\n\t * instance to tile the main texture and normal map while providing untiled alpha, for example to define the\n\t * transparency over a tiled water surface.\n\t */\n\tpublic get useSecondaryUV():boolean\n\t{\n\t\treturn this._useSecondaryUV;\n\t}\n\n\tpublic set useSecondaryUV(value:boolean)\n\t{\n\t\tif (this._useSecondaryUV == value)\n\t\t\treturn;\n\t\tthis._useSecondaryUV = value;\n\t\tthis.iInvalidateShaderProgram();\n\t}\n\n\t/**\n\t * The texture to use as the alpha mask.\n\t */\n\tpublic get texture():Texture2DBase\n\t{\n\t\treturn this._texture;\n\t}\n\n\tpublic set texture(value:Texture2DBase)\n\t{\n\t\tthis._texture = value;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iActivate(shaderObject:ShaderLightingObject, methodVO:MethodVO, stage:Stage)\n\t{\n\t\tstage.activateTexture(methodVO.texturesIndex, this._texture, shaderObject.repeatTextures, shaderObject.useSmoothTextures, shaderObject.useMipmapping);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iGetFragmentCode(shaderObject:ShaderObjectBase, methodVO:MethodVO, targetReg:ShaderRegisterElement, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tvar textureReg:ShaderRegisterElement = registerCache.getFreeTextureReg();\n\t\tvar temp:ShaderRegisterElement = registerCache.getFreeFragmentVectorTemp();\n\t\tvar uvReg:ShaderRegisterElement = this._useSecondaryUV? sharedRegisters.secondaryUVVarying : sharedRegisters.uvVarying;\n\t\tmethodVO.texturesIndex = textureReg.index;\n\n\t\treturn ShaderCompilerHelper.getTex2DSampleCode(temp, sharedRegisters, textureReg, this._texture, shaderObject.useSmoothTextures, shaderObject.repeatTextures, shaderObject.useMipmapping, uvReg) +\n\t\t\t\"mul \" + targetReg + \", \" + targetReg + \", \" + temp + \".x\\n\";\n\t}\n}\n\nexport = EffectAlphaMaskMethod;",
    "import Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport ShaderObjectBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderObjectBase\");\nimport ShaderRegisterCache\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterData\");\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterElement\");\n\nimport MethodVO\t\t\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/data/MethodVO\");\nimport EffectMethodBase\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/EffectMethodBase\");\n\n/**\n * EffectColorMatrixMethod provides a shading method that changes the colour of a material analogous to a ColorMatrixFilter.\n */\nclass EffectColorMatrixMethod extends EffectMethodBase\n{\n\tprivate _matrix:Array<number>;\n\n\t/**\n\t * Creates a new EffectColorTransformMethod.\n\t *\n\t * @param matrix An array of 20 items for 4 x 5 color transform.\n\t */\n\tconstructor(matrix:Array<number>)\n\t{\n\t\tsuper();\n\n\t\tif (matrix.length != 20)\n\t\t\tthrow new Error(\"Matrix length must be 20!\");\n\n\t\tthis._matrix = matrix;\n\t}\n\n\t/**\n\t * The 4 x 5 matrix to transform the color of the material.\n\t */\n\tpublic get colorMatrix():Array<number>\n\t{\n\t\treturn this._matrix;\n\t}\n\n\tpublic set colorMatrix(value:Array<number>)\n\t{\n\t\tthis._matrix = value;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iGetFragmentCode(shaderObject:ShaderObjectBase, methodVO:MethodVO, targetReg:ShaderRegisterElement, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tvar code:string = \"\";\n\t\tvar colorMultReg:ShaderRegisterElement = registerCache.getFreeFragmentConstant();\n\t\tregisterCache.getFreeFragmentConstant();\n\t\tregisterCache.getFreeFragmentConstant();\n\t\tregisterCache.getFreeFragmentConstant();\n\n\t\tvar colorOffsetReg:ShaderRegisterElement = registerCache.getFreeFragmentConstant();\n\n\t\tmethodVO.fragmentConstantsIndex = colorMultReg.index*4;\n\n\t\tvar temp:ShaderRegisterElement = registerCache.getFreeFragmentVectorTemp();\n\n\t\tcode += \"m44 \" + temp + \", \" + targetReg + \", \" + colorMultReg + \"\\n\" +\n\t\t\t\t\"add \" + targetReg + \", \" + temp + \", \" + colorOffsetReg + \"\\n\";\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iActivate(shaderObject:ShaderObjectBase, methodVO:MethodVO, stage:Stage)\n\t{\n\t\tvar matrix:Array<number> = this._matrix;\n\t\tvar index:number /*int*/ = methodVO.fragmentConstantsIndex;\n\t\tvar data:Array<number> = shaderObject.fragmentConstantData;\n\n\t\t// r\n\t\tdata[index] = matrix[0];\n\t\tdata[index + 1] = matrix[1];\n\t\tdata[index + 2] = matrix[2];\n\t\tdata[index + 3] = matrix[3];\n\n\t\t// g\n\t\tdata[index + 4] = matrix[5];\n\t\tdata[index + 5] = matrix[6];\n\t\tdata[index + 6] = matrix[7];\n\t\tdata[index + 7] = matrix[8];\n\n\t\t// b\n\t\tdata[index + 8] = matrix[10];\n\t\tdata[index + 9] = matrix[11];\n\t\tdata[index + 10] = matrix[12];\n\t\tdata[index + 11] = matrix[13];\n\n\t\t// a\n\t\tdata[index + 12] = matrix[15];\n\t\tdata[index + 13] = matrix[16];\n\t\tdata[index + 14] = matrix[17];\n\t\tdata[index + 15] = matrix[18];\n\n\t\t// rgba offset\n\t\tdata[index + 16] = matrix[4];\n\t\tdata[index + 17] = matrix[9];\n\t\tdata[index + 18] = matrix[14];\n\t\tdata[index + 19] = matrix[19];\n\t}\n}\n\nexport = EffectColorMatrixMethod;",
    "import ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\n\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport ShaderObjectBase\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderObjectBase\");\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterData\");\nimport ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterElement\");\n\nimport MethodVO\t\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/data/MethodVO\");\nimport EffectMethodBase\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/EffectMethodBase\");\n\n/**\n * EffectColorTransformMethod provides a shading method that changes the colour of a material analogous to a\n * ColorTransform object.\n */\nclass EffectColorTransformMethod extends EffectMethodBase\n{\n\tprivate _colorTransform:ColorTransform;\n\n\t/**\n\t * Creates a new EffectColorTransformMethod.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t * The ColorTransform object to transform the colour of the material with.\n\t */\n\tpublic get colorTransform():ColorTransform\n\t{\n\t\treturn this._colorTransform;\n\t}\n\n\tpublic set colorTransform(value:ColorTransform)\n\t{\n\t\tthis._colorTransform = value;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iGetFragmentCode(shaderObject:ShaderObjectBase, methodVO:MethodVO, targetReg:ShaderRegisterElement, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tvar code:string = \"\";\n\t\tvar colorMultReg:ShaderRegisterElement = registerCache.getFreeFragmentConstant();\n\t\tvar colorOffsReg:ShaderRegisterElement = registerCache.getFreeFragmentConstant();\n\n\t\tmethodVO.fragmentConstantsIndex = colorMultReg.index*4;\n\n\t\t//TODO: AGAL <> GLSL\n\n\t\tcode += \"mul \" + targetReg + \", \" + targetReg + \", \" + colorMultReg + \"\\n\" + \"add \" + targetReg + \", \" + targetReg + \", \" + colorOffsReg + \"\\n\";\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iActivate(shaderObject:ShaderObjectBase, methodVO:MethodVO, stage:Stage)\n\t{\n\t\tvar inv:number = 1/0xff;\n\t\tvar index:number = methodVO.fragmentConstantsIndex;\n\t\tvar data:Array<number> = shaderObject.fragmentConstantData;\n\n\t\tdata[index] = this._colorTransform.redMultiplier;\n\t\tdata[index + 1] = this._colorTransform.greenMultiplier;\n\t\tdata[index + 2] = this._colorTransform.blueMultiplier;\n\t\tdata[index + 3] = this._colorTransform.alphaMultiplier;\n\t\tdata[index + 4] = this._colorTransform.redOffset*inv;\n\t\tdata[index + 5] = this._colorTransform.greenOffset*inv;\n\t\tdata[index + 6] = this._colorTransform.blueOffset*inv;\n\t\tdata[index + 7] = this._colorTransform.alphaOffset*inv;\n\n\t}\n}\n\nexport = EffectColorTransformMethod;",
    "import CubeTextureBase\t\t\t\t\t= require(\"awayjs-core/lib/textures/CubeTextureBase\");\nimport Texture2DBase\t\t\t\t\t= require(\"awayjs-core/lib/textures/Texture2DBase\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport ShaderObjectBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderObjectBase\");\nimport ShaderRegisterCache\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterData\");\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterElement\");\nimport ShaderCompilerHelper\t\t\t\t= require(\"awayjs-renderergl/lib/utils/ShaderCompilerHelper\");\n\nimport MethodVO\t\t\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/data/MethodVO\");\nimport EffectMethodBase\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/EffectMethodBase\");\n\n/**\n * EffectEnvMapMethod provides a material method to perform reflection mapping using cube maps.\n */\nclass EffectEnvMapMethod extends EffectMethodBase\n{\n\tprivate _cubeTexture:CubeTextureBase;\n\tprivate _alpha:number;\n\tprivate _mask:Texture2DBase;\n\n\t/**\n\t * Creates an EffectEnvMapMethod object.\n\t * @param envMap The environment map containing the reflected scene.\n\t * @param alpha The reflectivity of the surface.\n\t */\n\tconstructor(envMap:CubeTextureBase, alpha:number = 1)\n\t{\n\t\tsuper();\n\t\tthis._cubeTexture = envMap;\n\t\tthis._alpha = alpha;\n\n\t}\n\n\t/**\n\t * An optional texture to modulate the reflectivity of the surface.\n\t */\n\tpublic get mask():Texture2DBase\n\t{\n\t\treturn this._mask;\n\t}\n\n\tpublic set mask(value:Texture2DBase)\n\t{\n\t\tif (value != this._mask || (value && this._mask && (value.format != this._mask.format)))\n\t\t\tthis.iInvalidateShaderProgram();\n\n\t\tthis._mask = value;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iInitVO(shaderObject:ShaderObjectBase, methodVO:MethodVO)\n\t{\n\t\tmethodVO.needsNormals = true;\n\t\tmethodVO.needsView = true;\n\t\tmethodVO.needsUV = this._mask != null;\n\t}\n\n\t/**\n\t * The cubic environment map containing the reflected scene.\n\t */\n\tpublic get envMap():CubeTextureBase\n\t{\n\t\treturn this._cubeTexture;\n\t}\n\n\tpublic set envMap(value:CubeTextureBase)\n\t{\n\t\tthis._cubeTexture = value;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic dispose()\n\t{\n\t}\n\n\t/**\n\t * The reflectivity of the surface.\n\t */\n\tpublic get alpha():number\n\t{\n\t\treturn this._alpha;\n\t}\n\n\tpublic set alpha(value:number)\n\t{\n\t\tthis._alpha = value;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iActivate(shaderObject:ShaderObjectBase, methodVO:MethodVO, stage:Stage)\n\t{\n\t\tshaderObject.fragmentConstantData[methodVO.fragmentConstantsIndex] = this._alpha;\n\n\t\tstage.activateCubeTexture(methodVO.texturesIndex, this._cubeTexture, shaderObject.useSmoothTextures,shaderObject.useMipmapping);\n\n\t\tif (this._mask)\n\t\t\tstage.activateTexture(methodVO.texturesIndex + 1, this._mask,  shaderObject.repeatTextures, shaderObject.useSmoothTextures,shaderObject.useMipmapping);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iGetFragmentCode(shaderObject:ShaderObjectBase, methodVO:MethodVO, targetReg:ShaderRegisterElement, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tvar dataRegister:ShaderRegisterElement = registerCache.getFreeFragmentConstant();\n\t\tvar temp:ShaderRegisterElement = registerCache.getFreeFragmentVectorTemp();\n\t\tvar code:string = \"\";\n\t\tvar cubeMapReg:ShaderRegisterElement = registerCache.getFreeTextureReg();\n\n\t\tmethodVO.texturesIndex = cubeMapReg.index;\n\t\tmethodVO.fragmentConstantsIndex = dataRegister.index*4;\n\n\t\tregisterCache.addFragmentTempUsages(temp, 1);\n\t\tvar temp2:ShaderRegisterElement = registerCache.getFreeFragmentVectorTemp();\n\n\t\t// r = I - 2(I.N)*N\n\t\tcode += \"dp3 \" + temp + \".w, \" + sharedRegisters.viewDirFragment + \".xyz, \" + sharedRegisters.normalFragment + \".xyz\\n\" +\n\t\t\t\t\"add \" + temp + \".w, \" + temp + \".w, \" + temp + \".w\\n\" +\n\t\t\t\t\"mul \" + temp + \".xyz, \" + sharedRegisters.normalFragment + \".xyz, \" + temp + \".w\\n\" +\n\t\t\t\t\"sub \" + temp + \".xyz, \" + temp + \".xyz, \" + sharedRegisters.viewDirFragment + \".xyz\\n\" +\n\t\t\tShaderCompilerHelper.getTexCubeSampleCode(temp, cubeMapReg, this._cubeTexture, shaderObject.useSmoothTextures, shaderObject.useMipmapping, temp) +\n\t\t\t\t\"sub \" + temp2 + \".w, \" + temp + \".w, fc0.x\\n\" + // -.5\n\t\t\t\t\"kil \" + temp2 + \".w\\n\" +\t// used for real time reflection mapping - if alpha is not 1 (mock texture) kil output\n\t\t\t\t\"sub \" + temp + \", \" + temp + \", \" + targetReg + \"\\n\";\n\n\t\tif (this._mask)\n\t\t\tcode += ShaderCompilerHelper.getTex2DSampleCode(temp2, sharedRegisters, registerCache.getFreeTextureReg(), this._mask, shaderObject.useSmoothTextures, shaderObject.repeatTextures, shaderObject.useMipmapping) +\n\t\t\t\t\"mul \" + temp + \", \" + temp2 + \", \" + temp + \"\\n\";\n\n\t\tcode += \"mul \" + temp + \", \" + temp + \", \" + dataRegister + \".x\\n\" +\n\t\t\t\t\"add \" + targetReg + \", \" + targetReg + \", \" + temp + \"\\n\";\n\n\t\tregisterCache.removeFragmentTempUsage(temp);\n\n\t\treturn code;\n\t}\n}\n\nexport = EffectEnvMapMethod;",
    "import Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport ShaderLightingObject\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderLightingObject\");\nimport ShaderObjectBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderObjectBase\");\nimport ShaderRegisterCache\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterData\");\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterElement\");\n\nimport MethodVO\t\t\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/data/MethodVO\");\nimport EffectMethodBase\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/EffectMethodBase\");\n\n/**\n * EffectFogMethod provides a method to add distance-based fog to a material.\n */\nclass EffectFogMethod extends EffectMethodBase\n{\n\tprivate _minDistance:number = 0;\n\tprivate _maxDistance:number = 1000;\n\tprivate _fogColor:number /*uint*/;\n\tprivate _fogR:number;\n\tprivate _fogG:number;\n\tprivate _fogB:number;\n\n\t/**\n\t * Creates a new EffectFogMethod object.\n\t * @param minDistance The distance from which the fog starts appearing.\n\t * @param maxDistance The distance at which the fog is densest.\n\t * @param fogColor The colour of the fog.\n\t */\n\tconstructor(minDistance:number, maxDistance:number, fogColor:number /*uint*/ = 0x808080)\n\t{\n\t\tsuper();\n\t\tthis.minDistance = minDistance;\n\t\tthis.maxDistance = maxDistance;\n\t\tthis.fogColor = fogColor;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iInitVO(shaderObject:ShaderLightingObject, methodVO:MethodVO)\n\t{\n\t\tmethodVO.needsProjection = true;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iInitConstants(shaderObject:ShaderObjectBase, methodVO:MethodVO)\n\t{\n\t\tvar data:Array<number> = shaderObject.fragmentConstantData;\n\t\tvar index:number /*int*/ = methodVO.fragmentConstantsIndex;\n\t\tdata[index + 3] = 1;\n\t\tdata[index + 6] = 0;\n\t\tdata[index + 7] = 0;\n\t}\n\n\t/**\n\t * The distance from which the fog starts appearing.\n\t */\n\tpublic get minDistance():number\n\t{\n\t\treturn this._minDistance;\n\t}\n\n\tpublic set minDistance(value:number)\n\t{\n\t\tthis._minDistance = value;\n\t}\n\n\t/**\n\t * The distance at which the fog is densest.\n\t */\n\tpublic get maxDistance():number\n\t{\n\t\treturn this._maxDistance;\n\t}\n\n\tpublic set maxDistance(value:number)\n\t{\n\t\tthis._maxDistance = value;\n\t}\n\n\t/**\n\t * The colour of the fog.\n\t */\n\tpublic get fogColor():number /*uint*/\n\t{\n\t\treturn this._fogColor;\n\t}\n\n\tpublic set fogColor(value:number/*uint*/)\n\t{\n\t\tthis._fogColor = value;\n\t\tthis._fogR = ((value >> 16) & 0xff)/0xff;\n\t\tthis._fogG = ((value >> 8) & 0xff)/0xff;\n\t\tthis._fogB = (value & 0xff)/0xff;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iActivate(shaderObject:ShaderObjectBase, methodVO:MethodVO, stage:Stage)\n\t{\n\t\tvar data:Array<number> = shaderObject.fragmentConstantData;\n\t\tvar index:number /*int*/ = methodVO.fragmentConstantsIndex;\n\t\tdata[index] = this._fogR;\n\t\tdata[index + 1] = this._fogG;\n\t\tdata[index + 2] = this._fogB;\n\t\tdata[index + 4] = this._minDistance;\n\t\tdata[index + 5] = 1/(this._maxDistance - this._minDistance);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iGetFragmentCode(shaderObject:ShaderObjectBase, methodVO:MethodVO, targetReg:ShaderRegisterElement, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tvar fogColor:ShaderRegisterElement = registerCache.getFreeFragmentConstant();\n\t\tvar fogData:ShaderRegisterElement = registerCache.getFreeFragmentConstant();\n\t\tvar temp:ShaderRegisterElement = registerCache.getFreeFragmentVectorTemp();\n\t\tregisterCache.addFragmentTempUsages(temp, 1);\n\t\tvar temp2:ShaderRegisterElement = registerCache.getFreeFragmentVectorTemp();\n\t\tvar code:string = \"\";\n\t\tmethodVO.fragmentConstantsIndex = fogColor.index*4;\n\n\t\tcode += \"sub \" + temp2 + \".w, \" + sharedRegisters.projectionFragment + \".z, \" + fogData + \".x\\n\" +\n\t\t\t\t\"mul \" + temp2 + \".w, \" + temp2 + \".w, \" + fogData + \".y\\n\" +\n\t\t\t\t\"sat \" + temp2 + \".w, \" + temp2 + \".w\\n\" +\n\t\t\t\t\"sub \" + temp + \", \" + fogColor + \", \" + targetReg + \"\\n\" + // (fogColor- col)\n\t\t\t\t\"mul \" + temp + \", \" + temp + \", \" + temp2 + \".w\\n\" + // (fogColor- col)*fogRatio\n\t\t\t\t\"add \" + targetReg + \", \" + targetReg + \", \" + temp + \"\\n\"; // fogRatio*(fogColor- col) + col\n\n\t\tregisterCache.removeFragmentTempUsage(temp);\n\n\t\treturn code;\n\t}\n}\n\nexport = EffectFogMethod;",
    "import CubeTextureBase\t\t\t\t\t= require(\"awayjs-core/lib/textures/CubeTextureBase\");\nimport Texture2DBase\t\t\t\t\t= require(\"awayjs-core/lib/textures/Texture2DBase\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport ShaderObjectBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderObjectBase\");\nimport ShaderRegisterCache\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterData\");\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterElement\");\nimport ShaderCompilerHelper\t\t\t\t= require(\"awayjs-renderergl/lib/utils/ShaderCompilerHelper\");\n\nimport MethodVO\t\t\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/data/MethodVO\");\nimport EffectMethodBase\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/EffectMethodBase\");\n\n/**\n * EffectFresnelEnvMapMethod provides a method to add fresnel-based reflectivity to an object using cube maps, which gets\n * stronger as the viewing angle becomes more grazing.\n */\nclass EffectFresnelEnvMapMethod extends EffectMethodBase\n{\n\tprivate _cubeTexture:CubeTextureBase;\n\tprivate _fresnelPower:number = 5;\n\tprivate _normalReflectance:number = 0;\n\tprivate _alpha:number;\n\tprivate _mask:Texture2DBase;\n\n\t/**\n\t * Creates a new <code>EffectFresnelEnvMapMethod</code> object.\n\t *\n\t * @param envMap The environment map containing the reflected scene.\n\t * @param alpha The reflectivity of the material.\n\t */\n\tconstructor(envMap:CubeTextureBase, alpha:number = 1)\n\t{\n\t\tsuper();\n\n\t\tthis._cubeTexture = envMap;\n\t\tthis._alpha = alpha;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iInitVO(shaderObject:ShaderObjectBase, methodVO:MethodVO)\n\t{\n\t\tmethodVO.needsNormals = true;\n\t\tmethodVO.needsView = true;\n\t\tmethodVO.needsUV = this._mask != null;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iInitConstants(shaderObject:ShaderObjectBase, methodVO:MethodVO)\n\t{\n\t\tshaderObject.fragmentConstantData[methodVO.fragmentConstantsIndex + 3] = 1;\n\t}\n\n\t/**\n\t * An optional texture to modulate the reflectivity of the surface.\n\t */\n\tpublic get mask():Texture2DBase\n\t{\n\t\treturn this._mask;\n\t}\n\n\tpublic set mask(value:Texture2DBase)\n\t{\n\t\tif (Boolean(value) != Boolean(this._mask) ||\n\t\t\t(value && this._mask && (value.format != this._mask.format))) {\n\t\t\tthis.iInvalidateShaderProgram();\n\t\t}\n\t\tthis._mask = value;\n\t}\n\n\t/**\n\t * The power used in the Fresnel equation. Higher values make the fresnel effect more pronounced. Defaults to 5.\n\t */\n\tpublic get fresnelPower():number\n\t{\n\t\treturn this._fresnelPower;\n\t}\n\n\tpublic set fresnelPower(value:number)\n\t{\n\t\tthis._fresnelPower = value;\n\t}\n\n\t/**\n\t * The cubic environment map containing the reflected scene.\n\t */\n\tpublic get envMap():CubeTextureBase\n\t{\n\t\treturn this._cubeTexture;\n\t}\n\n\tpublic set envMap(value:CubeTextureBase)\n\t{\n\t\tthis._cubeTexture = value;\n\t}\n\n\t/**\n\t * The reflectivity of the surface.\n\t */\n\tpublic get alpha():number\n\t{\n\t\treturn this._alpha;\n\t}\n\n\tpublic set alpha(value:number)\n\t{\n\t\tthis._alpha = value;\n\t}\n\n\t/**\n\t * The minimum amount of reflectance, ie the reflectance when the view direction is normal to the surface or light direction.\n\t */\n\tpublic get normalReflectance():number\n\t{\n\t\treturn this._normalReflectance;\n\t}\n\n\tpublic set normalReflectance(value:number)\n\t{\n\t\tthis._normalReflectance = value;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iActivate(shaderObject:ShaderObjectBase, methodVO:MethodVO, stage:Stage)\n\t{\n\t\tvar data:Array<number> = shaderObject.fragmentConstantData;\n\t\tvar index:number /*int*/ = methodVO.fragmentConstantsIndex;\n\t\tdata[index] = this._alpha;\n\t\tdata[index + 1] = this._normalReflectance;\n\t\tdata[index + 2] = this._fresnelPower;\n\n\t\tstage.activateCubeTexture(methodVO.texturesIndex, this._cubeTexture, shaderObject.useSmoothTextures, shaderObject.useMipmapping);\n\n\t\tif (this._mask)\n\t\t\tstage.activateTexture(methodVO.texturesIndex + 1, this._mask, shaderObject.repeatTextures, shaderObject.useSmoothTextures, shaderObject.useMipmapping);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iGetFragmentCode(shaderObject:ShaderObjectBase, methodVO:MethodVO, targetReg:ShaderRegisterElement, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tvar dataRegister:ShaderRegisterElement = registerCache.getFreeFragmentConstant();\n\t\tvar temp:ShaderRegisterElement = registerCache.getFreeFragmentVectorTemp();\n\t\tvar code:string = \"\";\n\t\tvar cubeMapReg:ShaderRegisterElement = registerCache.getFreeTextureReg();\n\t\tvar viewDirReg:ShaderRegisterElement = sharedRegisters.viewDirFragment;\n\t\tvar normalReg:ShaderRegisterElement = sharedRegisters.normalFragment;\n\n\t\tmethodVO.texturesIndex = cubeMapReg.index;\n\t\tmethodVO.fragmentConstantsIndex = dataRegister.index*4;\n\n\t\tregisterCache.addFragmentTempUsages(temp, 1);\n\t\tvar temp2:ShaderRegisterElement = registerCache.getFreeFragmentVectorTemp();\n\n\t\t// r = V - 2(V.N)*N\n\t\tcode += \"dp3 \" + temp + \".w, \" + viewDirReg + \".xyz, \" + normalReg + \".xyz\\n\" +\n\t\t\t\t\"add \" + temp + \".w, \" + temp + \".w, \" + temp + \".w\\n\" +\n\t\t\t\t\"mul \" + temp + \".xyz, \" + normalReg + \".xyz, \" + temp + \".w\\n\" +\n\t\t\t\t\"sub \" + temp + \".xyz, \" + temp + \".xyz, \" + viewDirReg + \".xyz\\n\" +\n\t\t\tShaderCompilerHelper.getTexCubeSampleCode(temp, cubeMapReg, this._cubeTexture, shaderObject.useSmoothTextures, shaderObject.useMipmapping, temp) +\n\t\t\t\t\"sub \" + temp2 + \".w, \" + temp + \".w, fc0.x\\n\" +               \t// -.5\n\t\t\t\t\"kil \" + temp2 + \".w\\n\" +\t// used for real time reflection mapping - if alpha is not 1 (mock texture) kil output\n\t\t\t\t\"sub \" + temp + \", \" + temp + \", \" + targetReg + \"\\n\";\n\n\t\t// calculate fresnel term\n\t\tcode += \"dp3 \" + viewDirReg + \".w, \" + viewDirReg + \".xyz, \" + normalReg + \".xyz\\n\" +  // dot(V, H)\n\t\t\t\t\"sub \" + viewDirReg + \".w, \" + dataRegister + \".w, \" + viewDirReg + \".w\\n\" +       // base = 1-dot(V, H)\n\t\t\t\t\"pow \" + viewDirReg + \".w, \" + viewDirReg + \".w, \" + dataRegister + \".z\\n\" +       // exp = pow(base, 5)\n\t\t\t\t\"sub \" + normalReg + \".w, \" + dataRegister + \".w, \" + viewDirReg + \".w\\n\" +        // 1 - exp\n\t\t\t\t\"mul \" + normalReg + \".w, \" + dataRegister + \".y, \" + normalReg + \".w\\n\" +         // f0*(1 - exp)\n\t\t\t\t\"add \" + viewDirReg + \".w, \" + viewDirReg + \".w, \" + normalReg + \".w\\n\" +          // exp + f0*(1 - exp)\n\n\t\t\t\t// total alpha\n\t\t\t\t\"mul \" + viewDirReg + \".w, \" + dataRegister + \".x, \" + viewDirReg + \".w\\n\";\n\n\t\tif (this._mask) {\n\t\t\tvar maskReg:ShaderRegisterElement = registerCache.getFreeTextureReg();\n\t\t\tcode += ShaderCompilerHelper.getTex2DSampleCode(temp2, sharedRegisters, maskReg, this._mask, shaderObject.useSmoothTextures, shaderObject.repeatTextures, shaderObject.useMipmapping) +\n\t\t\t\t\"mul \" + viewDirReg + \".w, \" + temp2 + \".x, \" + viewDirReg + \".w\\n\";\n\t\t}\n\n\t\t// blend\n\t\tcode += \"mul \" + temp + \", \" + temp + \", \" + viewDirReg + \".w\\n\" +\n\t\t\t\t\"add \" + targetReg + \", \" + targetReg + \", \" + temp + \"\\n\";\n\n\t\tregisterCache.removeFragmentTempUsage(temp);\n\n\t\treturn code;\n\t}\n}\n\nexport = EffectFresnelEnvMapMethod;",
    "import Texture2DBase\t\t\t\t\t= require(\"awayjs-core/lib/textures/Texture2DBase\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport ShaderObjectBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderObjectBase\");\nimport ShaderRegisterCache\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterData\");\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterElement\");\nimport ShaderCompilerHelper\t\t\t\t= require(\"awayjs-renderergl/lib/utils/ShaderCompilerHelper\");\n\nimport MethodVO\t\t\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/data/MethodVO\");\nimport EffectMethodBase\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/EffectMethodBase\");\n\n/**\n * EffectLightMapMethod provides a method that allows applying a light map texture to the calculated pixel colour.\n * It is different from DiffuseLightMapMethod in that the latter only modulates the diffuse shading value rather\n * than the whole pixel colour.\n */\nclass EffectLightMapMethod extends EffectMethodBase\n{\n\t/**\n\t * Indicates the light map should be multiplied with the calculated shading result.\n\t */\n\tpublic static MULTIPLY:string = \"multiply\";\n\n\t/**\n\t * Indicates the light map should be added into the calculated shading result.\n\t */\n\tpublic static ADD:string = \"add\";\n\n\tprivate _texture:Texture2DBase;\n\n\tprivate _blendMode:string;\n\tprivate _useSecondaryUV:boolean;\n\n\t/**\n\t * Creates a new EffectLightMapMethod object.\n\t *\n\t * @param texture The texture containing the light map.\n\t * @param blendMode The blend mode with which the light map should be applied to the lighting result.\n\t * @param useSecondaryUV Indicates whether the secondary UV set should be used to map the light map.\n\t */\n\tconstructor(texture:Texture2DBase, blendMode:string = \"multiply\", useSecondaryUV:boolean = false)\n\t{\n\t\tsuper();\n\n\t\tthis._useSecondaryUV = useSecondaryUV;\n\t\tthis._texture = texture;\n\t\tthis.blendMode = blendMode;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iInitVO(shaderObject:ShaderObjectBase, methodVO:MethodVO)\n\t{\n\t\tmethodVO.needsUV = !this._useSecondaryUV;\n\t\tmethodVO.needsSecondaryUV = this._useSecondaryUV;\n\t}\n\n\t/**\n\t * The blend mode with which the light map should be applied to the lighting result.\n\t *\n\t * @see EffectLightMapMethod.ADD\n\t * @see EffectLightMapMethod.MULTIPLY\n\t */\n\tpublic get blendMode():string\n\t{\n\t\treturn this._blendMode;\n\t}\n\n\tpublic set blendMode(value:string)\n\t{\n\t\tif (value != EffectLightMapMethod.ADD && value != EffectLightMapMethod.MULTIPLY)\n\t\t\tthrow new Error(\"Unknown blendmode!\");\n\t\tif (this._blendMode == value)\n\t\t\treturn;\n\n\t\tthis._blendMode = value;\n\n\t\tthis.iInvalidateShaderProgram();\n\t}\n\n\t/**\n\t * The texture containing the light map.\n\t */\n\tpublic get texture():Texture2DBase\n\t{\n\t\treturn this._texture;\n\t}\n\n\tpublic set texture(value:Texture2DBase)\n\t{\n\t\tif (value.format != this._texture.format)\n\t\t\tthis.iInvalidateShaderProgram();\n\n\t\tthis._texture = value;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iActivate(shaderObject:ShaderObjectBase, methodVO:MethodVO, stage:Stage)\n\t{\n\t\tstage.activateTexture(methodVO.texturesIndex, this._texture, shaderObject.repeatTextures, shaderObject.useSmoothTextures, shaderObject.useMipmapping);\n\n\t\tsuper.iActivate(shaderObject, methodVO, stage);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iGetFragmentCode(shaderObject:ShaderObjectBase, methodVO:MethodVO, targetReg:ShaderRegisterElement, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tvar code:string;\n\t\tvar lightMapReg:ShaderRegisterElement = registerCache.getFreeTextureReg();\n\t\tvar temp:ShaderRegisterElement = registerCache.getFreeFragmentVectorTemp();\n\t\tmethodVO.texturesIndex = lightMapReg.index;\n\n\t\tcode = ShaderCompilerHelper.getTex2DSampleCode(temp, sharedRegisters, lightMapReg, this._texture, shaderObject.useSmoothTextures, shaderObject.repeatTextures, shaderObject.useMipmapping, this._useSecondaryUV? sharedRegisters.secondaryUVVarying : sharedRegisters.uvVarying);\n\n\t\tswitch (this._blendMode) {\n\t\t\tcase EffectLightMapMethod.MULTIPLY:\n\t\t\t\tcode += \"mul \" + targetReg + \", \" + targetReg + \", \" + temp + \"\\n\";\n\t\t\t\tbreak;\n\t\t\tcase EffectLightMapMethod.ADD:\n\t\t\t\tcode += \"add \" + targetReg + \", \" + targetReg + \", \" + temp + \"\\n\";\n\t\t\t\tbreak;\n\t\t}\n\n\t\treturn code;\n\t}\n}\n\nexport = EffectLightMapMethod;",
    "import IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport ShaderObjectBase\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderObjectBase\");\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterData\");\nimport ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterElement\");\n\nimport MethodVO\t\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/data/MethodVO\");\nimport ShadingMethodBase\t\t\t= require(\"awayjs-methodmaterials/lib/methods/ShadingMethodBase\");\n\n/**\n * EffectMethodBase forms an abstract base class for shader methods that are not dependent on light sources,\n * and are in essence post-process effects on the materials.\n */\nclass EffectMethodBase extends ShadingMethodBase implements IAsset\n{\n\tpublic static assetType:string = \"[asset EffectMethod]\";\n\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn EffectMethodBase.assetType;\n\t}\n\n\t/**\n\t * Get the fragment shader code that should be added after all per-light code. Usually composits everything to the target register.\n\t * @param methodVO The MethodVO object containing the method data for the currently compiled material pass.\n\t * @param regCache The register cache used during the compilation.\n\t * @param targetReg The register that will be containing the method's output.\n\t * @private\n\t */\n\tpublic iGetFragmentCode(shaderObject:ShaderObjectBase, methodVO:MethodVO, targetReg:ShaderRegisterElement, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tthrow new AbstractMethodError();\n\t\treturn \"\";\n\t}\n}\n\nexport = EffectMethodBase;",
    "import CubeTextureBase\t\t\t\t\t= require(\"awayjs-core/lib/textures/CubeTextureBase\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport ShaderObjectBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderObjectBase\");\nimport ShaderRegisterCache\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterData\");\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterElement\");\nimport ShaderCompilerHelper\t\t\t\t= require(\"awayjs-renderergl/lib/utils/ShaderCompilerHelper\");\n\nimport MethodVO\t\t\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/data/MethodVO\");\nimport EffectMethodBase\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/EffectMethodBase\");\n\n/**\n * EffectRefractionEnvMapMethod provides a method to add refracted transparency based on cube maps.\n */\nclass EffectRefractionEnvMapMethod extends EffectMethodBase\n{\n\tprivate _envMap:CubeTextureBase;\n\n\tprivate _dispersionR:number = 0;\n\tprivate _dispersionG:number = 0;\n\tprivate _dispersionB:number = 0;\n\tprivate _useDispersion:boolean;\n\tprivate _refractionIndex:number;\n\tprivate _alpha:number = 1;\n\n\t/**\n\t * Creates a new EffectRefractionEnvMapMethod object. Example values for dispersion are: dispersionR: -0.03, dispersionG: -0.01, dispersionB: = .0015\n\t *\n\t * @param envMap The environment map containing the refracted scene.\n\t * @param refractionIndex The refractive index of the material.\n\t * @param dispersionR The amount of chromatic dispersion of the red channel. Defaults to 0 (none).\n\t * @param dispersionG The amount of chromatic dispersion of the green channel. Defaults to 0 (none).\n\t * @param dispersionB The amount of chromatic dispersion of the blue channel. Defaults to 0 (none).\n\t */\n\tconstructor(envMap:CubeTextureBase, refractionIndex:number = .1, dispersionR:number = 0, dispersionG:number = 0, dispersionB:number = 0)\n\t{\n\t\tsuper();\n\t\tthis._envMap = envMap;\n\t\tthis._dispersionR = dispersionR;\n\t\tthis._dispersionG = dispersionG;\n\t\tthis._dispersionB = dispersionB;\n\t\tthis._useDispersion = !(this._dispersionR == this._dispersionB && this._dispersionR == this._dispersionG);\n\t\tthis._refractionIndex = refractionIndex;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iInitConstants(shaderObject:ShaderObjectBase, methodVO:MethodVO)\n\t{\n\t\tvar index:number /*int*/ = methodVO.fragmentConstantsIndex;\n\t\tvar data:Array<number> = shaderObject.fragmentConstantData;\n\t\tdata[index + 4] = 1;\n\t\tdata[index + 5] = 0;\n\t\tdata[index + 7] = 1;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iInitVO(shaderObject:ShaderObjectBase, methodVO:MethodVO)\n\t{\n\t\tmethodVO.needsNormals = true;\n\t\tmethodVO.needsView = true;\n\t}\n\n\t/**\n\t * The cube environment map to use for the refraction.\n\t */\n\tpublic get envMap():CubeTextureBase\n\t{\n\t\treturn this._envMap;\n\t}\n\n\tpublic set envMap(value:CubeTextureBase)\n\t{\n\t\tthis._envMap = value;\n\t}\n\n\t/**\n\t * The refractive index of the material.\n\t */\n\tpublic get refractionIndex():number\n\t{\n\t\treturn this._refractionIndex;\n\t}\n\n\tpublic set refractionIndex(value:number)\n\t{\n\t\tthis._refractionIndex = value;\n\t}\n\n\t/**\n\t * The amount of chromatic dispersion of the red channel. Defaults to 0 (none).\n\t */\n\tpublic get dispersionR():number\n\t{\n\t\treturn this._dispersionR;\n\t}\n\n\tpublic set dispersionR(value:number)\n\t{\n\t\tthis._dispersionR = value;\n\n\t\tvar useDispersion:boolean = !(this._dispersionR == this._dispersionB && this._dispersionR == this._dispersionG);\n\t\tif (this._useDispersion != useDispersion) {\n\t\t\tthis.iInvalidateShaderProgram();\n\t\t\tthis._useDispersion = useDispersion;\n\t\t}\n\t}\n\n\t/**\n\t * The amount of chromatic dispersion of the green channel. Defaults to 0 (none).\n\t */\n\tpublic get dispersionG():number\n\t{\n\t\treturn this._dispersionG;\n\t}\n\n\tpublic set dispersionG(value:number)\n\t{\n\t\tthis._dispersionG = value;\n\n\t\tvar useDispersion:boolean = !(this._dispersionR == this._dispersionB && this._dispersionR == this._dispersionG);\n\t\tif (this._useDispersion != useDispersion) {\n\t\t\tthis.iInvalidateShaderProgram();\n\t\t\tthis._useDispersion = useDispersion;\n\t\t}\n\t}\n\n\t/**\n\t * The amount of chromatic dispersion of the blue channel. Defaults to 0 (none).\n\t */\n\tpublic get dispersionB():number\n\t{\n\t\treturn this._dispersionB;\n\t}\n\n\tpublic set dispersionB(value:number)\n\t{\n\t\tthis._dispersionB = value;\n\n\t\tvar useDispersion:boolean = !(this._dispersionR == this._dispersionB && this._dispersionR == this._dispersionG);\n\t\tif (this._useDispersion != useDispersion) {\n\t\t\tthis.iInvalidateShaderProgram();\n\t\t\tthis._useDispersion = useDispersion;\n\t\t}\n\t}\n\n\t/**\n\t * The amount of transparency of the object. Warning: the alpha applies to the refracted color, not the actual\n\t * material. A value of 1 will make it appear fully transparent.\n\t */\n\tpublic get alpha():number\n\t{\n\t\treturn this._alpha;\n\t}\n\n\tpublic set alpha(value:number)\n\t{\n\t\tthis._alpha = value;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iActivate(shaderObject:ShaderObjectBase, methodVO:MethodVO, stage:Stage)\n\t{\n\t\tvar index:number /*int*/ = methodVO.fragmentConstantsIndex;\n\t\tvar data:Array<number> = shaderObject.fragmentConstantData;\n\n\t\tdata[index] = this._dispersionR + this._refractionIndex;\n\n\t\tif (this._useDispersion) {\n\t\t\tdata[index + 1] = this._dispersionG + this._refractionIndex;\n\t\t\tdata[index + 2] = this._dispersionB + this._refractionIndex;\n\t\t}\n\t\tdata[index + 3] = this._alpha;\n\n\t\tstage.activateCubeTexture(methodVO.texturesIndex, this._envMap, shaderObject.useSmoothTextures, shaderObject.useMipmapping);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iGetFragmentCode(shaderObject:ShaderObjectBase, methodVO:MethodVO, targetReg:ShaderRegisterElement, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\t// todo: data2.x could use common reg, so only 1 reg is used\n\t\tvar data:ShaderRegisterElement = registerCache.getFreeFragmentConstant();\n\t\tvar data2:ShaderRegisterElement = registerCache.getFreeFragmentConstant();\n\t\tvar code:string = \"\";\n\t\tvar cubeMapReg:ShaderRegisterElement = registerCache.getFreeTextureReg();\n\t\tvar refractionDir:ShaderRegisterElement;\n\t\tvar refractionColor:ShaderRegisterElement;\n\t\tvar temp:ShaderRegisterElement;\n\n\t\tmethodVO.texturesIndex = cubeMapReg.index;\n\t\tmethodVO.fragmentConstantsIndex = data.index*4;\n\n\t\trefractionDir = registerCache.getFreeFragmentVectorTemp();\n\t\tregisterCache.addFragmentTempUsages(refractionDir, 1);\n\t\trefractionColor = registerCache.getFreeFragmentVectorTemp();\n\t\tregisterCache.addFragmentTempUsages(refractionColor, 1);\n\n\t\ttemp = registerCache.getFreeFragmentVectorTemp();\n\n\t\tvar viewDirReg:ShaderRegisterElement = sharedRegisters.viewDirFragment;\n\t\tvar normalReg:ShaderRegisterElement = sharedRegisters.normalFragment;\n\n\t\tcode += \"neg \" + viewDirReg + \".xyz, \" + viewDirReg + \".xyz\\n\";\n\n\t\tcode += \"dp3 \" + temp + \".x, \" + viewDirReg + \".xyz, \" + normalReg + \".xyz\\n\" +\n\t\t\t\"mul \" + temp + \".w, \" + temp + \".x, \" + temp + \".x\\n\" +\n\t\t\t\"sub \" + temp + \".w, \" + data2 + \".x, \" + temp + \".w\\n\" +\n\t\t\t\"mul \" + temp + \".w, \" + data + \".x, \" + temp + \".w\\n\" +\n\t\t\t\"mul \" + temp + \".w, \" + data + \".x, \" + temp + \".w\\n\" +\n\t\t\t\"sub \" + temp + \".w, \" + data2 + \".x, \" + temp + \".w\\n\" +\n\t\t\t\"sqt \" + temp + \".y, \" + temp + \".w\\n\" +\n\n\t\t\t\"mul \" + temp + \".x, \" + data + \".x, \" + temp + \".x\\n\" +\n\t\t\t\"add \" + temp + \".x, \" + temp + \".x, \" + temp + \".y\\n\" +\n\t\t\t\"mul \" + temp + \".xyz, \" + temp + \".x, \" + normalReg + \".xyz\\n\" +\n\n\t\t\t\"mul \" + refractionDir + \", \" + data + \".x, \" + viewDirReg + \"\\n\" +\n\t\t\t\"sub \" + refractionDir + \".xyz, \" + refractionDir + \".xyz, \" + temp + \".xyz\\n\" +\n\t\t\t\"nrm \" + refractionDir + \".xyz, \" + refractionDir + \".xyz\\n\";\n\t\tcode += ShaderCompilerHelper.getTexCubeSampleCode(refractionColor, cubeMapReg, this._envMap, shaderObject.useSmoothTextures, shaderObject.useMipmapping, refractionDir) +\n\t\t\t\"sub \" + refractionColor + \".w, \" + refractionColor + \".w, fc0.x\t\\n\" +\n\t\t\t\"kil \" + refractionColor + \".w\\n\";\n\n\t\tif (this._useDispersion) {\n\t\t\t// GREEN\n\t\t\tcode += \"dp3 \" + temp + \".x, \" + viewDirReg + \".xyz, \" + normalReg + \".xyz\\n\" +\n\t\t\t\t\"mul \" + temp + \".w, \" + temp + \".x, \" + temp + \".x\\n\" +\n\t\t\t\t\"sub \" + temp + \".w, \" + data2 + \".x, \" + temp + \".w\\n\" +\n\t\t\t\t\"mul \" + temp + \".w, \" + data + \".y, \" + temp + \".w\\n\" +\n\t\t\t\t\"mul \" + temp + \".w, \" + data + \".y, \" + temp + \".w\\n\" +\n\t\t\t\t\"sub \" + temp + \".w, \" + data2 + \".x, \" + temp + \".w\\n\" +\n\t\t\t\t\"sqt \" + temp + \".y, \" + temp + \".w\\n\" +\n\n\t\t\t\t\"mul \" + temp + \".x, \" + data + \".y, \" + temp + \".x\\n\" +\n\t\t\t\t\"add \" + temp + \".x, \" + temp + \".x, \" + temp + \".y\\n\" +\n\t\t\t\t\"mul \" + temp + \".xyz, \" + temp + \".x, \" + normalReg + \".xyz\\n\" +\n\n\t\t\t\t\"mul \" + refractionDir + \", \" + data + \".y, \" + viewDirReg + \"\\n\" +\n\t\t\t\t\"sub \" + refractionDir + \".xyz, \" + refractionDir + \".xyz, \" + temp + \".xyz\\n\" +\n\t\t\t\t\"nrm \" + refractionDir + \".xyz, \" + refractionDir + \".xyz\\n\";\n\t\t\tcode += ShaderCompilerHelper.getTexCubeSampleCode(temp, cubeMapReg, this._envMap, shaderObject.useSmoothTextures, shaderObject.useMipmapping, refractionDir) +\n\t\t\t\t\"mov \" + refractionColor + \".y, \" + temp + \".y\\n\";\n\n\t\t\t// BLUE\n\t\t\tcode += \"dp3 \" + temp + \".x, \" + viewDirReg + \".xyz, \" + normalReg + \".xyz\\n\" +\n\t\t\t\t\"mul \" + temp + \".w, \" + temp + \".x, \" + temp + \".x\\n\" +\n\t\t\t\t\"sub \" + temp + \".w, \" + data2 + \".x, \" + temp + \".w\\n\" +\n\t\t\t\t\"mul \" + temp + \".w, \" + data + \".z, \" + temp + \".w\\n\" +\n\t\t\t\t\"mul \" + temp + \".w, \" + data + \".z, \" + temp + \".w\\n\" +\n\t\t\t\t\"sub \" + temp + \".w, \" + data2 + \".x, \" + temp + \".w\\n\" +\n\t\t\t\t\"sqt \" + temp + \".y, \" + temp + \".w\\n\" +\n\n\t\t\t\t\"mul \" + temp + \".x, \" + data + \".z, \" + temp + \".x\\n\" +\n\t\t\t\t\"add \" + temp + \".x, \" + temp + \".x, \" + temp + \".y\\n\" +\n\t\t\t\t\"mul \" + temp + \".xyz, \" + temp + \".x, \" + normalReg + \".xyz\\n\" +\n\n\t\t\t\t\"mul \" + refractionDir + \", \" + data + \".z, \" + viewDirReg + \"\\n\" +\n\t\t\t\t\"sub \" + refractionDir + \".xyz, \" + refractionDir + \".xyz, \" + temp + \".xyz\\n\" +\n\t\t\t\t\"nrm \" + refractionDir + \".xyz, \" + refractionDir + \".xyz\\n\";\n\t\t\tcode += ShaderCompilerHelper.getTexCubeSampleCode(temp, cubeMapReg, this._envMap, shaderObject.useSmoothTextures, shaderObject.useMipmapping, refractionDir) +\n\t\t\t\t\"mov \" + refractionColor + \".z, \" + temp + \".z\\n\";\n\t\t}\n\n\t\tregisterCache.removeFragmentTempUsage(refractionDir);\n\n\t\tcode += \"sub \" + refractionColor + \".xyz, \" + refractionColor + \".xyz, \" + targetReg + \".xyz\\n\" +\n\t\t\t\"mul \" + refractionColor + \".xyz, \" + refractionColor + \".xyz, \" + data + \".w\\n\" +\n\t\t\t\"add \" + targetReg + \".xyz, \" + targetReg + \".xyz, \" + refractionColor + \".xyz\\n\";\n\n\t\tregisterCache.removeFragmentTempUsage(refractionColor);\n\n\t\t// restore\n\t\tcode += \"neg \" + viewDirReg + \".xyz, \" + viewDirReg + \".xyz\\n\";\n\n\t\treturn code;\n\t}\n}\n\nexport = EffectRefractionEnvMapMethod;",
    "import Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport ShaderObjectBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderObjectBase\");\nimport ShaderRegisterCache\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterData\");\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterElement\");\n\nimport MethodVO\t\t\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/data/MethodVO\");\nimport EffectMethodBase\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/EffectMethodBase\");\n\n/**\n * EffectRimLightMethod provides a method to add rim lighting to a material. This adds a glow-like effect to edges of objects.\n */\nclass EffectRimLightMethod extends EffectMethodBase\n{\n\tpublic static ADD:string = \"add\";\n\tpublic static MULTIPLY:string = \"multiply\";\n\tpublic static MIX:string = \"mix\";\n\n\tprivate _color:number /*uint*/;\n\tprivate _blendMode:string;\n\tprivate _colorR:number;\n\tprivate _colorG:number;\n\tprivate _colorB:number;\n\tprivate _strength:number;\n\tprivate _power:number;\n\n\t/**\n\t * Creates a new <code>EffectRimLightMethod</code> object.\n\t *\n\t * @param color The colour of the rim light.\n\t * @param strength The strength of the rim light.\n\t * @param power The power of the rim light. Higher values will result in a higher edge fall-off.\n\t * @param blend The blend mode with which to add the light to the object.\n\t */\n\tconstructor(color:number /*uint*/ = 0xffffff, strength:number = .4, power:number = 2, blend:string = \"mix\")\n\t{\n\t\tsuper();\n\n\t\tthis._blendMode = blend;\n\t\tthis._strength = strength;\n\t\tthis._power = power;\n\n\t\tthis.color = color;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iInitConstants(shaderObject:ShaderObjectBase, methodVO:MethodVO)\n\t{\n\t\tshaderObject.fragmentConstantData[methodVO.fragmentConstantsIndex + 3] = 1;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iInitVO(shaderObject:ShaderObjectBase, methodVO:MethodVO)\n\t{\n\t\tmethodVO.needsNormals = true;\n\t\tmethodVO.needsView = true;\n\t}\n\n\n\t/**\n\t * The blend mode with which to add the light to the object.\n\t *\n\t * EffectRimLightMethod.MULTIPLY multiplies the rim light with the material's colour.\n\t * EffectRimLightMethod.ADD adds the rim light with the material's colour.\n\t * EffectRimLightMethod.MIX provides normal alpha blending.\n\t */\n\tpublic get blendMode():string\n\t{\n\t\treturn this._blendMode;\n\t}\n\n\tpublic set blendMode(value:string)\n\t{\n\t\tif (this._blendMode == value)\n\t\t\treturn;\n\n\t\tthis._blendMode = value;\n\n\t\tthis.iInvalidateShaderProgram();\n\t}\n\n\t/**\n\t * The color of the rim light.\n\t */\n\tpublic get color():number /*uint*/\n\t{\n\t\treturn this._color;\n\t}\n\n\tpublic set color(value:number /*uint*/)\n\t{\n\t\tthis._color = value;\n\t\tthis._colorR = ((value >> 16) & 0xff)/0xff;\n\t\tthis._colorG = ((value >> 8) & 0xff)/0xff;\n\t\tthis._colorB = (value & 0xff)/0xff;\n\t}\n\n\t/**\n\t * The strength of the rim light.\n\t */\n\tpublic get strength():number\n\t{\n\t\treturn this._strength;\n\t}\n\n\tpublic set strength(value:number)\n\t{\n\t\tthis._strength = value;\n\t}\n\n\t/**\n\t * The power of the rim light. Higher values will result in a higher edge fall-off.\n\t */\n\tpublic get power():number\n\t{\n\t\treturn this._power;\n\t}\n\n\tpublic set power(value:number)\n\t{\n\t\tthis._power = value;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iActivate(shaderObject:ShaderObjectBase, methodVO:MethodVO, stage:Stage)\n\t{\n\t\tvar index:number /*int*/ = methodVO.fragmentConstantsIndex;\n\t\tvar data:Array<number> = shaderObject.fragmentConstantData;\n\t\tdata[index] = this._colorR;\n\t\tdata[index + 1] = this._colorG;\n\t\tdata[index + 2] = this._colorB;\n\t\tdata[index + 4] = this._strength;\n\t\tdata[index + 5] = this._power;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iGetFragmentCode(shaderObject:ShaderObjectBase, methodVO:MethodVO, targetReg:ShaderRegisterElement, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tvar dataRegister:ShaderRegisterElement = registerCache.getFreeFragmentConstant();\n\t\tvar dataRegister2:ShaderRegisterElement = registerCache.getFreeFragmentConstant();\n\t\tvar temp:ShaderRegisterElement = registerCache.getFreeFragmentVectorTemp();\n\t\tvar code:string = \"\";\n\n\t\tmethodVO.fragmentConstantsIndex = dataRegister.index*4;\n\n\t\tcode += \"dp3 \" + temp + \".x, \" + sharedRegisters.viewDirFragment + \".xyz, \" + sharedRegisters.normalFragment + \".xyz\\n\" +\n\t\t\t\"sat \" + temp + \".x, \" + temp + \".x\\n\" +\n\t\t\t\"sub \" + temp + \".x, \" + dataRegister + \".w, \" + temp + \".x\\n\" +\n\t\t\t\"pow \" + temp + \".x, \" + temp + \".x, \" + dataRegister2 + \".y\\n\" +\n\t\t\t\"mul \" + temp + \".x, \" + temp + \".x, \" + dataRegister2 + \".x\\n\" +\n\t\t\t\"sub \" + temp + \".x, \" + dataRegister + \".w, \" + temp + \".x\\n\" +\n\t\t\t\"mul \" + targetReg + \".xyz, \" + targetReg + \".xyz, \" + temp + \".x\\n\" +\n\t\t\t\"sub \" + temp + \".w, \" + dataRegister + \".w, \" + temp + \".x\\n\";\n\n\t\tif (this._blendMode == EffectRimLightMethod.ADD) {\n\t\t\tcode += \"mul \" + temp + \".xyz, \" + temp + \".w, \" + dataRegister + \".xyz\\n\" +\n\t\t\t\t\"add \" + targetReg + \".xyz, \" + targetReg + \".xyz, \" + temp + \".xyz\\n\";\n\t\t} else if (this._blendMode == EffectRimLightMethod.MULTIPLY) {\n\t\t\tcode += \"mul \" + temp + \".xyz, \" + temp + \".w, \" + dataRegister + \".xyz\\n\" +\n\t\t\t\t\"mul \" + targetReg + \".xyz, \" + targetReg + \".xyz, \" + temp + \".xyz\\n\";\n\t\t} else {\n\t\t\tcode += \"sub \" + temp + \".xyz, \" + dataRegister + \".xyz, \" + targetReg + \".xyz\\n\" +\n\t\t\t\t\"mul \" + temp + \".xyz, \" + temp + \".xyz, \" + temp + \".w\\n\" +\n\t\t\t\t\"add \" + targetReg + \".xyz, \" + targetReg + \".xyz, \" + temp + \".xyz\\n\";\n\t\t}\n\n\t\treturn code;\n\t}\n}\n\nexport = EffectRimLightMethod;",
    "import ShaderObjectBase\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderObjectBase\");\nimport ShaderLightingObject\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderLightingObject\");\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterData\");\nimport ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterElement\");\n\nimport MethodVO\t\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/data/MethodVO\");\nimport ShadingMethodBase\t\t\t= require(\"awayjs-methodmaterials/lib/methods/ShadingMethodBase\");\n\n/**\n * LightingMethodBase provides an abstract base method for shading methods that uses lights.\n * Used for diffuse and specular shaders only.\n */\nclass LightingMethodBase extends ShadingMethodBase\n{\n\t/**\n\t * A method that is exposed to wrappers in case the strength needs to be controlled\n\t */\n\tpublic _iModulateMethod:(shaderObject:ShaderObjectBase, methodVO:MethodVO, targetReg:ShaderRegisterElement, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData) => string;\n\n\t/**\n\t * Creates a new LightingMethodBase.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t * Get the fragment shader code that will be needed before any per-light code is added.\n\t * @param methodVO The MethodVO object containing the method data for the currently compiled material pass.\n\t * @param regCache The register cache used during the compilation.\n\t * @private\n\t */\n\tpublic iGetFragmentPreLightingCode(shaderObject:ShaderLightingObject, methodVO:MethodVO, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"\";\n\t}\n\n\t/**\n\t * Get the fragment shader code that will generate the code relevant to a single light.\n\t *\n\t * @param methodVO The MethodVO object containing the method data for the currently compiled material pass.\n\t * @param lightDirReg The register containing the light direction vector.\n\t * @param lightColReg The register containing the light colour.\n\t * @param regCache The register cache used during the compilation.\n\t */\n\tpublic iGetFragmentCodePerLight(shaderObject:ShaderLightingObject, methodVO:MethodVO, lightDirReg:ShaderRegisterElement, lightColReg:ShaderRegisterElement, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"\";\n\t}\n\n\t/**\n\t * Get the fragment shader code that will generate the code relevant to a single light probe object.\n\t *\n\t * @param methodVO The MethodVO object containing the method data for the currently compiled material pass.\n\t * @param cubeMapReg The register containing the cube map for the current probe\n\t * @param weightRegister A string representation of the register + component containing the current weight\n\t * @param regCache The register cache providing any necessary registers to the shader\n\t */\n\tpublic iGetFragmentCodePerProbe(shaderObject:ShaderLightingObject, methodVO:MethodVO, cubeMapReg:ShaderRegisterElement, weightRegister:string, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"\";\n\t}\n\n\t/**\n\t * Get the fragment shader code that should be added after all per-light code. Usually composits everything to the target register.\n\t *\n\t * @param methodVO The MethodVO object containing the method data for the currently compiled material pass.\n\t * @param regCache The register cache used during the compilation.\n\t * @param targetReg The register containing the final shading output.\n\t * @private\n\t */\n\tpublic iGetFragmentPostLightingCode(shaderObject:ShaderLightingObject, methodVO:MethodVO, targetReg:ShaderRegisterElement, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"\";\n\t}\n}\n\nexport = LightingMethodBase;",
    "import Texture2DBase\t\t\t\t= require(\"awayjs-core/lib/textures/Texture2DBase\");\n\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport ShaderObjectBase\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderObjectBase\");\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterData\");\nimport ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterElement\");\nimport ShaderCompilerHelper\t\t\t= require(\"awayjs-renderergl/lib/utils/ShaderCompilerHelper\");\n\nimport MethodVO\t\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/data/MethodVO\");\nimport ShadingMethodBase\t\t\t= require(\"awayjs-methodmaterials/lib/methods/ShadingMethodBase\");\n\n/**\n * NormalBasicMethod is the default method for standard tangent-space normal mapping.\n */\nclass NormalBasicMethod extends ShadingMethodBase\n{\n\tprivate _texture:Texture2DBase;\n\tprivate _useTexture:boolean;\n\tpublic _pNormalTextureRegister:ShaderRegisterElement;\n\n\t/**\n\t * Creates a new NormalBasicMethod object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\tpublic iIsUsed(shaderObject:ShaderObjectBase):boolean\n\t{\n\t\tif (!this._useTexture || !shaderObject.normalDependencies)\n\t\t\treturn false;\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iInitVO(shaderObject:ShaderObjectBase, methodVO:MethodVO)\n\t{\n\t\tmethodVO.needsUV = this._useTexture;\n\t}\n\n\t/**\n\t * Indicates whether or not this method outputs normals in tangent space. Override for object-space normals.\n\t */\n\tpublic iOutputsTangentNormals():boolean\n\t{\n\t\treturn true;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic copyFrom(method:ShadingMethodBase)\n\t{\n\t\tvar s:any = method;\n\t\tvar bnm:NormalBasicMethod = <NormalBasicMethod> method;\n\n\t\tif (bnm.normalMap != null)\n\t\t\tthis.normalMap = bnm.normalMap;\n\t}\n\n\t/**\n\t * The texture containing the normals per pixel.\n\t */\n\tpublic get normalMap():Texture2DBase\n\t{\n\t\treturn this._texture;\n\t}\n\n\tpublic set normalMap(value:Texture2DBase)\n\t{\n\t\tvar b:boolean = (value != null);\n\n\t\tif (b != this._useTexture || (value && this._texture && (value.format != this._texture.format)))\n\t\t\tthis.iInvalidateShaderProgram();\n\n\t\tthis._useTexture = b;\n\t\tthis._texture = value;\n\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iCleanCompilationData()\n\t{\n\t\tsuper.iCleanCompilationData();\n\t\tthis._pNormalTextureRegister = null;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic dispose()\n\t{\n\t\tif (this._texture)\n\t\t\tthis._texture = null;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iActivate(shaderObject:ShaderObjectBase, methodVO:MethodVO, stage:Stage)\n\t{\n\t\tif (methodVO.texturesIndex >= 0)\n\t\t\tstage.activateTexture(methodVO.texturesIndex, this._texture, shaderObject.repeatTextures, shaderObject.useSmoothTextures, shaderObject.useMipmapping);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iGetFragmentCode(shaderObject:ShaderObjectBase, methodVO:MethodVO, targetReg:ShaderRegisterElement, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tthis._pNormalTextureRegister = registerCache.getFreeTextureReg();\n\n\t\tmethodVO.texturesIndex = this._pNormalTextureRegister.index;\n\n\t\treturn ShaderCompilerHelper.getTex2DSampleCode(targetReg, sharedRegisters, this._pNormalTextureRegister, this._texture, shaderObject.useSmoothTextures, shaderObject.repeatTextures, shaderObject.useMipmapping) +\n\t\t\t\"sub \" + targetReg + \".xyz, \" + targetReg + \".xyz, \" + sharedRegisters.commons + \".xxx\\n\" +\n\t\t\t\"nrm \" + targetReg + \".xyz, \" + targetReg + \"\\n\";\n\t}\n}\n\nexport = NormalBasicMethod;",
    "import Texture2DBase\t\t\t\t\t= require(\"awayjs-core/lib/textures/Texture2DBase\");\n\nimport ShaderObjectBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderObjectBase\");\nimport ShaderRegisterCache\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterData\");\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterElement\");\nimport ShaderCompilerHelper\t\t\t\t= require(\"awayjs-renderergl/lib/utils/ShaderCompilerHelper\");\n\nimport MethodVO\t\t\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/data/MethodVO\");\nimport NormalBasicMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/NormalBasicMethod\");\nimport ShadingMethodBase\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/ShadingMethodBase\");\n\n/**\n * NormalHeightMapMethod provides a normal map method that uses a height map to calculate the normals.\n */\nclass NormalHeightMapMethod extends NormalBasicMethod\n{\n\tprivate _worldXYRatio:number;\n\tprivate _worldXZRatio:number;\n\n\t/**\n\t * Creates a new NormalHeightMapMethod method.\n\t *\n\t * @param heightMap The texture containing the height data. 0 means low, 1 means high.\n\t * @param worldWidth The width of the 'world'. This is used to map uv coordinates' u component to scene dimensions.\n\t * @param worldHeight The height of the 'world'. This is used to map the height map values to scene dimensions.\n\t * @param worldDepth The depth of the 'world'. This is used to map uv coordinates' v component to scene dimensions.\n\t */\n\tconstructor(heightMap:Texture2DBase, worldWidth:number, worldHeight:number, worldDepth:number)\n\t{\n\t\tsuper();\n\n\t\tthis.normalMap = heightMap;\n\t\tthis._worldXYRatio = worldWidth/worldHeight;\n\t\tthis._worldXZRatio = worldDepth/worldHeight;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iInitConstants(shaderObject:ShaderObjectBase, methodVO:MethodVO)\n\t{\n\t\tvar index:number /*int*/ = methodVO.fragmentConstantsIndex;\n\t\tvar data:Array<number> = shaderObject.fragmentConstantData;\n\t\tdata[index] = 1/this.normalMap.width;\n\t\tdata[index + 1] = 1/this.normalMap.height;\n\t\tdata[index + 2] = 0;\n\t\tdata[index + 3] = 1;\n\t\tdata[index + 4] = this._worldXYRatio;\n\t\tdata[index + 5] = this._worldXZRatio;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get tangentSpace():boolean\n\t{\n\t\treturn false;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic copyFrom(method:ShadingMethodBase)\n\t{\n\t\tsuper.copyFrom(method);\n\n\t\tthis._worldXYRatio = (<NormalHeightMapMethod> method)._worldXYRatio;\n\t\tthis._worldXZRatio = (<NormalHeightMapMethod> method)._worldXZRatio;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iGetFragmentCode(shaderObject:ShaderObjectBase, methodVO:MethodVO, targetReg:ShaderRegisterElement, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tvar temp:ShaderRegisterElement = registerCache.getFreeFragmentVectorTemp();\n\t\tvar dataReg:ShaderRegisterElement = registerCache.getFreeFragmentConstant();\n\t\tvar dataReg2:ShaderRegisterElement = registerCache.getFreeFragmentConstant();\n\t\tthis._pNormalTextureRegister = registerCache.getFreeTextureReg();\n\t\tmethodVO.texturesIndex = this._pNormalTextureRegister.index;\n\t\tmethodVO.fragmentConstantsIndex = dataReg.index*4;\n\n\t\treturn ShaderCompilerHelper.getTex2DSampleCode(targetReg, sharedRegisters, this._pNormalTextureRegister, this.normalMap, shaderObject.useSmoothTextures, shaderObject.repeatTextures, shaderObject.useMipmapping, sharedRegisters.uvVarying, \"clamp\") +\n\n\t\t\t\"add \" + temp + \", \" + sharedRegisters.uvVarying + \", \" + dataReg + \".xzzz\\n\" +\n\n\t\t\tShaderCompilerHelper.getTex2DSampleCode(temp, sharedRegisters, this._pNormalTextureRegister, this.normalMap, shaderObject.useSmoothTextures, shaderObject.repeatTextures, shaderObject.useMipmapping, temp, \"clamp\") +\n\n\t\t\t\"sub \" + targetReg + \".x, \" + targetReg + \".x, \" + temp + \".x\\n\" +\n\t\t\t\"add \" + temp + \", \" + sharedRegisters.uvVarying + \", \" + dataReg + \".zyzz\\n\" +\n\n\t\t\tShaderCompilerHelper.getTex2DSampleCode(temp, sharedRegisters, this._pNormalTextureRegister, this.normalMap, shaderObject.useSmoothTextures, shaderObject.repeatTextures, shaderObject.useMipmapping, temp, \"clamp\") +\n\n\t\t\t\"sub \" + targetReg + \".z, \" + targetReg + \".z, \" + temp + \".x\\n\" +\n\t\t\t\"mov \" + targetReg + \".y, \" + dataReg + \".w\\n\" +\n\t\t\t\"mul \" + targetReg + \".xz, \" + targetReg + \".xz, \" + dataReg2 + \".xy\\n\" +\n\t\t\t\"nrm \" + targetReg + \".xyz, \" + targetReg + \".xyz\\n\";\n\t}\n}\n\nexport = NormalHeightMapMethod;",
    "import Texture2DBase\t\t\t\t\t= require(\"awayjs-core/lib/textures/Texture2DBase\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport ShaderObjectBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderObjectBase\");\nimport ShaderRegisterCache\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterData\");\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterElement\");\nimport ShaderCompilerHelper\t\t\t\t= require(\"awayjs-renderergl/lib/utils/ShaderCompilerHelper\");\n\nimport MethodVO\t\t\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/data/MethodVO\");\nimport NormalBasicMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/NormalBasicMethod\");\n\n/**\n * NormalSimpleWaterMethod provides a basic normal map method to create water ripples by translating two wave normal maps.\n */\nclass NormalSimpleWaterMethod extends NormalBasicMethod\n{\n\tprivate _texture2:Texture2DBase;\n\tprivate _normalTextureRegister2:ShaderRegisterElement;\n\tprivate _useSecondNormalMap:boolean = false;\n\tprivate _water1OffsetX:number = 0;\n\tprivate _water1OffsetY:number = 0;\n\tprivate _water2OffsetX:number = 0;\n\tprivate _water2OffsetY:number = 0;\n\n\t/**\n\t * Creates a new NormalSimpleWaterMethod object.\n\t * @param waveMap1 A normal map containing one layer of a wave structure.\n\t * @param waveMap2 A normal map containing a second layer of a wave structure.\n\t */\n\tconstructor(waveMap1:Texture2DBase, waveMap2:Texture2DBase)\n\t{\n\t\tsuper();\n\t\tthis.normalMap = waveMap1;\n\t\tthis.secondaryNormalMap = waveMap2;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iInitConstants(shaderObject:ShaderObjectBase, methodVO:MethodVO)\n\t{\n\t\tvar index:number = methodVO.fragmentConstantsIndex;\n\t\tvar data:Array<number> = shaderObject.fragmentConstantData;\n\t\tdata[index] = .5;\n\t\tdata[index + 1] = 0;\n\t\tdata[index + 2] = 0;\n\t\tdata[index + 3] = 1;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iInitVO(shaderObject:ShaderObjectBase, methodVO:MethodVO)\n\t{\n\t\tsuper.iInitVO(shaderObject, methodVO);\n\n\t\tthis._useSecondNormalMap = this.normalMap != this.secondaryNormalMap;\n\t}\n\n\t/**\n\t * The translation of the first wave layer along the X-axis.\n\t */\n\tpublic get water1OffsetX():number\n\t{\n\t\treturn this._water1OffsetX;\n\t}\n\n\tpublic set water1OffsetX(value:number)\n\t{\n\t\tthis._water1OffsetX = value;\n\t}\n\n\t/**\n\t * The translation of the first wave layer along the Y-axis.\n\t */\n\tpublic get water1OffsetY():number\n\t{\n\t\treturn this._water1OffsetY;\n\t}\n\n\tpublic set water1OffsetY(value:number)\n\t{\n\t\tthis._water1OffsetY = value;\n\t}\n\n\t/**\n\t * The translation of the second wave layer along the X-axis.\n\t */\n\tpublic get water2OffsetX():number\n\t{\n\t\treturn this._water2OffsetX;\n\t}\n\n\tpublic set water2OffsetX(value:number)\n\t{\n\t\tthis._water2OffsetX = value;\n\t}\n\n\t/**\n\t * The translation of the second wave layer along the Y-axis.\n\t */\n\tpublic get water2OffsetY():number\n\t{\n\t\treturn this._water2OffsetY;\n\t}\n\n\tpublic set water2OffsetY(value:number)\n\t{\n\t\tthis._water2OffsetY = value;\n\t}\n\n\t/**\n\t * A second normal map that will be combined with the first to create a wave-like animation pattern.\n\t */\n\tpublic get secondaryNormalMap():Texture2DBase\n\t{\n\t\treturn this._texture2;\n\t}\n\n\tpublic set secondaryNormalMap(value:Texture2DBase)\n\t{\n\t\tthis._texture2 = value;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iCleanCompilationData()\n\t{\n\t\tsuper.iCleanCompilationData();\n\t\tthis._normalTextureRegister2 = null;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\t\tthis._texture2 = null;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iActivate(shaderObject:ShaderObjectBase, methodVO:MethodVO, stage:Stage)\n\t{\n\t\tsuper.iActivate(shaderObject, methodVO, stage);\n\n\t\tvar data:Array<number> = shaderObject.fragmentConstantData;\n\t\tvar index:number = methodVO.fragmentConstantsIndex;\n\n\t\tdata[index + 4] = this._water1OffsetX;\n\t\tdata[index + 5] = this._water1OffsetY;\n\t\tdata[index + 6] = this._water2OffsetX;\n\t\tdata[index + 7] = this._water2OffsetY;\n\n\t\t//if (this._useSecondNormalMap >= 0)\n\t\tif (this._useSecondNormalMap)\n\t\t\tstage.activateTexture(methodVO.texturesIndex + 1, this._texture2, shaderObject.repeatTextures, shaderObject.useSmoothTextures, shaderObject.useMipmapping);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iGetFragmentCode(shaderObject:ShaderObjectBase, methodVO:MethodVO, targetReg:ShaderRegisterElement, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tvar temp:ShaderRegisterElement = registerCache.getFreeFragmentVectorTemp();\n\t\tvar dataReg:ShaderRegisterElement = registerCache.getFreeFragmentConstant();\n\t\tvar dataReg2:ShaderRegisterElement = registerCache.getFreeFragmentConstant();\n\t\tthis._pNormalTextureRegister = registerCache.getFreeTextureReg();\n\t\tthis._normalTextureRegister2 = this._useSecondNormalMap? registerCache.getFreeTextureReg():this._pNormalTextureRegister;\n\t\tmethodVO.texturesIndex = this._pNormalTextureRegister.index;\n\n\t\tmethodVO.fragmentConstantsIndex = dataReg.index*4;\n\n\t\treturn \"add \" + temp + \", \" + sharedRegisters.uvVarying + \", \" + dataReg2 + \".xyxy\\n\" +\n\t\t\tShaderCompilerHelper.getTex2DSampleCode(targetReg, sharedRegisters, this._pNormalTextureRegister, this.normalMap, shaderObject.useSmoothTextures, shaderObject.repeatTextures, shaderObject.useMipmapping, temp) +\n\t\t\t\"add \" + temp + \", \" + sharedRegisters.uvVarying + \", \" + dataReg2 + \".zwzw\\n\" +\n\t\t\tShaderCompilerHelper.getTex2DSampleCode(temp, sharedRegisters, this._normalTextureRegister2, this._texture2, shaderObject.useSmoothTextures, shaderObject.repeatTextures, shaderObject.useMipmapping, temp) +\n\t\t\t\"add \" + targetReg + \", \" + targetReg + \", \" + temp + \"\t\t\\n\" +\n\t\t\t\"mul \" + targetReg + \", \" + targetReg + \", \" + dataReg + \".x\t\\n\" +\n\t\t\t\"sub \" + targetReg + \".xyz, \" + targetReg + \".xyz, \" + sharedRegisters.commons + \".xxx\t\\n\" +\n\t\t\t\"nrm \" + targetReg + \".xyz, \" + targetReg + \".xyz\t\t\t\t\t\t\t\\n\";\n\t}\n}\n\nexport = NormalSimpleWaterMethod;",
    "import AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\n\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\n\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport RenderableBase\t\t\t\t= require(\"awayjs-renderergl/lib/pool/RenderableBase\");\nimport ShadingMethodEvent\t\t\t= require(\"awayjs-renderergl/lib/events/ShadingMethodEvent\");\nimport ShaderObjectBase\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderObjectBase\");\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterData\");\nimport ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterElement\");\n\nimport MethodVO\t\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/data/MethodVO\");\n\n\n/**\n * ShadingMethodBase provides an abstract base method for shading methods, used by compiled passes to compile\n * the final shading program.\n */\nclass ShadingMethodBase extends AssetBase\n{\n\tpublic static assetType:string = \"[asset ShadingMethod]\";\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn ShadingMethodBase.assetType;\n\t}\n\n\t/**\n\t * Create a new ShadingMethodBase object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\tpublic iIsUsed(shaderObject:ShaderObjectBase):boolean\n\t{\n\t\treturn true;\n\t}\n\n\t/**\n\t * Initializes the properties for a MethodVO, including register and texture indices.\n\t *\n\t * @param methodVO The MethodVO object linking this method with the pass currently being compiled.\n\t *\n\t * @internal\n\t */\n\tpublic iInitVO(shaderObject:ShaderObjectBase, methodVO:MethodVO)\n\t{\n\n\t}\n\n\t/**\n\t * Initializes unchanging shader constants using the data from a MethodVO.\n\t *\n\t * @param methodVO The MethodVO object linking this method with the pass currently being compiled.\n\t *\n\t * @internal\n\t */\n\tpublic iInitConstants(shaderObject:ShaderObjectBase, methodVO:MethodVO)\n\t{\n\n\n\t}\n\n\t/**\n\t * Indicates whether or not this method expects normals in tangent space. Override for object-space normals.\n\t */\n\tpublic iUsesTangentSpace():boolean\n\t{\n\t\treturn true;\n\t}\n\n\t/**\n\t * Cleans up any resources used by the current object.\n\t */\n\tpublic dispose()\n\t{\n\n\t}\n\n\t/**\n\t * Resets the compilation state of the method.\n\t *\n\t * @internal\n\t */\n\tpublic iReset()\n\t{\n\t\tthis.iCleanCompilationData();\n\t}\n\n\t/**\n\t * Resets the method's state for compilation.\n\t *\n\t * @internal\n\t */\n\tpublic iCleanCompilationData()\n\t{\n\t}\n\n\t/**\n\t * Get the vertex shader code for this method.\n\t * @param vo The MethodVO object linking this method with the pass currently being compiled.\n\t * @param regCache The register cache used during the compilation.\n\t *\n\t * @internal\n\t */\n\tpublic iGetVertexCode(shaderObject:ShaderObjectBase, methodVO:MethodVO, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"\";\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iGetFragmentCode(shaderObject:ShaderObjectBase, methodVO:MethodVO, targetReg:ShaderRegisterElement, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn null;\n\t}\n\n\t/**\n\t * Sets the render state for this method.\n\t *\n\t * @param methodVO The MethodVO object linking this method with the pass currently being compiled.\n\t * @param stage The Stage object currently used for rendering.\n\t *\n\t * @internal\n\t */\n\tpublic iActivate(shaderObject:ShaderObjectBase, methodVO:MethodVO, stage:Stage)\n\t{\n\n\t}\n\n\t/**\n\t * Sets the render state for a single renderable.\n\t *\n\t * @param vo The MethodVO object linking this method with the pass currently being compiled.\n\t * @param renderable The renderable currently being rendered.\n\t * @param stage The Stage object currently used for rendering.\n\t * @param camera The camera from which the scene is currently rendered.\n\t *\n\t * @internal\n\t */\n\tpublic iSetRenderState(shaderObject:ShaderObjectBase, methodVO:MethodVO, renderable:RenderableBase, stage:Stage, camera:Camera)\n\t{\n\n\t}\n\n\t/**\n\t * Clears the render state for this method.\n\t * @param vo The MethodVO object linking this method with the pass currently being compiled.\n\t * @param stage The Stage object currently used for rendering.\n\t *\n\t * @internal\n\t */\n\tpublic iDeactivate(shaderObject:ShaderObjectBase, methodVO:MethodVO, stage:Stage)\n\t{\n\n\t}\n\n\t/**\n\t * Marks the shader program as invalid, so it will be recompiled before the next render.\n\t *\n\t * @internal\n\t */\n\tpublic iInvalidateShaderProgram()\n\t{\n\t\tthis.dispatchEvent(new ShadingMethodEvent(ShadingMethodEvent.SHADER_INVALIDATED));\n\t}\n\n\t/**\n\t * Copies the state from a ShadingMethodBase object into the current object.\n\t */\n\tpublic copyFrom(method:ShadingMethodBase)\n\t{\n\t}\n}\n\nexport = ShadingMethodBase;",
    "import Event\t\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\nimport Texture2DBase\t\t\t\t\t= require(\"awayjs-core/lib/textures/Texture2DBase\");\n\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport DirectionalLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\nimport CascadeShadowMapper\t\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/CascadeShadowMapper\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport RenderableBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/pool/RenderableBase\");\nimport ShadingMethodEvent\t\t\t\t= require(\"awayjs-renderergl/lib/events/ShadingMethodEvent\");\nimport ShaderLightingObject\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderLightingObject\");\nimport ShaderObjectBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderObjectBase\");\nimport ShaderRegisterCache\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterData\");\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterElement\");\nimport ShaderCompilerHelper\t\t\t\t= require(\"awayjs-renderergl/lib/utils/ShaderCompilerHelper\");\n\nimport MethodVO\t\t\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/data/MethodVO\");\nimport ShadowMapMethodBase\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/ShadowMapMethodBase\");\nimport ShadowMethodBase\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/ShadowMethodBase\");\n\n/**\n * ShadowCascadeMethod is a shadow map method to apply cascade shadow mapping on materials.\n * Must be used with a DirectionalLight with a CascadeShadowMapper assigned to its shadowMapper property.\n *\n * @see away.lights.CascadeShadowMapper\n */\nclass ShadowCascadeMethod extends ShadowMapMethodBase\n{\n\tprivate _baseMethod:ShadowMethodBase;\n\tprivate _cascadeShadowMapper:CascadeShadowMapper;\n\tprivate _depthMapCoordVaryings:Array<ShaderRegisterElement>;\n\tprivate _cascadeProjections:Array<ShaderRegisterElement>;\n\n\t/**\n\t * Creates a new ShadowCascadeMethod object.\n\t *\n\t * @param shadowMethodBase The shadow map sampling method used to sample individual cascades (fe: ShadowHardMethod, ShadowSoftMethod)\n\t */\n\tconstructor(shadowMethodBase:ShadowMethodBase)\n\t{\n\t\tsuper(shadowMethodBase.castingLight);\n\n\t\tthis._baseMethod = shadowMethodBase;\n\t\tif (!(this._pCastingLight instanceof DirectionalLight))\n\t\t\tthrow new Error(\"ShadowCascadeMethod is only compatible with DirectionalLight\");\n\n\t\tthis._cascadeShadowMapper = <CascadeShadowMapper> this._pCastingLight.shadowMapper;\n\n\t\tif (!this._cascadeShadowMapper)\n\t\t\tthrow new Error(\"ShadowCascadeMethod requires a light that has a CascadeShadowMapper instance assigned to shadowMapper.\");\n\n\t\tthis._cascadeShadowMapper.addEventListener(Event.CHANGE, (event:Event) => this.onCascadeChange(event));\n\t\tthis._baseMethod.addEventListener(ShadingMethodEvent.SHADER_INVALIDATED, (event:ShadingMethodEvent) => this.onShaderInvalidated(event));\n\t}\n\n\t/**\n\t * The shadow map sampling method used to sample individual cascades. These are typically those used in conjunction\n\t * with a DirectionalShadowMapper.\n\t *\n\t * @see ShadowHardMethod\n\t * @see ShadowSoftMethod\n\t */\n\tpublic get baseMethod():ShadowMethodBase\n\t{\n\t\treturn this._baseMethod;\n\t}\n\n\tpublic set baseMethod(value:ShadowMethodBase)\n\t{\n\t\tif (this._baseMethod == value)\n\t\t\treturn;\n\n\t\tthis._baseMethod.removeEventListener(ShadingMethodEvent.SHADER_INVALIDATED, (event:ShadingMethodEvent) => this.onShaderInvalidated(event));\n\n\t\tthis._baseMethod = value;\n\n\t\tthis._baseMethod.addEventListener(ShadingMethodEvent.SHADER_INVALIDATED, (event:ShadingMethodEvent) => this.onShaderInvalidated(event));\n\n\t\tthis.iInvalidateShaderProgram();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iInitVO(shaderObject:ShaderLightingObject, methodVO:MethodVO)\n\t{\n\t\tvar tempVO:MethodVO = new MethodVO(this._baseMethod);\n\t\tthis._baseMethod.iInitVO(shaderObject, tempVO);\n\n\t\tmethodVO.needsGlobalVertexPos = true;\n\t\tmethodVO.needsProjection = true;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iInitConstants(shaderObject:ShaderObjectBase, methodVO:MethodVO)\n\t{\n\t\tvar fragmentData:Array<number> = shaderObject.fragmentConstantData;\n\t\tvar vertexData:Array<number> = shaderObject.vertexConstantData;\n\t\tvar index:number = methodVO.fragmentConstantsIndex;\n\t\tfragmentData[index] = 1.0;\n\t\tfragmentData[index + 1] = 1/255.0;\n\t\tfragmentData[index + 2] = 1/65025.0;\n\t\tfragmentData[index + 3] = 1/16581375.0;\n\n\t\tfragmentData[index + 6] = .5;\n\t\tfragmentData[index + 7] = -.5;\n\n\t\tindex = methodVO.vertexConstantsIndex;\n\t\tvertexData[index] = .5;\n\t\tvertexData[index + 1] = -.5;\n\t\tvertexData[index + 2] = 0;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iCleanCompilationData()\n\t{\n\t\tsuper.iCleanCompilationData();\n\t\tthis._cascadeProjections = null;\n\t\tthis._depthMapCoordVaryings = null;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iGetVertexCode(shaderObject:ShaderObjectBase, methodVO:MethodVO, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tvar code:string = \"\";\n\t\tvar dataReg:ShaderRegisterElement = registerCache.getFreeVertexConstant();\n\n\t\tthis.initProjectionsRegs(registerCache);\n\t\tmethodVO.vertexConstantsIndex = dataReg.index*4;\n\n\t\tvar temp:ShaderRegisterElement = registerCache.getFreeVertexVectorTemp();\n\n\t\tfor (var i:number = 0; i < this._cascadeShadowMapper.numCascades; ++i) {\n\t\t\tcode += \"m44 \" + temp + \", \" + sharedRegisters.globalPositionVertex + \", \" + this._cascadeProjections[i] + \"\\n\" +\n\t\t\t\t\"add \" + this._depthMapCoordVaryings[i] + \", \" + temp + \", \" + dataReg + \".zzwz\\n\";\n\t\t}\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * Creates the registers for the cascades' projection coordinates.\n\t */\n\tprivate initProjectionsRegs(registerCache:ShaderRegisterCache)\n\t{\n\t\tthis._cascadeProjections = new Array<ShaderRegisterElement>(this._cascadeShadowMapper.numCascades);\n\t\tthis._depthMapCoordVaryings = new Array<ShaderRegisterElement>(this._cascadeShadowMapper.numCascades);\n\n\t\tfor (var i:number = 0; i < this._cascadeShadowMapper.numCascades; ++i) {\n\t\t\tthis._depthMapCoordVaryings[i] = registerCache.getFreeVarying();\n\t\t\tthis._cascadeProjections[i] = registerCache.getFreeVertexConstant();\n\t\t\tregisterCache.getFreeVertexConstant();\n\t\t\tregisterCache.getFreeVertexConstant();\n\t\t\tregisterCache.getFreeVertexConstant();\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iGetFragmentCode(shaderObject:ShaderObjectBase, methodVO:MethodVO, targetReg:ShaderRegisterElement, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tvar numCascades:number = this._cascadeShadowMapper.numCascades;\n\t\tvar depthMapRegister:ShaderRegisterElement = registerCache.getFreeTextureReg();\n\t\tvar decReg:ShaderRegisterElement = registerCache.getFreeFragmentConstant();\n\t\tvar dataReg:ShaderRegisterElement = registerCache.getFreeFragmentConstant();\n\t\tvar planeDistanceReg:ShaderRegisterElement = registerCache.getFreeFragmentConstant();\n\t\tvar planeDistances:Array<string> = Array<string>( planeDistanceReg + \".x\", planeDistanceReg + \".y\", planeDistanceReg + \".z\", planeDistanceReg + \".w\" );\n\t\tvar code:string;\n\n\t\tmethodVO.fragmentConstantsIndex = decReg.index*4;\n\t\tmethodVO.texturesIndex = depthMapRegister.index;\n\n\t\tvar inQuad:ShaderRegisterElement = registerCache.getFreeFragmentVectorTemp();\n\t\tregisterCache.addFragmentTempUsages(inQuad, 1);\n\t\tvar uvCoord:ShaderRegisterElement = registerCache.getFreeFragmentVectorTemp();\n\t\tregisterCache.addFragmentTempUsages(uvCoord, 1);\n\n\t\t// assume lowest partition is selected, will be overwritten later otherwise\n\t\tcode = \"mov \" + uvCoord + \", \" + this._depthMapCoordVaryings[numCascades - 1] + \"\\n\";\n\n\t\tfor (var i:number = numCascades - 2; i >= 0; --i) {\n\t\t\tvar uvProjection:ShaderRegisterElement = this._depthMapCoordVaryings[i];\n\n\t\t\t// calculate if in texturemap (result == 0 or 1, only 1 for a single partition)\n\t\t\tcode += \"slt \" + inQuad + \".z, \" + sharedRegisters.projectionFragment + \".z, \" + planeDistances[i] + \"\\n\"; // z = x > minX, w = y > minY\n\n\t\t\tvar temp:ShaderRegisterElement = registerCache.getFreeFragmentVectorTemp();\n\n\t\t\t// linearly interpolate between old and new uv coords using predicate value == conditional toggle to new value if predicate == 1 (true)\n\t\t\tcode += \"sub \" + temp + \", \" + uvProjection + \", \" + uvCoord + \"\\n\" +\n\t\t\t\t\"mul \" + temp + \", \" + temp + \", \" + inQuad + \".z\\n\" +\n\t\t\t\t\"add \" + uvCoord + \", \" + uvCoord + \", \" + temp + \"\\n\";\n\t\t}\n\n\t\tregisterCache.removeFragmentTempUsage(inQuad);\n\n\t\tcode += \"div \" + uvCoord + \", \" + uvCoord + \", \" + uvCoord + \".w\\n\" +\n\t\t\t\"mul \" + uvCoord + \".xy, \" + uvCoord + \".xy, \" + dataReg + \".zw\\n\" +\n\t\t\t\"add \" + uvCoord + \".xy, \" + uvCoord + \".xy, \" + dataReg + \".zz\\n\";\n\n\t\tcode += this._baseMethod._iGetCascadeFragmentCode(shaderObject, methodVO, decReg, depthMapRegister, uvCoord, targetReg, registerCache, sharedRegisters) +\n\t\t\t\"add \" + targetReg + \".w, \" + targetReg + \".w, \" + dataReg + \".y\\n\";\n\n\t\tregisterCache.removeFragmentTempUsage(uvCoord);\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iActivate(shaderObject:ShaderObjectBase, methodVO:MethodVO, stage:Stage)\n\t{\n\t\tstage.activateTexture(methodVO.texturesIndex, <Texture2DBase> this._pCastingLight.shadowMapper.depthMap, shaderObject.repeatTextures, shaderObject.useSmoothTextures, shaderObject.useMipmapping);\n\n\t\tvar vertexData:Array<number> = shaderObject.vertexConstantData;\n\t\tvar vertexIndex:number = methodVO.vertexConstantsIndex;\n\n\t\tshaderObject.vertexConstantData[methodVO.vertexConstantsIndex + 3] = -1/(this._cascadeShadowMapper.depth*this._pEpsilon);\n\n\t\tvar numCascades:number = this._cascadeShadowMapper.numCascades;\n\t\tvertexIndex += 4;\n\t\tfor (var k:number = 0; k < numCascades; ++k) {\n\t\t\tthis._cascadeShadowMapper.getDepthProjections(k).copyRawDataTo(vertexData, vertexIndex, true);\n\t\t\tvertexIndex += 16;\n\t\t}\n\n\t\tvar fragmentData:Array<number> = shaderObject.fragmentConstantData;\n\t\tvar fragmentIndex:number = methodVO.fragmentConstantsIndex;\n\t\tfragmentData[fragmentIndex + 5] = 1 - this._pAlpha;\n\n\t\tvar nearPlaneDistances:Array<number> = this._cascadeShadowMapper._iNearPlaneDistances;\n\n\t\tfragmentIndex += 8;\n\t\tfor (var i:number = 0; i < numCascades; ++i)\n\t\t\tfragmentData[fragmentIndex + i] = nearPlaneDistances[i];\n\n\t\tthis._baseMethod.iActivateForCascade(shaderObject, methodVO, stage);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iSetRenderState(shaderObject:ShaderObjectBase, methodVO:MethodVO, renderable:RenderableBase, stage:Stage, camera:Camera)\n\t{\n\t}\n\n\t/**\n\t * Called when the shadow mappers cascade configuration changes.\n\t */\n\tprivate onCascadeChange(event:Event)\n\t{\n\t\tthis.iInvalidateShaderProgram();\n\t}\n\n\t/**\n\t * Called when the base method's shader code is invalidated.\n\t */\n\tprivate onShaderInvalidated(event:ShadingMethodEvent)\n\t{\n\t\tthis.iInvalidateShaderProgram();\n\t}\n}\n\nexport = ShadowCascadeMethod;",
    "import BitmapData\t\t\t\t\t\t= require(\"awayjs-core/lib/data/BitmapData\");\nimport BitmapTexture\t\t\t\t\t= require(\"awayjs-core/lib/textures/BitmapTexture\");\n\nimport DirectionalLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport ShaderLightingObject\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderLightingObject\");\nimport ShaderObjectBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderObjectBase\");\nimport ShaderRegisterCache\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterData\");\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterElement\");\n\nimport MethodVO\t\t\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/data/MethodVO\");\nimport ShadowMethodBase\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/ShadowMethodBase\");\n\n/**\n * ShadowDitheredMethod provides a soft shadowing technique by randomly distributing sample points differently for each fragment.\n */\nclass ShadowDitheredMethod extends ShadowMethodBase\n{\n\tprivate static _grainTexture:BitmapTexture;\n\tprivate static _grainUsages:number /*int*/;\n\tprivate static _grainBitmapData:BitmapData;\n\tprivate _depthMapSize:number /*int*/;\n\tprivate _range:number;\n\tprivate _numSamples:number /*int*/;\n\n\t/**\n\t * Creates a new ShadowDitheredMethod object.\n\t * @param castingLight The light casting the shadows\n\t * @param numSamples The amount of samples to take for dithering. Minimum 1, maximum 24.\n\t */\n\tconstructor(castingLight:DirectionalLight, numSamples:number /*int*/ = 4, range:number = 1)\n\t{\n\t\tsuper(castingLight);\n\n\t\tthis._depthMapSize = this._pCastingLight.shadowMapper.depthMapSize;\n\n\t\tthis.numSamples = numSamples;\n\t\tthis.range = range;\n\n\t\t++ShadowDitheredMethod._grainUsages;\n\n\t\tif (!ShadowDitheredMethod._grainTexture)\n\t\t\tthis.initGrainTexture();\n\t}\n\n\t/**\n\t * The amount of samples to take for dithering. Minimum 1, maximum 24. The actual maximum may depend on the\n\t * complexity of the shader.\n\t */\n\tpublic get numSamples():number /*int*/\n\t{\n\t\treturn this._numSamples;\n\t}\n\n\tpublic set numSamples(value:number /*int*/)\n\t{\n\t\tthis._numSamples = value;\n\t\tif (this._numSamples < 1)\n\t\t\tthis._numSamples = 1; else if (this._numSamples > 24)\n\t\t\tthis._numSamples = 24;\n\t\tthis.iInvalidateShaderProgram();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iInitVO(shaderObject:ShaderLightingObject, methodVO:MethodVO)\n\t{\n\t\tsuper.iInitVO(shaderObject, methodVO);\n\n\t\tmethodVO.needsProjection = true;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iInitConstants(shaderObject:ShaderObjectBase, methodVO:MethodVO)\n\t{\n\t\tsuper.iInitConstants(shaderObject, methodVO);\n\n\t\tvar fragmentData:Array<number> = shaderObject.fragmentConstantData;\n\t\tvar index:number /*int*/ = methodVO.fragmentConstantsIndex;\n\t\tfragmentData[index + 8] = 1/this._numSamples;\n\t}\n\n\t/**\n\t * The range in the shadow map in which to distribute the samples.\n\t */\n\tpublic get range():number\n\t{\n\t\treturn this._range*2;\n\t}\n\n\tpublic set range(value:number)\n\t{\n\t\tthis._range = value/2;\n\t}\n\n\t/**\n\t * Creates a texture containing the dithering noise texture.\n\t */\n\tprivate initGrainTexture()\n\t{\n\t\tShadowDitheredMethod._grainBitmapData = new BitmapData(64, 64, false);\n\t\tvar vec:Array<number> /*uint*/ = new Array<number>();\n\t\tvar len:number /*uint*/ = 4096;\n\t\tvar step:number = 1/(this._depthMapSize*this._range);\n\t\tvar r:number, g:number;\n\n\t\tfor (var i:number /*uint*/ = 0; i < len; ++i) {\n\t\t\tr = 2*(Math.random() - .5);\n\t\t\tg = 2*(Math.random() - .5);\n\t\t\tif (r < 0)\n\t\t\t\tr -= step; else\n\t\t\t\tr += step;\n\t\t\tif (g < 0)\n\t\t\t\tg -= step; else\n\t\t\t\tg += step;\n\t\t\tif (r > 1)\n\t\t\t\tr = 1; else if (r < -1)\n\t\t\t\tr = -1;\n\t\t\tif (g > 1)\n\t\t\t\tg = 1; else if (g < -1)\n\t\t\t\tg = -1;\n\t\t\tvec[i] = (Math.floor((r*.5 + .5)*0xff) << 16) | (Math.floor((g*.5 + .5)*0xff) << 8);\n\t\t}\n\n\t\tShadowDitheredMethod._grainBitmapData.setArray(ShadowDitheredMethod._grainBitmapData.rect, vec);\n\t\tShadowDitheredMethod._grainTexture = new BitmapTexture(ShadowDitheredMethod._grainBitmapData);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic dispose()\n\t{\n\t\tif (--ShadowDitheredMethod._grainUsages == 0) {\n\t\t\tShadowDitheredMethod._grainTexture.dispose();\n\t\t\tShadowDitheredMethod._grainBitmapData.dispose();\n\t\t\tShadowDitheredMethod._grainTexture = null;\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iActivate(shaderObject:ShaderObjectBase, methodVO:MethodVO, stage:Stage)\n\t{\n\t\tsuper.iActivate(shaderObject, methodVO, stage);\n\n\t\tvar data:Array<number> = shaderObject.fragmentConstantData;\n\t\tvar index:number /*uint*/ = methodVO.fragmentConstantsIndex;\n\t\tdata[index + 9] = (stage.width - 1)/63;\n\t\tdata[index + 10] = (stage.height - 1)/63;\n\t\tdata[index + 11] = 2*this._range/this._depthMapSize;\n\n\t\tstage.activateTexture(methodVO.texturesIndex + 1, ShadowDitheredMethod._grainTexture, shaderObject.repeatTextures, shaderObject.useSmoothTextures, shaderObject.useMipmapping);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pGetPlanarFragmentCode(methodVO:MethodVO, targetReg:ShaderRegisterElement, regCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tvar depthMapRegister:ShaderRegisterElement = regCache.getFreeTextureReg();\n\t\tvar decReg:ShaderRegisterElement = regCache.getFreeFragmentConstant();\n\t\tvar dataReg:ShaderRegisterElement = regCache.getFreeFragmentConstant();\n\t\tvar customDataReg:ShaderRegisterElement = regCache.getFreeFragmentConstant();\n\n\t\tmethodVO.fragmentConstantsIndex = decReg.index*4;\n\t\tmethodVO.texturesIndex = depthMapRegister.index;\n\n\t\treturn this.getSampleCode(customDataReg, depthMapRegister, decReg, targetReg, regCache, sharedRegisters);\n\t}\n\n\t/**\n\t * Get the actual shader code for shadow mapping\n\t * @param regCache The register cache managing the registers.\n\t * @param depthMapRegister The texture register containing the depth map.\n\t * @param decReg The register containing the depth map decoding data.\n\t * @param targetReg The target register to add the shadow coverage.\n\t */\n\tprivate getSampleCode(customDataReg:ShaderRegisterElement, depthMapRegister:ShaderRegisterElement, decReg:ShaderRegisterElement, targetReg:ShaderRegisterElement, regCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tvar code:string = \"\";\n\t\tvar grainRegister:ShaderRegisterElement = regCache.getFreeTextureReg();\n\t\tvar uvReg:ShaderRegisterElement = regCache.getFreeFragmentVectorTemp();\n\t\tvar numSamples:number /*int*/ = this._numSamples;\n\t\tregCache.addFragmentTempUsages(uvReg, 1);\n\n\t\tvar temp:ShaderRegisterElement = regCache.getFreeFragmentVectorTemp();\n\n\t\tvar projectionReg:ShaderRegisterElement = sharedRegisters.projectionFragment;\n\n\t\tcode += \"div \" + uvReg + \", \" + projectionReg + \", \" + projectionReg + \".w\\n\" + \"mul \" + uvReg + \".xy, \" + uvReg + \".xy, \" + customDataReg + \".yz\\n\";\n\n\t\twhile (numSamples > 0) {\n\t\t\tif (numSamples == this._numSamples)\n\t\t\t\tcode += \"tex \" + uvReg + \", \" + uvReg + \", \" + grainRegister + \" <2d,nearest,repeat,mipnone>\\n\";\n\t\t\telse\n\t\t\t\tcode += \"tex \" + uvReg + \", \" + uvReg + \".zwxy, \" + grainRegister + \" <2d,nearest,repeat,mipnone>\\n\";\n\n\t\t\t// keep grain in uvReg.zw\n\t\t\tcode += \"sub \" + uvReg + \".zw, \" + uvReg + \".xy, fc0.xx\\n\" + // uv-.5\n\t\t\t\t\"mul \" + uvReg + \".zw, \" + uvReg + \".zw, \" + customDataReg + \".w\\n\"; // (tex unpack scale and tex scale in one)\n\n\t\t\tif (numSamples == this._numSamples) {\n\t\t\t\t// first sample\n\t\t\t\tcode += \"add \" + uvReg + \".xy, \" + uvReg + \".zw, \" + this._pDepthMapCoordReg + \".xy\\n\" +\n\t\t\t\t\t\"tex \" + temp + \", \" + uvReg + \", \" + depthMapRegister + \" <2d,nearest,clamp,mipnone>\\n\" +\n\t\t\t\t\t\"dp4 \" + temp + \".z, \" + temp + \", \" + decReg + \"\\n\" +\n\t\t\t\t\t\"slt \" + targetReg + \".w, \" + this._pDepthMapCoordReg + \".z, \" + temp + \".z\\n\"; // 0 if in shadow\n\t\t\t} else {\n\t\t\t\tcode += this.addSample(uvReg, depthMapRegister, decReg, targetReg, regCache);\n\t\t\t}\n\n\t\t\tif (numSamples > 4)\n\t\t\t\tcode += \"add \" + uvReg + \".xy, \" + uvReg + \".xy, \" + uvReg + \".zw\\n\" + this.addSample(uvReg, depthMapRegister, decReg, targetReg, regCache);\n\n\t\t\tif (numSamples > 1)\n\t\t\t\tcode += \"sub \" + uvReg + \".xy, \" + this._pDepthMapCoordReg + \".xy, \" + uvReg + \".zw\\n\" + this.addSample(uvReg, depthMapRegister, decReg, targetReg, regCache);\n\n\t\t\tif (numSamples > 5)\n\t\t\t\tcode += \"sub \" + uvReg + \".xy, \" + uvReg + \".xy, \" + uvReg + \".zw\\n\" + this.addSample(uvReg, depthMapRegister, decReg, targetReg, regCache);\n\n\t\t\tif (numSamples > 2) {\n\t\t\t\tcode += \"neg \" + uvReg + \".w, \" + uvReg + \".w\\n\"; // will be rotated 90 degrees when being accessed as wz\n\t\t\t\tcode += \"add \" + uvReg + \".xy, \" + uvReg + \".wz, \" + this._pDepthMapCoordReg + \".xy\\n\" + this.addSample(uvReg, depthMapRegister, decReg, targetReg, regCache);\n\t\t\t}\n\n\t\t\tif (numSamples > 6)\n\t\t\t\tcode += \"add \" + uvReg + \".xy, \" + uvReg + \".xy, \" + uvReg + \".wz\\n\" + this.addSample(uvReg, depthMapRegister, decReg, targetReg, regCache);\n\n\t\t\tif (numSamples > 3)\n\t\t\t\tcode += \"sub \" + uvReg + \".xy, \" + this._pDepthMapCoordReg + \".xy, \" + uvReg + \".wz\\n\" + this.addSample(uvReg, depthMapRegister, decReg, targetReg, regCache);\n\n\t\t\tif (numSamples > 7)\n\t\t\t\tcode += \"sub \" + uvReg + \".xy, \" + uvReg + \".xy, \" + uvReg + \".wz\\n\" + this.addSample(uvReg, depthMapRegister, decReg, targetReg, regCache);\n\n\t\t\tnumSamples -= 8;\n\t\t}\n\n\t\tregCache.removeFragmentTempUsage(uvReg);\n\t\tcode += \"mul \" + targetReg + \".w, \" + targetReg + \".w, \" + customDataReg + \".x\\n\"; // average\n\t\treturn code;\n\t}\n\n\t/**\n\t * Adds the code for another tap to the shader code.\n\t * @param uvReg The uv register for the tap.\n\t * @param depthMapRegister The texture register containing the depth map.\n\t * @param decReg The register containing the depth map decoding data.\n\t * @param targetReg The target register to add the tap comparison result.\n\t * @param regCache The register cache managing the registers.\n\t * @return\n\t */\n\tprivate addSample(uvReg:ShaderRegisterElement, depthMapRegister:ShaderRegisterElement, decReg:ShaderRegisterElement, targetReg:ShaderRegisterElement, regCache:ShaderRegisterCache):string\n\t{\n\t\tvar temp:ShaderRegisterElement = regCache.getFreeFragmentVectorTemp();\n\n\t\treturn \"tex \" + temp + \", \" + uvReg + \", \" + depthMapRegister + \" <2d,nearest,clamp,mipnone>\\n\" +\n\t\t\t\"dp4 \" + temp + \".z, \" + temp + \", \" + decReg + \"\\n\" +\n\t\t\t\"slt \" + temp + \".z, \" + this._pDepthMapCoordReg + \".z, \" + temp + \".z\\n\" + // 0 if in shadow\n\t\t\t\"add \" + targetReg + \".w, \" + targetReg + \".w, \" + temp + \".z\\n\";\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iActivateForCascade(shaderObject:ShaderObjectBase, methodVO:MethodVO, stage:Stage)\n\t{\n\t\tvar data:Array<number> = shaderObject.fragmentConstantData;\n\t\tvar index:number /*uint*/ = methodVO.secondaryFragmentConstantsIndex;\n\t\tdata[index] = 1/this._numSamples;\n\t\tdata[index + 1] = (stage.width - 1)/63;\n\t\tdata[index + 2] = (stage.height - 1)/63;\n\t\tdata[index + 3] = 2*this._range/this._depthMapSize;\n\n\t\tstage.activateTexture(methodVO.texturesIndex + 1, ShadowDitheredMethod._grainTexture, shaderObject.repeatTextures, shaderObject.useSmoothTextures, shaderObject.useMipmapping);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGetCascadeFragmentCode(shaderObject:ShaderObjectBase, methodVO:MethodVO, decodeRegister:ShaderRegisterElement, depthTexture:ShaderRegisterElement, depthProjection:ShaderRegisterElement, targetRegister:ShaderRegisterElement, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tthis._pDepthMapCoordReg = depthProjection;\n\n\t\tvar dataReg:ShaderRegisterElement = registerCache.getFreeFragmentConstant();\n\t\tmethodVO.secondaryFragmentConstantsIndex = dataReg.index*4;\n\n\t\treturn this.getSampleCode(dataReg, depthTexture, decodeRegister, targetRegister, registerCache, sharedRegisters);\n\t}\n}\n\nexport = ShadowDitheredMethod;",
    "import DirectionalLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport ShaderLightingObject\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderLightingObject\");\nimport ShaderObjectBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderObjectBase\");\nimport ShaderRegisterCache\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterData\");\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterElement\");\n\nimport MethodVO\t\t\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/data/MethodVO\");\nimport ShadowMethodBase\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/ShadowMethodBase\");\n\n/**\n * ShadowFilteredMethod provides a softened shadowing technique by bilinearly interpolating shadow comparison\n * results of neighbouring pixels.\n */\nclass ShadowFilteredMethod extends ShadowMethodBase\n{\n\t/**\n\t * Creates a new DiffuseBasicMethod object.\n\t *\n\t * @param castingLight The light casting the shadow\n\t */\n\tconstructor(castingLight:DirectionalLight)\n\t{\n\t\tsuper(castingLight);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iInitConstants(shaderObject:ShaderLightingObject, methodVO:MethodVO)\n\t{\n\t\tsuper.iInitConstants(shaderObject, methodVO);\n\n\t\tvar fragmentData:Array<number> = shaderObject.fragmentConstantData;\n\t\tvar index:number /*int*/ = methodVO.fragmentConstantsIndex;\n\t\tfragmentData[index + 8] = .5;\n\t\tvar size:number /*int*/ = this.castingLight.shadowMapper.depthMapSize;\n\t\tfragmentData[index + 9] = size;\n\t\tfragmentData[index + 10] = 1/size;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pGetPlanarFragmentCode(methodVO:MethodVO, targetReg:ShaderRegisterElement, regCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tvar depthMapRegister:ShaderRegisterElement = regCache.getFreeTextureReg();\n\t\tvar decReg:ShaderRegisterElement = regCache.getFreeFragmentConstant();\n\t\tvar dataReg:ShaderRegisterElement = regCache.getFreeFragmentConstant();\n\t\t// TODO: not used\n\t\tdataReg = dataReg;\n\t\tvar customDataReg:ShaderRegisterElement = regCache.getFreeFragmentConstant();\n\t\tvar depthCol:ShaderRegisterElement = regCache.getFreeFragmentVectorTemp();\n\t\tvar uvReg:ShaderRegisterElement;\n\t\tvar code:string = \"\";\n\t\tmethodVO.fragmentConstantsIndex = decReg.index*4;\n\n\t\tregCache.addFragmentTempUsages(depthCol, 1);\n\n\t\tuvReg = regCache.getFreeFragmentVectorTemp();\n\t\tregCache.addFragmentTempUsages(uvReg, 1);\n\n\t\tcode += \"mov \" + uvReg + \", \" + this._pDepthMapCoordReg + \"\\n\" +\n\n\t\t\t\"tex \" + depthCol + \", \" + this._pDepthMapCoordReg + \", \" + depthMapRegister + \" <2d, nearest, clamp>\\n\" + \"dp4 \" + depthCol + \".z, \" + depthCol + \", \" + decReg + \"\\n\" + \"slt \" + uvReg + \".z, \" + this._pDepthMapCoordReg + \".z, \" + depthCol + \".z\\n\" +   // 0 if in shadow\n\n\t\t\t\"add \" + uvReg + \".x, \" + this._pDepthMapCoordReg + \".x, \" + customDataReg + \".z\\n\" + \t// (1, 0)\n\t\t\t\"tex \" + depthCol + \", \" + uvReg + \", \" + depthMapRegister + \" <2d, nearest, clamp>\\n\" + \"dp4 \" + depthCol + \".z, \" + depthCol + \", \" + decReg + \"\\n\" + \"slt \" + uvReg + \".w, \" + this._pDepthMapCoordReg + \".z, \" + depthCol + \".z\\n\" +   // 0 if in shadow\n\n\t\t\t\"mul \" + depthCol + \".x, \" + this._pDepthMapCoordReg + \".x, \" + customDataReg + \".y\\n\" + \"frc \" + depthCol + \".x, \" + depthCol + \".x\\n\" + \"sub \" + uvReg + \".w, \" + uvReg + \".w, \" + uvReg + \".z\\n\" + \"mul \" + uvReg + \".w, \" + uvReg + \".w, \" + depthCol + \".x\\n\" + \"add \" + targetReg + \".w, \" + uvReg + \".z, \" + uvReg + \".w\\n\" +\n\n\t\t\t\"mov \" + uvReg + \".x, \" + this._pDepthMapCoordReg + \".x\\n\" + \"add \" + uvReg + \".y, \" + this._pDepthMapCoordReg + \".y, \" + customDataReg + \".z\\n\" +\t// (0, 1)\n\t\t\t\"tex \" + depthCol + \", \" + uvReg + \", \" + depthMapRegister + \" <2d, nearest, clamp>\\n\" + \"dp4 \" + depthCol + \".z, \" + depthCol + \", \" + decReg + \"\\n\" + \"slt \" + uvReg + \".z, \" + this._pDepthMapCoordReg + \".z, \" + depthCol + \".z\\n\" +   // 0 if in shadow\n\n\t\t\t\"add \" + uvReg + \".x, \" + this._pDepthMapCoordReg + \".x, \" + customDataReg + \".z\\n\" +\t// (1, 1)\n\t\t\t\"tex \" + depthCol + \", \" + uvReg + \", \" + depthMapRegister + \" <2d, nearest, clamp>\\n\" + \"dp4 \" + depthCol + \".z, \" + depthCol + \", \" + decReg + \"\\n\" + \"slt \" + uvReg + \".w, \" + this._pDepthMapCoordReg + \".z, \" + depthCol + \".z\\n\" +   // 0 if in shadow\n\n\t\t\t// recalculate fraction, since we ran out of registers :(\n\t\t\t\"mul \" + depthCol + \".x, \" + this._pDepthMapCoordReg + \".x, \" + customDataReg + \".y\\n\" + \"frc \" + depthCol + \".x, \" + depthCol + \".x\\n\" + \"sub \" + uvReg + \".w, \" + uvReg + \".w, \" + uvReg + \".z\\n\" + \"mul \" + uvReg + \".w, \" + uvReg + \".w, \" + depthCol + \".x\\n\" + \"add \" + uvReg + \".w, \" + uvReg + \".z, \" + uvReg + \".w\\n\" +\n\n\t\t\t\"mul \" + depthCol + \".x, \" + this._pDepthMapCoordReg + \".y, \" + customDataReg + \".y\\n\" + \"frc \" + depthCol + \".x, \" + depthCol + \".x\\n\" + \"sub \" + uvReg + \".w, \" + uvReg + \".w, \" + targetReg + \".w\\n\" + \"mul \" + uvReg + \".w, \" + uvReg + \".w, \" + depthCol + \".x\\n\" + \"add \" + targetReg + \".w, \" + targetReg + \".w, \" + uvReg + \".w\\n\";\n\n\t\tregCache.removeFragmentTempUsage(depthCol);\n\t\tregCache.removeFragmentTempUsage(uvReg);\n\n\t\tmethodVO.texturesIndex = depthMapRegister.index;\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iActivateForCascade(shaderObject:ShaderObjectBase, methodVO:MethodVO, stage:Stage)\n\t{\n\t\tvar size:number /*int*/ = this.castingLight.shadowMapper.depthMapSize;\n\t\tvar index:number /*int*/ = methodVO.secondaryFragmentConstantsIndex;\n\t\tvar data:Array<number> = shaderObject.fragmentConstantData;\n\t\tdata[index] = size;\n\t\tdata[index + 1] = 1/size;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGetCascadeFragmentCode(shaderObject:ShaderObjectBase, methodVO:MethodVO, decodeRegister:ShaderRegisterElement, depthTexture:ShaderRegisterElement, depthProjection:ShaderRegisterElement, targetRegister:ShaderRegisterElement, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tvar code:string;\n\t\tvar dataReg:ShaderRegisterElement = registerCache.getFreeFragmentConstant();\n\t\tmethodVO.secondaryFragmentConstantsIndex = dataReg.index*4;\n\t\tvar temp:ShaderRegisterElement = registerCache.getFreeFragmentVectorTemp();\n\t\tregisterCache.addFragmentTempUsages(temp, 1);\n\t\tvar predicate:ShaderRegisterElement = registerCache.getFreeFragmentVectorTemp();\n\t\tregisterCache.addFragmentTempUsages(predicate, 1);\n\n\t\tcode = \"tex \" + temp + \", \" + depthProjection + \", \" + depthTexture + \" <2d, nearest, clamp>\\n\" + \"dp4 \" + temp + \".z, \" + temp + \", \" + decodeRegister + \"\\n\" + \"slt \" + predicate + \".x, \" + depthProjection + \".z, \" + temp + \".z\\n\" +\n\n\t\t\t\"add \" + depthProjection + \".x, \" + depthProjection + \".x, \" + dataReg + \".y\\n\" + \"tex \" + temp + \", \" + depthProjection + \", \" + depthTexture + \" <2d, nearest, clamp>\\n\" + \"dp4 \" + temp + \".z, \" + temp + \", \" + decodeRegister + \"\\n\" + \"slt \" + predicate + \".z, \" + depthProjection + \".z, \" + temp + \".z\\n\" +\n\n\t\t\t\"add \" + depthProjection + \".y, \" + depthProjection + \".y, \" + dataReg + \".y\\n\" + \"tex \" + temp + \", \" + depthProjection + \", \" + depthTexture + \" <2d, nearest, clamp>\\n\" + \"dp4 \" + temp + \".z, \" + temp + \", \" + decodeRegister + \"\\n\" + \"slt \" + predicate + \".w, \" + depthProjection + \".z, \" + temp + \".z\\n\" +\n\n\t\t\t\"sub \" + depthProjection + \".x, \" + depthProjection + \".x, \" + dataReg + \".y\\n\" + \"tex \" + temp + \", \" + depthProjection + \", \" + depthTexture + \" <2d, nearest, clamp>\\n\" + \"dp4 \" + temp + \".z, \" + temp + \", \" + decodeRegister + \"\\n\" + \"slt \" + predicate + \".y, \" + depthProjection + \".z, \" + temp + \".z\\n\" +\n\n\t\t\t\"mul \" + temp + \".xy, \" + depthProjection + \".xy, \" + dataReg + \".x\\n\" + \"frc \" + temp + \".xy, \" + temp + \".xy\\n\" +\n\n\t\t\t// some strange register juggling to prevent agal bugging out\n\t\t\t\"sub \" + depthProjection + \", \" + predicate + \".xyzw, \" + predicate + \".zwxy\\n\" + \"mul \" + depthProjection + \", \" + depthProjection + \", \" + temp + \".x\\n\" +\n\n\t\t\t\"add \" + predicate + \".xy, \" + predicate + \".xy, \" + depthProjection + \".zw\\n\" +\n\n\t\t\t\"sub \" + predicate + \".y, \" + predicate + \".y, \" + predicate + \".x\\n\" + \"mul \" + predicate + \".y, \" + predicate + \".y, \" + temp + \".y\\n\" + \"add \" + targetRegister + \".w, \" + predicate + \".x, \" + predicate + \".y\\n\";\n\n\t\tregisterCache.removeFragmentTempUsage(temp);\n\t\tregisterCache.removeFragmentTempUsage(predicate);\n\t\treturn code;\n\t}\n}\n\nexport = ShadowFilteredMethod;",
    "import LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\n\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport ShaderObjectBase\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderObjectBase\");\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterData\");\nimport ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterElement\");\n\nimport MethodVO\t\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/data/MethodVO\");\nimport ShadowMethodBase\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/ShadowMethodBase\");\n\n/**\n * ShadowHardMethod provides the cheapest shadow map method by using a single tap without any filtering.\n */\nclass ShadowHardMethod extends ShadowMethodBase\n{\n\t/**\n\t * Creates a new ShadowHardMethod object.\n\t */\n\tconstructor(castingLight:LightBase)\n\t{\n\t\tsuper(castingLight);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pGetPlanarFragmentCode(methodVO:MethodVO, targetReg:ShaderRegisterElement, regCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tvar depthMapRegister:ShaderRegisterElement = regCache.getFreeTextureReg();\n\t\tvar decReg:ShaderRegisterElement = regCache.getFreeFragmentConstant();\n\n\t\t// needs to be reserved anyway. DO NOT REMOVE\n\t\tvar dataReg:ShaderRegisterElement = regCache.getFreeFragmentConstant();\n\n\t\tvar depthCol:ShaderRegisterElement = regCache.getFreeFragmentVectorTemp();\n\t\tvar code:string = \"\";\n\n\t\tmethodVO.fragmentConstantsIndex = decReg.index*4;\n\t\tmethodVO.texturesIndex = depthMapRegister.index;\n\n\t\tcode += \"tex \" + depthCol + \", \" + this._pDepthMapCoordReg + \", \" + depthMapRegister + \" <2d, nearest, clamp>\\n\" +\n\t\t\t\"dp4 \" + depthCol + \".z, \" + depthCol + \", \" + decReg + \"\\n\" +\n\t\t\t\"slt \" + targetReg + \".w, \" + this._pDepthMapCoordReg + \".z, \" + depthCol + \".z\\n\"; // 0 if in shadow\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pGetPointFragmentCode(methodVO:MethodVO, targetReg:ShaderRegisterElement, regCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tvar depthMapRegister:ShaderRegisterElement = regCache.getFreeTextureReg();\n\t\tvar decReg:ShaderRegisterElement = regCache.getFreeFragmentConstant();\n\t\tvar epsReg:ShaderRegisterElement = regCache.getFreeFragmentConstant();\n\t\tvar posReg:ShaderRegisterElement = regCache.getFreeFragmentConstant();\n\t\tvar depthSampleCol:ShaderRegisterElement = regCache.getFreeFragmentVectorTemp();\n\t\tregCache.addFragmentTempUsages(depthSampleCol, 1);\n\t\tvar lightDir:ShaderRegisterElement = regCache.getFreeFragmentVectorTemp();\n\t\tvar code:string = \"\";\n\n\t\tmethodVO.fragmentConstantsIndex = decReg.index*4;\n\t\tmethodVO.texturesIndex = depthMapRegister.index;\n\n\t\tcode += \"sub \" + lightDir + \", \" + sharedRegisters.globalPositionVarying + \", \" + posReg + \"\\n\" +\n\t\t\t\"dp3 \" + lightDir + \".w, \" + lightDir + \".xyz, \" + lightDir + \".xyz\\n\" +\n\t\t\t\"mul \" + lightDir + \".w, \" + lightDir + \".w, \" + posReg + \".w\\n\" +\n\t\t\t\"nrm \" + lightDir + \".xyz, \" + lightDir + \".xyz\\n\" +\n\n\t\t\t\"tex \" + depthSampleCol + \", \" + lightDir + \", \" + depthMapRegister + \" <cube, nearest, clamp>\\n\" +\n\t\t\t\"dp4 \" + depthSampleCol + \".z, \" + depthSampleCol + \", \" + decReg + \"\\n\" +\n\t\t\t\"add \" + targetReg + \".w, \" + lightDir + \".w, \" + epsReg + \".x\\n\" +    // offset by epsilon\n\n\t\t\t\"slt \" + targetReg + \".w, \" + targetReg + \".w, \" + depthSampleCol + \".z\\n\"; // 0 if in shadow\n\n\t\tregCache.removeFragmentTempUsage(depthSampleCol);\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGetCascadeFragmentCode(shaderObject:ShaderObjectBase, methodVO:MethodVO, decodeRegister:ShaderRegisterElement, depthTexture:ShaderRegisterElement, depthProjection:ShaderRegisterElement, targetRegister:ShaderRegisterElement, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tvar temp:ShaderRegisterElement = registerCache.getFreeFragmentVectorTemp();\n\t\treturn \"tex \" + temp + \", \" + depthProjection + \", \" + depthTexture + \" <2d, nearest, clamp>\\n\" +\n\t\t\t\"dp4 \" + temp + \".z, \" + temp + \", \" + decodeRegister + \"\\n\" +\n\t\t\t\"slt \" + targetRegister + \".w, \" + depthProjection + \".z, \" + temp + \".z\\n\"; // 0 if in shadow\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iActivateForCascade(shaderObject:ShaderObjectBase, methodVO:MethodVO, stage:Stage)\n\t{\n\t}\n}\n\nexport = ShadowHardMethod;",
    "import IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\nimport ShadowMapperBase\t\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/ShadowMapperBase\");\n\nimport ShadingMethodBase\t\t\t= require(\"awayjs-methodmaterials/lib/methods/ShadingMethodBase\");\n\n/**\n * ShadowMapMethodBase provides an abstract base method for shadow map methods.\n */\nclass ShadowMapMethodBase extends ShadingMethodBase implements IAsset\n{\n\tpublic static assetType:string = \"[asset ShadowMapMethod]\";\n\n\tpublic _pCastingLight:LightBase;\n\tpublic _pShadowMapper:ShadowMapperBase;\n\n\tpublic _pEpsilon:number = .02;\n\tpublic _pAlpha:number = 1;\n\n\t/**\n\t * Creates a new ShadowMapMethodBase object.\n\t * @param castingLight The light used to cast shadows.\n\t */\n\tconstructor(castingLight:LightBase)\n\t{\n\t\tsuper();\n\t\tthis._pCastingLight = castingLight;\n\t\tcastingLight.castsShadows = true;\n\t\tthis._pShadowMapper = castingLight.shadowMapper;\n\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn ShadowMapMethodBase.assetType;\n\t}\n\n\t/**\n\t * The \"transparency\" of the shadows. This allows making shadows less strong.\n\t */\n\tpublic get alpha():number\n\t{\n\t\treturn this._pAlpha;\n\t}\n\n\tpublic set alpha(value:number)\n\t{\n\t\tthis._pAlpha = value;\n\t}\n\n\t/**\n\t * The light casting the shadows.\n\t */\n\tpublic get castingLight():LightBase\n\t{\n\t\treturn this._pCastingLight;\n\t}\n\n\t/**\n\t * A small value to counter floating point precision errors when comparing values in the shadow map with the\n\t * calculated depth value. Increase this if shadow banding occurs, decrease it if the shadow seems to be too detached.\n\t */\n\tpublic get epsilon():number\n\t{\n\t\treturn this._pEpsilon;\n\t}\n\n\tpublic set epsilon(value:number)\n\t{\n\t\tthis._pEpsilon = value;\n\t}\n}\n\nexport = ShadowMapMethodBase;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport CubeTextureBase\t\t\t\t= require(\"awayjs-core/lib/textures/CubeTextureBase\");\nimport Texture2DBase\t\t\t\t= require(\"awayjs-core/lib/textures/Texture2DBase\");\n\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\nimport DirectionalShadowMapper\t\t= require(\"awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper\");\n\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport RenderableBase\t\t\t\t= require(\"awayjs-renderergl/lib/pool/RenderableBase\");\nimport ShaderLightingObject\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderLightingObject\");\nimport ShaderObjectBase\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderObjectBase\");\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterData\");\nimport ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterElement\");\n\nimport MethodVO\t\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/data/MethodVO\");\nimport ShadowMapMethodBase\t\t\t= require(\"awayjs-methodmaterials/lib/methods/ShadowMapMethodBase\");\n\n/**\n * ShadowMethodBase provides an abstract method for simple (non-wrapping) shadow map methods.\n */\nclass ShadowMethodBase extends ShadowMapMethodBase\n{\n\tpublic _pDepthMapCoordReg:ShaderRegisterElement;\n\tpublic _pUsePoint:boolean;\n\n\t/**\n\t * Creates a new ShadowMethodBase object.\n\t * @param castingLight The light used to cast shadows.\n\t */\n\tconstructor(castingLight:LightBase)\n\t{\n\t\tthis._pUsePoint = (castingLight instanceof PointLight);\n\n\t\tsuper(castingLight);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iInitVO(shaderObject:ShaderLightingObject, methodVO:MethodVO)\n\t{\n\t\tmethodVO.needsView = true;\n\t\tmethodVO.needsGlobalVertexPos = true;\n\t\tmethodVO.needsGlobalFragmentPos = this._pUsePoint;\n\t\tmethodVO.needsNormals = shaderObject.numLights > 0;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iInitConstants(shaderObject:ShaderObjectBase, methodVO:MethodVO)\n\t{\n\t\tvar fragmentData:Array<number> = shaderObject.fragmentConstantData;\n\t\tvar vertexData:Array<number> = shaderObject.vertexConstantData;\n\t\tvar index:number /*int*/ = methodVO.fragmentConstantsIndex;\n\t\tfragmentData[index] = 1.0;\n\t\tfragmentData[index + 1] = 1/255.0;\n\t\tfragmentData[index + 2] = 1/65025.0;\n\t\tfragmentData[index + 3] = 1/16581375.0;\n\n\t\tfragmentData[index + 6] = 0;\n\t\tfragmentData[index + 7] = 1;\n\n\t\tif (this._pUsePoint) {\n\t\t\tfragmentData[index + 8] = 0;\n\t\t\tfragmentData[index + 9] = 0;\n\t\t\tfragmentData[index + 10] = 0;\n\t\t\tfragmentData[index + 11] = 1;\n\t\t}\n\n\t\tindex = methodVO.vertexConstantsIndex;\n\t\tif (index != -1) {\n\t\t\tvertexData[index] = .5;\n\t\t\tvertexData[index + 1] = .5;\n\t\t\tvertexData[index + 2] = 0.0;\n\t\t\tvertexData[index + 3] = 1.0;\n\t\t}\n\t}\n\n\t/**\n\t * Wrappers that override the vertex shader need to set this explicitly\n\t */\n\tpublic get _iDepthMapCoordReg():ShaderRegisterElement\n\t{\n\t\treturn this._pDepthMapCoordReg;\n\t}\n\n\tpublic set _iDepthMapCoordReg(value:ShaderRegisterElement)\n\t{\n\t\tthis._pDepthMapCoordReg = value;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iCleanCompilationData()\n\t{\n\t\tsuper.iCleanCompilationData();\n\n\t\tthis._pDepthMapCoordReg = null;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iGetVertexCode(shaderObject:ShaderObjectBase, methodVO:MethodVO, regCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn this._pUsePoint? this._pGetPointVertexCode(methodVO, regCache, sharedRegisters):this.pGetPlanarVertexCode(methodVO, regCache, sharedRegisters);\n\t}\n\n\t/**\n\t * Gets the vertex code for shadow mapping with a point light.\n\t *\n\t * @param methodVO The MethodVO object linking this method with the pass currently being compiled.\n\t * @param regCache The register cache used during the compilation.\n\t */\n\tpublic _pGetPointVertexCode(methodVO:MethodVO, regCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tmethodVO.vertexConstantsIndex = -1;\n\t\treturn \"\";\n\t}\n\n\t/**\n\t * Gets the vertex code for shadow mapping with a planar shadow map (fe: directional lights).\n\t *\n\t * @param methodVO The MethodVO object linking this method with the pass currently being compiled.\n\t * @param regCache The register cache used during the compilation.\n\t */\n\tpublic pGetPlanarVertexCode(methodVO:MethodVO, regCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tvar code:string = \"\";\n\t\tvar temp:ShaderRegisterElement = regCache.getFreeVertexVectorTemp();\n\t\tvar dataReg:ShaderRegisterElement = regCache.getFreeVertexConstant();\n\t\tvar depthMapProj:ShaderRegisterElement = regCache.getFreeVertexConstant();\n\t\tregCache.getFreeVertexConstant();\n\t\tregCache.getFreeVertexConstant();\n\t\tregCache.getFreeVertexConstant();\n\t\tthis._pDepthMapCoordReg = regCache.getFreeVarying();\n\t\tmethodVO.vertexConstantsIndex = dataReg.index*4;\n\n\t\t// todo: can epsilon be applied here instead of fragment shader?\n\n\t\tcode += \"m44 \" + temp + \", \" + sharedRegisters.globalPositionVertex + \", \" + depthMapProj + \"\\n\" + \"div \" + temp + \", \" + temp + \", \" + temp + \".w\\n\" + \"mul \" + temp + \".xy, \" + temp + \".xy, \" + dataReg + \".xy\\n\" + \"add \" + this._pDepthMapCoordReg + \", \" + temp + \", \" + dataReg + \".xxwz\\n\";\n\t\t//\"sub \" + this._pDepthMapCoordReg + \".z, \" + this._pDepthMapCoordReg + \".z, \" + this._pDepthMapCoordReg + \".w\\n\";\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iGetFragmentCode(shaderObject:ShaderObjectBase, methodVO:MethodVO, targetReg:ShaderRegisterElement, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tvar code:string = this._pUsePoint? this._pGetPointFragmentCode(methodVO, targetReg, registerCache, sharedRegisters):this._pGetPlanarFragmentCode(methodVO, targetReg, registerCache, sharedRegisters);\n\t\tcode += \"add \" + targetReg + \".w, \" + targetReg + \".w, fc\" + (methodVO.fragmentConstantsIndex/4 + 1) + \".y\\n\" + \"sat \" + targetReg + \".w, \" + targetReg + \".w\\n\";\n\t\treturn code;\n\t}\n\n\t/**\n\t * Gets the fragment code for shadow mapping with a planar shadow map.\n\t * @param methodVO The MethodVO object linking this method with the pass currently being compiled.\n\t * @param regCache The register cache used during the compilation.\n\t * @param targetReg The register to contain the shadow coverage\n\t * @return\n\t */\n\tpublic _pGetPlanarFragmentCode(methodVO:MethodVO, targetReg:ShaderRegisterElement, regCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tthrow new AbstractMethodError();\n\t\treturn \"\";\n\t}\n\n\t/**\n\t * Gets the fragment code for shadow mapping with a point light.\n\t * @param methodVO The MethodVO object linking this method with the pass currently being compiled.\n\t * @param regCache The register cache used during the compilation.\n\t * @param targetReg The register to contain the shadow coverage\n\t * @return\n\t */\n\tpublic _pGetPointFragmentCode(methodVO:MethodVO, targetReg:ShaderRegisterElement, regCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tthrow new AbstractMethodError();\n\t\treturn \"\";\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iSetRenderState(shaderObject:ShaderObjectBase, methodVO:MethodVO, renderable:RenderableBase, stage:Stage, camera:Camera)\n\t{\n\t\tif (!this._pUsePoint)\n\t\t\t(<DirectionalShadowMapper> this._pShadowMapper).iDepthProjection.copyRawDataTo(shaderObject.vertexConstantData, methodVO.vertexConstantsIndex + 4, true);\n\t}\n\n\t/**\n\t * Gets the fragment code for combining this method with a cascaded shadow map method.\n\t * @param methodVO The MethodVO object linking this method with the pass currently being compiled.\n\t * @param regCache The register cache used during the compilation.\n\t * @param decodeRegister The register containing the data to decode the shadow map depth value.\n\t * @param depthTexture The texture containing the shadow map.\n\t * @param depthProjection The projection of the fragment relative to the light.\n\t * @param targetRegister The register to contain the shadow coverage\n\t * @return\n\t */\n\tpublic _iGetCascadeFragmentCode(shaderObject:ShaderObjectBase, methodVO:MethodVO, decodeRegister:ShaderRegisterElement, depthTexture:ShaderRegisterElement, depthProjection:ShaderRegisterElement, targetRegister:ShaderRegisterElement, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tthrow new Error(\"This shadow method is incompatible with cascade shadows\");\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iActivate(shaderObject:ShaderObjectBase, methodVO:MethodVO, stage:Stage)\n\t{\n\t\tvar fragmentData:Array<number> = shaderObject.fragmentConstantData;\n\t\tvar index:number /*int*/ = methodVO.fragmentConstantsIndex;\n\n\t\tif (this._pUsePoint)\n\t\t\tfragmentData[index + 4] = -Math.pow(1/((<PointLight> this._pCastingLight).fallOff*this._pEpsilon), 2);\n\t\telse\n\t\t\tshaderObject.vertexConstantData[methodVO.vertexConstantsIndex + 3] = -1/((<DirectionalShadowMapper> this._pShadowMapper).depth*this._pEpsilon);\n\n\t\tfragmentData[index + 5] = 1 - this._pAlpha;\n\n\t\tif (this._pUsePoint) {\n\t\t\tvar pos:Vector3D = this._pCastingLight.scenePosition;\n\t\t\tfragmentData[index + 8] = pos.x;\n\t\t\tfragmentData[index + 9] = pos.y;\n\t\t\tfragmentData[index + 10] = pos.z;\n\t\t\t// used to decompress distance\n\t\t\tvar f:number = (<PointLight> this._pCastingLight).fallOff;\n\t\t\tfragmentData[index + 11] = 1/(2*f*f);\n\t\t}\n\n\t\tif (!this._pUsePoint)\n\t\t\tstage.activateRenderTexture(methodVO.texturesIndex, <Texture2DBase> this._pCastingLight.shadowMapper.depthMap);\n\t\t//else\n\t\t//\tstage.activateCubeRenderTexture(methodVO.texturesIndex, <CubeTextureBase> this._pCastingLight.shadowMapper.depthMap);\n\t}\n\n\t/**\n\t * Sets the method state for cascade shadow mapping.\n\t */\n\tpublic iActivateForCascade(shaderObject:ShaderObjectBase, methodVO:MethodVO, stage:Stage)\n\t{\n\t\tthrow new Error(\"This shadow method is incompatible with cascade shadows\");\n\t}\n}\n\nexport = ShadowMethodBase;",
    "import NearDirectionalShadowMapper\t\t= require(\"awayjs-display/lib/materials/shadowmappers/NearDirectionalShadowMapper\");\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport RenderableBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/pool/RenderableBase\");\nimport ShadingMethodEvent\t\t\t\t= require(\"awayjs-renderergl/lib/events/ShadingMethodEvent\");\nimport ShaderLightingObject\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderLightingObject\");\nimport ShaderObjectBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderObjectBase\");\nimport ShaderRegisterCache\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterData\");\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterElement\");\n\nimport MethodVO\t\t\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/data/MethodVO\");\nimport ShadowMethodBase\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/ShadowMethodBase\");\n\n// TODO: shadow mappers references in materials should be an interface so that this class should NOT extend ShadowMapMethodBase just for some delegation work\n/**\n * ShadowNearMethod provides a shadow map method that restricts the shadowed area near the camera to optimize\n * shadow map usage. This method needs to be used in conjunction with a NearDirectionalShadowMapper.\n *\n * @see away.lights.NearDirectionalShadowMapper\n */\nclass ShadowNearMethod extends ShadowMethodBase\n{\n\tprivate _baseMethod:ShadowMethodBase;\n\n\tprivate _fadeRatio:number;\n\tprivate _nearShadowMapper:NearDirectionalShadowMapper;\n\n\tprivate _onShaderInvalidatedDelegate:Function;\n\n\t/**\n\t * Creates a new ShadowNearMethod object.\n\t * @param baseMethod The shadow map sampling method used to sample individual cascades (fe: ShadowHardMethod, ShadowSoftMethod)\n\t * @param fadeRatio The amount of shadow fading to the outer shadow area. A value of 1 would mean the shadows start fading from the camera's near plane.\n\t */\n\tconstructor(baseMethod:ShadowMethodBase, fadeRatio:number = .1)\n\t{\n\t\tsuper(baseMethod.castingLight);\n\n\t\tthis._onShaderInvalidatedDelegate = (event:ShadingMethodEvent) => this.onShaderInvalidated(event);\n\n\t\tthis._baseMethod = baseMethod;\n\t\tthis._fadeRatio = fadeRatio;\n\t\tthis._nearShadowMapper = <NearDirectionalShadowMapper> this._pCastingLight.shadowMapper;\n\t\tif (!this._nearShadowMapper)\n\t\t\tthrow new Error(\"ShadowNearMethod requires a light that has a NearDirectionalShadowMapper instance assigned to shadowMapper.\");\n\t\tthis._baseMethod.addEventListener(ShadingMethodEvent.SHADER_INVALIDATED, this._onShaderInvalidatedDelegate);\n\t}\n\n\t/**\n\t * The base shadow map method on which this method's shading is based.\n\t */\n\tpublic get baseMethod():ShadowMethodBase\n\t{\n\t\treturn this._baseMethod;\n\t}\n\n\tpublic set baseMethod(value:ShadowMethodBase)\n\t{\n\t\tif (this._baseMethod == value)\n\t\t\treturn;\n\n\t\tthis._baseMethod.removeEventListener(ShadingMethodEvent.SHADER_INVALIDATED, this._onShaderInvalidatedDelegate);\n\n\t\tthis._baseMethod = value;\n\n\t\tthis._baseMethod.addEventListener(ShadingMethodEvent.SHADER_INVALIDATED, this._onShaderInvalidatedDelegate);\n\n\t\tthis.iInvalidateShaderProgram();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iInitConstants(shaderObject:ShaderObjectBase, methodVO:MethodVO)\n\t{\n\t\tsuper.iInitConstants(shaderObject, methodVO);\n\t\tthis._baseMethod.iInitConstants(shaderObject, methodVO);\n\n\t\tvar fragmentData:Array<number> = shaderObject.fragmentConstantData;\n\t\tvar index:number /*int*/ = methodVO.secondaryFragmentConstantsIndex;\n\t\tfragmentData[index + 2] = 0;\n\t\tfragmentData[index + 3] = 1;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iInitVO(shaderObject:ShaderLightingObject, methodVO:MethodVO)\n\t{\n\t\tthis._baseMethod.iInitVO(shaderObject, methodVO);\n\n\t\tmethodVO.needsProjection = true;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic dispose()\n\t{\n\t\tthis._baseMethod.removeEventListener(ShadingMethodEvent.SHADER_INVALIDATED, this._onShaderInvalidatedDelegate);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get alpha():number\n\t{\n\t\treturn this._baseMethod.alpha;\n\t}\n\n\tpublic set alpha(value:number)\n\t{\n\t\tthis._baseMethod.alpha = value;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get epsilon():number\n\t{\n\t\treturn this._baseMethod.epsilon;\n\t}\n\n\tpublic set epsilon(value:number)\n\t{\n\t\tthis._baseMethod.epsilon = value;\n\t}\n\n\t/**\n\t * The amount of shadow fading to the outer shadow area. A value of 1 would mean the shadows start fading from the camera's near plane.\n\t */\n\tpublic get fadeRatio():number\n\t{\n\t\treturn this._fadeRatio;\n\t}\n\n\tpublic set fadeRatio(value:number)\n\t{\n\t\tthis._fadeRatio = value;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iGetFragmentCode(shaderObject:ShaderObjectBase, methodVO:MethodVO, targetReg:ShaderRegisterElement, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tvar code:string = this._baseMethod.iGetFragmentCode(shaderObject, methodVO, targetReg, registerCache, sharedRegisters);\n\n\t\tvar dataReg:ShaderRegisterElement = registerCache.getFreeFragmentConstant();\n\t\tvar temp:ShaderRegisterElement = registerCache.getFreeFragmentSingleTemp();\n\t\tmethodVO.secondaryFragmentConstantsIndex = dataReg.index*4;\n\n\t\tcode += \"abs \" + temp + \", \" + sharedRegisters.projectionFragment + \".w\\n\" +\n\t\t\t\"sub \" + temp + \", \" + temp + \", \" + dataReg + \".x\\n\" +\n\t\t\t\"mul \" + temp + \", \" + temp + \", \" + dataReg + \".y\\n\" +\n\t\t\t\"sat \" + temp + \", \" + temp + \"\\n\" +\n\t\t\t\"sub \" + temp + \", \" + dataReg + \".w,\" + temp + \"\\n\" +\n\t\t\t\"sub \" + targetReg + \".w, \" + dataReg + \".w,\" + targetReg + \".w\\n\" +\n\t\t\t\"mul \" + targetReg + \".w, \" + targetReg + \".w, \" + temp + \"\\n\" +\n\t\t\t\"sub \" + targetReg + \".w, \" + dataReg + \".w,\" + targetReg + \".w\\n\";\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iActivate(shaderObject:ShaderObjectBase, methodVO:MethodVO, stage:Stage)\n\t{\n\t\tthis._baseMethod.iActivate(shaderObject, methodVO, stage);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iDeactivate(shaderObject:ShaderObjectBase, methodVO:MethodVO, stage:Stage)\n\t{\n\t\tthis._baseMethod.iDeactivate(shaderObject, methodVO, stage);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iSetRenderState(shaderObject:ShaderObjectBase, methodVO:MethodVO, renderable:RenderableBase, stage:Stage, camera:Camera)\n\t{\n\t\t// todo: move this to activate (needs camera)\n\t\tvar near:number = camera.projection.near;\n\t\tvar d:number = camera.projection.far - near;\n\t\tvar maxDistance:number = this._nearShadowMapper.coverageRatio;\n\t\tvar minDistance:number = maxDistance*(1 - this._fadeRatio);\n\n\t\tmaxDistance = near + maxDistance*d;\n\t\tminDistance = near + minDistance*d;\n\n\t\tvar fragmentData:Array<number> = shaderObject.fragmentConstantData;\n\t\tvar index:number /*int*/ = methodVO.secondaryFragmentConstantsIndex;\n\t\tfragmentData[index] = minDistance;\n\t\tfragmentData[index + 1] = 1/(maxDistance - minDistance);\n\n\t\tthis._baseMethod.iSetRenderState(shaderObject, methodVO, renderable, stage, camera);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iGetVertexCode(shaderObject:ShaderObjectBase, methodVO:MethodVO, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn this._baseMethod.iGetVertexCode(shaderObject, methodVO, registerCache, sharedRegisters);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iReset()\n\t{\n\t\tthis._baseMethod.iReset();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iCleanCompilationData()\n\t{\n\t\tsuper.iCleanCompilationData();\n\t\tthis._baseMethod.iCleanCompilationData();\n\t}\n\n\t/**\n\t * Called when the base method's shader code is invalidated.\n\t */\n\tprivate onShaderInvalidated(event:ShadingMethodEvent)\n\t{\n\t\tthis.iInvalidateShaderProgram();\n\t}\n}\n\nexport = ShadowNearMethod;",
    "import PoissonLookup\t\t\t\t\t= require(\"awayjs-core/lib/geom/PoissonLookup\");\n\nimport DirectionalLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport ShaderObjectBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderObjectBase\");\nimport ShaderRegisterCache\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterData\");\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterElement\");\n\nimport MethodVO\t\t\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/data/MethodVO\");\nimport ShadowMethodBase\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/ShadowMethodBase\");\n\n/**\n * ShadowSoftMethod provides a soft shadowing technique by randomly distributing sample points.\n */\nclass ShadowSoftMethod extends ShadowMethodBase\n{\n\tprivate _range:number = 1;\n\tprivate _numSamples:number /*int*/;\n\tprivate _offsets:Array<number>;\n\n\t/**\n\t * Creates a new DiffuseBasicMethod object.\n\t *\n\t * @param castingLight The light casting the shadows\n\t * @param numSamples The amount of samples to take for dithering. Minimum 1, maximum 32.\n\t */\n\tconstructor(castingLight:DirectionalLight, numSamples:number /*int*/ = 5, range:number = 1)\n\t{\n\t\tsuper(castingLight);\n\n\t\tthis.numSamples = numSamples;\n\t\tthis.range = range;\n\t}\n\n\t/**\n\t * The amount of samples to take for dithering. Minimum 1, maximum 32. The actual maximum may depend on the\n\t * complexity of the shader.\n\t */\n\tpublic get numSamples():number /*int*/\n\t{\n\t\treturn this._numSamples;\n\t}\n\n\tpublic set numSamples(value:number /*int*/)\n\t{\n\t\tthis._numSamples = value;\n\t\t\n\t\tif (this._numSamples < 1)\n\t\t\tthis._numSamples = 1;\n\t\telse if (this._numSamples > 32)\n\t\t\tthis._numSamples = 32;\n\n\t\tthis._offsets = PoissonLookup.getDistribution(this._numSamples);\n\t\t\n\t\tthis.iInvalidateShaderProgram();\n\t}\n\n\t/**\n\t * The range in the shadow map in which to distribute the samples.\n\t */\n\tpublic get range():number\n\t{\n\t\treturn this._range;\n\t}\n\n\tpublic set range(value:number)\n\t{\n\t\tthis._range = value;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iInitConstants(shaderObject:ShaderObjectBase, methodVO:MethodVO)\n\t{\n\t\tsuper.iInitConstants(shaderObject, methodVO);\n\n\t\tshaderObject.fragmentConstantData[methodVO.fragmentConstantsIndex + 8] = 1/this._numSamples;\n\t\tshaderObject.fragmentConstantData[methodVO.fragmentConstantsIndex + 9] = 0;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iActivate(shaderObject:ShaderObjectBase, methodVO:MethodVO, stage:Stage)\n\t{\n\t\tsuper.iActivate(shaderObject, methodVO, stage);\n\n\t\tvar texRange:number = .5*this._range/this._pCastingLight.shadowMapper.depthMapSize;\n\t\tvar data:Array<number> = shaderObject.fragmentConstantData;\n\t\tvar index:number /*uint*/ = methodVO.fragmentConstantsIndex + 10;\n\t\tvar len:number /*uint*/ = this._numSamples << 1;\n\n\t\tfor (var i:number /*int*/ = 0; i < len; ++i)\n\t\t\tdata[index + i] = this._offsets[i]*texRange;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pGetPlanarFragmentCode(methodVO:MethodVO, targetReg:ShaderRegisterElement, regCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\t// todo: move some things to super\n\t\tvar depthMapRegister:ShaderRegisterElement = regCache.getFreeTextureReg();\n\t\tvar decReg:ShaderRegisterElement = regCache.getFreeFragmentConstant();\n\t\tvar dataReg:ShaderRegisterElement = regCache.getFreeFragmentConstant();\n\t\tvar customDataReg:ShaderRegisterElement = regCache.getFreeFragmentConstant();\n\n\t\tmethodVO.fragmentConstantsIndex = decReg.index*4;\n\t\tmethodVO.texturesIndex = depthMapRegister.index;\n\n\t\treturn this.getSampleCode(regCache, depthMapRegister, decReg, targetReg, customDataReg);\n\t}\n\n\t/**\n\t * Adds the code for another tap to the shader code.\n\t * @param uv The uv register for the tap.\n\t * @param texture The texture register containing the depth map.\n\t * @param decode The register containing the depth map decoding data.\n\t * @param target The target register to add the tap comparison result.\n\t * @param regCache The register cache managing the registers.\n\t * @return\n\t */\n\tprivate addSample(uv:ShaderRegisterElement, texture:ShaderRegisterElement, decode:ShaderRegisterElement, target:ShaderRegisterElement, regCache:ShaderRegisterCache):string\n\t{\n\t\tvar temp:ShaderRegisterElement = regCache.getFreeFragmentVectorTemp();\n\t\treturn \"tex \" + temp + \", \" + uv + \", \" + texture + \" <2d,nearest,clamp>\\n\" +\n\t\t\t\"dp4 \" + temp + \".z, \" + temp + \", \" + decode + \"\\n\" +\n\t\t\t\"slt \" + uv + \".w, \" + this._pDepthMapCoordReg + \".z, \" + temp + \".z\\n\" + // 0 if in shadow\n\t\t\t\"add \" + target + \".w, \" + target + \".w, \" + uv + \".w\\n\";\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iActivateForCascade(shaderObject:ShaderObjectBase, methodVO:MethodVO, stage:Stage)\n\t{\n\t\tsuper.iActivate(shaderObject, methodVO, stage);\n\n\t\tvar texRange:number = this._range/this._pCastingLight.shadowMapper.depthMapSize;\n\t\tvar data:Array<number> = shaderObject.fragmentConstantData;\n\t\tvar index:number /*uint*/ = methodVO.secondaryFragmentConstantsIndex;\n\t\tvar len:number /*uint*/ = this._numSamples << 1;\n\t\tdata[index] = 1/this._numSamples;\n\t\tdata[index + 1] = 0;\n\t\tindex += 2;\n\n\t\tfor (var i:number /*int*/ = 0; i < len; ++i)\n\t\t\tdata[index + i] = this._offsets[i]*texRange;\n\n\t\tif (len%4 == 0) {\n\t\t\tdata[index + len] = 0;\n\t\t\tdata[index + len + 1] = 0;\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGetCascadeFragmentCode(shaderObject:ShaderObjectBase, methodVO:MethodVO, decodeRegister:ShaderRegisterElement, depthTexture:ShaderRegisterElement, depthProjection:ShaderRegisterElement, targetRegister:ShaderRegisterElement, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tthis._pDepthMapCoordReg = depthProjection;\n\n\t\tvar dataReg:ShaderRegisterElement = registerCache.getFreeFragmentConstant();\n\t\tmethodVO.secondaryFragmentConstantsIndex = dataReg.index*4;\n\n\t\treturn this.getSampleCode(registerCache, depthTexture, decodeRegister, targetRegister, dataReg);\n\t}\n\n\t/**\n\t * Get the actual shader code for shadow mapping\n\t * @param regCache The register cache managing the registers.\n\t * @param depthTexture The texture register containing the depth map.\n\t * @param decodeRegister The register containing the depth map decoding data.\n\t * @param targetReg The target register to add the shadow coverage.\n\t * @param dataReg The register containing additional data.\n\t */\n\tprivate getSampleCode(regCache:ShaderRegisterCache, depthTexture:ShaderRegisterElement, decodeRegister:ShaderRegisterElement, targetRegister:ShaderRegisterElement, dataReg:ShaderRegisterElement):string\n\t{\n\t\tvar uvReg:ShaderRegisterElement;\n\t\tvar code:string;\n\t\tvar offsets:Array<string> = new Array<string>(dataReg + \".zw\");\n\t\tuvReg = regCache.getFreeFragmentVectorTemp();\n\t\tregCache.addFragmentTempUsages(uvReg, 1);\n\n\t\tvar temp:ShaderRegisterElement = regCache.getFreeFragmentVectorTemp();\n\n\t\tvar numRegs:number /*int*/ = this._numSamples >> 1;\n\t\tfor (var i:number /*int*/ = 0; i < numRegs; ++i) {\n\t\t\tvar reg:ShaderRegisterElement = regCache.getFreeFragmentConstant();\n\t\t\toffsets.push(reg + \".xy\");\n\t\t\toffsets.push(reg + \".zw\");\n\t\t}\n\n\t\tfor (i = 0; i < this._numSamples; ++i) {\n\t\t\tif (i == 0) {\n\t\t\t\tcode = \"add \" + uvReg + \", \" + this._pDepthMapCoordReg + \", \" + dataReg + \".zwyy\\n\" +\n\t\t\t\t\t\"tex \" + temp + \", \" + uvReg + \", \" + depthTexture + \" <2d,nearest,clamp>\\n\" +\n\t\t\t\t\t\"dp4 \" + temp + \".z, \" + temp + \", \" + decodeRegister + \"\\n\" +\n\t\t\t\t\t\"slt \" + targetRegister + \".w, \" + this._pDepthMapCoordReg + \".z, \" + temp + \".z\\n\"; // 0 if in shadow;\n\t\t\t} else {\n\t\t\t\tcode += \"add \" + uvReg + \".xy, \" + this._pDepthMapCoordReg + \".xy, \" + offsets[i] + \"\\n\" +\n\t\t\t\t\tthis.addSample(uvReg, depthTexture, decodeRegister, targetRegister, regCache);\n\t\t\t}\n\t\t}\n\n\t\tregCache.removeFragmentTempUsage(uvReg);\n\n\t\tcode += \"mul \" + targetRegister + \".w, \" + targetRegister + \".w, \" + dataReg + \".x\\n\"; // average\n\n\t\treturn code;\n\t}\n}\n\nexport = ShadowSoftMethod;",
    "import ShaderLightingObject\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderLightingObject\");\nimport ShaderRegisterCache\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterData\");\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterElement\");\n\nimport MethodVO\t\t\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/data/MethodVO\");\nimport SpecularBasicMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/SpecularBasicMethod\");\n\n/**\n * SpecularAnisotropicMethod provides a specular method resulting in anisotropic highlights. These are typical for\n * surfaces with microfacet details such as tiny grooves. In particular, this uses the Heidrich-Seidel distrubution.\n * The tangent vectors are used as the surface groove directions.\n */\nclass SpecularAnisotropicMethod extends SpecularBasicMethod\n{\n\t/**\n\t * Creates a new SpecularAnisotropicMethod object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iInitVO(shaderObject:ShaderLightingObject, methodVO:MethodVO)\n\t{\n\t\tmethodVO.needsTangents = true;\n\t\tmethodVO.needsView = true;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iGetFragmentCodePerLight(shaderObject:ShaderLightingObject, methodVO:MethodVO, lightDirReg:ShaderRegisterElement, lightColReg:ShaderRegisterElement, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tvar code:string = \"\";\n\t\tvar t:ShaderRegisterElement;\n\n\t\tif (this._pIsFirstLight)\n\t\t\tt = this._pTotalLightColorReg;\n\t\telse {\n\t\t\tt = registerCache.getFreeFragmentVectorTemp();\n\t\t\tregisterCache.addFragmentTempUsages(t, 1);\n\t\t}\n\n\t\t// (sin(l,t) * sin(v,t) - cos(l,t)*cos(v,t)) ^ k\n\n\t\tcode += \"nrm \" + t + \".xyz, \" + sharedRegisters.tangentVarying + \".xyz\\n\" +\n\t\t\t\"dp3 \" + t + \".w, \" + t + \".xyz, \" + lightDirReg + \".xyz\\n\" +\n\t\t\t\"dp3 \" + t + \".z, \" + t + \".xyz, \" + sharedRegisters.viewDirFragment + \".xyz\\n\";\n\n\t\t// (sin(t.w) * sin(t.z) - cos(t.w)*cos(t.z)) ^ k\n\t\tcode += \"sin \" + t + \".x, \" + t + \".w\\n\" +\n\t\t\t\"sin \" + t + \".y, \" + t + \".z\\n\" +\n\t\t\t// (t.x * t.y - cos(t.w)*cos(t.z)) ^ k\n\t\t\t\"mul \" + t + \".x, \" + t + \".x, \" + t + \".y\\n\" +\n\t\t\t// (t.x - cos(t.w)*cos(t.z)) ^ k\n\t\t\t\"cos \" + t + \".z, \" + t + \".z\\n\" +\n\t\t\t\"cos \" + t + \".w, \" + t + \".w\\n\" +\n\t\t\t// (t.x - t.w*t.z) ^ k\n\t\t\t\"mul \" + t + \".w, \" + t + \".w, \" + t + \".z\\n\" +\n\t\t\t// (t.x - t.w) ^ k\n\t\t\t\"sub \" + t + \".w, \" + t + \".x, \" + t + \".w\\n\";\n\n\t\tif (this._pUseTexture) {\n\t\t\t// apply gloss modulation from texture\n\t\t\tcode += \"mul \" + this._pSpecularTexData + \".w, \" + this._pSpecularTexData + \".y, \" + this._pSpecularDataRegister + \".w\\n\" +\n\t\t\t\t\"pow \" + t + \".w, \" + t + \".w, \" + this._pSpecularTexData + \".w\\n\";\n\t\t} else\n\t\t\tcode += \"pow \" + t + \".w, \" + t + \".w, \" + this._pSpecularDataRegister + \".w\\n\";\n\n\t\t// attenuate\n\t\tcode += \"mul \" + t + \".w, \" + t + \".w, \" + lightDirReg + \".w\\n\";\n\n\t\tif (this._iModulateMethod != null)\n\t\t\tcode += this._iModulateMethod(shaderObject, methodVO, t, registerCache, sharedRegisters);\n\n\t\tcode += \"mul \" + t + \".xyz, \" + lightColReg + \".xyz, \" + t + \".w\\n\";\n\n\t\tif (!this._pIsFirstLight) {\n\t\t\tcode += \"add \" + this._pTotalLightColorReg + \".xyz, \" + this._pTotalLightColorReg + \".xyz, \" + t + \".xyz\\n\";\n\t\t\tregisterCache.removeFragmentTempUsage(t);\n\t\t}\n\n\t\tthis._pIsFirstLight = false;\n\n\t\treturn code;\n\t}\n}\n\nexport = SpecularAnisotropicMethod;",
    "import Texture2DBase\t\t\t\t= require(\"awayjs-core/lib/textures/Texture2DBase\");\n\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport ShaderLightingObject\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderLightingObject\");\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterData\");\nimport ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterElement\");\nimport ShaderCompilerHelper\t\t\t= require(\"awayjs-renderergl/lib/utils/ShaderCompilerHelper\");\n\nimport MethodVO\t\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/data/MethodVO\");\nimport LightingMethodBase\t\t\t= require(\"awayjs-methodmaterials/lib/methods/LightingMethodBase\");\nimport ShadingMethodBase\t\t\t= require(\"awayjs-methodmaterials/lib/methods/ShadingMethodBase\");\n\n/**\n * SpecularBasicMethod provides the default shading method for Blinn-Phong specular highlights (an optimized but approximated\n * version of Phong specularity).\n */\nclass SpecularBasicMethod extends LightingMethodBase\n{\n\tpublic _pUseTexture:boolean;\n\tpublic _pTotalLightColorReg:ShaderRegisterElement;\n\tpublic _pSpecularTextureRegister:ShaderRegisterElement;\n\tpublic _pSpecularTexData:ShaderRegisterElement;\n\tpublic _pSpecularDataRegister:ShaderRegisterElement;\n\n\tprivate _texture:Texture2DBase;\n\n\tprivate _gloss:number = 50;\n\tprivate _specular:number = 1;\n\tprivate _specularColor:number = 0xffffff;\n\tpublic _iSpecularR:number = 1;\n\tpublic _iSpecularG:number = 1;\n\tpublic _iSpecularB:number = 1;\n\tpublic _pIsFirstLight:boolean;\n\n\t/**\n\t * Creates a new SpecularBasicMethod object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\tpublic iIsUsed(shaderObject:ShaderLightingObject):boolean\n\t{\n\t\tif (!shaderObject.numLights)\n\t\t\treturn false;\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iInitVO(shaderObject:ShaderLightingObject, methodVO:MethodVO)\n\t{\n\t\tmethodVO.needsUV = this._pUseTexture;\n\t\tmethodVO.needsNormals = shaderObject.numLights > 0;\n\t\tmethodVO.needsView = shaderObject.numLights > 0;\n\t}\n\n\t/**\n\t * The sharpness of the specular highlight.\n\t */\n\tpublic get gloss():number\n\t{\n\t\treturn this._gloss;\n\t}\n\n\tpublic set gloss(value:number)\n\t{\n\t\tthis._gloss = value;\n\t}\n\n\t/**\n\t * The overall strength of the specular highlights.\n\t */\n\tpublic get specular():number\n\t{\n\t\treturn this._specular;\n\t}\n\n\tpublic set specular(value:number)\n\t{\n\t\tif (value == this._specular)\n\t\t\treturn;\n\n\t\tthis._specular = value;\n\t\tthis.updateSpecular();\n\t}\n\n\t/**\n\t * The colour of the specular reflection of the surface.\n\t */\n\tpublic get specularColor():number\n\t{\n\t\treturn this._specularColor;\n\t}\n\n\tpublic set specularColor(value:number)\n\t{\n\t\tif (this._specularColor == value)\n\t\t\treturn;\n\n\t\t// specular is now either enabled or disabled\n\t\tif (this._specularColor == 0 || value == 0)\n\t\t\tthis.iInvalidateShaderProgram();\n\n\t\tthis._specularColor = value;\n\t\tthis.updateSpecular();\n\t}\n\n\t/**\n\t * The bitmapData that encodes the specular highlight strength per texel in the red channel, and the sharpness\n\t * in the green channel. You can use SpecularBitmapTexture if you want to easily set specular and gloss maps\n\t * from grayscale images, but prepared images are preferred.\n\t */\n\tpublic get texture():Texture2DBase\n\t{\n\t\treturn this._texture;\n\t}\n\n\tpublic set texture(value:Texture2DBase)\n\t{\n\t\tvar b:boolean = ( value != null );\n\n\t\tif (b != this._pUseTexture || (value && this._texture && (value.format != this._texture.format)))\n\t\t\tthis.iInvalidateShaderProgram();\n\n\t\tthis._pUseTexture = b;\n\t\tthis._texture = value;\n\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic copyFrom(method:ShadingMethodBase)\n\t{\n\n\t\tvar m:any = method;\n\t\tvar bsm:SpecularBasicMethod = <SpecularBasicMethod> method;\n\n\t\tvar spec:SpecularBasicMethod = bsm;//SpecularBasicMethod(method);\n\t\tthis.texture = spec.texture;\n\t\tthis.specular = spec.specular;\n\t\tthis.specularColor = spec.specularColor;\n\t\tthis.gloss = spec.gloss;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iCleanCompilationData()\n\t{\n\t\tsuper.iCleanCompilationData();\n\t\tthis._pTotalLightColorReg = null;\n\t\tthis._pSpecularTextureRegister = null;\n\t\tthis._pSpecularTexData = null;\n\t\tthis._pSpecularDataRegister = null;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iGetFragmentPreLightingCode(shaderObject:ShaderLightingObject, methodVO:MethodVO, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tvar code:string = \"\";\n\n\t\tthis._pIsFirstLight = true;\n\n\t\tthis._pSpecularDataRegister = registerCache.getFreeFragmentConstant();\n\t\tmethodVO.fragmentConstantsIndex = this._pSpecularDataRegister.index*4;\n\n\t\tif (this._pUseTexture) {\n\n\t\t\tthis._pSpecularTexData = registerCache.getFreeFragmentVectorTemp();\n\t\t\tregisterCache.addFragmentTempUsages(this._pSpecularTexData, 1);\n\t\t\tthis._pSpecularTextureRegister = registerCache.getFreeTextureReg();\n\t\t\tmethodVO.texturesIndex = this._pSpecularTextureRegister.index;\n\t\t\tcode = ShaderCompilerHelper.getTex2DSampleCode(this._pSpecularTexData, sharedRegisters, this._pSpecularTextureRegister, this._texture, shaderObject.useSmoothTextures, shaderObject.repeatTextures, shaderObject.useMipmapping);\n\n\t\t} else {\n\n\t\t\tthis._pSpecularTextureRegister = null;\n\t\t}\n\n\t\tthis._pTotalLightColorReg = registerCache.getFreeFragmentVectorTemp();\n\t\tregisterCache.addFragmentTempUsages(this._pTotalLightColorReg, 1);\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iGetFragmentCodePerLight(shaderObject:ShaderLightingObject, methodVO:MethodVO, lightDirReg:ShaderRegisterElement, lightColReg:ShaderRegisterElement, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tvar code:string = \"\";\n\t\tvar t:ShaderRegisterElement;\n\n\t\tif (this._pIsFirstLight) {\n\t\t\tt = this._pTotalLightColorReg;\n\t\t} else {\n\t\t\tt = registerCache.getFreeFragmentVectorTemp();\n\t\t\tregisterCache.addFragmentTempUsages(t, 1);\n\t\t}\n\n\t\tvar viewDirReg:ShaderRegisterElement = sharedRegisters.viewDirFragment;\n\t\tvar normalReg:ShaderRegisterElement = sharedRegisters.normalFragment;\n\n\t\t// blinn-phong half vector model\n\t\tcode += \"add \" + t + \", \" + lightDirReg + \", \" + viewDirReg + \"\\n\" +\n\t\t\t\t\"nrm \" + t + \".xyz, \" + t + \"\\n\" +\n\t\t\t\t\"dp3 \" + t + \".w, \" + normalReg + \", \" + t + \"\\n\" +\n\t\t\t\t\"sat \" + t + \".w, \" + t + \".w\\n\";\n\n\t\tif (this._pUseTexture) {\n\t\t\t// apply gloss modulation from texture\n\t\t\tcode += \"mul \" + this._pSpecularTexData + \".w, \" + this._pSpecularTexData + \".y, \" + this._pSpecularDataRegister + \".w\\n\" +\n\t\t\t\t\t\"pow \" + t + \".w, \" + t + \".w, \" + this._pSpecularTexData + \".w\\n\";\n\t\t} else {\n\t\t\tcode += \"pow \" + t + \".w, \" + t + \".w, \" + this._pSpecularDataRegister + \".w\\n\";\n\t\t}\n\n\t\t// attenuate\n\t\tif (shaderObject.usesLightFallOff)\n\t\t\tcode += \"mul \" + t + \".w, \" + t + \".w, \" + lightDirReg + \".w\\n\";\n\n\t\tif (this._iModulateMethod != null)\n\t\t\tcode += this._iModulateMethod(shaderObject, methodVO, t, registerCache, sharedRegisters);\n\n\t\tcode += \"mul \" + t + \".xyz, \" + lightColReg + \", \" + t + \".w\\n\";\n\n\t\tif (!this._pIsFirstLight) {\n\t\t\tcode += \"add \" + this._pTotalLightColorReg + \".xyz, \" + this._pTotalLightColorReg + \", \" + t + \"\\n\";\n\t\t\tregisterCache.removeFragmentTempUsage(t);\n\t\t}\n\n\t\tthis._pIsFirstLight = false;\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iGetFragmentCodePerProbe(shaderObject:ShaderLightingObject, methodVO:MethodVO, cubeMapReg:ShaderRegisterElement, weightRegister:string, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tvar code:string = \"\";\n\t\tvar t:ShaderRegisterElement;\n\n\t\t// write in temporary if not first light, so we can add to total diffuse colour\n\t\tif (this._pIsFirstLight) {\n\t\t\tt = this._pTotalLightColorReg;\n\t\t} else {\n\t\t\tt = registerCache.getFreeFragmentVectorTemp();\n\t\t\tregisterCache.addFragmentTempUsages(t, 1);\n\t\t}\n\n\t\tvar normalReg:ShaderRegisterElement = sharedRegisters.normalFragment;\n\t\tvar viewDirReg:ShaderRegisterElement = sharedRegisters.viewDirFragment;\n\n\t\tcode += \"dp3 \" + t + \".w, \" + normalReg + \", \" + viewDirReg + \"\\n\" +\n\t\t\t\t\"add \" + t + \".w, \" + t + \".w, \" + t + \".w\\n\" +\n\t\t\t\t\"mul \" + t + \", \" + t + \".w, \" + normalReg + \"\\n\" +\n\t\t\t\t\"sub \" + t + \", \" + t + \", \" + viewDirReg + \"\\n\" +\n\t\t\t\t\"tex \" + t + \", \" + t + \", \" + cubeMapReg + \" <cube,\" + (shaderObject.useSmoothTextures? \"linear\":\"nearest\") + \",miplinear>\\n\" +\n\t\t\t\t\"mul \" + t + \".xyz, \" + t + \", \" + weightRegister + \"\\n\";\n\n\t\tif (this._iModulateMethod != null)\n\t\t\tcode += this._iModulateMethod(shaderObject, methodVO, t, registerCache, sharedRegisters);\n\n\t\tif (!this._pIsFirstLight) {\n\t\t\tcode += \"add \" + this._pTotalLightColorReg + \".xyz, \" + this._pTotalLightColorReg + \", \" + t + \"\\n\";\n\t\t\tregisterCache.removeFragmentTempUsage(t);\n\t\t}\n\n\t\tthis._pIsFirstLight = false;\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iGetFragmentPostLightingCode(shaderObject:ShaderLightingObject, methodVO:MethodVO, targetReg:ShaderRegisterElement, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tvar code:string = \"\";\n\n\t\tif (sharedRegisters.shadowTarget)\n\t\t\tcode += \"mul \" + this._pTotalLightColorReg + \".xyz, \" + this._pTotalLightColorReg + \", \" + sharedRegisters.shadowTarget + \".w\\n\";\n\n\t\tif (this._pUseTexture) {\n\t\t\t// apply strength modulation from texture\n\t\t\tcode += \"mul \" + this._pTotalLightColorReg + \".xyz, \" + this._pTotalLightColorReg + \", \" + this._pSpecularTexData + \".x\\n\";\n\t\t\tregisterCache.removeFragmentTempUsage(this._pSpecularTexData);\n\t\t}\n\n\t\t// apply material's specular reflection\n\t\tcode += \"mul \" + this._pTotalLightColorReg + \".xyz, \" + this._pTotalLightColorReg + \", \" + this._pSpecularDataRegister + \"\\n\" +\n\t\t\t\"add \" + targetReg + \".xyz, \" + targetReg + \", \" + this._pTotalLightColorReg + \"\\n\";\n\t\tregisterCache.removeFragmentTempUsage(this._pTotalLightColorReg);\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iActivate(shaderObject:ShaderLightingObject, methodVO:MethodVO, stage:Stage)\n\t{\n\t\tif (methodVO.texturesIndex >= 0)\n\t\t\tstage.activateTexture(methodVO.texturesIndex, this._texture, shaderObject.repeatTextures, shaderObject.useSmoothTextures, shaderObject.useMipmapping);\n\n\t\tvar index:number = methodVO.fragmentConstantsIndex;\n\t\tvar data:Array<number> = shaderObject.fragmentConstantData;\n\t\tdata[index] = this._iSpecularR;\n\t\tdata[index + 1] = this._iSpecularG;\n\t\tdata[index + 2] = this._iSpecularB;\n\t\tdata[index + 3] = this._gloss;\n\t}\n\n\t/**\n\t * Updates the specular color data used by the render state.\n\t */\n\tprivate updateSpecular()\n\t{\n\t\tthis._iSpecularR = (( this._specularColor >> 16) & 0xff)/0xff*this._specular;\n\t\tthis._iSpecularG = (( this._specularColor >> 8) & 0xff)/0xff*this._specular;\n\t\tthis._iSpecularB = ( this._specularColor & 0xff)/0xff*this._specular;\n\t}\n}\n\nexport = SpecularBasicMethod;",
    "import Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport ShaderLightingObject\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderLightingObject\");\nimport ShaderObjectBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderObjectBase\");\nimport ShaderRegisterCache\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterData\");\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterElement\");\n\nimport MethodVO\t\t\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/data/MethodVO\");\nimport SpecularBasicMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/SpecularBasicMethod\");\nimport SpecularCompositeMethod\t\t\t= require(\"awayjs-methodmaterials/lib/methods/SpecularCompositeMethod\");\n\n/**\n * SpecularCelMethod provides a shading method to add specular cel (cartoon) shading.\n */\nclass SpecularCelMethod extends SpecularCompositeMethod\n{\n\tprivate _dataReg:ShaderRegisterElement;\n\tprivate _smoothness:number = .1;\n\tprivate _specularCutOff:number = .1;\n\n\t/**\n\t * Creates a new SpecularCelMethod object.\n\t * @param specularCutOff The threshold at which the specular highlight should be shown.\n\t * @param baseMethod An optional specular method on which the cartoon shading is based. If ommitted, SpecularBasicMethod is used.\n\t */\n\tconstructor(specularCutOff:number = .5, baseMethod:SpecularBasicMethod = null)\n\t{\n\t\tsuper(null, baseMethod);\n\n\t\tthis.baseMethod._iModulateMethod = (shaderObject:ShaderObjectBase, methodVO:MethodVO, targetReg:ShaderRegisterElement, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData) => this.clampSpecular(shaderObject, methodVO, targetReg, registerCache, sharedRegisters);\n\n\t\tthis._specularCutOff = specularCutOff;\n\t}\n\n\t/**\n\t * The smoothness of the highlight edge.\n\t */\n\tpublic get smoothness():number\n\t{\n\t\treturn this._smoothness;\n\t}\n\n\tpublic set smoothness(value:number)\n\t{\n\t\tthis._smoothness = value;\n\t}\n\n\t/**\n\t * The threshold at which the specular highlight should be shown.\n\t */\n\tpublic get specularCutOff():number\n\t{\n\t\treturn this._specularCutOff;\n\t}\n\n\tpublic set specularCutOff(value:number)\n\t{\n\t\tthis._specularCutOff = value;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iActivate(shaderObject:ShaderLightingObject, methodVO:MethodVO, stage:Stage)\n\t{\n\t\tsuper.iActivate(shaderObject, methodVO, stage);\n\n\t\tvar index:number /*int*/ = methodVO.secondaryFragmentConstantsIndex;\n\t\tvar data:Array<number> = shaderObject.fragmentConstantData;\n\t\tdata[index] = this._smoothness;\n\t\tdata[index + 1] = this._specularCutOff;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iCleanCompilationData()\n\t{\n\t\tsuper.iCleanCompilationData();\n\t\tthis._dataReg = null;\n\t}\n\n\t/**\n\t * Snaps the specular shading strength of the wrapped method to zero or one, depending on whether or not it exceeds the specularCutOff\n\t * @param vo The MethodVO used to compile the current shader.\n\t * @param t The register containing the specular strength in the \"w\" component, and either the half-vector or the reflection vector in \"xyz\".\n\t * @param regCache The register cache used for the shader compilation.\n\t * @param sharedRegisters The shared register data for this shader.\n\t * @return The AGAL fragment code for the method.\n\t */\n\tprivate clampSpecular(shaderObject:ShaderObjectBase, methodVO:MethodVO, targetReg:ShaderRegisterElement, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"sub \" + targetReg + \".y, \" + targetReg + \".w, \" + this._dataReg + \".y\\n\" + // x - cutoff\n\t\t\t\"div \" + targetReg + \".y, \" + targetReg + \".y, \" + this._dataReg + \".x\\n\" + // (x - cutoff)/epsilon\n\t\t\t\"sat \" + targetReg + \".y, \" + targetReg + \".y\\n\" +\n\t\t\t\"sge \" + targetReg + \".w, \" + targetReg + \".w, \" + this._dataReg + \".y\\n\" +\n\t\t\t\"mul \" + targetReg + \".w, \" + targetReg + \".w, \" + targetReg + \".y\\n\";\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iGetFragmentPreLightingCode(shaderObject:ShaderLightingObject, methodVO:MethodVO, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tthis._dataReg = registerCache.getFreeFragmentConstant();\n\t\tmethodVO.secondaryFragmentConstantsIndex = this._dataReg.index*4;\n\n\t\treturn super.iGetFragmentPreLightingCode(shaderObject, methodVO, registerCache, sharedRegisters);\n\t}\n}\n\nexport = SpecularCelMethod;",
    "import Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\n\nimport Texture2DBase\t\t\t\t\t= require(\"awayjs-core/lib/textures/Texture2DBase\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport RenderableBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/pool/RenderableBase\");\nimport ShadingMethodEvent\t\t\t\t= require(\"awayjs-renderergl/lib/events/ShadingMethodEvent\");\nimport ShaderLightingObject\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderLightingObject\");\nimport ShaderObjectBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderObjectBase\");\nimport ShaderRegisterCache\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterData\");\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterElement\");\n\nimport MethodVO\t\t\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/data/MethodVO\");\nimport SpecularBasicMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/SpecularBasicMethod\");\n\n/**\n * SpecularCompositeMethod provides a base class for specular methods that wrap a specular method to alter the\n * calculated specular reflection strength.\n */\nclass SpecularCompositeMethod extends SpecularBasicMethod\n{\n\tprivate _baseMethod:SpecularBasicMethod;\n\n\tprivate _onShaderInvalidatedDelegate:Function;\n\n\t/**\n\t * Creates a new <code>SpecularCompositeMethod</code> object.\n\t *\n\t * @param modulateMethod The method which will add the code to alter the base method's strength. It needs to have the signature modSpecular(t:ShaderRegisterElement, regCache:ShaderRegisterCache):string, in which t.w will contain the specular strength and t.xyz will contain the half-vector or the reflection vector.\n\t * @param baseMethod The base specular method on which this method's shading is based.\n\t */\n\tconstructor(modulateMethod:(shaderObject:ShaderObjectBase, methodVO:MethodVO, targetReg:ShaderRegisterElement, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData) => string, baseMethod:SpecularBasicMethod = null)\n\t{\n\t\tsuper();\n\n\t\tthis._onShaderInvalidatedDelegate = (event:ShadingMethodEvent) => this.onShaderInvalidated(event);\n\n\t\tthis._baseMethod = baseMethod || new SpecularBasicMethod();\n\t\tthis._baseMethod._iModulateMethod = modulateMethod;\n\t\tthis._baseMethod.addEventListener(ShadingMethodEvent.SHADER_INVALIDATED, this._onShaderInvalidatedDelegate);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iInitVO(shaderObject:ShaderLightingObject, methodVO:MethodVO)\n\t{\n\t\tthis._baseMethod.iInitVO(shaderObject, methodVO);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iInitConstants(shaderObject:ShaderObjectBase, methodVO:MethodVO)\n\t{\n\t\tthis._baseMethod.iInitConstants(shaderObject, methodVO);\n\t}\n\n\t/**\n\t * The base specular method on which this method's shading is based.\n\t */\n\tpublic get baseMethod():SpecularBasicMethod\n\t{\n\t\treturn this._baseMethod;\n\t}\n\n\tpublic set baseMethod(value:SpecularBasicMethod)\n\t{\n\t\tif (this._baseMethod == value)\n\t\t\treturn;\n\n\t\tthis._baseMethod.removeEventListener(ShadingMethodEvent.SHADER_INVALIDATED, this._onShaderInvalidatedDelegate);\n\n\t\tthis._baseMethod = value;\n\n\t\tthis._baseMethod.addEventListener(ShadingMethodEvent.SHADER_INVALIDATED, this._onShaderInvalidatedDelegate);\n\n\t\tthis.iInvalidateShaderProgram();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get gloss():number\n\t{\n\t\treturn this._baseMethod.gloss;\n\t}\n\n\tpublic set gloss(value:number)\n\t{\n\t\tthis._baseMethod.gloss = value;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get specular():number\n\t{\n\t\treturn this._baseMethod.specular;\n\t}\n\n\tpublic set specular(value:number)\n\t{\n\t\tthis._baseMethod.specular = value;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic dispose()\n\t{\n\t\tthis._baseMethod.removeEventListener(ShadingMethodEvent.SHADER_INVALIDATED, this._onShaderInvalidatedDelegate);\n\t\tthis._baseMethod.dispose();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get texture():Texture2DBase\n\t{\n\t\treturn this._baseMethod.texture;\n\t}\n\n\tpublic set texture(value:Texture2DBase)\n\t{\n\t\tthis._baseMethod.texture = value;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iActivate(shaderObject:ShaderLightingObject, methodVO:MethodVO, stage:Stage)\n\t{\n\t\tthis._baseMethod.iActivate(shaderObject, methodVO, stage);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iSetRenderState(shaderObject:ShaderLightingObject, methodVO:MethodVO, renderable:RenderableBase, stage:Stage, camera:Camera)\n\t{\n\t\tthis._baseMethod.iSetRenderState(shaderObject, methodVO, renderable, stage, camera);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iDeactivate(shaderObject:ShaderObjectBase, methodVO:MethodVO, stage:Stage)\n\t{\n\t\tthis._baseMethod.iDeactivate(shaderObject, methodVO, stage);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iGetVertexCode(shaderObject:ShaderObjectBase, methodVO:MethodVO, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn this._baseMethod.iGetVertexCode(shaderObject, methodVO, registerCache, sharedRegisters);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iGetFragmentPreLightingCode(shaderObject:ShaderLightingObject, methodVO:MethodVO, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn this._baseMethod.iGetFragmentPreLightingCode(shaderObject, methodVO, registerCache, sharedRegisters);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iGetFragmentCodePerLight(shaderObject:ShaderLightingObject, methodVO:MethodVO, lightDirReg:ShaderRegisterElement, lightColReg:ShaderRegisterElement, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn this._baseMethod.iGetFragmentCodePerLight(shaderObject, methodVO, lightDirReg, lightColReg, registerCache, sharedRegisters);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t * @return\n\t */\n\tpublic iGetFragmentCodePerProbe(shaderObject:ShaderLightingObject, methodVO:MethodVO, cubeMapReg:ShaderRegisterElement, weightRegister:string, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn this._baseMethod.iGetFragmentCodePerProbe(shaderObject, methodVO, cubeMapReg, weightRegister, registerCache, sharedRegisters);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iGetFragmentPostLightingCode(shaderObject:ShaderLightingObject, methodVO:MethodVO, targetReg:ShaderRegisterElement, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn this._baseMethod.iGetFragmentPostLightingCode(shaderObject, methodVO, targetReg, registerCache, sharedRegisters);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iReset()\n\t{\n\t\tthis._baseMethod.iReset();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iCleanCompilationData()\n\t{\n\t\tsuper.iCleanCompilationData();\n\t\tthis._baseMethod.iCleanCompilationData();\n\t}\n\n\t/**\n\t * Called when the base method's shader code is invalidated.\n\t */\n\tprivate onShaderInvalidated(event:ShadingMethodEvent)\n\t{\n\t\tthis.iInvalidateShaderProgram();\n\t}\n}\n\nexport = SpecularCompositeMethod;",
    "import Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport ShaderLightingObject\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderLightingObject\");\nimport ShaderObjectBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderObjectBase\");\nimport ShaderRegisterCache\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterData\");\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterElement\");\n\nimport MethodVO\t\t\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/data/MethodVO\");\nimport SpecularBasicMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/SpecularBasicMethod\");\nimport SpecularCompositeMethod\t\t\t= require(\"awayjs-methodmaterials/lib/methods/SpecularCompositeMethod\");\n\n/**\n * SpecularFresnelMethod provides a specular shading method that causes stronger highlights on grazing view angles.\n */\nclass SpecularFresnelMethod extends SpecularCompositeMethod\n{\n\tprivate _dataReg:ShaderRegisterElement;\n\tprivate _incidentLight:boolean;\n\tprivate _fresnelPower:number = 5;\n\tprivate _normalReflectance:number = .028; // default value for skin\n\n\t/**\n\t * Creates a new SpecularFresnelMethod object.\n\t * @param basedOnSurface Defines whether the fresnel effect should be based on the view angle on the surface (if true), or on the angle between the light and the view.\n\t * @param baseMethod The specular method to which the fresnel equation. Defaults to SpecularBasicMethod.\n\t */\n\tconstructor(basedOnSurface:boolean = true, baseMethod:SpecularBasicMethod = null)\n\t{\n\t\t// may want to offer diff speculars\n\t\tsuper(null, baseMethod);\n\n\t\tthis.baseMethod._iModulateMethod = (shaderObject:ShaderObjectBase, methodVO:MethodVO, targetReg:ShaderRegisterElement, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData) => this.modulateSpecular(shaderObject, methodVO, targetReg, registerCache, sharedRegisters);\n\n\t\tthis._incidentLight = !basedOnSurface;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iInitConstants(shaderObject:ShaderObjectBase, methodVO:MethodVO)\n\t{\n\n\t\tvar index:number = methodVO.secondaryFragmentConstantsIndex;\n\t\tshaderObject.fragmentConstantData[index + 2] = 1;\n\t\tshaderObject.fragmentConstantData[index + 3] = 0;\n\t}\n\n\t/**\n\t * Defines whether the fresnel effect should be based on the view angle on the surface (if true), or on the angle between the light and the view.\n\t */\n\tpublic get basedOnSurface():boolean\n\t{\n\t\treturn !this._incidentLight;\n\t}\n\n\tpublic set basedOnSurface(value:boolean)\n\t{\n\t\tif (this._incidentLight != value)\n\t\t\treturn;\n\n\t\tthis._incidentLight = !value;\n\n\t\tthis.iInvalidateShaderProgram();\n\t}\n\n\t/**\n\t * The power used in the Fresnel equation. Higher values make the fresnel effect more pronounced. Defaults to 5.\n\t */\n\tpublic get fresnelPower():number\n\t{\n\t\treturn this._fresnelPower;\n\t}\n\n\tpublic set fresnelPower(value:number)\n\t{\n\t\tthis._fresnelPower = value;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iCleanCompilationData()\n\t{\n\t\tsuper.iCleanCompilationData();\n\t\tthis._dataReg = null;\n\t}\n\n\t/**\n\t * The minimum amount of reflectance, ie the reflectance when the view direction is normal to the surface or light direction.\n\t */\n\tpublic get normalReflectance():number\n\t{\n\t\treturn this._normalReflectance;\n\t}\n\n\tpublic set normalReflectance(value:number)\n\t{\n\t\tthis._normalReflectance = value;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iActivate(shaderObject:ShaderLightingObject, methodVO:MethodVO, stage:Stage)\n\t{\n\t\tsuper.iActivate(shaderObject, methodVO, stage);\n\n\t\tvar fragmentData:Array<number> = shaderObject.fragmentConstantData;\n\n\t\tvar index:number = methodVO.secondaryFragmentConstantsIndex;\n\t\tfragmentData[index] = this._normalReflectance;\n\t\tfragmentData[index + 1] = this._fresnelPower;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iGetFragmentPreLightingCode(shaderObject:ShaderLightingObject, methodVO:MethodVO, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tthis._dataReg = registerCache.getFreeFragmentConstant();\n\n\t\tmethodVO.secondaryFragmentConstantsIndex = this._dataReg.index*4;\n\n\t\treturn super.iGetFragmentPreLightingCode(shaderObject, methodVO, registerCache, sharedRegisters);\n\t}\n\n\t/**\n\t * Applies the fresnel effect to the specular strength.\n\t *\n\t * @param vo The MethodVO object containing the method data for the currently compiled material pass.\n\t * @param target The register containing the specular strength in the \"w\" component, and the half-vector/reflection vector in \"xyz\".\n\t * @param regCache The register cache used for the shader compilation.\n\t * @param sharedRegisters The shared registers created by the compiler.\n\t * @return The AGAL fragment code for the method.\n\t */\n\tprivate modulateSpecular(shaderObject:ShaderObjectBase, methodVO:MethodVO, targetReg:ShaderRegisterElement, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tvar code:string;\n\n\t\tcode = \"dp3 \" + targetReg + \".y, \" + sharedRegisters.viewDirFragment + \".xyz, \" + (this._incidentLight? targetReg : sharedRegisters.normalFragment) + \".xyz\\n\" +   // dot(V, H)\n\t\t\t\"sub \" + targetReg + \".y, \" + this._dataReg + \".z, \" + targetReg + \".y\\n\" +             // base = 1-dot(V, H)\n\t\t\t\"pow \" + targetReg + \".x, \" + targetReg + \".y, \" + this._dataReg + \".y\\n\" +             // exp = pow(base, 5)\n\t\t\t\"sub \" + targetReg + \".y, \" + this._dataReg + \".z, \" + targetReg + \".y\\n\" +             // 1 - exp\n\t\t\t\"mul \" + targetReg + \".y, \" + this._dataReg + \".x, \" + targetReg + \".y\\n\" +             // f0*(1 - exp)\n\t\t\t\"add \" + targetReg + \".y, \" + targetReg + \".x, \" + targetReg + \".y\\n\" +          // exp + f0*(1 - exp)\n\t\t\t\"mul \" + targetReg + \".w, \" + targetReg + \".w, \" + targetReg + \".y\\n\";\n\n\t\treturn code;\n\t}\n\n}\n\nexport = SpecularFresnelMethod;",
    "import ShaderLightingObject\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderLightingObject\");\nimport ShaderRegisterCache\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterData\");\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterElement\");\n\nimport MethodVO\t\t\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/data/MethodVO\");\nimport SpecularBasicMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/SpecularBasicMethod\");\n\n/**\n * SpecularPhongMethod provides a specular method that provides Phong highlights.\n */\nclass SpecularPhongMethod extends SpecularBasicMethod\n{\n\t/**\n\t * Creates a new SpecularPhongMethod object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iGetFragmentCodePerLight(shaderObject:ShaderLightingObject, methodVO:MethodVO, lightDirReg:ShaderRegisterElement, lightColReg:ShaderRegisterElement, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tvar code:string = \"\";\n\t\tvar t:ShaderRegisterElement;\n\n\t\tif (this._pIsFirstLight) {\n\t\t\tt = this._pTotalLightColorReg;\n\t\t} else {\n\t\t\tt = registerCache.getFreeFragmentVectorTemp();\n\t\t\tregisterCache.addFragmentTempUsages(t, 1);\n\t\t}\n\n\t\tvar viewDirReg:ShaderRegisterElement =sharedRegisters.viewDirFragment;\n\t\tvar normalReg:ShaderRegisterElement =sharedRegisters.normalFragment;\n\n\t\t// phong model\n\t\tcode += \"dp3 \" + t + \".w, \" + lightDirReg + \", \" + normalReg + \"\\n\" + // sca1 = light.normal\n\n\t\t\t//find the reflected light vector R\n\t\t\t\"add \" + t + \".w, \" + t + \".w, \" + t + \".w\\n\" + // sca1 = sca1*2\n\t\t\t\"mul \" + t + \".xyz, \" + normalReg + \", \" + t + \".w\\n\" + // vec1 = normal*sca1\n\t\t\t\"sub \" + t + \".xyz, \" + t + \", \" + lightDirReg + \"\\n\" + // vec1 = vec1 - light (light vector is negative)\n\n\t\t\t//smooth the edge as incidence angle approaches 90\n\t\t\t\"add \" + t + \".w, \" + t + \".w, \" +sharedRegisters.commons + \".w\\n\" + // sca1 = sca1 + smoothtep;\n\t\t\t\"sat \" + t + \".w, \" + t + \".w\\n\" + // sca1 range 0 - 1\n\t\t\t\"mul \" + t + \".xyz, \" + t + \", \" + t + \".w\\n\" + // vec1 = vec1*sca1\n\n\t\t\t//find the dot product between R and V\n\t\t\t\"dp3 \" + t + \".w, \" + t + \", \" + viewDirReg + \"\\n\" + // sca1 = vec1.view\n\t\t\t\"sat \" + t + \".w, \" + t + \".w\\n\";\n\n\t\tif (this._pUseTexture) {\n\t\t\t// apply gloss modulation from texture\n\t\t\tcode += \"mul \" + this._pSpecularTexData + \".w, \" + this._pSpecularTexData + \".y, \" + this._pSpecularDataRegister + \".w\\n\" + \"pow \" + t + \".w, \" + t + \".w, \" + this._pSpecularTexData + \".w\\n\";\n\t\t} else\n\t\t\tcode += \"pow \" + t + \".w, \" + t + \".w, \" + this._pSpecularDataRegister + \".w\\n\";\n\n\t\t// attenuate\n\t\tif (shaderObject.usesLightFallOff)\n\t\t\tcode += \"mul \" + t + \".w, \" + t + \".w, \" + lightDirReg + \".w\\n\";\n\n\t\tif (this._iModulateMethod != null)\n\t\t\tcode += this._iModulateMethod(shaderObject, methodVO, t, registerCache, sharedRegisters);\n\n\t\tcode += \"mul \" + t + \".xyz, \" + lightColReg + \".xyz, \" + t + \".w\\n\";\n\n\t\tif (!this._pIsFirstLight) {\n\t\t\tcode += \"add \" + this._pTotalLightColorReg + \".xyz, \" + this._pTotalLightColorReg + \".xyz, \" + t + \".xyz\\n\";\n\t\t\tregisterCache.removeFragmentTempUsage(t);\n\t\t}\n\n\t\tthis._pIsFirstLight = false;\n\n\t\treturn code;\n\t}\n}\n\nexport = SpecularPhongMethod;",
    "class PassMode\n{\n\t/**\n\t *\n\t */\n\tpublic static EFFECTS:number = 0x01;\n\n\t/**\n\t *\n\t */\n\tpublic static LIGHTING:number = 0x02;\n\n\t/**\n\t *\n\t */\n\tpublic static SUPER_SHADER:number = 0x03;\n}\n\nexport = PassMode;",
    "import TriangleSubGeometry\t\t\t\t= require(\"awayjs-core/lib/data/TriangleSubGeometry\");\nimport ColorTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Matrix\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\nimport Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Matrix3DUtils\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport AbstractMethodError\t\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport Event\t\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\nimport MaterialBase\t\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport IRenderObjectOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderObjectOwner\");\nimport LightPickerBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/LightPickerBase\");\nimport LightSources\t\t\t\t\t\t= require(\"awayjs-display/lib/materials/LightSources\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport RendererBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/base/RendererBase\");\nimport ShaderLightingObject\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderLightingObject\");\nimport ShadingMethodEvent\t\t\t\t= require(\"awayjs-renderergl/lib/events/ShadingMethodEvent\");\nimport ShaderObjectBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderObjectBase\");\nimport ShaderRegisterCache\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterData\");\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterElement\");\nimport RenderableBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/pool/RenderableBase\");\nimport RenderPassBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/passes/RenderPassBase\");\nimport IRenderLightingPass\t\t\t\t= require(\"awayjs-renderergl/lib/passes/IRenderLightingPass\");\nimport IRenderableClass\t\t\t\t\t= require(\"awayjs-renderergl/lib/pool/IRenderableClass\");\n\nimport MethodVO\t\t\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/data/MethodVO\");\nimport RenderMethodMaterialObject\t\t= require(\"awayjs-methodmaterials/lib/compilation/RenderMethodMaterialObject\");\nimport AmbientBasicMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/AmbientBasicMethod\");\nimport DiffuseBasicMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/DiffuseBasicMethod\");\nimport EffectColorTransformMethod\t\t= require(\"awayjs-methodmaterials/lib/methods/EffectColorTransformMethod\");\nimport EffectMethodBase\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/EffectMethodBase\");\nimport LightingMethodBase\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/LightingMethodBase\");\nimport NormalBasicMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/NormalBasicMethod\");\nimport ShadowMapMethodBase\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/ShadowMapMethodBase\");\nimport SpecularBasicMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/SpecularBasicMethod\");\nimport MethodPassMode\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/passes/MethodPassMode\");\n\n/**\n * CompiledPass forms an abstract base class for the default compiled pass materials provided by Away3D,\n * using material methods to define their appearance.\n */\nclass MethodPass extends RenderPassBase implements IRenderLightingPass\n{\n\tprivate _maxLights:number = 3;\n\n\tprivate _mode:number = 0x03;\n\tprivate _material:MaterialBase;\n\tprivate _lightPicker:LightPickerBase;\n\n\tprivate _includeCasters:boolean = true;\n\n\tpublic _iColorTransformMethodVO:MethodVO;\n\tpublic _iNormalMethodVO:MethodVO;\n\tpublic _iAmbientMethodVO:MethodVO;\n\tpublic _iShadowMethodVO:MethodVO;\n\tpublic _iDiffuseMethodVO:MethodVO;\n\tpublic _iSpecularMethodVO:MethodVO;\n\tpublic _iMethodVOs:Array<MethodVO> = new Array<MethodVO>();\n\n\tpublic _numEffectDependencies:number = 0;\n\n\tprivate _onLightsChangeDelegate:(event:Event) => void;\n\tprivate _onMethodInvalidatedDelegate:(event:ShadingMethodEvent) => void;\n\n\tpublic numDirectionalLights:number = 0;\n\n\tpublic numPointLights:number = 0;\n\n\tpublic numLightProbes:number = 0;\n\n\tpublic pointLightsOffset:number = 0;\n\t\n\tpublic directionalLightsOffset:number= 0;\n\t\n\tpublic lightProbesOffset:number = 0;\n\t\n\t/**\n\t *\n\t */\n\tpublic get mode():number\n\t{\n\t\treturn this._mode;\n\t}\n\n\tpublic set mode(value:number)\n\t{\n\t\tif (this._mode == value)\n\t\t\treturn;\n\t\t\n\t\tthis._mode = value;\n\n\t\tthis._updateLights();\n\t}\n\n\t/**\n\t * Indicates whether or not shadow casting lights need to be included.\n\t */\n\tpublic get includeCasters():boolean\n\t{\n\t\treturn this._includeCasters;\n\t}\n\n\tpublic set includeCasters(value:boolean)\n\t{\n\t\tif (this._includeCasters == value)\n\t\t\treturn;\n\n\t\tthis._includeCasters = value;\n\n\t\tthis._updateLights();\n\t}\n\n\t/**\n\t * \n\t * @returns {LightPickerBase}\n\t */\n\tpublic get lightPicker():LightPickerBase\n\t{\n\t\treturn this._lightPicker;\n\t}\n\n\tpublic set lightPicker(value:LightPickerBase)\n\t{\n\t\t//if (this._lightPicker == value)\n\t\t//\treturn;\n\n\t\tif (this._lightPicker)\n\t\t\tthis._lightPicker.removeEventListener(Event.CHANGE, this._onLightsChangeDelegate);\n\n\t\tthis._lightPicker = value;\n\n\t\tif (this._lightPicker)\n\t\t\tthis._lightPicker.addEventListener(Event.CHANGE, this._onLightsChangeDelegate);\n\n\t\tthis._updateLights();\n\t}\n\t\n\t/**\n\t * Whether or not to use fallOff and radius properties for lights. This can be used to improve performance and\n\t * compatibility for constrained mode.\n\t */\n\tpublic get enableLightFallOff():boolean\n\t{\n\t\treturn this._material.enableLightFallOff;\n\t}\n\n\t/**\n\t * Define which light source types to use for diffuse reflections. This allows choosing between regular lights\n\t * and/or light probes for diffuse reflections.\n\t *\n\t * @see away3d.materials.LightSources\n\t */\n\tpublic get diffuseLightSources():number\n\t{\n\t\treturn this._material.diffuseLightSources;\n\t}\n\n\t/**\n\t * Define which light source types to use for specular reflections. This allows choosing between regular lights\n\t * and/or light probes for specular reflections.\n\t *\n\t * @see away3d.materials.LightSources\n\t */\n\tpublic get specularLightSources():number\n\t{\n\t\treturn this._material.specularLightSources;\n\t}\n\n\t/**\n\t * Creates a new CompiledPass object.\n\t *\n\t * @param material The material to which this pass belongs.\n\t */\n\tconstructor(mode:number, renderObject:RenderMethodMaterialObject, renderObjectOwner:MaterialBase, renderableClass:IRenderableClass, stage:Stage)\n\t{\n\t\tsuper(renderObject, renderObjectOwner, renderableClass, stage);\n\n\t\tthis._mode = mode;\n\n\t\tthis._material = renderObjectOwner;\n\n\t\tthis._onLightsChangeDelegate = (event:Event) => this.onLightsChange(event);\n\t\t\n\t\tthis._onMethodInvalidatedDelegate = (event:ShadingMethodEvent) => this.onMethodInvalidated(event);\n\n\t\tthis.lightPicker = renderObjectOwner.lightPicker;\n\n\t\tif (this._shader == null)\n\t\t\tthis._updateShader();\n\t}\n\n\tprivate _updateShader()\n\t{\n\t\tif ((this.numDirectionalLights || this.numPointLights || this.numLightProbes) && !(this._shader instanceof ShaderLightingObject)) {\n\t\t\tif (this._shader != null)\n\t\t\t\tthis._shader.dispose();\n\n\t\t\tthis._shader = new ShaderLightingObject(this._renderableClass, this, this._stage);\n\t\t} else if (!(this._shader instanceof ShaderObjectBase)) {\n\t\t\tif (this._shader != null)\n\t\t\t\tthis._shader.dispose();\n\n\t\t\tthis._shader = new ShaderObjectBase(this._renderableClass, this, this._stage);\n\t\t}\n\t}\n\n\t/**\n\t * Initializes the unchanging constant data for this material.\n\t */\n\tpublic _iInitConstantData(shaderObject:ShaderObjectBase)\n\t{\n\t\tsuper._iInitConstantData(shaderObject);\n\n\t\t//Updates method constants if they have changed.\n\t\tvar len:number = this._iMethodVOs.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._iMethodVOs[i].method.iInitConstants(shaderObject, this._iMethodVOs[i]);\n\t}\n\n\t/**\n\t * The ColorTransform object to transform the colour of the material with. Defaults to null.\n\t */\n\tpublic get colorTransform():ColorTransform\n\t{\n\t\treturn this.colorTransformMethod? this.colorTransformMethod.colorTransform : null;\n\t}\n\n\tpublic set colorTransform(value:ColorTransform)\n\t{\n\t\tif (value) {\n\t\t\tif (this.colorTransformMethod == null)\n\t\t\t\tthis.colorTransformMethod = new EffectColorTransformMethod();\n\n\t\t\tthis.colorTransformMethod.colorTransform = value;\n\n\t\t} else if (!value) {\n\t\t\tif (this.colorTransformMethod)\n\t\t\t\tthis.colorTransformMethod = null;\n\t\t}\n\t}\n\n\t/**\n\t * The EffectColorTransformMethod object to transform the colour of the material with. Defaults to null.\n\t */\n\tpublic get colorTransformMethod():EffectColorTransformMethod\n\t{\n\t\treturn this._iColorTransformMethodVO? <EffectColorTransformMethod> this._iColorTransformMethodVO.method : null;\n\t}\n\n\tpublic set colorTransformMethod(value:EffectColorTransformMethod)\n\t{\n\t\tif (this._iColorTransformMethodVO && this._iColorTransformMethodVO.method == value)\n\t\t\treturn;\n\n\t\tif (this._iColorTransformMethodVO) {\n\t\t\tthis._removeDependency(this._iColorTransformMethodVO);\n\t\t\tthis._iColorTransformMethodVO = null;\n\t\t}\n\n\t\tif (value) {\n\t\t\tthis._iColorTransformMethodVO = new MethodVO(value);\n\t\t\tthis._addDependency(this._iColorTransformMethodVO);\n\t\t}\n\t}\n\n\tprivate _removeDependency(methodVO:MethodVO, effectsDependency:boolean = false)\n\t{\n\t\tvar index:number = this._iMethodVOs.indexOf(methodVO);\n\n\t\tif (!effectsDependency)\n\t\t\tthis._numEffectDependencies--;\n\n\t\tmethodVO.method.removeEventListener(ShadingMethodEvent.SHADER_INVALIDATED, this._onMethodInvalidatedDelegate);\n\t\tthis._iMethodVOs.splice(index, 1);\n\n\t\tthis.invalidatePass();\n\t}\n\n\tprivate _addDependency(methodVO:MethodVO, effectsDependency:boolean = false, index:number = -1)\n\t{\n\t\tmethodVO.method.addEventListener(ShadingMethodEvent.SHADER_INVALIDATED, this._onMethodInvalidatedDelegate);\n\n\t\tif (effectsDependency) {\n\t\t\tif (index != -1)\n\t\t\t\tthis._iMethodVOs.splice(index + this._iMethodVOs.length - this._numEffectDependencies, 0, methodVO);\n\t\t\telse\n\t\t\t\tthis._iMethodVOs.push(methodVO);\n\t\t\tthis._numEffectDependencies++;\n\t\t} else {\n\t\t\tthis._iMethodVOs.splice(this._iMethodVOs.length - this._numEffectDependencies, 0, methodVO);\n\t\t}\n\n\t\tthis.invalidatePass();\n\t}\n\n\t/**\n\t * Appends an \"effect\" shading method to the shader. Effect methods are those that do not influence the lighting\n\t * but modulate the shaded colour, used for fog, outlines, etc. The method will be applied to the result of the\n\t * methods added prior.\n\t */\n\tpublic addEffectMethod(method:EffectMethodBase)\n\t{\n\t\tthis._addDependency(new MethodVO(method), true);\n\t}\n\n\t/**\n\t * The number of \"effect\" methods added to the material.\n\t */\n\tpublic get numEffectMethods():number\n\t{\n\t\treturn this._numEffectDependencies;\n\t}\n\n\t/**\n\t * Queries whether a given effects method was added to the material.\n\t *\n\t * @param method The method to be queried.\n\t * @return true if the method was added to the material, false otherwise.\n\t */\n\tpublic hasEffectMethod(method:EffectMethodBase):boolean\n\t{\n\t\treturn this.getDependencyForMethod(method) != null;\n\t}\n\n\t/**\n\t * Returns the method added at the given index.\n\t * @param index The index of the method to retrieve.\n\t * @return The method at the given index.\n\t */\n\tpublic getEffectMethodAt(index:number):EffectMethodBase\n\t{\n\t\tif (index < 0 || index > this._numEffectDependencies - 1)\n\t\t\treturn null;\n\n\t\treturn <EffectMethodBase> this._iMethodVOs[index + this._iMethodVOs.length - this._numEffectDependencies].method;\n\t}\n\n\t/**\n\t * Adds an effect method at the specified index amongst the methods already added to the material. Effect\n\t * methods are those that do not influence the lighting but modulate the shaded colour, used for fog, outlines,\n\t * etc. The method will be applied to the result of the methods with a lower index.\n\t */\n\tpublic addEffectMethodAt(method:EffectMethodBase, index:number)\n\t{\n\t\tthis._addDependency(new MethodVO(method), true, index);\n\t}\n\n\t/**\n\t * Removes an effect method from the material.\n\t * @param method The method to be removed.\n\t */\n\tpublic removeEffectMethod(method:EffectMethodBase)\n\t{\n\t\tvar methodVO:MethodVO = this.getDependencyForMethod(method);\n\n\t\tif (methodVO != null)\n\t\t\tthis._removeDependency(methodVO, true);\n\t}\n\n\n\t/**\n\t * remove an effect method at the specified index from the material.\n\t */\n\tpublic removeEffectMethodAt(index:number)\n\t{\n\t\tif (index < 0 || index > this._numEffectDependencies - 1)\n\t\t\treturn;\n\n\t\tvar methodVO:MethodVO = this._iMethodVOs[index + this._iMethodVOs.length - this._numEffectDependencies];\n\n\t\tif (methodVO != null)\n\t\t\tthis._removeDependency(methodVO, true);\n\t}\n\n\n\tprivate getDependencyForMethod(method:EffectMethodBase):MethodVO\n\t{\n\t\tvar len:number = this._iMethodVOs.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tif (this._iMethodVOs[i].method == method)\n\t\t\t\treturn this._iMethodVOs[i];\n\n\t\treturn null;\n\t}\n\n\t/**\n\t * The method used to generate the per-pixel normals. Defaults to NormalBasicMethod.\n\t */\n\tpublic get normalMethod():NormalBasicMethod\n\t{\n\t\treturn this._iNormalMethodVO? <NormalBasicMethod> this._iNormalMethodVO.method : null;\n\t}\n\n\tpublic set normalMethod(value:NormalBasicMethod)\n\t{\n\t\tif (this._iNormalMethodVO && this._iNormalMethodVO.method == value)\n\t\t\treturn;\n\n\t\tif (this._iNormalMethodVO) {\n\t\t\tthis._removeDependency(this._iNormalMethodVO);\n\t\t\tthis._iNormalMethodVO = null;\n\t\t}\n\n\t\tif (value) {\n\t\t\tthis._iNormalMethodVO = new MethodVO(value);\n\t\t\tthis._addDependency(this._iNormalMethodVO);\n\t\t}\n\t}\n\n\t/**\n\t * The method that provides the ambient lighting contribution. Defaults to AmbientBasicMethod.\n\t */\n\tpublic get ambientMethod():AmbientBasicMethod\n\t{\n\t\treturn this._iAmbientMethodVO? <AmbientBasicMethod> this._iAmbientMethodVO.method : null;\n\t}\n\n\tpublic set ambientMethod(value:AmbientBasicMethod)\n\t{\n\t\tif (this._iAmbientMethodVO && this._iAmbientMethodVO.method == value)\n\t\t\treturn;\n\n\t\tif (this._iAmbientMethodVO) {\n\t\t\tthis._removeDependency(this._iAmbientMethodVO);\n\t\t\tthis._iAmbientMethodVO = null;\n\t\t}\n\n\t\tif (value) {\n\t\t\tthis._iAmbientMethodVO = new MethodVO(value);\n\t\t\tthis._addDependency(this._iAmbientMethodVO);\n\t\t}\n\t}\n\n\t/**\n\t * The method used to render shadows cast on this surface, or null if no shadows are to be rendered. Defaults to null.\n\t */\n\tpublic get shadowMethod():ShadowMapMethodBase\n\t{\n\t\treturn this._iShadowMethodVO? <ShadowMapMethodBase> this._iShadowMethodVO.method : null;\n\t}\n\n\tpublic set shadowMethod(value:ShadowMapMethodBase)\n\t{\n\t\tif (this._iShadowMethodVO && this._iShadowMethodVO.method == value)\n\t\t\treturn;\n\n\t\tif (this._iShadowMethodVO) {\n\t\t\tthis._removeDependency(this._iShadowMethodVO);\n\t\t\tthis._iShadowMethodVO = null;\n\t\t}\n\n\t\tif (value) {\n\t\t\tthis._iShadowMethodVO = new MethodVO(value);\n\t\t\tthis._addDependency(this._iShadowMethodVO);\n\t\t}\n\t}\n\n\t/**\n\t * The method that provides the diffuse lighting contribution. Defaults to DiffuseBasicMethod.\n\t */\n\tpublic get diffuseMethod():DiffuseBasicMethod\n\t{\n\t\treturn this._iDiffuseMethodVO? <DiffuseBasicMethod> this._iDiffuseMethodVO.method : null;\n\t}\n\n\tpublic set diffuseMethod(value:DiffuseBasicMethod)\n\t{\n\t\tif (this._iDiffuseMethodVO && this._iDiffuseMethodVO.method == value)\n\t\t\treturn;\n\n\t\tif (this._iDiffuseMethodVO) {\n\t\t\tthis._removeDependency(this._iDiffuseMethodVO);\n\t\t\tthis._iDiffuseMethodVO = null;\n\t\t}\n\n\t\tif (value) {\n\t\t\tthis._iDiffuseMethodVO = new MethodVO(value);\n\t\t\tthis._addDependency(this._iDiffuseMethodVO);\n\t\t}\n\t}\n\n\t/**\n\t * The method that provides the specular lighting contribution. Defaults to SpecularBasicMethod.\n\t */\n\tpublic get specularMethod():SpecularBasicMethod\n\t{\n\t\treturn this._iSpecularMethodVO? <SpecularBasicMethod> this._iSpecularMethodVO.method : null;\n\t}\n\n\tpublic set specularMethod(value:SpecularBasicMethod)\n\t{\n\t\tif (this._iSpecularMethodVO && this._iSpecularMethodVO.method == value)\n\t\t\treturn;\n\n\t\tif (this._iSpecularMethodVO) {\n\t\t\tthis._removeDependency(this._iSpecularMethodVO);\n\t\t\tthis._iSpecularMethodVO = null;\n\t\t}\n\n\t\tif (value) {\n\t\t\tthis._iSpecularMethodVO = new MethodVO(value);\n\t\t\tthis._addDependency(this._iSpecularMethodVO);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\n\t\tif (this._lightPicker)\n\t\t\tthis._lightPicker.removeEventListener(Event.CHANGE, this._onLightsChangeDelegate);\n\t\t\n\t\twhile (this._iMethodVOs.length)\n\t\t\tthis._removeDependency(this._iMethodVOs[0]);\n\n\t\tthis._iMethodVOs = null;\n\t}\n\n\t/**\n\t * Called when any method's shader code is invalidated.\n\t */\n\tprivate onMethodInvalidated(event:ShadingMethodEvent)\n\t{\n\t\tthis.invalidatePass();\n\t}\n\n\t// RENDER LOOP\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iActivate(camera:Camera)\n\t{\n\t\tsuper._iActivate(camera);\n\n\t\tvar methodVO:MethodVO;\n\t\tvar len:number = this._iMethodVOs.length;\n\t\tfor (var i:number = 0; i < len; ++i) {\n\t\t\tmethodVO = this._iMethodVOs[i];\n\t\t\tif (methodVO.useMethod)\n\t\t\t\tmethodVO.method.iActivate(this._shader, methodVO, this._stage);\n\t\t}\n\t}\n\n\t/**\n\t *\n\t *\n\t * @param renderable\n\t * @param stage\n\t * @param camera\n\t */\n\tpublic _iRender(renderable:RenderableBase, camera:Camera, viewProjection:Matrix3D)\n\t{\n\t\tsuper._iRender(renderable, camera, viewProjection);\n\n\t\tvar methodVO:MethodVO;\n\t\tvar len:number = this._iMethodVOs.length;\n\t\tfor (var i:number = 0; i < len; ++i) {\n\t\t\tmethodVO = this._iMethodVOs[i];\n\t\t\tif (methodVO.useMethod)\n\t\t\t\tmethodVO.method.iSetRenderState(this._shader, methodVO, renderable, this._stage, camera);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iDeactivate()\n\t{\n\t\tsuper._iDeactivate();\n\n\t\tvar methodVO:MethodVO;\n\t\tvar len:number = this._iMethodVOs.length;\n\t\tfor (var i:number = 0; i < len; ++i) {\n\t\t\tmethodVO = this._iMethodVOs[i];\n\t\t\tif (methodVO.useMethod)\n\t\t\t\tmethodVO.method.iDeactivate(this._shader, methodVO, this._stage);\n\t\t}\n\t}\n\n\tpublic _iIncludeDependencies(shaderObject:ShaderLightingObject)\n\t{\n\t\tsuper._iIncludeDependencies(shaderObject);\n\n\t\t//TODO: fragment animtion should be compatible with lighting pass\n\t\tshaderObject.usesFragmentAnimation = Boolean(this._mode == MethodPassMode.SUPER_SHADER);\n\n\t\tif (!shaderObject.usesTangentSpace && this.numPointLights > 0 && shaderObject.usesLights) {\n\t\t\tshaderObject.globalPosDependencies++;\n\n\t\t\tif (Boolean(this._mode & MethodPassMode.EFFECTS))\n\t\t\t\tshaderObject.usesGlobalPosFragment = true;\n\t\t}\n\n\t\tvar i:number;\n\t\tvar len:number = this._iMethodVOs.length;\n\t\tfor (i = 0; i < len; ++i)\n\t\t\tthis.setupAndCountDependencies(shaderObject, this._iMethodVOs[i]);\n\n\t\tfor (i = 0; i < len; ++i)\n\t\t\tthis._iMethodVOs[i].useMethod = this._iMethodVOs[i].method.iIsUsed(shaderObject);\n\t}\n\n\n\t/**\n\t * Counts the dependencies for a given method.\n\t * @param method The method to count the dependencies for.\n\t * @param methodVO The method's data for this material.\n\t */\n\tprivate setupAndCountDependencies(shaderObject:ShaderObjectBase, methodVO:MethodVO)\n\t{\n\t\tmethodVO.reset();\n\n\t\tmethodVO.method.iInitVO(shaderObject, methodVO);\n\n\t\tif (methodVO.needsProjection)\n\t\t\tshaderObject.projectionDependencies++;\n\n\t\tif (methodVO.needsGlobalVertexPos) {\n\n\t\t\tshaderObject.globalPosDependencies++;\n\n\t\t\tif (methodVO.needsGlobalFragmentPos)\n\t\t\t\tshaderObject.usesGlobalPosFragment = true;\n\n\t\t} else if (methodVO.needsGlobalFragmentPos) {\n\t\t\tshaderObject.globalPosDependencies++;\n\t\t\tshaderObject.usesGlobalPosFragment = true;\n\t\t}\n\n\t\tif (methodVO.needsNormals)\n\t\t\tshaderObject.normalDependencies++;\n\n\t\tif (methodVO.needsTangents)\n\t\t\tshaderObject.tangentDependencies++;\n\n\t\tif (methodVO.needsView)\n\t\t\tshaderObject.viewDirDependencies++;\n\n\t\tif (methodVO.needsUV)\n\t\t\tshaderObject.uvDependencies++;\n\n\t\tif (methodVO.needsSecondaryUV)\n\t\t\tshaderObject.secondaryUVDependencies++;\n\t}\n\n\tpublic _iGetPreLightingVertexCode(shaderObject:ShaderObjectBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tvar code:string = \"\";\n\n\t\tif (this._iAmbientMethodVO && this._iAmbientMethodVO.useMethod)\n\t\t\tcode += this._iAmbientMethodVO.method.iGetVertexCode(shaderObject, this._iAmbientMethodVO, registerCache, sharedRegisters);\n\n\t\tif (this._iDiffuseMethodVO && this._iDiffuseMethodVO.useMethod)\n\t\t\tcode += this._iDiffuseMethodVO.method.iGetVertexCode(shaderObject, this._iDiffuseMethodVO, registerCache, sharedRegisters);\n\n\t\tif (this._iSpecularMethodVO && this._iSpecularMethodVO.useMethod)\n\t\t\tcode += this._iSpecularMethodVO.method.iGetVertexCode(shaderObject, this._iSpecularMethodVO, registerCache, sharedRegisters);\n\n\t\treturn code;\n\t}\n\n\tpublic _iGetPreLightingFragmentCode(shaderObject:ShaderObjectBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tvar code:string = \"\";\n\n\t\tif (this._iAmbientMethodVO && this._iAmbientMethodVO.useMethod) {\n\t\t\tcode += this._iAmbientMethodVO.method.iGetFragmentCode(shaderObject, this._iAmbientMethodVO, sharedRegisters.shadedTarget, registerCache, sharedRegisters);\n\n\t\t\tif (this._iAmbientMethodVO.needsNormals)\n\t\t\t\tregisterCache.removeFragmentTempUsage(sharedRegisters.normalFragment);\n\n\t\t\tif (this._iAmbientMethodVO.needsView)\n\t\t\t\tregisterCache.removeFragmentTempUsage(sharedRegisters.viewDirFragment);\n\t\t}\n\n\t\tif (this._iDiffuseMethodVO && this._iDiffuseMethodVO.useMethod)\n\t\t\tcode += (<LightingMethodBase> this._iDiffuseMethodVO.method).iGetFragmentPreLightingCode(<ShaderLightingObject> shaderObject, this._iDiffuseMethodVO, registerCache, sharedRegisters);\n\n\t\tif (this._iSpecularMethodVO && this._iSpecularMethodVO.useMethod)\n\t\t\tcode += (<LightingMethodBase> this._iSpecularMethodVO.method).iGetFragmentPreLightingCode(<ShaderLightingObject> shaderObject, this._iSpecularMethodVO, registerCache, sharedRegisters);\n\n\t\treturn code;\n\t}\n\n\tpublic _iGetPerLightDiffuseFragmentCode(shaderObject:ShaderLightingObject, lightDirReg:ShaderRegisterElement, diffuseColorReg:ShaderRegisterElement, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn (<LightingMethodBase> this._iDiffuseMethodVO.method).iGetFragmentCodePerLight(shaderObject, this._iDiffuseMethodVO, lightDirReg, diffuseColorReg, registerCache, sharedRegisters);\n\t}\n\n\tpublic _iGetPerLightSpecularFragmentCode(shaderObject:ShaderLightingObject, lightDirReg:ShaderRegisterElement, specularColorReg:ShaderRegisterElement, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn (<LightingMethodBase> this._iSpecularMethodVO.method).iGetFragmentCodePerLight(shaderObject, this._iSpecularMethodVO, lightDirReg, specularColorReg, registerCache, sharedRegisters);\n\t}\n\n\tpublic _iGetPerProbeDiffuseFragmentCode(shaderObject:ShaderLightingObject, texReg:ShaderRegisterElement, weightReg:string, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn (<LightingMethodBase> this._iDiffuseMethodVO.method).iGetFragmentCodePerProbe(shaderObject, this._iDiffuseMethodVO, texReg, weightReg, registerCache, sharedRegisters);\n\t}\n\n\tpublic _iGetPerProbeSpecularFragmentCode(shaderObject:ShaderLightingObject, texReg:ShaderRegisterElement, weightReg:string, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn (<LightingMethodBase> this._iSpecularMethodVO.method).iGetFragmentCodePerProbe(shaderObject, this._iSpecularMethodVO, texReg, weightReg, registerCache, sharedRegisters);\n\t}\n\n\tpublic _iGetPostLightingVertexCode(shaderObject:ShaderLightingObject, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tvar code:string = \"\";\n\n\t\tif (this._iShadowMethodVO)\n\t\t\tcode += this._iShadowMethodVO.method.iGetVertexCode(shaderObject, this._iShadowMethodVO, registerCache, sharedRegisters);\n\n\t\treturn code;\n\t}\n\n\tpublic _iGetPostLightingFragmentCode(shaderObject:ShaderLightingObject, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tvar code:string = \"\";\n\n\t\tif (shaderObject.useAlphaPremultiplied && this._pEnableBlending) {\n\t\t\tcode += \"add \" + sharedRegisters.shadedTarget + \".w, \" + sharedRegisters.shadedTarget + \".w, \" + sharedRegisters.commons + \".z\\n\" +\n\t\t\t\"div \" + sharedRegisters.shadedTarget + \".xyz, \" + sharedRegisters.shadedTarget + \", \" + sharedRegisters.shadedTarget + \".w\\n\" +\n\t\t\t\"sub \" + sharedRegisters.shadedTarget + \".w, \" + sharedRegisters.shadedTarget + \".w, \" + sharedRegisters.commons + \".z\\n\" +\n\t\t\t\"sat \" + sharedRegisters.shadedTarget + \".xyz, \" + sharedRegisters.shadedTarget + \"\\n\";\n\t\t}\n\n\t\tif (this._iShadowMethodVO)\n\t\t\tcode += this._iShadowMethodVO.method.iGetFragmentCode(shaderObject, this._iShadowMethodVO, sharedRegisters.shadowTarget, registerCache, sharedRegisters);\n\n\t\tif (this._iDiffuseMethodVO && this._iDiffuseMethodVO.useMethod) {\n\t\t\tcode += (<LightingMethodBase> this._iDiffuseMethodVO.method).iGetFragmentPostLightingCode(shaderObject, this._iDiffuseMethodVO, sharedRegisters.shadedTarget, registerCache, sharedRegisters);\n\n\t\t\t// resolve other dependencies as well?\n\t\t\tif (this._iDiffuseMethodVO.needsNormals)\n\t\t\t\tregisterCache.removeFragmentTempUsage(sharedRegisters.normalFragment);\n\n\t\t\tif (this._iDiffuseMethodVO.needsView)\n\t\t\t\tregisterCache.removeFragmentTempUsage(sharedRegisters.viewDirFragment);\n\t\t}\n\n\t\tif (this._iSpecularMethodVO && this._iSpecularMethodVO.useMethod) {\n\t\t\tcode += (<LightingMethodBase> this._iSpecularMethodVO.method).iGetFragmentPostLightingCode(shaderObject, this._iSpecularMethodVO, sharedRegisters.shadedTarget, registerCache, sharedRegisters);\n\t\t\tif (this._iSpecularMethodVO.needsNormals)\n\t\t\t\tregisterCache.removeFragmentTempUsage(sharedRegisters.normalFragment);\n\t\t\tif (this._iSpecularMethodVO.needsView)\n\t\t\t\tregisterCache.removeFragmentTempUsage(sharedRegisters.viewDirFragment);\n\t\t}\n\n\t\tif (this._iShadowMethodVO)\n\t\t\tregisterCache.removeFragmentTempUsage(sharedRegisters.shadowTarget);\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * Indicates whether or not normals are allowed in tangent space. This is only the case if no object-space\n\t * dependencies exist.\n\t */\n\tpublic _pUsesTangentSpace(shaderObject:ShaderLightingObject):boolean\n\t{\n\t\tif (shaderObject.usesProbes)\n\t\t\treturn false;\n\n\t\tvar methodVO:MethodVO;\n\t\tvar len:number = this._iMethodVOs.length;\n\t\tfor (var i:number = 0; i < len; ++i) {\n\t\t\tmethodVO = this._iMethodVOs[i];\n\t\t\tif (methodVO.useMethod && !methodVO.method.iUsesTangentSpace())\n\t\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Indicates whether or not normals are output in tangent space.\n\t */\n\tpublic _pOutputsTangentNormals(shaderObject:ShaderObjectBase):boolean\n\t{\n\t\treturn (<NormalBasicMethod> this._iNormalMethodVO.method).iOutputsTangentNormals();\n\t}\n\n\t/**\n\t * Indicates whether or not normals are output by the pass.\n\t */\n\tpublic _pOutputsNormals(shaderObject:ShaderObjectBase):boolean\n\t{\n\t\treturn this._iNormalMethodVO && this._iNormalMethodVO.useMethod;\n\t}\n\n\n\tpublic _iGetNormalVertexCode(shaderObject:ShaderObjectBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn this._iNormalMethodVO.method.iGetVertexCode(shaderObject, this._iNormalMethodVO, registerCache, sharedRegisters);\n\t}\n\n\tpublic _iGetNormalFragmentCode(shaderObject:ShaderObjectBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tvar code:string = this._iNormalMethodVO.method.iGetFragmentCode(shaderObject, this._iNormalMethodVO, sharedRegisters.normalFragment, registerCache, sharedRegisters);\n\n\t\tif (this._iNormalMethodVO.needsView)\n\t\t\tregisterCache.removeFragmentTempUsage(sharedRegisters.viewDirFragment);\n\n\t\tif (this._iNormalMethodVO.needsGlobalFragmentPos || this._iNormalMethodVO.needsGlobalVertexPos)\n\t\t\tregisterCache.removeVertexTempUsage(sharedRegisters.globalPositionVertex);\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGetVertexCode(shaderObject:ShaderObjectBase, regCache:ShaderRegisterCache, sharedReg:ShaderRegisterData):string\n\t{\n\t\tvar code:string = \"\";\n\t\tvar methodVO:MethodVO;\n\t\tvar len:number = this._iMethodVOs.length;\n\t\tfor (var i:number = len - this._numEffectDependencies; i < len; i++) {\n\t\t\tmethodVO = this._iMethodVOs[i];\n\t\t\tif (methodVO.useMethod) {\n\t\t\t\tcode += methodVO.method.iGetVertexCode(shaderObject, methodVO, regCache, sharedReg);\n\n\t\t\t\tif (methodVO.needsGlobalVertexPos || methodVO.needsGlobalFragmentPos)\n\t\t\t\t\tregCache.removeVertexTempUsage(sharedReg.globalPositionVertex);\n\t\t\t}\n\t\t}\n\n\t\tif (this._iColorTransformMethodVO && this._iColorTransformMethodVO.useMethod)\n\t\t\tcode += this._iColorTransformMethodVO.method.iGetVertexCode(shaderObject, this._iColorTransformMethodVO, regCache, sharedReg);\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGetFragmentCode(shaderObject:ShaderObjectBase, regCache:ShaderRegisterCache, sharedReg:ShaderRegisterData):string\n\t{\n\t\tvar code:string = \"\";\n\t\tvar alphaReg:ShaderRegisterElement;\n\n\t\tif (this.preserveAlpha && this._numEffectDependencies > 0) {\n\t\t\talphaReg = regCache.getFreeFragmentSingleTemp();\n\t\t\tregCache.addFragmentTempUsages(alphaReg, 1);\n\t\t\tcode += \"mov \" + alphaReg + \", \" + sharedReg.shadedTarget + \".w\\n\";\n\t\t}\n\n\t\tvar methodVO:MethodVO;\n\t\tvar len:number = this._iMethodVOs.length;\n\t\tfor (var i:number = len - this._numEffectDependencies; i < len; i++) {\n\t\t\tmethodVO = this._iMethodVOs[i];\n\t\t\tif (methodVO.useMethod) {\n\t\t\t\tcode += methodVO.method.iGetFragmentCode(shaderObject, methodVO, sharedReg.shadedTarget, regCache, sharedReg);\n\n\t\t\t\tif (methodVO.needsNormals)\n\t\t\t\t\tregCache.removeFragmentTempUsage(sharedReg.normalFragment);\n\n\t\t\t\tif (methodVO.needsView)\n\t\t\t\t\tregCache.removeFragmentTempUsage(sharedReg.viewDirFragment);\n\n\t\t\t}\n\t\t}\n\n\t\tif (this.preserveAlpha && this._numEffectDependencies > 0) {\n\t\t\tcode += \"mov \" + sharedReg.shadedTarget + \".w, \" + alphaReg + \"\\n\";\n\t\t\tregCache.removeFragmentTempUsage(alphaReg);\n\t\t}\n\n\t\tif (this._iColorTransformMethodVO && this._iColorTransformMethodVO.useMethod)\n\t\t\tcode += this._iColorTransformMethodVO.method.iGetFragmentCode(shaderObject, this._iColorTransformMethodVO, sharedReg.shadedTarget, regCache, sharedReg);\n\n\t\treturn code;\n\t}\n\t/**\n\t * Indicates whether the shader uses any shadows.\n\t */\n\tpublic _iUsesShadows(shaderObject:ShaderObjectBase):boolean\n\t{\n\t\treturn Boolean(this._iShadowMethodVO && (this._lightPicker.castingDirectionalLights.length > 0 || this._lightPicker.castingPointLights.length > 0));\n\t}\n\n\t/**\n\t * Indicates whether the shader uses any specular component.\n\t */\n\tpublic _iUsesSpecular(shaderObject:ShaderObjectBase):boolean\n\t{\n\t\treturn Boolean(this._iSpecularMethodVO);\n\t}\n\n\t/**\n\t * Indicates whether the shader uses any specular component.\n\t */\n\tpublic _iUsesDiffuse(shaderObject:ShaderObjectBase):boolean\n\t{\n\t\treturn Boolean(this._iDiffuseMethodVO);\n\t}\n\n\n\tprivate onLightsChange(event:Event)\n\t{\n\t\tthis._updateLights();\n\t}\n\n\tprivate _updateLights()\n\t{\n\t\tvar numDirectionalLightsOld:number = this.numDirectionalLights;\n\t\tvar numPointLightsOld:number = this.numPointLights;\n\t\tvar numLightProbesOld:number = this.numLightProbes;\n\n\t\tif (this._lightPicker && (this._mode & MethodPassMode.LIGHTING)) {\n\t\t\tthis.numDirectionalLights = this.calculateNumDirectionalLights(this._lightPicker.numDirectionalLights);\n\t\t\tthis.numPointLights = this.calculateNumPointLights(this._lightPicker.numPointLights);\n\t\t\tthis.numLightProbes = this.calculateNumProbes(this._lightPicker.numLightProbes);\n\n\t\t\tif (this._includeCasters) {\n\t\t\t\tthis.numDirectionalLights += this._lightPicker.numCastingDirectionalLights;\n\t\t\t\tthis.numPointLights += this._lightPicker.numCastingPointLights;\n\t\t\t}\n\n\t\t} else {\n\t\t\tthis.numDirectionalLights = 0;\n\t\t\tthis.numPointLights = 0;\n\t\t\tthis.numLightProbes = 0;\n\t\t}\n\n\t\tif (numDirectionalLightsOld != this.numDirectionalLights || numPointLightsOld != this.numPointLights || numLightProbesOld != this.numLightProbes) {\n\t\t\tthis._updateShader();\n\n\t\t\tthis.invalidatePass();\n\t\t}\n\t}\n\n\t/**\n\t * Calculates the amount of directional lights this material will support.\n\t * @param numDirectionalLights The maximum amount of directional lights to support.\n\t * @return The amount of directional lights this material will support, bounded by the amount necessary.\n\t */\n\tprivate calculateNumDirectionalLights(numDirectionalLights:number):number\n\t{\n\t\treturn Math.min(numDirectionalLights - this.directionalLightsOffset, this._maxLights);\n\t}\n\n\t/**\n\t * Calculates the amount of point lights this material will support.\n\t * @param numDirectionalLights The maximum amount of point lights to support.\n\t * @return The amount of point lights this material will support, bounded by the amount necessary.\n\t */\n\tprivate calculateNumPointLights(numPointLights:number):number\n\t{\n\t\tvar numFree:number = this._maxLights - this.numDirectionalLights;\n\t\treturn Math.min(numPointLights - this.pointLightsOffset, numFree);\n\t}\n\n\t/**\n\t * Calculates the amount of light probes this material will support.\n\t * @param numDirectionalLights The maximum amount of light probes to support.\n\t * @return The amount of light probes this material will support, bounded by the amount necessary.\n\t */\n\tprivate calculateNumProbes(numLightProbes:number):number\n\t{\n\t\tvar numChannels:number = 0;\n\n\t\tif ((this.specularLightSources & LightSources.PROBES) != 0)\n\t\t\t++numChannels;\n\n\t\tif ((this.diffuseLightSources & LightSources.PROBES) != 0)\n\t\t\t++numChannels;\n\n\t\t// 4 channels available\n\t\treturn Math.min(numLightProbes - this.lightProbesOffset, (4/numChannels) | 0);\n\t}\n}\n\nexport = MethodPass;",
    "import TriangleSubGeometry\t\t\t\t= require(\"awayjs-core/lib/data/TriangleSubGeometry\");\nimport Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport RenderTexture\t\t\t\t\t= require(\"awayjs-core/lib/textures/RenderTexture\");\n\nimport LightBase\t\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport MaterialBase\t\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport IRenderObjectOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderObjectOwner\");\n\nimport ContextGLProgramType\t\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLProgramType\");\nimport IContextGL\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/IContextGL\");\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport RendererBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/base/RendererBase\");\nimport RenderObjectBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/RenderObjectBase\");\nimport RenderableBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/pool/RenderableBase\");\nimport ShaderObjectBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderObjectBase\");\nimport ShaderRegisterCache\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterData\");\nimport IRenderableClass\t\t\t\t\t= require(\"awayjs-renderergl/lib/pool/IRenderableClass\");\nimport RenderPassBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/passes/RenderPassBase\");\n\n/**\n * The SingleObjectDepthPass provides a material pass that renders a single object to a depth map from the point\n * of view from a light.\n */\nclass SingleObjectDepthPass extends RenderPassBase\n{\n\tprivate _textures:Object;\n\tprivate _projections:Object;\n\tprivate _textureSize:number /*uint*/ = 512;\n\tprivate _polyOffset:Array<number> = Array<number>(15, 0, 0, 0);\n\tprivate _enc:Array<number>;\n\tprivate _projectionTexturesInvalid:Boolean = true;\n\n\t/**\n\t * The size of the depth map texture to render to.\n\t */\n\tpublic get textureSize():number\n\t{\n\t\treturn this._textureSize;\n\t}\n\n\tpublic set textureSize(value:number)\n\t{\n\t\tthis._textureSize = value;\n\t}\n\n\t/**\n\t * The amount by which the rendered object will be inflated, to prevent depth map rounding errors.\n\t */\n\tpublic get polyOffset():number\n\t{\n\t\treturn this._polyOffset[0];\n\t}\n\n\tpublic set polyOffset(value:number)\n\t{\n\t\tthis._polyOffset[0] = value;\n\t}\n\n\t/**\n\t * Creates a new SingleObjectDepthPass object.\n\t */\n\tconstructor(renderObject:RenderObjectBase, renderObjectOwner:IRenderObjectOwner, renderableClass:IRenderableClass, stage:Stage)\n\t{\n\t\tsuper(renderObject, renderObjectOwner, renderableClass, stage);\n\n\t\t//this._pNumUsedStreams = 2;\n\t\t//this._pNumUsedVertexConstants = 7;\n\t\t//this._enc = Array<number>(1.0, 255.0, 65025.0, 16581375.0, 1.0/255.0, 1.0/255.0, 1.0/255.0, 0.0);\n\t\t//\n\t\t//this._pAnimatableAttributes = Array<string>(\"va0\", \"va1\");\n\t\t//this._pAnimationTargetRegisters = Array<string>(\"vt0\", \"vt1\");\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic dispose()\n\t{\n\t\tif (this._textures) {\n\t\t\tfor (var key in this._textures) {\n\t\t\t\tvar texture:RenderTexture = this._textures[key];\n\t\t\t\ttexture.dispose();\n\t\t\t}\n\t\t\tthis._textures = null;\n\t\t}\n\t}\n\n\t/**\n\t * Updates the projection textures used to contain the depth renders.\n\t */\n\tprivate updateProjectionTextures()\n\t{\n\t\tif (this._textures) {\n\t\t\tfor (var key in this._textures) {\n\t\t\t\tvar texture:RenderTexture = this._textures[key];\n\t\t\t\ttexture.dispose();\n\t\t\t}\n\t\t}\n\n\t\tthis._textures = new Object();\n\t\tthis._projections = new Object();\n\t\tthis._projectionTexturesInvalid = false;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGetVertexCode():string\n\t{\n\t\tvar code:string;\n\t\t// offset\n\t\tcode = \"mul vt7, vt1, vc4.x\t\\n\" +\n\t\t\t\t\"add vt7, vt7, vt0\\n\" +\n\t\t\t\t\"mov vt7.w, vt0.w\\n\";\n\t\t// project\n\t\tcode += \"m44 vt2, vt7, vc0\\n\" +\n\t\t\t\t\"mov op, vt2\\n\";\n\n\t\t// perspective divide\n\t\tcode += \"div v0, vt2, vt2.w\\n\";\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGetFragmentCode(shaderObject:ShaderObjectBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tvar code:string = \"\";\n\n\t\t// encode float -> rgba\n\t\tcode += \"mul ft0, fc0, v0.z\\n\" +\n\t\t\t\t\"frc ft0, ft0\\n\" +\n\t\t\t\t\"mul ft1, ft0.yzww, fc1\\n\" +\n\t\t\t\t\"sub ft0, ft0, ft1\\n\" +\n\t\t\t\t\"mov oc, ft0\\n\";\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * Gets the depth maps rendered for this object from all lights.\n\t * @param renderable The renderable for which to retrieve the depth maps.\n\t * @param stage3DProxy The Stage3DProxy object currently used for rendering.\n\t * @return A list of depth map textures for all supported lights.\n\t */\n\tpublic _iGetDepthMap(renderable:RenderableBase):RenderTexture\n\t{\n\t\treturn this._textures[renderable.renderableOwner.id];\n\t}\n\n\t/**\n\t * Retrieves the depth map projection maps for all lights.\n\t * @param renderable The renderable for which to retrieve the projection maps.\n\t * @return A list of projection maps for all supported lights.\n\t */\n\tpublic _iGetProjection(renderable:RenderableBase):Matrix3D\n\t{\n\t\treturn this._projections[renderable.renderableOwner.id];\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iRender(renderable:RenderableBase, camera:Camera, viewProjection:Matrix3D)\n\t{\n\t\tvar matrix:Matrix3D;\n\t\tvar context:IContextGL = this._stage.context;\n\t\tvar len:number /*uint*/;\n\t\tvar light:LightBase;\n\t\tvar lights:Array<LightBase> = this._renderObjectOwner.lightPicker.allPickedLights;\n\t\tvar rId:number = renderable.renderableOwner.id;\n\n\t\tif (!this._textures[rId])\n\t\t\tthis._textures[rId] = new RenderTexture(this._textureSize, this._textureSize);\n\n\t\tif (!this._projections[rId])\n\t\t\tthis._projections[rId] = new Matrix3D();\n\n\t\tlen = lights.length;\n\n\t\t// local position = enough\n\t\tlight = lights[0];\n\n\t\tmatrix = light.iGetObjectProjectionMatrix(renderable.sourceEntity, camera, this._projections[rId]);\n\n\t\tthis._stage.setRenderTarget(this._textures[rId], true);\n\t\tcontext.clear(1.0, 1.0, 1.0);\n\t\tcontext.setProgramConstantsFromMatrix(ContextGLProgramType.VERTEX, 0, matrix, true);\n\t\tcontext.setProgramConstantsFromArray(ContextGLProgramType.FRAGMENT, 0, this._enc, 2);\n\n\t\tthis._stage.activateBuffer(0, renderable.getVertexData(TriangleSubGeometry.POSITION_DATA), renderable.getVertexOffset(TriangleSubGeometry.POSITION_DATA), TriangleSubGeometry.POSITION_FORMAT);\n\t\tthis._stage.activateBuffer(1, renderable.getVertexData(TriangleSubGeometry.NORMAL_DATA), renderable.getVertexOffset(TriangleSubGeometry.NORMAL_DATA), TriangleSubGeometry.NORMAL_FORMAT);\n\t\tcontext.drawTriangles(this._stage.getIndexBuffer(renderable.getIndexData()), 0, renderable.numTriangles);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iActivate(camera:Camera)\n\t{\n\t\tif (this._projectionTexturesInvalid)\n\t\t\tthis.updateProjectionTextures();\n\n\t\t// never scale\n\t\tsuper._iActivate(camera);\n\n\t\tthis._stage.context.setProgramConstantsFromArray(ContextGLProgramType.VERTEX, 4, this._polyOffset, 1);\n\t}\n}\n\nexport = SingleObjectDepthPass;",
    "import IRenderObjectOwner\t\t\t= require(\"awayjs-display/lib/base/IRenderObjectOwner\");\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport IRenderablePool\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderablePool\");\nimport IRenderObject\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderObject\");\n\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport RendererBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/base/RendererBase\");\nimport RenderableBase\t\t\t\t= require(\"awayjs-renderergl/lib/pool/RenderableBase\");\nimport RenderablePoolBase\t\t\t= require(\"awayjs-renderergl/lib/pool/RenderablePoolBase\");\nimport IRenderableClass\t\t\t\t= require(\"awayjs-renderergl/lib/pool/IRenderableClass\");\nimport RenderObjectPool\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/RenderObjectPool\");\nimport SkyboxRenderObject\t\t\t= require(\"awayjs-renderergl/lib/compilation/SkyboxRenderObject\");\nimport DepthRenderObject\t\t\t= require(\"awayjs-renderergl/lib/compilation/DepthRenderObject\");\nimport DistanceRenderObject\t\t\t= require(\"awayjs-renderergl/lib/compilation/DistanceRenderObject\");\nimport RenderObjectBase\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/RenderObjectBase\");\nimport RenderMethodMaterialObject\t= require(\"awayjs-methodmaterials/lib/compilation/RenderMethodMaterialObject\");\n\n/**\n * @class away.pool.MethodRenderablePool\n */\nclass MethodRenderablePool extends RenderablePoolBase\n{\n\tprivate _methodMaterialRenderObjectPool:RenderObjectPool;\n\n\t/**\n\t * //TODO\n\t *\n\t * @param renderableClass\n\t */\n\tconstructor(renderableClass:IRenderableClass, stage:Stage)\n\t{\n\t\tsuper(renderableClass, stage);\n\n\t\tthis._methodMaterialRenderObjectPool = new RenderObjectPool(RenderMethodMaterialObject, this._renderableClass, this._stage);\n\t}\n\n\t/**\n\t *\n\t * @param material\n\t * @param renderable\n\t */\n\tpublic getMethodRenderObject(renderObjectOwner:IRenderObjectOwner):RenderObjectBase\n\t{\n\t\treturn this._methodMaterialRenderObjectPool.getItem(renderObjectOwner);\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param renderableClass\n\t * @returns MethodRenderablePool\n\t */\n\tpublic static getPool(renderableClass:IRenderableClass, stage:Stage):MethodRenderablePool\n\t{\n\t\tvar pools:Object = (RenderablePoolBase._pools[stage.stageIndex] || (RenderablePoolBase._pools[stage.stageIndex] = new Object()));\n\n\t\treturn (pools[renderableClass.id] || (pools[renderableClass.id] = new MethodRenderablePool(renderableClass, stage)));\n\t}\n}\n\nexport = MethodRenderablePool;",
    "import BillboardRenderable\t\t\t= require(\"awayjs-renderergl/lib/pool/BillboardRenderable\");\nimport LineSegmentRenderable\t\t= require(\"awayjs-renderergl/lib/pool/LineSegmentRenderable\");\nimport LineSubMeshRenderable\t\t= require(\"awayjs-renderergl/lib/pool/LineSubMeshRenderable\");\nimport TriangleSubMeshRenderable\t= require(\"awayjs-renderergl/lib/pool/TriangleSubMeshRenderable\");\nimport CurveSubMeshRenderable\t\t= require(\"awayjs-renderergl/lib/pool/CurveSubMeshRenderable\");\nimport RendererPoolBase\t\t\t\t= require(\"awayjs-renderergl/lib/pool/RendererPoolBase\");\nimport RendererBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/base/RendererBase\");\n\nimport MethodRenderablePool\t\t\t= require(\"awayjs-methodmaterials/lib/pool/MethodRenderablePool\");\n\n/**\n * MethodRendererPool forms an abstract base class for classes that are used in the rendering pipeline to render the\n * contents of a partition\n *\n * @class away.render.MethodRendererPool\n */\nclass MethodRendererPool extends RendererPoolBase\n{\n\t/**\n\t * Creates a new MethodRendererPool object.\n\t */\n\tconstructor(renderer:RendererBase)\n\t{\n\t\tsuper(renderer);\n\t}\n\n\tpublic _pUpdatePool()\n\t{\n\t\tthis._billboardRenderablePool = MethodRenderablePool.getPool(BillboardRenderable, this._pStage);\n\t\tthis._lineSegmentRenderablePool = MethodRenderablePool.getPool(LineSegmentRenderable, this._pStage);\n\t\tthis._triangleSubMeshRenderablePool = MethodRenderablePool.getPool(TriangleSubMeshRenderable, this._pStage);\n\t\tthis._lineSubMeshRenderablePool = MethodRenderablePool.getPool(LineSubMeshRenderable, this._pStage);\n\t\tthis._curveSubMeshRenderablePool = MethodRenderablePool.getPool(CurveSubMeshRenderable, this._pStage);\n\t}\n}\n\nexport = MethodRendererPool;"
  ],
  "sourceRoot": ""
}