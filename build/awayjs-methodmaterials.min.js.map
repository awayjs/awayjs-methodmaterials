{"version":3,"sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","awayjs-methodmaterials/lib/MethodMaterialMode.ts","awayjs-methodmaterials.js","awayjs-methodmaterials/lib/MethodMaterial.ts","awayjs-methodmaterials/lib/compilation/RenderMethodMaterialObject.ts","awayjs-methodmaterials/lib/data/MethodVO.ts","awayjs-methodmaterials/lib/methods/AmbientBasicMethod.ts","awayjs-methodmaterials/lib/methods/AmbientEnvMapMethod.ts","awayjs-methodmaterials/lib/methods/DiffuseBasicMethod.ts","awayjs-methodmaterials/lib/methods/DiffuseCelMethod.ts","awayjs-methodmaterials/lib/methods/DiffuseCompositeMethod.ts","awayjs-methodmaterials/lib/methods/DiffuseDepthMethod.ts","awayjs-methodmaterials/lib/methods/DiffuseGradientMethod.ts","awayjs-methodmaterials/lib/methods/DiffuseLightMapMethod.ts","awayjs-methodmaterials/lib/methods/DiffuseSubSurfaceMethod.ts","awayjs-methodmaterials/lib/methods/DiffuseWrapMethod.ts","awayjs-methodmaterials/lib/methods/EffectAlphaMaskMethod.ts","awayjs-methodmaterials/lib/methods/EffectColorMatrixMethod.ts","awayjs-methodmaterials/lib/methods/EffectColorTransformMethod.ts","awayjs-methodmaterials/lib/methods/EffectEnvMapMethod.ts","awayjs-methodmaterials/lib/methods/EffectFogMethod.ts","awayjs-methodmaterials/lib/methods/EffectFresnelEnvMapMethod.ts","awayjs-methodmaterials/lib/methods/EffectLightMapMethod.ts","awayjs-methodmaterials/lib/methods/EffectMethodBase.ts","awayjs-methodmaterials/lib/methods/EffectRefractionEnvMapMethod.ts","awayjs-methodmaterials/lib/methods/EffectRimLightMethod.ts","awayjs-methodmaterials/lib/methods/LightingMethodBase.ts","awayjs-methodmaterials/lib/methods/NormalBasicMethod.ts","awayjs-methodmaterials/lib/methods/NormalHeightMapMethod.ts","awayjs-methodmaterials/lib/methods/NormalSimpleWaterMethod.ts","awayjs-methodmaterials/lib/methods/ShadingMethodBase.ts","awayjs-methodmaterials/lib/methods/ShadowCascadeMethod.ts","awayjs-methodmaterials/lib/methods/ShadowDitheredMethod.ts","awayjs-methodmaterials/lib/methods/ShadowFilteredMethod.ts","awayjs-methodmaterials/lib/methods/ShadowHardMethod.ts","awayjs-methodmaterials/lib/methods/ShadowMapMethodBase.ts","awayjs-methodmaterials/lib/methods/ShadowMethodBase.ts","awayjs-methodmaterials/lib/methods/ShadowNearMethod.ts","awayjs-methodmaterials/lib/methods/ShadowSoftMethod.ts","awayjs-methodmaterials/lib/methods/SpecularAnisotropicMethod.ts","awayjs-methodmaterials/lib/methods/SpecularBasicMethod.ts","awayjs-methodmaterials/lib/methods/SpecularCelMethod.ts","awayjs-methodmaterials/lib/methods/SpecularCompositeMethod.ts","awayjs-methodmaterials/lib/methods/SpecularFresnelMethod.ts","awayjs-methodmaterials/lib/methods/SpecularPhongMethod.ts","awayjs-methodmaterials/lib/passes/MethodPassMode.ts","awayjs-methodmaterials/lib/passes/MethodPass.ts","awayjs-methodmaterials/lib/passes/SingleObjectDepthPass.ts","awayjs-methodmaterials/lib/pool/MethodRenderablePool.ts","awayjs-methodmaterials/lib/pool/MethodRendererPool.ts"],"names":["require","e","t","n","r","s","o","u","a","i","f","Error","code","l","exports","call","length","awayjs-methodmaterials\\lib\\MethodMaterialMode","module","MethodMaterialMode","SINGLE_PASS","MULTI_PASS","awayjs-methodmaterials\\lib\\MethodMaterial","__extends","this","d","b","p","hasOwnProperty","__","constructor","prototype","Texture2DBase","MaterialBase","ContextGLCompareMode","AmbientBasicMethod","DiffuseBasicMethod","NormalBasicMethod","SpecularBasicMethod","MethodMaterial","_super","textureColor","smoothAlpha","repeat","mipmap","_effectMethods","Array","_ambientMethod","_diffuseMethod","_normalMethod","_specularMethod","_depthCompareMode","LESS_EQUAL","_mode","texture","smooth","color","Number","alpha","Object","defineProperty","get","set","value","_pInvalidateRenderObject","enumerable","configurable","copyFrom","_shadowMethod","addEffectMethod","method","push","getEffectMethodAt","index","addEffectMethodAt","splice","removeEffectMethod","indexOf","normalMap","gloss","ambient","specular","ambientColor","diffuseColor","specularColor","getRenderObject","renderablePool","getMethodRenderObject","awayjs-core/lib/textures/Texture2DBase","undefined","awayjs-display/lib/materials/MaterialBase","awayjs-methodmaterials/lib/MethodMaterialMode","awayjs-methodmaterials/lib/methods/AmbientBasicMethod","awayjs-methodmaterials/lib/methods/DiffuseBasicMethod","awayjs-methodmaterials/lib/methods/NormalBasicMethod","awayjs-methodmaterials/lib/methods/SpecularBasicMethod","awayjs-stagegl/lib/base/ContextGLCompareMode","awayjs-methodmaterials\\lib\\compilation\\RenderMethodMaterialObject","BlendMode","StaticLightPicker","RenderObjectBase","MethodPassMode","MethodPass","RenderMethodMaterialObject","pool","material","renderableClass","stage","_material","lightPicker","numLightProbes","numDirectionalLights","numPointLights","numCastingDirectionalLights","numCastingPointLights","_pUpdateRenderObject","initPasses","setBlendAndCompareModes","_pClearScreenPasses","mode","_casterLightPass","_pAddScreenPass","_nonCasterLightPasses","_screenPass","numLights","numEffectMethods","initEffectPass","removeEffectPass","shadowMethod","initCasterLightPass","removeCasterLightPass","numNonCasters","initNonCasterLightPasses","removeNonCasterLightPasses","forceSeparateMVP","Boolean","setBlendMode","NORMAL","depthCompareMode","firstAdditiveIndex","ADD","_pRequiresBlending","EFFECTS","LAYER","blendMode","alphaBlending","colorTransform","alphaMultiplier","SUPER_SHADER","preserveAlpha","LIGHTING","_renderableClass","_stage","castingLight","diffuseMethod","ambientMethod","normalMethod","specularMethod","dispose","_pRemoveScreenPass","pass","numDirLights","dirLightOffset","pointLightOffset","probeOffset","includeCasters","directionalLightsOffset","pointLightsOffset","lightProbesOffset","effectMethod","len","Math","max","removeEffectMethodAt","id","awayjs-core/lib/base/BlendMode","awayjs-display/lib/materials/lightpickers/StaticLightPicker","awayjs-methodmaterials/lib/passes/MethodPass","awayjs-methodmaterials/lib/passes/MethodPassMode","awayjs-renderergl/lib/compilation/RenderObjectBase","awayjs-methodmaterials\\lib\\data\\MethodVO","MethodVO","useMethod","reset","iReset","texturesIndex","vertexConstantsIndex","fragmentConstantsIndex","needsProjection","needsView","needsNormals","needsTangents","needsUV","needsSecondaryUV","needsGlobalVertexPos","needsGlobalFragmentPos","awayjs-methodmaterials\\lib\\methods\\AmbientBasicMethod","ShaderCompilerHelper","ShadingMethodBase","_color","_alpha","_colorR","_colorG","_colorB","_ambient","iInitVO","shaderObject","methodVO","iInitConstants","updateColor","m","iGetFragmentCode","targetReg","registerCache","sharedRegisters","ambientInputRegister","getFreeTextureReg","getTex2DSampleCode","useSmoothTextures","repeatTextures","alphaThreshold","cutOffReg","getFreeFragmentConstant","iActivate","activateTexture","useMipmapping","fragmentConstantData","data","awayjs-methodmaterials/lib/methods/ShadingMethodBase","awayjs-renderergl/lib/utils/ShaderCompilerHelper","awayjs-methodmaterials\\lib\\methods\\AmbientEnvMapMethod","AmbientEnvMapMethod","envMap","_cubeTexture","activateCubeTexture","regCache","cubeMapReg","getTexCubeSampleCode","normalFragment","awayjs-methodmaterials\\lib\\methods\\DiffuseBasicMethod","LightingMethodBase","_multiply","_diffuseColor","_ambientColor","_diffuseR","_diffuseG","_diffuseB","_ambientR","_ambientG","_ambientB","iIsUsed","iInvalidateShaderProgram","_pUseTexture","generateMip","_texture","updateDiffuse","updateAmbient","format","diff","multiply","iCleanCompilationData","_pTotalLightColorReg","_pDiffuseInputRegister","iGetFragmentPreLightingCode","_pIsFirstLight","getFreeFragmentVectorTemp","addFragmentTempUsages","iGetFragmentCodePerLight","lightDirReg","lightColReg","commons","usesLightFallOff","_iModulateMethod","removeFragmentTempUsage","iGetFragmentCodePerProbe","weightRegister","iGetFragmentPostLightingCode","albedo","shadowTarget","pApplyShadow","ambientColorRegister","iSetRenderState","renderable","camera","ambientR","ambientG","ambientB","awayjs-methodmaterials/lib/methods/LightingMethodBase","awayjs-methodmaterials\\lib\\methods\\DiffuseCelMethod","DiffuseCompositeMethod","DiffuseCelMethod","levels","baseMethod","_this","_smoothness","clampDiffuse","_levels","secondaryFragmentConstantsIndex","_dataReg","awayjs-methodmaterials/lib/methods/DiffuseCompositeMethod","awayjs-methodmaterials\\lib\\methods\\DiffuseCompositeMethod","ShadingMethodEvent","modulateMethod","_onShaderInvalidatedDelegate","event","onShaderInvalidated","pBaseMethod","addEventListener","SHADER_INVALIDATED","removeEventListener","iDeactivate","iGetVertexCode","awayjs-renderergl/lib/events/ShadingMethodEvent","awayjs-methodmaterials\\lib\\methods\\DiffuseDepthMethod","DiffuseDepthMethod","temp","decReg","awayjs-methodmaterials\\lib\\methods\\DiffuseGradientMethod","DiffuseGradientMethod","gradient","_gradient","_gradientTextureRegister","secondaryTexturesIndex","awayjs-methodmaterials\\lib\\methods\\DiffuseLightMapMethod","DiffuseLightMapMethod","lightMap","useSecondaryUV","_useSecondaryUV","_lightMapTexture","_blendMode","MULTIPLY","lightMapReg","secondaryUVVarying","awayjs-methodmaterials\\lib\\methods\\DiffuseSubSurfaceMethod","DiffuseSubSurfaceMethod","depthMapSize","depthMapOffset","_translucency","_scatterColor","_scatterR","_scatterG","_scatterB","scatterLight","_scattering","vertexConstantData","secondaryVertexConstantsIndex","_lightProjVarying","_propReg","_lightColorReg","_colorReg","_decReg","_targetReg","scatterColor","lightProjection","toTexRegister","getFreeVertexVectorTemp","getFreeVertexConstant","getFreeVarying","viewDirFragment","_depthPass","_iGetDepthMap","_iGetProjection","copyRawDataTo","depthReg","awayjs-methodmaterials\\lib\\methods\\DiffuseWrapMethod","DiffuseWrapMethod","wrapFactor","_wrapDataRegister","_wrapFactor","awayjs-methodmaterials\\lib\\methods\\EffectAlphaMaskMethod","EffectMethodBase","EffectAlphaMaskMethod","textureReg","uvReg","uvVarying","awayjs-methodmaterials/lib/methods/EffectMethodBase","awayjs-methodmaterials\\lib\\methods\\EffectColorMatrixMethod","EffectColorMatrixMethod","matrix","_matrix","colorMultReg","colorOffsetReg","awayjs-methodmaterials\\lib\\methods\\EffectColorTransformMethod","EffectColorTransformMethod","_colorTransform","colorOffsReg","inv","redMultiplier","greenMultiplier","blueMultiplier","redOffset","greenOffset","blueOffset","alphaOffset","awayjs-methodmaterials\\lib\\methods\\EffectEnvMapMethod","EffectEnvMapMethod","_mask","dataRegister","temp2","awayjs-methodmaterials\\lib\\methods\\EffectFogMethod","EffectFogMethod","minDistance","maxDistance","fogColor","_minDistance","_maxDistance","_fogColor","_fogR","_fogG","_fogB","fogData","projectionFragment","awayjs-methodmaterials\\lib\\methods\\EffectFresnelEnvMapMethod","EffectFresnelEnvMapMethod","_fresnelPower","_normalReflectance","viewDirReg","normalReg","maskReg","awayjs-methodmaterials\\lib\\methods\\EffectLightMapMethod","EffectLightMapMethod","awayjs-methodmaterials\\lib\\methods\\EffectMethodBase","AssetType","AbstractMethodError","EFFECTS_METHOD","awayjs-core/lib/errors/AbstractMethodError","awayjs-core/lib/library/AssetType","awayjs-methodmaterials\\lib\\methods\\EffectRefractionEnvMapMethod","EffectRefractionEnvMapMethod","refractionIndex","dispersionR","dispersionG","dispersionB","_dispersionR","_dispersionG","_dispersionB","_envMap","_useDispersion","_refractionIndex","useDispersion","data2","refractionDir","refractionColor","awayjs-methodmaterials\\lib\\methods\\EffectRimLightMethod","EffectRimLightMethod","strength","power","blend","_strength","_power","dataRegister2","MIX","awayjs-methodmaterials\\lib\\methods\\LightingMethodBase","awayjs-methodmaterials\\lib\\methods\\NormalBasicMethod","_useTexture","normalDependencies","iOutputsTangentNormals","bnm","_pNormalTextureRegister","awayjs-methodmaterials\\lib\\methods\\NormalHeightMapMethod","NormalHeightMapMethod","heightMap","worldWidth","worldHeight","worldDepth","_worldXYRatio","_worldXZRatio","width","height","dataReg","dataReg2","awayjs-methodmaterials\\lib\\methods\\NormalSimpleWaterMethod","NormalSimpleWaterMethod","waveMap1","waveMap2","_useSecondNormalMap","_water1OffsetX","_water1OffsetY","_water2OffsetX","_water2OffsetY","secondaryNormalMap","_texture2","_normalTextureRegister2","awayjs-methodmaterials\\lib\\methods\\ShadingMethodBase","NamedAssetBase","iUsesTangentSpace","dispatchEvent","awayjs-core/lib/library/NamedAssetBase","awayjs-methodmaterials\\lib\\methods\\ShadowCascadeMethod","Event","DirectionalLight","ShadowMapMethodBase","ShadowCascadeMethod","shadowMethodBase","_baseMethod","_pCastingLight","_cascadeShadowMapper","shadowMapper","CHANGE","onCascadeChange","tempVO","fragmentData","vertexData","_cascadeProjections","_depthMapCoordVaryings","initProjectionsRegs","numCascades","globalPositionVertex","depthMapRegister","planeDistanceReg","planeDistances","inQuad","uvCoord","uvProjection","_iGetCascadeFragmentCode","depthMap","vertexIndex","depth","_pEpsilon","k","getDepthProjections","fragmentIndex","_pAlpha","nearPlaneDistances","_iNearPlaneDistances","iActivateForCascade","awayjs-core/lib/events/Event","awayjs-display/lib/entities/DirectionalLight","awayjs-methodmaterials/lib/data/MethodVO","awayjs-methodmaterials/lib/methods/ShadowMapMethodBase","awayjs-methodmaterials\\lib\\methods\\ShadowDitheredMethod","BitmapData","BitmapTexture","ShadowMethodBase","ShadowDitheredMethod","numSamples","range","_depthMapSize","_grainUsages","_grainTexture","initGrainTexture","_numSamples","_range","_grainBitmapData","vec","step","g","random","floor","setArray","rect","_pGetPlanarFragmentCode","customDataReg","getSampleCode","grainRegister","projectionReg","_pDepthMapCoordReg","addSample","decodeRegister","depthTexture","depthProjection","targetRegister","awayjs-core/lib/base/BitmapData","awayjs-core/lib/textures/BitmapTexture","awayjs-methodmaterials/lib/methods/ShadowMethodBase","awayjs-methodmaterials\\lib\\methods\\ShadowFilteredMethod","ShadowFilteredMethod","size","depthCol","predicate","awayjs-methodmaterials\\lib\\methods\\ShadowHardMethod","ShadowHardMethod","_pGetPointFragmentCode","epsReg","posReg","depthSampleCol","lightDir","globalPositionVarying","awayjs-methodmaterials\\lib\\methods\\ShadowMapMethodBase","castsShadows","_pShadowMapper","SHADOW_MAP_METHOD","awayjs-methodmaterials\\lib\\methods\\ShadowMethodBase","PointLight","_pUsePoint","_pGetPointVertexCode","pGetPlanarVertexCode","depthMapProj","iDepthProjection","pow","fallOff","pos","scenePosition","x","y","z","activateRenderTexture","awayjs-display/lib/entities/PointLight","awayjs-methodmaterials\\lib\\methods\\ShadowNearMethod","ShadowNearMethod","fadeRatio","_fadeRatio","_nearShadowMapper","epsilon","getFreeFragmentSingleTemp","near","projection","far","coverageRatio","awayjs-methodmaterials\\lib\\methods\\ShadowSoftMethod","PoissonLookup","ShadowSoftMethod","_offsets","getDistribution","texRange","uv","decode","target","offsets","numRegs","reg","awayjs-core/lib/geom/PoissonLookup","awayjs-methodmaterials\\lib\\methods\\SpecularAnisotropicMethod","SpecularAnisotropicMethod","tangentVarying","_pSpecularTexData","_pSpecularDataRegister","awayjs-methodmaterials\\lib\\methods\\SpecularBasicMethod","_gloss","_specular","_specularColor","_iSpecularR","_iSpecularG","_iSpecularB","updateSpecular","bsm","spec","_pSpecularTextureRegister","awayjs-methodmaterials\\lib\\methods\\SpecularCelMethod","SpecularCompositeMethod","SpecularCelMethod","specularCutOff","_specularCutOff","clampSpecular","awayjs-methodmaterials/lib/methods/SpecularCompositeMethod","awayjs-methodmaterials\\lib\\methods\\SpecularCompositeMethod","awayjs-methodmaterials\\lib\\methods\\SpecularFresnelMethod","SpecularFresnelMethod","basedOnSurface","modulateSpecular","_incidentLight","awayjs-methodmaterials\\lib\\methods\\SpecularPhongMethod","SpecularPhongMethod","awayjs-methodmaterials\\lib\\passes\\MethodPassMode","PassMode","awayjs-methodmaterials\\lib\\passes\\MethodPass","LightSources","ShaderLightingObject","ShaderObjectBase","RenderPassBase","renderObject","renderObjectOwner","_maxLights","_includeCasters","_iMethodVOs","_numEffectDependencies","_onLightsChangeDelegate","onLightsChange","_onMethodInvalidatedDelegate","onMethodInvalidated","_shader","_updateShader","_updateLights","_lightPicker","enableLightFallOff","diffuseLightSources","specularLightSources","_iInitConstantData","colorTransformMethod","_iColorTransformMethodVO","_removeDependency","_addDependency","effectsDependency","invalidatePass","hasEffectMethod","getDependencyForMethod","_iNormalMethodVO","_iAmbientMethodVO","_iShadowMethodVO","_iDiffuseMethodVO","_iSpecularMethodVO","_iActivate","_iRender","viewProjection","_iDeactivate","_iIncludeDependencies","usesFragmentAnimation","usesTangentSpace","usesLights","globalPosDependencies","usesGlobalPosFragment","setupAndCountDependencies","projectionDependencies","tangentDependencies","viewDirDependencies","uvDependencies","secondaryUVDependencies","_iGetPreLightingVertexCode","_iGetPreLightingFragmentCode","shadedTarget","_iGetPerLightDiffuseFragmentCode","diffuseColorReg","_iGetPerLightSpecularFragmentCode","specularColorReg","_iGetPerProbeDiffuseFragmentCode","texReg","weightReg","_iGetPerProbeSpecularFragmentCode","_iGetPostLightingVertexCode","_iGetPostLightingFragmentCode","useAlphaPremultiplied","_pEnableBlending","_pUsesTangentSpace","usesProbes","_pOutputsTangentNormals","_pOutputsNormals","_iGetNormalVertexCode","_iGetNormalFragmentCode","removeVertexTempUsage","_iGetVertexCode","sharedReg","_iGetFragmentCode","alphaReg","_iUsesShadows","castingDirectionalLights","castingPointLights","_iUsesSpecular","_iUsesDiffuse","numDirectionalLightsOld","numPointLightsOld","numLightProbesOld","calculateNumDirectionalLights","calculateNumPointLights","calculateNumProbes","min","numFree","numChannels","PROBES","awayjs-display/lib/materials/LightSources","awayjs-methodmaterials/lib/methods/EffectColorTransformMethod","awayjs-renderergl/lib/compilation/ShaderLightingObject","awayjs-renderergl/lib/compilation/ShaderObjectBase","awayjs-renderergl/lib/passes/RenderPassBase","awayjs-methodmaterials\\lib\\passes\\SingleObjectDepthPass","Matrix3D","RenderTexture","TriangleSubGeometry","ContextGLProgramType","SingleObjectDepthPass","_textureSize","_polyOffset","_projectionTexturesInvalid","_textures","key","updateProjectionTextures","_projections","renderableOwner","context","light","lights","_renderObjectOwner","allPickedLights","rId","iGetObjectProjectionMatrix","sourceEntity","setRenderTarget","clear","setProgramConstantsFromMatrix","VERTEX","setProgramConstantsFromArray","FRAGMENT","_enc","activateBuffer","getVertexData","POSITION_DATA","getVertexOffset","POSITION_FORMAT","NORMAL_DATA","NORMAL_FORMAT","drawTriangles","getIndexBuffer","getIndexData","numTriangles","awayjs-core/lib/geom/Matrix3D","awayjs-core/lib/textures/RenderTexture","awayjs-display/lib/base/TriangleSubGeometry","awayjs-stagegl/lib/base/ContextGLProgramType","awayjs-methodmaterials\\lib\\pool\\MethodRenderablePool","RenderablePoolBase","RenderObjectPool","MethodRenderablePool","_methodMaterialRenderObjectPool","getItem","getPool","pools","_pools","stageIndex","awayjs-methodmaterials/lib/compilation/RenderMethodMaterialObject","awayjs-renderergl/lib/compilation/RenderObjectPool","awayjs-renderergl/lib/pool/RenderablePoolBase","awayjs-methodmaterials\\lib\\pool\\MethodRendererPool","BillboardRenderable","LineSegmentRenderable","LineSubMeshRenderable","TriangleSubMeshRenderable","RendererPoolBase","MethodRendererPool","renderer","_pUpdatePool","_billboardRenderablePool","_pStage","_lineSegmentRenderablePool","_triangleSubMeshRenderablePool","_lineSubMeshRenderablePool","awayjs-methodmaterials/lib/pool/MethodRenderablePool","awayjs-renderergl/lib/pool/BillboardRenderable","awayjs-renderergl/lib/pool/LineSegmentRenderable","awayjs-renderergl/lib/pool/LineSubMeshRenderable","awayjs-renderergl/lib/pool/RendererPoolBase","awayjs-renderergl/lib/pool/TriangleSubMeshRenderable"],"mappings":"AAAAA,QAAA,QAAAC,GAAAC,EAAAC,EAAAC,GAAA,QAAAC,GAAAC,EAAAC,GAAA,IAAAJ,EAAAG,GAAA,CAAA,IAAAJ,EAAAI,GAAA,CAAA,GAAAE,SAAAR,UAAA,YAAAA,OAAA,KAAAO,GAAAC,EAAA,MAAAA,GAAAF,GAAA,EAAA,IAAAG,EAAA,MAAAA,GAAAH,GAAA,EAAA,IAAAI,GAAA,GAAAC,OAAA,uBAAAL,EAAA,IAAA,MAAAI,GAAAE,KAAA,mBAAAF,EAAA,GAAAG,GAAAV,EAAAG,IAAAQ,WAAAZ,GAAAI,GAAA,GAAAS,KAAAF,EAAAC,QAAA,SAAAb,GAAA,GAAAE,GAAAD,EAAAI,GAAA,GAAAL,EAAA,OAAAI,GAAAF,EAAAA,EAAAF,IAAAY,EAAAA,EAAAC,QAAAb,EAAAC,EAAAC,EAAAC,GAAA,MAAAD,GAAAG,GAAAQ,QAAA,GAAAL,SAAAT,UAAA,YAAAA,OAAA,KAAA,GAAAM,GAAA,EAAAA,EAAAF,EAAAY,OAAAV,IAAAD,EAAAD,EAAAE,GAAA,OAAAD,KAAAY,mDAAA,SAAAjB,EAAAkB,EAAAJ,GCAA,GAAMK,GAAkB,WAAxB,QAAMA,MAKSA,EAAAC,YAAqB,YAKrBD,GAAAE,WAAoB,WACnC,OAAAF,KAEAD,GAA4BJ,QAAnBK,OCIHG,+CAA+C,SAAStB,EAAQkB,EAAOJ,GAC7E,GAAIS,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GCtBtB,IAAOG,GAAahC,EAAc,yCAMlC,IAAOiC,GAAYjC,EAAe,4CAGlC,IAAOkC,GAAoBlC,EAAa,+CAExC,IAAOmC,GAAkBnC,EAAa,wDACtC,IAAOoC,GAAkBpC,EAAa,wDAEtC,IAAOqC,GAAiBrC,EAAa,uDAErC,IAAOsC,GAAmBtC,EAAa,yDACvC,IAAOmB,GAAkBnB,EAAa,gDDmBtC,ICXMuC,GAAc,SAAAC,GAASjB,EAAvBgB,EAAcC,EAwBnB,SAxBKD,GAwBOE,EAAyBC,EAAwBC,EAAwBC,GAAzE,GAAAH,QAAA,GAAuB,CAAvBA,EAAA,KAAyB,GAAAC,QAAA,GAAsB,CAAtBA,EAAA,KAAwB,GAAAC,QAAA,GAAsB,CAAtBA,EAAA,MAAwB,GAAAC,QAAA,GAAqB,CAArBA,EAAA,KAEpFJ,EAAAzB,KAAAS,KAxBOA,MAAAqB,eAAyC,GAAIC,MAG7CtB,MAAAuB,eAAoC,GAAIZ,EAExCX,MAAAwB,eAAoC,GAAIZ,EACxCZ,MAAAyB,cAAkC,GAAIZ,EACtCb,MAAA0B,gBAAsC,GAAIZ,EAG1Cd,MAAA2B,kBAA2BjB,EAAqBkB,UAgBvD5B,MAAK6B,MAAQlC,EAAmBC,WAEhC,IAAIqB,YAAwBT,GAAe,CAC1CR,KAAK8B,QAA0Bb,CAE/BjB,MAAK+B,OAAUb,GAAe,KAAO,KAAO,KAC5ClB,MAAKmB,OAASA,CACdnB,MAAKoB,OAASA,MACR,CACNpB,KAAKgC,MAASf,GAAgB,KAAO,SAAWgB,OAAOhB,EACvDjB,MAAKkC,MAAShB,GAAe,KAAO,EAAIe,OAAOf,IAKjDiB,OAAAC,eAAWrB,EAAAR,UAAA,QDLJ8B,ICKP,WAEC,MAAOrC,MAAK6B,ODJNS,ICOP,SAAgBC,GAEf,GAAIvC,KAAK6B,OAASU,EACjB,MAEDvC,MAAK6B,MAAQU,CAEbvC,MAAKwC,4BDRCC,WAAY,KACZC,aAAc,MCgBrBP,QAAAC,eAAWrB,EAAAR,UAAA,oBDRJ8B,ICQP,WAEC,MAAOrC,MAAK2B,mBDPNW,ICUP,SAA4BC,GAE3B,GAAIvC,KAAK2B,mBAAqBY,EAC7B,MAEDvC,MAAK2B,kBAAoBY,CAEzBvC,MAAKwC,4BDXCC,WAAY,KACZC,aAAc,MCgBrBP,QAAAC,eAAWrB,EAAAR,UAAA,kBDVJ8B,ICUP,WAEC,MAAOrC,MAAKwB,eAAeM,SDTrBQ,ICYP,SAA0BC,GAEzBvC,KAAKwB,eAAeM,QAAUS,GDXxBE,WAAY,KACZC,aAAc,MCgBrBP,QAAAC,eAAWrB,EAAAR,UAAA,iBDVJ8B,ICUP,WAEC,MAAOrC,MAAKuB,gBDTNe,ICYP,SAAyBC,GAExB,GAAIvC,KAAKuB,gBAAkBgB,EAC1B,MAED,IAAIA,GAASvC,KAAKuB,eACjBgB,EAAMI,SAAS3C,KAAKuB,eAErBvB,MAAKuB,eAAiBgB,CAEtBvC,MAAKwC,4BDdCC,WAAY,KACZC,aAAc,MCmBrBP,QAAAC,eAAWrB,EAAAR,UAAA,gBDbJ8B,ICaP,WAEC,MAAOrC,MAAK4C,eDZNN,ICeP,SAAwBC,GAEvB,GAAIvC,KAAK4C,eAAiBL,EACzB,MAED,IAAIA,GAASvC,KAAK4C,cACjBL,EAAMI,SAAS3C,KAAK4C,cAErB5C,MAAK4C,cAAgBL,CAErBvC,MAAKwC,4BDjBCC,WAAY,KACZC,aAAc,MCsBrBP,QAAAC,eAAWrB,EAAAR,UAAA,iBDhBJ8B,ICgBP,WAEC,MAAOrC,MAAKwB,gBDfNc,ICkBP,SAAyBC,GAExB,GAAIvC,KAAKwB,gBAAkBe,EAC1B,MAED,IAAIA,GAASvC,KAAKwB,eACjBe,EAAMI,SAAS3C,KAAKwB,eAErBxB,MAAKwB,eAAiBe,CAEtBvC,MAAKwC,4BDpBCC,WAAY,KACZC,aAAc,MCyBrBP,QAAAC,eAAWrB,EAAAR,UAAA,kBDnBJ8B,ICmBP,WAEC,MAAOrC,MAAK0B,iBDlBNY,ICqBP,SAA0BC,GAEzB,GAAIvC,KAAK0B,iBAAmBa,EAC3B,MAED,IAAIA,GAASvC,KAAK0B,gBACjBa,EAAMI,SAAS3C,KAAK0B,gBAErB1B,MAAK0B,gBAAkBa,CAEvBvC,MAAKwC,4BDvBCC,WAAY,KACZC,aAAc,MC4BrBP,QAAAC,eAAWrB,EAAAR,UAAA,gBDtBJ8B,ICsBP,WAEC,MAAOrC,MAAKyB,eDrBNa,ICwBP,SAAwBC,GAEvB,GAAIvC,KAAKyB,eAAiBc,EACzB,MAED,IAAIA,GAASvC,KAAKyB,cACjBc,EAAMI,SAAS3C,KAAKyB,cAErBzB,MAAKyB,cAAgBc,CAErBvC,MAAKwC,4BD1BCC,WAAY,KACZC,aAAc,MC4BrBP,QAAAC,eAAWrB,EAAAR,UAAA,oBDzBJ8B,ICyBP,WAEC,MAAOrC,MAAKqB,eAAe7B,QDxBrBiD,WAAY,KACZC,aAAc,MC+Bd3B,GAAAR,UAAAsC,gBAAP,SAAuBC,GAEtB9C,KAAKqB,eAAe0B,KAAKD,EAEzB9C,MAAKwC,2BAQCzB,GAAAR,UAAAyC,kBAAP,SAAyBC,GAExB,MAAOjD,MAAKqB,eAAe4B,GAQrBlC,GAAAR,UAAA2C,kBAAP,SAAyBJ,EAAyBG,GAEjDjD,KAAKqB,eAAe8B,OAAOF,EAAO,EAAGH,EAErC9C,MAAKwC,2BAOCzB,GAAAR,UAAA6C,mBAAP,SAA0BN,GAEzB9C,KAAKqB,eAAe8B,OAAOnD,KAAKqB,eAAegC,QAAQP,GAAS,EAEhE9C,MAAKwC,2BAONL,QAAAC,eAAWrB,EAAAR,UAAA,aDlCJ8B,ICkCP,WAEC,MAAOrC,MAAKyB,cAAc6B,WDjCpBhB,ICoCP,SAAqBC,GAEpBvC,KAAKyB,cAAc6B,UAAYf,GDnCzBE,WAAY,KACZC,aAAc,MC0CrBP,QAAAC,eAAWrB,EAAAR,UAAA,eDlCJ8B,ICkCP,WAEC,MAAOrC,MAAK0B,gBAAgBI,SDjCtBQ,ICoCP,SAAuBC,GAEtBvC,KAAK0B,gBAAgBI,QAAUS,GDnCzBE,WAAY,KACZC,aAAc,MCwCrBP,QAAAC,eAAWrB,EAAAR,UAAA,SDlCJ8B,ICkCP,WAEC,MAAOrC,MAAK0B,gBAAgB6B,ODjCtBjB,ICoCP,SAAiBC,GAEhBvC,KAAK0B,gBAAgB6B,MAAQhB,GDnCvBE,WAAY,KACZC,aAAc,MCwCrBP,QAAAC,eAAWrB,EAAAR,UAAA,WDlCJ8B,ICkCP,WAEC,MAAOrC,MAAKuB,eAAeiC,SDjCrBlB,ICoCP,SAAmBC,GAElBvC,KAAKuB,eAAeiC,QAAUjB,GDnCxBE,WAAY,KACZC,aAAc,MCwCrBP,QAAAC,eAAWrB,EAAAR,UAAA,YDlCJ8B,ICkCP,WAEC,MAAOrC,MAAK0B,gBAAgB+B,UDjCtBnB,ICoCP,SAAoBC,GAEnBvC,KAAK0B,gBAAgB+B,SAAWlB,GDnC1BE,WAAY,KACZC,aAAc,MCwCrBP,QAAAC,eAAWrB,EAAAR,UAAA,gBDlCJ8B,ICkCP,WAEC,MAAOrC,MAAKwB,eAAekC,cDjCrBpB,ICoCP,SAAwBC,GAEvBvC,KAAKwB,eAAekC,aAAenB,GDnC7BE,WAAY,KACZC,aAAc,MCwCrBP,QAAAC,eAAWrB,EAAAR,UAAA,gBDlCJ8B,ICkCP,WAEC,MAAOrC,MAAKwB,eAAemC,cDjCrBrB,ICoCP,SAAwBC,GAEvBvC,KAAKwB,eAAemC,aAAepB,GDnC7BE,WAAY,KACZC,aAAc,MCwCrBP,QAAAC,eAAWrB,EAAAR,UAAA,iBDlCJ8B,ICkCP,WAEC,MAAOrC,MAAK0B,gBAAgBkC,eDjCtBtB,ICoCP,SAAyBC,GAExBvC,KAAK0B,gBAAgBkC,cAAgBrB,GDnC/BE,WAAY,KACZC,aAAc,MC2Cd3B,GAAAR,UAAAsD,gBAAP,SAAuBC,GAEtB,MAAOA,GAAeC,sBAAsB/D,MAE9C,OAAAe,IA5W6BN,EA8W7Bf,GAAwBJ,QAAfyB,IDjCNiD,yCAAyCC,UAAUC,4CAA4CD,UAAUE,gDAAgDF,UAAUG,wDAAwDH,UAAUI,wDAAwDJ,UAAUK,uDAAuDL,UAAUM,yDAAyDN,UAAUO,+CAA+CP,YAAYQ,wEAAwE,SAASjG,EAAQkB,EAAOJ,GACzkB,GAAIS,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GEnWtB,IAAOqE,GAASlG,EAAgB,iCAIhC,IAAOmG,GAAiBnG,EAAc,8DAGtC,IAAOkC,GAAoBlC,EAAc,+CAMzC,IAAOoG,GAAgBpG,EAAe,qDAKtC,IAAOqG,GAAcrG,EAAe,mDACpC,IAAOsG,GAAUtG,EAAgB,+CASjC,IAAOmB,GAAkBnB,EAAc,gDFoVvC,IE9UMuG,GAA0B,SAAA/D,GAASjB,EAAnCgF,EAA0B/D,EAiC/B,SAjCK+D,GAiCOC,EAAuBC,EAAyBC,EAAkCC,GAE7FnE,EAAAzB,KAAAS,KAAMgF,EAAMC,EAAUC,EAAiBC,EAEvCnF,MAAKoF,UAAYH,EAtBlB9C,OAAAC,eAAY2C,EAAAxE,UAAA,aF8UL8B,IE9UP,WAEC,MAAOrC,MAAKoF,UAAUC,YAAarF,KAAKoF,UAAUC,YAAYC,eAAiBtF,KAAKoF,UAAUC,YAAYE,qBAAuBvF,KAAKoF,UAAUC,YAAYG,eAAiBxF,KAAKoF,UAAUC,YAAYI,4BAA8BzF,KAAKoF,UAAUC,YAAYK,sBAAwB,GF+UnRjD,WAAY,KACZC,aAAc,ME1UrBP,QAAAC,eAAY2C,EAAAxE,UAAA,iBFgVL8B,IEhVP,WAEC,MAAOrC,MAAKoF,UAAUC,YAAarF,KAAKoF,UAAUC,YAAYC,eAAiBtF,KAAKoF,UAAUC,YAAYE,qBAAuBvF,KAAKoF,UAAUC,YAAYG,eAAiB,GFiVvK/C,WAAY,KACZC,aAAc,MEhUdqC,GAAAxE,UAAAoF,qBAAP,WAEC3E,EAAAT,UAAMoF,qBAAoBpG,KAAAS,KAE1BA,MAAK4F,YAEL5F,MAAK6F,yBAEL7F,MAAK8F,qBAEL,IAAI9F,KAAKoF,UAAUW,MAAQpG,EAAmBE,WAAY,CACzD,GAAIG,KAAKgG,iBACRhG,KAAKiG,gBAAgBjG,KAAKgG,iBAE3B,IAAIhG,KAAKkG,sBACR,IAAK,GAAIjH,GAAW,EAAGA,EAAIe,KAAKkG,sBAAsB1G,SAAUP,EAC/De,KAAKiG,gBAAgBjG,KAAKkG,sBAAsBjH,IAGnD,GAAIe,KAAKmG,YACRnG,KAAKiG,gBAAgBjG,KAAKmG,aAMpBpB,GAAAxE,UAAAqF,WAAR,WAIC,GAAI5F,KAAKoG,WAAa,GAAKpG,KAAKoF,UAAUiB,iBAAmB,GAAKrG,KAAKoF,UAAUW,MAAQpG,EAAmBC,YAC3GI,KAAKsG,qBACD,IAAItG,KAAKmG,YACbnG,KAAKuG,kBAGN,IAAIvG,KAAKoF,UAAUoB,cAAgBxG,KAAKoF,UAAUW,MAAQpG,EAAmBE,WAC5EG,KAAKyG,0BACD,IAAIzG,KAAKgG,iBACbhG,KAAK0G,uBAGN,IAAI1G,KAAK2G,cAAgB,GAAK3G,KAAKoF,UAAUW,MAAQpG,EAAmBE,WACvEG,KAAK4G,+BACD,IAAI5G,KAAKkG,sBACblG,KAAK6G,6BAMC9B,GAAAxE,UAAAsF,wBAAR,WAEC,GAAIiB,GAA2BC,QAAQ/G,KAAKgG,kBAAoBhG,KAAKmG,YAGrE,IAAInG,KAAKgG,iBAAkB,CAC1BhG,KAAKgG,iBAAiBc,iBAAmBA,CACzC9G,MAAKgG,iBAAiBgB,aAAatC,EAAUuC,OAC7CjH,MAAKgG,iBAAiBkB,iBAAmBlH,KAAKoF,UAAU8B,iBAGzD,GAAIlH,KAAKkG,sBAAuB,CAC/B,GAAIiB,GAA4B,CAIhC,KAAKnH,KAAKgG,iBAAkB,CAC3BhG,KAAKkG,sBAAsB,GAAGY,iBAAmBA,CACjD9G,MAAKkG,sBAAsB,GAAGc,aAAatC,EAAUuC,OACrDjH,MAAKkG,sBAAsB,GAAGgB,iBAAmBlH,KAAKoF,UAAU8B,gBAChEC,GAAqB,EAItB,IAAK,GAAIlI,GAAWkI,EAAoBlI,EAAIe,KAAKkG,sBAAsB1G,SAAUP,EAAG,CACnFe,KAAKkG,sBAAsBjH,GAAG6H,iBAAmBA,CACjD9G,MAAKkG,sBAAsBjH,GAAG+H,aAAatC,EAAU0C,IACrDpH,MAAKkG,sBAAsBjH,GAAGiI,iBAAmBxG,EAAqBkB,YAIxE,GAAI5B,KAAKgG,kBAAoBhG,KAAKkG,sBAAuB,CAExDlG,KAAKqH,mBAAqB,KAG1B,IAAIrH,KAAKmG,YAAa,CACrBnG,KAAKmG,YAAYJ,KAAOlB,EAAeyC,OACvCtH,MAAKmG,YAAYe,iBAAmBxG,EAAqBkB,UACzD5B,MAAKmG,YAAYa,aAAatC,EAAU6C,MACxCvH,MAAKmG,YAAYW,iBAAmBA,OAG/B,IAAI9G,KAAKmG,YAAa,CAC5BnG,KAAKqH,mBAAsBrH,KAAKoF,UAAUoC,WAAa9C,EAAUuC,QAAUjH,KAAKoF,UAAUqC,eAAkBzH,KAAKoF,UAAUsC,gBAAkB1H,KAAKoF,UAAUsC,eAAeC,gBAAkB,CAE7L3H,MAAKmG,YAAYJ,KAAOlB,EAAe+C,YACvC5H,MAAKmG,YAAYe,iBAAmBlH,KAAKoF,UAAU8B,gBACnDlH,MAAKmG,YAAY0B,cAAgB7H,KAAKqH,kBACtCrH,MAAKmG,YAAYuB,eAAiB1H,KAAKoF,UAAUsC,cACjD1H,MAAKmG,YAAYa,aAAchH,KAAKoF,UAAUoC,WAAa9C,EAAUuC,QAAUjH,KAAKqH,mBAAqB3C,EAAU6C,MAAQvH,KAAKoF,UAAUoC,UAC1IxH,MAAKmG,YAAYW,iBAAmB,OAI9B/B,GAAAxE,UAAAkG,oBAAR,WAGC,GAAIzG,KAAKgG,kBAAoB,KAC5BhG,KAAKgG,iBAAmB,GAAIlB,GAAWD,EAAeiD,SAAU9H,KAAMA,KAAKoF,UAAWpF,KAAK+H,iBAAkB/H,KAAKgI,OAEnHhI,MAAKgG,iBAAiBX,YAAc,GAAIV,IAAmB3E,KAAKoF,UAAUoB,aAAayB,cACvFjI,MAAKgG,iBAAiBQ,aAAexG,KAAKoF,UAAUoB,YACpDxG,MAAKgG,iBAAiBkC,cAAgBlI,KAAKoF,UAAU8C,aACrDlI,MAAKgG,iBAAiBmC,cAAgBnI,KAAKoF,UAAU+C,aACrDnI,MAAKgG,iBAAiBoC,aAAepI,KAAKoF,UAAUgD,YACpDpI,MAAKgG,iBAAiBqC,eAAiBrI,KAAKoF,UAAUiD,eAG/CtD,GAAAxE,UAAAmG,sBAAR,WAEC1G,KAAKgG,iBAAiBsC,SACtBtI,MAAKuI,mBAAmBvI,KAAKgG,iBAC7BhG,MAAKgG,iBAAmB,KAGjBjB,GAAAxE,UAAAqG,yBAAR,WAEC5G,KAAK6G,4BACL,IAAI2B,EACJ,IAAIC,GAAsBzI,KAAKoF,UAAUC,YAAYE,oBACrD,IAAIC,GAAwBxF,KAAKoF,UAAUC,YAAYG,cACvD,IAAIF,GAAwBtF,KAAKoF,UAAUC,YAAYC,cACvD,IAAIoD,GAAwB,CAC5B,IAAIC,GAA0B,CAC9B,IAAIC,GAAqB,CAEzB,KAAK5I,KAAKgG,iBAAkB,CAC3ByC,GAAgBzI,KAAKoF,UAAUC,YAAYI,2BAC3CD,IAAkBxF,KAAKoF,UAAUC,YAAYK,sBAG9C1F,KAAKkG,sBAAwB,GAAI5E,MAEjC,OAAOoH,EAAiBD,GAAgBE,EAAmBnD,GAAkBoD,EAActD,EAAgB,CAC1GkD,EAAO,GAAI1D,GAAWD,EAAeiD,SAAU9H,KAAMA,KAAKoF,UAAWpF,KAAK+H,iBAAkB/H,KAAKgI,OACjGQ,GAAKK,eAAiB7I,KAAKoF,UAAUoB,cAAgB,IACrDgC,GAAKM,wBAA0BJ,CAC/BF,GAAKO,kBAAoBJ,CACzBH,GAAKQ,kBAAoBJ,CACzBJ,GAAKnD,YAAcrF,KAAKoF,UAAUC,WAClCmD,GAAKN,cAAgBlI,KAAKoF,UAAU8C,aACpCM,GAAKL,cAAgBnI,KAAKoF,UAAU+C,aACpCK,GAAKJ,aAAepI,KAAKoF,UAAUgD,YACnCI,GAAKH,eAAiBrI,KAAKoF,UAAUiD,cACrCrI,MAAKkG,sBAAsBnD,KAAKyF,EAEhCE,IAAkBF,EAAKjD,oBACvBoD,IAAoBH,EAAKhD,cACzBoD,IAAeJ,EAAKlD,gBAIdP,GAAAxE,UAAAsG,2BAAR,WAEC,IAAK7G,KAAKkG,sBACT,MAED,KAAK,GAAIjH,GAAW,EAAGA,EAAIe,KAAKkG,sBAAsB1G,SAAUP,EAC/De,KAAKuI,mBAAmBvI,KAAKkG,sBAAsBjH,GAEpDe,MAAKkG,sBAAwB,KAGtBnB,GAAAxE,UAAAgG,iBAAR,WAEC,GAAIvG,KAAKmG,YAAYgC,eAAiBnI,KAAKoF,UAAU+C,cACpDnI,KAAKmG,YAAYgC,cAAcG,SAEhC,IAAItI,KAAKmG,YAAY+B,eAAiBlI,KAAKoF,UAAU8C,cACpDlI,KAAKmG,YAAY+B,cAAcI,SAEhC,IAAItI,KAAKmG,YAAYkC,gBAAkBrI,KAAKoF,UAAUiD,eACrDrI,KAAKmG,YAAYkC,eAAeC,SAEjC,IAAItI,KAAKmG,YAAYiC,cAAgBpI,KAAKoF,UAAUgD,aACnDpI,KAAKmG,YAAYiC,aAAaE,SAE/BtI,MAAKuI,mBAAmBvI,KAAKmG,YAC7BnG,MAAKmG,YAAc,KAGZpB,GAAAxE,UAAA+F,eAAR,WAEC,GAAItG,KAAKmG,aAAe,KACvBnG,KAAKmG,YAAc,GAAIrB,GAAWD,EAAe+C,aAAc5H,KAAMA,KAAKoF,UAAWpF,KAAK+H,iBAAkB/H,KAAKgI,OAElH,IAAIhI,KAAKoF,UAAUW,MAAQpG,EAAmBC,YAAa,CAC1DI,KAAKmG,YAAYgC,cAAgBnI,KAAKoF,UAAU+C,aAChDnI,MAAKmG,YAAY+B,cAAgBlI,KAAKoF,UAAU8C,aAChDlI,MAAKmG,YAAYkC,eAAiBrI,KAAKoF,UAAUiD,cACjDrI,MAAKmG,YAAYiC,aAAepI,KAAKoF,UAAUgD,YAC/CpI,MAAKmG,YAAYK,aAAexG,KAAKoF,UAAUoB,iBACzC,IAAIxG,KAAKoF,UAAUW,MAAQpG,EAAmBE,WAAY,CAChE,GAAIG,KAAKoG,WAAa,EAAG,CACxBpG,KAAKmG,YAAYgC,cAAgBnI,KAAKoF,UAAU+C,kBAC1C,CACNnI,KAAKmG,YAAYgC,cAAgB,KAGlCnI,KAAKmG,YAAY0B,cAAgB,KACjC7H,MAAKmG,YAAYiC,aAAepI,KAAKoF,UAAUgD,aF4R1C,GExRFnJ,GAAW,CACf,IAAIgK,EACJ,IAAIC,GAAaC,KAAKC,IAAIpJ,KAAKoF,UAAUiB,iBAAkBrG,KAAKmG,YAAYE,iBAE5E,OAAOpH,EAAIiK,EAAK,CACfD,EAAejJ,KAAKoF,UAAUpC,kBAAkB/D,EAChD,IAAIgK,GAAgBjJ,KAAKmG,YAAYnD,kBAAkB/D,GAAI,CAC1De,KAAKmG,YAAYkD,qBAAqBpK,EAEtC,IAAIgK,GAAgB,KAAM,CACzB,GAAIhK,EAAIe,KAAKmG,YAAYE,iBACxBrG,KAAKmG,YAAYjD,kBAAkB+F,EAAchK,OAEjDe,MAAKmG,YAAYtD,gBAAgBoG,IAIpChK,KAOK8F,GAAAxE,UAAA+H,QAAP,WAECtH,EAAAT,UAAM+H,QAAO/I,KAAAS,MAxRA+E,GAAAuE,GAAY,QA4R3B,OAAAvE,IAjSyCH,EAmSzClF,GAAoCJ,QAA3ByF,IFyRNwE,iCAAiCtF,UAAUuF,8DAA8DvF,UAAUE,gDAAgDF,UAAUwF,+CAA+CxF,UAAUyF,mDAAmDzF,UAAU0F,qDAAqD1F,UAAUO,+CAA+CP,YAAY2F,+CAA+C,SAASpL,EAAQkB,EAAOJ,GAKve,GGrmBMuK,GAAQ,WA6Bb,QA7BKA,GA6BO/G,GA3BL9C,KAAA8J,UAAoB,IA6B1B9J,MAAK8C,OAASA,EAMR+G,EAAAtJ,UAAAwJ,MAAP,WAEC/J,KAAK8C,OAAOkH,QAEZhK,MAAKiK,eAAiB,CACtBjK,MAAKkK,sBAAwB,CAC7BlK,MAAKmK,wBAA0B,CAE/BnK,MAAKoK,gBAAkB,KACvBpK,MAAKqK,UAAY,KACjBrK,MAAKsK,aAAe,KACpBtK,MAAKuK,cAAgB,KACrBvK,MAAKwK,QAAU,KACfxK,MAAKyK,iBAAmB,KACxBzK,MAAK0K,qBAAuB,KAC5B1K,MAAK2K,uBAAyB,MAEhC,OAAAd,KAEAnK,GAAkBJ,QAATuK,OH2kBHe,4DAA4D,SAASpM,EAAQkB,EAAOJ,GAC1F,GAAIS,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GItoBtB,IAAOwK,GAAoBrM,EAAa,mDAGxC,IAAOsM,GAAiBtM,EAAa,uDJ0oBrC,IIroBMmC,GAAkB,SAAAK,GAASjB,EAA3BY,EAAkBK,EAcvB,SAdKL,KAgBJK,EAAAzB,KAAAS,KAdOA,MAAA+K,OAAgB,QAChB/K,MAAAgL,OAAgB,CAEhBhL,MAAAiL,QAAiB,CACjBjL,MAAAkL,QAAiB,CACjBlL,MAAAmL,QAAiB,CAEjBnL,MAAAoL,SAAkB,EAanBzK,EAAAJ,UAAA8K,QAAP,SAAeC,EAA+BC,GAE7CA,EAASf,QAAUzD,QAAQuE,EAAaxJ,SAAW,MAM7CnB,GAAAJ,UAAAiL,eAAP,SAAsBF,EAA+BC,GAEpD,IAAKA,EAASf,QAAS,CACtBxK,KAAK+K,OAASO,EAAatJ,KAC3BhC,MAAKyL,eAOPtJ,QAAAC,eAAWzB,EAAAJ,UAAA,WJ6nBJ8B,II7nBP,WAEC,MAAOrC,MAAKoL,UJ8nBN9I,II3nBP,SAAmBC,GAElB,GAAIvC,KAAKoL,UAAY7I,EACpB,MAEDvC,MAAKoL,SAAW7I,CAEhBvC,MAAKyL,eJ0nBChJ,WAAY,KACZC,aAAc,MIrnBrBP,QAAAC,eAAWzB,EAAAJ,UAAA,SJ2nBJ8B,II3nBP,WAEC,MAAOrC,MAAKgL,QJ4nBN1I,IIznBP,SAAiBC,GAEhB,GAAIvC,KAAKgL,QAAUzI,EAClB,MAEDvC,MAAKgL,OAASzI,CAEdvC,MAAKyL,eJwnBChJ,WAAY,KACZC,aAAc,MInnBd/B,GAAAJ,UAAAoC,SAAP,SAAgBG,GAEf,GAAI4I,GAAQ5I,CACZ,IAAI5C,GAA4CwL,EAM1C/K,GAAAJ,UAAAoL,iBAAP,SAAwBL,EAA+BC,EAAmBK,EAAiCC,EAAmCC,GAE7I,GAAI1M,GAAc,EAClB,IAAI2M,EAEJ,IAAIR,EAASf,QAAS,CACrBuB,EAAuBF,EAAcG,mBAErCT,GAAStB,cAAgB8B,EAAqB9I,KAE9C7D,IAAQyL,EAAqBoB,mBAAmBL,EAAWE,EAAiBC,EAAsBT,EAAaxJ,QAASwJ,EAAaY,kBAAmBZ,EAAaa,eAAgB,MAErL,IAAIb,EAAac,eAAiB,EAAG,CACpC,GAAIC,GAAkCR,EAAcS,yBACpDf,GAASpB,uBAAyBkC,EAAUpJ,MAAM,CAElD7D,IAAQ,OAASwM,EAAY,OAASA,EAAY,OAASS,EAAY,OACtE,OAAST,EAAY,OACrB,OAASA,EAAY,OAASA,EAAY,OAASS,EAAY,YAG3D,CACNN,EAAuBF,EAAcS,yBACrCf,GAASpB,uBAAyB4B,EAAqB9I,MAAM,CAE7D7D,IAAQ,OAASwM,EAAY,KAAOG,EAAuB,KAG5D,MAAO3M,GAMDuB,GAAAJ,UAAAgM,UAAP,SAAiBjB,EAA+BC,EAAmBpG,GAElE,GAAIoG,EAASf,QAAS,CACrBrF,EAAMqH,gBAAgBjB,EAAStB,cAAeqB,EAAaxJ,QAASwJ,EAAaa,eAAgBb,EAAaY,kBAAmBZ,EAAamB,cAE9I,IAAInB,EAAac,eAAiB,EACjCd,EAAaoB,qBAAqBnB,EAASpB,wBAA0BmB,EAAac,mBAC7E,CACN,GAAInJ,GAAesI,EAASpB,sBAC5B,IAAIwC,GAAqBrB,EAAaoB,oBACtCC,GAAK1J,GAASjD,KAAKiL,OACnB0B,GAAK1J,EAAQ,GAAKjD,KAAKkL,OACvByB,GAAK1J,EAAQ,GAAKjD,KAAKmL,OACvBwB,GAAK1J,EAAQ,GAAKjD,KAAKgL,QAOjBrK,GAAAJ,UAAAkL,YAAR,WAECzL,KAAKiL,SAAYjL,KAAK+K,QAAU,GAAM,KAAM,IAAK/K,KAAKoL,QACtDpL,MAAKkL,SAAYlL,KAAK+K,QAAU,EAAK,KAAM,IAAK/K,KAAKoL,QACrDpL,MAAKmL,SAAWnL,KAAK+K,OAAS,KAAM,IAAK/K,KAAKoL,SAEhD,OAAAzK,IAlJiCmK,EAoJLpL,GAAAJ,QAAnBqB,IJ2mBNiM,uDAAuD3I,UAAU4I,mDAAmD5I,YAAY6I,6DAA6D,SAAStO,EAAQkB,EAAOJ,GACxN,GAAIS,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GK5wBtB,IAAOwK,GAAoBrM,EAAc,mDAGzC,IAAOmC,GAAkBnC,EAAc,wDLixBvC,IK3wBMuO,GAAmB,SAAA/L,GAASjB,EAA5BgN,EAAmB/L,EASxB,SATK+L,GASOC,GAEXhM,EAAAzB,KAAAS,KACAA,MAAKiN,aAAeD,EAMdD,EAAAxM,UAAA8K,QAAP,SAAeC,EAA+BC,GAE7CvK,EAAAT,UAAM8K,QAAO9L,KAAAS,KAACsL,EAAcC,EAE5BA,GAASjB,aAAe,KAMzBnI,QAAAC,eAAW2K,EAAAxM,UAAA,ULqwBJ8B,IKrwBP,WAEC,MAAOrC,MAAKiN,cLswBN3K,IKnwBP,SAAkBC,GAEjBvC,KAAKiN,aAAe1K,GLowBdE,WAAY,KACZC,aAAc,MK/vBdqK,GAAAxM,UAAAgM,UAAP,SAAiBjB,EAA+BC,EAAmBpG,GAElEnE,EAAAT,UAAMgM,UAAShN,KAAAS,KAACsL,EAAcC,EAAUpG,EAExCA,GAAM+H,oBAAoB3B,EAAStB,cAAejK,KAAKiN,aAAc3B,EAAaY,kBAAmBZ,EAAamB,eAM5GM,GAAAxM,UAAAoL,iBAAP,SAAwBL,EAA+BC,EAAmBK,EAAiCuB,EAA8BrB,GAExI,GAAI1M,GAAc,EAClB,IAAI2M,EACJ,IAAIqB,GAAmCD,EAASnB,mBAChDT,GAAStB,cAAgBmD,EAAWnK,KAEpC7D,IAAQyL,EAAqBwC,qBAAqBzB,EAAWwB,EAAYpN,KAAKiN,aAAc3B,EAAaY,kBAAmBZ,EAAamB,cAAeX,EAAgBwB,eAExKvB,GAAuBoB,EAASb,yBAChCf,GAASpB,uBAAyB4B,EAAqB9I,KAEvD7D,IAAQ,OAASwM,EAAY,SAAWA,EAAY,SAAWG,EAAuB,QAEtF,OAAO3M,GAET,OAAA2N,IAnEkCpM,EAqElCjB,GAA6BJ,QAApByN,IL+vBN3I,wDAAwDH,UAAU4I,mDAAmD5I,YAAYsJ,4DAA4D,SAAS/O,EAAQkB,EAAOJ,GACxN,GAAIS,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GMh1BtB,IAAOwK,GAAoBrM,EAAa,mDAKxC,IAAOgP,GAAkBhP,EAAa,wDNk1BtC,IM70BMoC,GAAkB,SAAAI,GAASjB,EAA3Ba,EAAkBI,EAuBvB,SAvBKJ,KAyBJI,EAAAzB,KAAAS,KAvBOA,MAAAyN,UAAoB,IAOpBzN,MAAA0N,cAAuB,QACvB1N,MAAA2N,cAAuB,QACvB3N,MAAA4N,UAAmB,CACnB5N,MAAA6N,UAAmB,CACnB7N,MAAA8N,UAAmB,CACnB9N,MAAA+N,UAAmB,CACnB/N,MAAAgO,UAAmB,CACnBhO,MAAAiO,UAAmB,EAYpBrN,EAAAL,UAAA2N,QAAP,SAAe5C,GAEd,IAAKA,EAAalF,UACjB,MAAO,MAER,OAAO,MAMRjE,QAAAC,eAAWxB,EAAAL,UAAA,YNg0BJ8B,IMh0BP,WAEC,MAAOrC,MAAKyN,WNi0BNnL,IM9zBP,SAAoBC,GAEnB,GAAIvC,KAAKyN,WAAalL,EACrB,MAEDvC,MAAKyN,UAAYlL,CAEjBvC,MAAKmO,4BN6zBC1L,WAAY,KACZC,aAAc,MM3zBd9B,GAAAL,UAAA8K,QAAP,SAAeC,EAAmCC,GAEjDA,EAASf,QAAUxK,KAAKoO,YACxB7C,GAASjB,aAAegB,EAAalF,UAAY,EAO3CxF,GAAAL,UAAA8N,YAAP,SAAmBlJ,GAElB,GAAInF,KAAKoO,aACRjJ,EAAMqH,gBAAgB,EAAGxM,KAAKsO,SAAU,KAAM,KAAM,MAMtDnM,QAAAC,eAAWxB,EAAAL,UAAA,gBN0zBJ8B,IM1zBP,WAEC,MAAOrC,MAAK0N,eN2zBNpL,IMxzBP,SAAwBC,GAEvB,GAAIvC,KAAK0N,eAAiBnL,EACzB,MAEDvC,MAAK0N,cAAgBnL,CAErBvC,MAAKuO,iBNuzBC9L,WAAY,KACZC,aAAc,MMlzBrBP,QAAAC,eAAWxB,EAAAL,UAAA,gBNwzBJ8B,IMxzBP,WAEC,MAAOrC,MAAK2N,eNyzBNrL,IMtzBP,SAAwBC,GAEvB,GAAIvC,KAAK2N,eAAiBpL,EACzB,MAEDvC,MAAK2N,cAAgBpL,CAErBvC,MAAKwO,iBNqzBC/L,WAAY,KACZC,aAAc,MM/yBrBP,QAAAC,eAAWxB,EAAAL,UAAA,WNqzBJ8B,IMrzBP,WAEC,MAAOrC,MAAKsO,UNszBNhM,IMnzBP,SAAmBC,GAElB,GAAIrC,GAAaqC,GAAS,IAE1B,IAAIrC,GAAKF,KAAKoO,cAAiB7L,GAASvC,KAAKsO,UAAa/L,EAAMkM,QAAUzO,KAAKsO,SAASG,OACvFzO,KAAKmO,0BAENnO,MAAKoO,aAAelO,CACpBF,MAAKsO,SAAW/L,GNkzBVE,WAAY,KACZC,aAAc,MM7yBd9B,GAAAL,UAAA+H,QAAP,WAECtI,KAAKsO,SAAW,KAMV1N,GAAAL,UAAAoC,SAAP,SAAgBG,GAEf,GAAI4L,GAA+C5L,CAEnD9C,MAAK8B,QAAU4M,EAAK5M,OACpB9B,MAAK2O,SAAWD,EAAKC,QACrB3O,MAAK2D,aAAe+K,EAAK/K,YACzB3D,MAAK0D,aAAegL,EAAKhL,aAMnB9C,GAAAL,UAAAqO,sBAAP,WAEC5N,EAAAT,UAAMqO,sBAAqBrP,KAAAS,KAE3BA,MAAK6O,qBAAuB,IAC5B7O,MAAK8O,uBAAyB,KAMxBlO,GAAAL,UAAAwO,4BAAP,SAAmCzD,EAAmCC,EAAmBM,EAAmCC,GAE3H,GAAI1M,GAAc,EAElBY,MAAKgP,eAAiB,IAEtBhP,MAAK6O,qBAAuBhD,EAAcoD,2BAC1CpD,GAAcqD,sBAAsBlP,KAAK6O,qBAAsB,EAE/D,OAAOzP,GAMDwB,GAAAL,UAAA4O,yBAAP,SAAgC7D,EAAmCC,EAAmB6D,EAAmCC,EAAmCxD,EAAmCC,GAE9L,GAAI1M,GAAc,EAClB,IAAIV,EAGJ,IAAIsB,KAAKgP,eAAgB,CACxBtQ,EAAIsB,KAAK6O,yBACH,CACNnQ,EAAImN,EAAcoD,2BAClBpD,GAAcqD,sBAAsBxQ,EAAG,GAGxCU,GAAQ,OAASV,EAAI,OAAS0Q,EAAc,KAAOtD,EAAgBwB,eAAiB,KAClF,OAAS5O,EAAI,OAASA,EAAI,OAASoN,EAAgBwD,QAAU,MAE/D,IAAIhE,EAAaiE,iBAChBnQ,GAAQ,OAASV,EAAI,OAASA,EAAI,OAAS0Q,EAAc,MAE1D,IAAIpP,KAAKwP,kBAAoB,KAC5BpQ,GAAQY,KAAKwP,iBAAiBlE,EAAcC,EAAU7M,EAAGmN,EAAeC,EAEzE1M,IAAQ,OAASV,EAAI,KAAOA,EAAI,OAAS2Q,EAAc,IAEvD,KAAKrP,KAAKgP,eAAgB,CACzB5P,GAAQ,OAASY,KAAK6O,qBAAuB,SAAW7O,KAAK6O,qBAAuB,KAAOnQ,EAAI,IAC/FmN,GAAc4D,wBAAwB/Q,GAGvCsB,KAAKgP,eAAiB,KAEtB,OAAO5P,GAMDwB,GAAAL,UAAAmP,yBAAP,SAAgCpE,EAAmCC,EAAmB6B,EAAkCuC,EAAuB9D,EAAmCC,GAEjL,GAAI1M,GAAc,EAClB,IAAIV,EAGJ,IAAIsB,KAAKgP,eAAgB,CACxBtQ,EAAIsB,KAAK6O,yBACH,CACNnQ,EAAImN,EAAcoD,2BAClBpD,GAAcqD,sBAAsBxQ,EAAG,GAGxCU,GAAQ,OAASV,EAAI,KAAOoN,EAAgBwB,eAAiB,KAAOF,EAAa,6BAC/E,OAAS1O,EAAI,SAAWA,EAAI,SAAWiR,EAAiB,IAE1D,IAAI3P,KAAKwP,kBAAoB,KAC5BpQ,GAAQY,KAAKwP,iBAAiBlE,EAAcC,EAAU7M,EAAGmN,EAAeC,EAEzE,KAAK9L,KAAKgP,eAAgB,CACzB5P,GAAQ,OAASY,KAAK6O,qBAAuB,SAAW7O,KAAK6O,qBAAuB,KAAOnQ,EAAI,IAC/FmN,GAAc4D,wBAAwB/Q,GAGvCsB,KAAKgP,eAAiB,KAEtB,OAAO5P,GAMDwB,GAAAL,UAAAqP,6BAAP,SAAoCtE,EAAmCC,EAAmBK,EAAiCC,EAAmCC,GAE7J,GAAI1M,GAAc,EAElB,IAAIyQ,EACJ,IAAIxD,EAGJ,IAAIP,EAAgBgE,aACnB1Q,GAAQY,KAAK+P,aAAazE,EAAcC,EAAUM,EAAeC,EAElE+D,GAAShE,EAAcoD,2BACvBpD,GAAcqD,sBAAsBW,EAAQ,EAE5C,IAAIG,GAA6CnE,EAAcS,yBAC/Df,GAASpB,uBAAyB6F,EAAqB/M,MAAM,CAE7D,IAAIjD,KAAKoO,aAAc,CACtBpO,KAAK8O,uBAAyBjD,EAAcG,mBAE5CT,GAAStB,cAAgBjK,KAAK8O,uBAAuB7L,KAErD7D,IAAQyL,EAAqBoB,mBAAmB4D,EAAQ/D,EAAiB9L,KAAK8O,uBAAwB9O,KAAKsO,SAAUhD,EAAaY,kBAAmBZ,EAAaa,eAAgBb,EAAamB,mBAEzL,CACNzM,KAAK8O,uBAAyBjD,EAAcS,yBAE5ClN,IAAQ,OAASyQ,EAAS,KAAO7P,KAAK8O,uBAAyB,KAGhE1P,GAAQ,OAASY,KAAK6O,qBAAuB,KAAO7O,KAAK6O,qBAAuB,KAC/E,OAASgB,EAAS,SAAWA,EAAS,KAAO7P,KAAK6O,qBAAuB,IAE1E,IAAI7O,KAAKyN,UAAW,CACnBrO,GAAQ,OAASyQ,EAAS,SAAWA,EAAS,KAAOG,EAAuB,KAC3E,OAASpE,EAAY,SAAWA,EAAY,KAAOiE,EAAS,SACvD,CACNzQ,GAAQ,OAASwM,EAAY,SAAWA,EAAY,KAAOoE,EAAuB,KACjF,OAAShQ,KAAK6O,qBAAuB,SAAWjD,EAAY,KAAO5L,KAAK6O,qBAAuB,KAC/F,OAASjD,EAAY,SAAWA,EAAY,KAAO5L,KAAK6O,qBAAuB,KAC/E,OAASjD,EAAY,SAAWA,EAAY,KAAOiE,EAAS,KAG9DhE,EAAc4D,wBAAwBzP,KAAK6O,qBAC3ChD,GAAc4D,wBAAwBI,EAEtC,OAAOzQ,GAQDwB,GAAAL,UAAAwP,aAAP,SAAoBzE,EAAmCC,EAAmB4B,EAA8BrB,GAEvG,MAAO,OAAS9L,KAAK6O,qBAAuB,SAAW7O,KAAK6O,qBAAuB,KAAO/C,EAAgBgE,aAAe,OAMnHlP,GAAAL,UAAAgM,UAAP,SAAiBjB,EAAmCC,EAAmBpG,GAEtE,GAAInF,KAAKoO,aAAc,CACtBjJ,EAAMqH,gBAAgBjB,EAAStB,cAAejK,KAAKsO,SAAUhD,EAAaa,eAAgBb,EAAaY,kBAAmBZ,EAAamB,mBACjI,CACN,GAAIxJ,GAAesI,EAASpB,sBAC5B,IAAIwC,GAAqBrB,EAAaoB,oBACtCC,GAAK1J,EAAQ,GAAKjD,KAAK4N,SACvBjB,GAAK1J,EAAQ,GAAKjD,KAAK6N,SACvBlB,GAAK1J,EAAQ,GAAKjD,KAAK8N,SACvBnB,GAAK1J,EAAQ,GAAK,GAOZrC,GAAAL,UAAAgO,cAAR,WAECvO,KAAK4N,WAAc5N,KAAK0N,eAAiB,GAAM,KAAM,GACrD1N,MAAK6N,WAAc7N,KAAK0N,eAAiB,EAAK,KAAM,GACpD1N,MAAK8N,WAAa9N,KAAK0N,cAAgB,KAAM,IAMtC9M,GAAAL,UAAAiO,cAAR,WAECxO,KAAK+N,WAAc/N,KAAK2N,eAAiB,GAAM,KAAM,GACrD3N,MAAKgO,WAAchO,KAAK2N,eAAiB,EAAK,KAAM,GACpD3N,MAAKiO,WAAajO,KAAK2N,cAAgB,KAAM,IAMvC/M,GAAAL,UAAA0P,gBAAP,SAAuB3E,EAAmCC,EAAmB2E,EAA2B/K,EAAagL,GAGpH,GAAI7E,EAAalF,UAAY,EAAG,CAC/B,GAAInD,GAAesI,EAASpB,sBAC5B,IAAIwC,GAAqBrB,EAAaoB,oBACtCC,GAAK1J,GAASqI,EAAa8E,SAASpQ,KAAK+N,SACzCpB,GAAK1J,EAAQ,GAAKqI,EAAa+E,SAASrQ,KAAKgO,SAC7CrB,GAAK1J,EAAQ,GAAKqI,EAAagF,SAAStQ,KAAKiO,SAC7CtB,GAAK1J,EAAQ,GAAK,GAGrB,OAAArC,IApWiC4M,EAsWjC9N,GAA4BJ,QAAnBsB,IN4vBN2P,wDAAwDtM,UAAU4I,mDAAmD5I,YAAYuM,0DAA0D,SAAShS,EAAQkB,EAAOJ,GACtN,GAAIS,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GOhnCtB,IAAOoQ,GAAsBjS,EAAa,4DPsnC1C,IOjnCMkS,GAAgB,SAAA1P,GAASjB,EAAzB2Q,EAAgB1P,EAWrB,SAXK0P,GAWOC,EAA4BC,GAXzC,GAAAC,GAAA7Q,IAWa,IAAA2Q,QAAA,GAA0B,CAA1BA,EAAA,EAA4B,GAAAC,QAAA,GAAoC,CAApCA,EAAA,KAEvC5P,EAAAzB,KAAAS,KAAM,KAAM4Q,EATL5Q,MAAA8Q,YAAqB,EAW5B9Q,MAAK4Q,WAAWpB,iBAAmB,SAAClE,EAA+BC,EAAmBK,EAAiCC,EAAmCC,GAAuC,MAAA+E,GAAKE,aAAazF,EAAcC,EAAUK,EAAWC,EAAeC,GAErQ9L,MAAKgR,QAAUL,EAMTD,EAAAnQ,UAAAiL,eAAP,SAAsBF,EAAmCC,GAExD,GAAIoB,GAAqBrB,EAAaoB,oBACtC,IAAIzJ,GAAuBsI,EAAS0F,+BACpCjQ,GAAAT,UAAMiL,eAAcjM,KAAAS,KAACsL,EAAcC,EACnCoB,GAAK1J,EAAQ,GAAK,CAClB0J,GAAK1J,EAAQ,GAAK,EAMnBd,QAAAC,eAAWsO,EAAAnQ,UAAA,UP4mCJ8B,IO5mCP,WAEC,MAAOrC,MAAKgR,SP6mCN1O,IO1mCP,SAAkBC,GAEjBvC,KAAKgR,QAAUzO,GP2mCTE,WAAY,KACZC,aAAc,MOtmCrBP,QAAAC,eAAWsO,EAAAnQ,UAAA,cP4mCJ8B,IO5mCP,WAEC,MAAOrC,MAAK8Q,aP6mCNxO,IO1mCP,SAAsBC,GAErBvC,KAAK8Q,YAAcvO,GP2mCbE,WAAY,KACZC,aAAc,MOtmCdgO,GAAAnQ,UAAAqO,sBAAP,WAEC5N,EAAAT,UAAMqO,sBAAqBrP,KAAAS,KAC3BA,MAAKkR,SAAW,KAMVR,GAAAnQ,UAAAwO,4BAAP,SAAmCzD,EAAmCC,EAAmBM,EAAmCC,GAE3H9L,KAAKkR,SAAWrF,EAAcS,yBAC9Bf,GAAS0F,gCAAkCjR,KAAKkR,SAASjO,MAAM,CAE/D,OAAOjC,GAAAT,UAAMwO,4BAA2BxP,KAAAS,KAACsL,EAAcC,EAAUM,EAAeC,GAM1E4E,GAAAnQ,UAAAgM,UAAP,SAAiBjB,EAAmCC,EAAmBpG,GAEtEnE,EAAAT,UAAMgM,UAAShN,KAAAS,KAACsL,EAAcC,EAAUpG,EACxC,IAAIwH,GAAqBrB,EAAaoB,oBACtC,IAAIzJ,GAAuBsI,EAAS0F,+BACpCtE,GAAK1J,GAASjD,KAAKgR,OACnBrE,GAAK1J,EAAQ,GAAKjD,KAAK8Q,YAWhBJ,GAAAnQ,UAAAwQ,aAAR,SAAqBzF,EAA+BC,EAAmBK,EAAiCC,EAAmCC,GAE1I,MAAO,OAASF,EAAY,OAASA,EAAY,OAAS5L,KAAKkR,SAAW,OACzE,OAAStF,EAAY,OAASA,EAAY,OAC1C,OAASA,EAAY,OAASA,EAAY,OAASA,EAAY,OAC/D,OAASA,EAAY,OAAS5L,KAAKkR,SAAW,OAC9C,OAAStF,EAAY,OAASA,EAAY,OAAS5L,KAAKkR,SAAW,OACnE,OAAStF,EAAY,MAAQA,EAAY,OACzC,OAASA,EAAY,OAASA,EAAY,OAASA,EAAY,OAG/D,OAASA,EAAY,OAASA,EAAY,OAASA,EAAY,OAG/D,OAASA,EAAY,OAASA,EAAY,OAAS5L,KAAKkR,SAAW,OACnE,OAAStF,EAAY,OAASA,EAAY,OAE1C,OAASA,EAAY,OAASA,EAAY,OAASA,EAAY,OAE/D,OAASA,EAAY,OAAS5L,KAAKkR,SAAW,OAAStF,EAAY,OACnE,OAASA,EAAY,OAASA,EAAY,OAASA,EAAY,OAC/D,OAASA,EAAY,OAASA,EAAY,OAASA,EAAY,OAC/D,OAASA,EAAY,OAASA,EAAY,OAE7C,OAAA8E,IA1H+BD,EA4H/B/Q,GAA0BJ,QAAjBoR,IPklCNS,4DAA4DlN,YAAYmN,gEAAgE,SAAS5S,EAAQkB,EAAOJ,GACnK,GAAIS,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GQxtCtB,IAAOgR,GAAkB7S,EAAc,kDAIvC,IAAOoC,GAAkBpC,EAAc,wDR4tCvC,IQttCMiS,GAAsB,SAAAzP,GAASjB,EAA/B0Q,EAAsBzP,EAY3B,SAZKyP,GAYOa,EAAqLV,GAZlM,GAAAC,GAAA7Q,IAYkM,IAAA4Q,QAAA,GAAoC,CAApCA,EAAA,KAEhM5P,EAAAzB,KAAAS,KAEAA,MAAKuR,6BAA+B,SAACC,GAA6B,MAAAX,GAAKY,oBAAoBD,GAE3FxR,MAAK0R,YAAcd,GAAc,GAAIhQ,EACrCZ,MAAK0R,YAAYlC,iBAAmB8B,CACpCtR,MAAK0R,YAAYC,iBAAiBN,EAAmBO,mBAAoB5R,KAAKuR,8BAM/EpP,OAAAC,eAAWqO,EAAAlQ,UAAA,cRitCJ8B,IQjtCP,WAEC,MAAOrC,MAAK0R,aRktCNpP,IQ/sCP,SAAsBC,GAErB,GAAIvC,KAAK0R,aAAenP,EACvB,MAEDvC,MAAK0R,YAAYG,oBAAoBR,EAAmBO,mBAAoB5R,KAAKuR,6BACjFvR,MAAK0R,YAAcnP,CACnBvC,MAAK0R,YAAYC,iBAAiBN,EAAmBO,mBAAoB5R,KAAKuR,6BAC9EvR,MAAKmO,4BR+sCC1L,WAAY,KACZC,aAAc,MQ1sCd+N,GAAAlQ,UAAA8K,QAAP,SAAeC,EAAmCC,GAEjDvL,KAAK0R,YAAYrG,QAAQC,EAAcC,GAMjCkF,GAAAlQ,UAAAiL,eAAP,SAAsBF,EAAmCC,GAExDvL,KAAK0R,YAAYlG,eAAeF,EAAcC,GAMxCkF,GAAAlQ,UAAA+H,QAAP,WAECtI,KAAK0R,YAAYG,oBAAoBR,EAAmBO,mBAAoB5R,KAAKuR,6BACjFvR,MAAK0R,YAAYpJ,UAMlBnG,QAAAC,eAAWqO,EAAAlQ,UAAA,WR0sCJ8B,IQ1sCP,WAEC,MAAOrC,MAAK0R,YAAY5P,SR8sClBQ,IQxsCP,SAAmBC,GAElBvC,KAAK0R,YAAY5P,QAAUS,GRysCrBE,WAAY,KACZC,aAAc,MQpsCrBP,QAAAC,eAAWqO,EAAAlQ,UAAA,gBR0sCJ8B,IQ1sCP,WAEC,MAAOrC,MAAK0R,YAAY/N,cR8sClBrB,IQxsCP,SAAwBC,GAEvBvC,KAAK0R,YAAY/N,aAAepB,GRysC1BE,WAAY,KACZC,aAAc,MQnsCrBP,QAAAC,eAAWqO,EAAAlQ,UAAA,gBRysCJ8B,IQzsCP,WAEC,MAAOrC,MAAK0R,YAAYhO,cR6sClBpB,IQvsCP,SAAwBC,GAEvBvC,KAAK0R,YAAYhO,aAAenB,GRwsC1BE,WAAY,KACZC,aAAc,MQnsCd+N,GAAAlQ,UAAAwO,4BAAP,SAAmCzD,EAAmCC,EAAmBM,EAAmCC,GAE3H,MAAO9L,MAAK0R,YAAY3C,4BAA4BzD,EAAcC,EAAUM,EAAeC,GAMrF2E,GAAAlQ,UAAA4O,yBAAP,SAAgC7D,EAAmCC,EAAmB6D,EAAmCC,EAAmCxD,EAAmCC,GAE9L,GAAI1M,GAAcY,KAAK0R,YAAYvC,yBAAyB7D,EAAcC,EAAU6D,EAAaC,EAAaxD,EAAeC,EAC7H9L,MAAK6O,qBAAuB7O,KAAK0R,YAAY7C,oBAC7C,OAAOzP,GAMDqR,GAAAlQ,UAAAmP,yBAAP,SAAgCpE,EAAmCC,EAAmB6B,EAAkCuC,EAAuB9D,EAAmCC,GAEjL,GAAI1M,GAAcY,KAAK0R,YAAYhC,yBAAyBpE,EAAcC,EAAU6B,EAAYuC,EAAgB9D,EAAeC,EAC/H9L,MAAK6O,qBAAuB7O,KAAK0R,YAAY7C,oBAC7C,OAAOzP,GAMDqR,GAAAlQ,UAAAgM,UAAP,SAAiBjB,EAAmCC,EAAmBpG,GAEtEnF,KAAK0R,YAAYnF,UAAUjB,EAAcC,EAAUpG,GAM7CsL,GAAAlQ,UAAA0P,gBAAP,SAAuB3E,EAAmCC,EAAmB2E,EAA2B/K,EAAagL,GAEpHnQ,KAAK0R,YAAYzB,gBAAgB3E,EAAcC,EAAU2E,EAAY/K,EAAOgL,GAMtEM,GAAAlQ,UAAAuR,YAAP,SAAmBxG,EAAmCC,EAAmBpG,GAExEnF,KAAK0R,YAAYI,YAAYxG,EAAcC,EAAUpG,GAM/CsL,GAAAlQ,UAAAwR,eAAP,SAAsBzG,EAA+BC,EAAmBM,EAAmCC,GAE1G,MAAO9L,MAAK0R,YAAYK,eAAezG,EAAcC,EAAUM,EAAeC,GAMxE2E,GAAAlQ,UAAAqP,6BAAP,SAAoCtE,EAAmCC,EAAmBK,EAAiCC,EAAmCC,GAE7J,MAAO9L,MAAK0R,YAAY9B,6BAA6BtE,EAAcC,EAAUK,EAAWC,EAAeC,GAMjG2E,GAAAlQ,UAAAyJ,OAAP,WAEChK,KAAK0R,YAAY1H,SAMXyG,GAAAlQ,UAAAqO,sBAAP,WAEC5N,EAAAT,UAAMqO,sBAAqBrP,KAAAS,KAC3BA,MAAK0R,YAAY9C,wBAMV6B,GAAAlQ,UAAAkR,oBAAR,SAA4BD,GAE3BxR,KAAKmO,2BAEP,OAAAsC,IAhNqC7P,EAkNLlB,GAAAJ,QAAvBmR,IRsrCNpM,wDAAwDJ,UAAU+N,kDAAkD/N,YAAYgO,4DAA4D,SAASzT,EAAQkB,EAAOJ,GACvN,GAAIS,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GS75CtB,IAAOwK,GAAoBrM,EAAc,mDAGzC,IAAOoC,GAAkBpC,EAAc,wDTi6CvC,IS55CM0T,GAAkB,SAAAlR,GAASjB,EAA3BmS,EAAkBlR,EAKvB,SALKkR,KAOJlR,EAAAzB,KAAAS,MAMMkS,EAAA3R,UAAAiL,eAAP,SAAsBF,EAA+BC,GAEpD,GAAIoB,GAAqBrB,EAAaoB,oBACtC,IAAIzJ,GAAuBsI,EAASpB,sBACpCwC,GAAK1J,GAAS,CACd0J,GAAK1J,EAAQ,GAAK,EAAE,GACpB0J,GAAK1J,EAAQ,GAAK,EAAE,KACpB0J,GAAK1J,EAAQ,GAAK,EAAE,SAMdiP,GAAA3R,UAAAqP,6BAAP,SAAoCtE,EAAmCC,EAAmBK,EAAiCC,EAAmCC,GAE7J,GAAI1M,GAAc,EAClB,IAAI+S,EACJ,IAAIC,EAEJ,KAAKpS,KAAKoO,aACT,KAAM,IAAIjP,OAAM,uCAGjB,IAAImM,EAAalF,UAAY,EAAG,CAC/B,GAAI0F,EAAgBgE,aACnB1Q,GAAQ,OAASY,KAAK6O,qBAAuB,SAAW7O,KAAK6O,qBAAuB,SAAW/C,EAAgBgE,aAAe,MAC/H1Q,IAAQ,OAASwM,EAAY,SAAW5L,KAAK6O,qBAAuB,SAAWjD,EAAY,SAC1F,OAASA,EAAY,SAAWA,EAAY,QAC7CC,GAAc4D,wBAAwBzP,KAAK6O,sBAG5CsD,EAAO7G,EAAalF,UAAY,EAAGyF,EAAcoD,4BAA4BrD,CAE7E5L,MAAK8O,uBAAyBjD,EAAcG,mBAC5CT,GAAStB,cAAgBjK,KAAK8O,uBAAuB7L,KACrDmP,GAASvG,EAAcS,yBACvBf,GAASpB,uBAAyBiI,EAAOnP,MAAM,CAC/C7D,IAAQyL,EAAqBoB,mBAAmBkG,EAAMrG,EAAiB9L,KAAK8O,uBAAwB9O,KAAK8B,QAASwJ,EAAaY,kBAAmBZ,EAAaa,eAAgBb,EAAamB,eAC3L,OAAS0F,EAAO,OAASA,EAAO,KAAOC,EAAS,KAChD,OAASD,EAAO,QAAUA,EAAO,WACjC,OAASA,EAAO,OAASC,EAAS,OAClC,OAASD,EAAO,SAAWC,EAAS,SAAWD,EAAO,QAEvD,IAAI7G,EAAalF,WAAa,EAC7B,MAAOhH,EAERA,IAAQ,OAASwM,EAAY,SAAWuG,EAAO,SAAWvG,EAAY,SACrE,OAASA,EAAY,OAASuG,EAAO,MAEtC,OAAO/S,GAET,OAAA8S,IAhEiCtR,EAkELlB,GAAAJ,QAAnB4S,IT64CN7N,wDAAwDJ,UAAU4I,mDAAmD5I,YAAYoO,+DAA+D,SAAS7T,EAAQkB,EAAOJ,GAC3N,GAAIS,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD;QAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GUz9CtB,IAAOwK,GAAoBrM,EAAc,mDAGzC,IAAOoC,GAAkBpC,EAAc,wDVg+CvC,IUx9CM8T,GAAqB,SAAAtR,GAASjB,EAA9BuS,EAAqBtR,EAU1B,SAVKsR,GAUOC,GAEXvR,EAAAzB,KAAAS,KAEAA,MAAKwS,UAAYD,EAOlBpQ,OAAAC,eAAWkQ,EAAA/R,UAAA,YVm9CJ8B,IUn9CP,WAEC,MAAOrC,MAAKwS,WVo9CNlQ,IUj9CP,SAAoBC,GAEnB,GAAIA,EAAMkM,QAAUzO,KAAKwS,UAAU/D,OAClCzO,KAAKmO,0BACNnO,MAAKwS,UAAYjQ,GVk9CXE,WAAY,KACZC,aAAc,MU78Cd4P,GAAA/R,UAAAqO,sBAAP,WAEC5N,EAAAT,UAAMqO,sBAAqBrP,KAAAS,KAC3BA,MAAKyS,yBAA2B,KAM1BH,GAAA/R,UAAAwO,4BAAP,SAAmCzD,EAAmCC,EAAmBM,EAAmCC,GAE3H,GAAI1M,GAAc4B,EAAAT,UAAMwO,4BAA2BxP,KAAAS,KAACsL,EAAcC,EAAUM,EAAeC,EAC3F9L,MAAKgP,eAAiB,IAEtB,IAAI1D,EAAalF,UAAY,EAAG,CAC/BpG,KAAKyS,yBAA2B5G,EAAcG,mBAC9CT,GAASmH,uBAAyB1S,KAAKyS,yBAAyBxP,MAEjE,MAAO7D,GAMDkT,GAAA/R,UAAA4O,yBAAP,SAAgC7D,EAAmCC,EAAmB6D,EAAmCC,EAAmCxD,EAAmCC,GAE9L,GAAI1M,GAAc,EAClB,IAAIV,EAGJ,IAAIsB,KAAKgP,eACRtQ,EAAIsB,KAAK6O,yBACL,CACJnQ,EAAImN,EAAcoD,2BAClBpD,GAAcqD,sBAAsBxQ,EAAG,GAGxCU,GAAQ,OAASV,EAAI,OAAS0Q,EAAc,SAAWtD,EAAgBwB,eAAiB,SACvF,OAAS5O,EAAI,OAASA,EAAI,OAASoN,EAAgBwD,QAAU,OAC7D,OAAS5Q,EAAI,OAASA,EAAI,OAASoN,EAAgBwD,QAAU,OAC7D,OAAS5Q,EAAI,SAAWA,EAAI,OAAS0Q,EAAc,MAEpD,IAAIpP,KAAKwP,kBAAoB,KAC5BpQ,GAAQY,KAAKwP,iBAAiBlE,EAAcC,EAAU7M,EAAGmN,EAAeC,EAEzE1M,IAAQyL,EAAqBoB,mBAAmBvN,EAAGoN,EAAiB9L,KAAKyS,yBAA0BzS,KAAKwS,UAAWlH,EAAaY,kBAAmBZ,EAAaa,eAAgBb,EAAamB,cAAe/N,EAAG,SAE9M,OAASA,EAAI,SAAWA,EAAI,SAAW2Q,EAAc,QAEtD,KAAKrP,KAAKgP,eAAgB,CACzB5P,GAAQ,OAASY,KAAK6O,qBAAuB,SAAW7O,KAAK6O,qBAAuB,SAAWnQ,EAAI,QACnGmN,GAAc4D,wBAAwB/Q,GAGvCsB,KAAKgP,eAAiB,KAEtB,OAAO5P,GAMDkT,GAAA/R,UAAAwP,aAAP,SAAoBzE,EAAmCC,EAAmB4B,EAA8BrB,GAEvG,GAAIpN,GAA0ByO,EAAS8B,2BAEvC,OAAO,OAASvQ,EAAI,KAAOoN,EAAgBgE,aAAe,UACzDjF,EAAqBoB,mBAAmBvN,EAAGoN,EAAiB9L,KAAKyS,yBAA0BzS,KAAKwS,UAAWlH,EAAaY,kBAAmBZ,EAAaa,eAAgBb,EAAamB,cAAe/N,EAAG,SACvM,OAASsB,KAAK6O,qBAAuB,SAAW7O,KAAK6O,qBAAuB,KAAOnQ,EAAI,KAMlF4T,GAAA/R,UAAAgM,UAAP,SAAiBjB,EAAmCC,EAAmBpG,GAEtEnE,EAAAT,UAAMgM,UAAShN,KAAAS,KAACsL,EAAcC,EAAUpG,EAExCA,GAAMqH,gBAAgBjB,EAASmH,uBAAwB1S,KAAKwS,UAAWlH,EAAaa,eAAgBb,EAAaY,kBAAmBZ,EAAamB,eAEnJ,OAAA6F,IApHoC1R,EAsHpClB,GAA+BJ,QAAtBgT,IV27CNjO,wDAAwDJ,UAAU4I,mDAAmD5I,YAAY0O,+DAA+D,SAASnU,EAAQkB,EAAOJ,GAC3N,GAAIS,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GWjkDtB,IAAOwK,GAAoBrM,EAAc,mDAIzC,IAAOiS,GAAsBjS,EAAa,4DXskD1C,IW/jDMoU,GAAqB,SAAA5R,GAASjB,EAA9B6S,EAAqB5R,EA0B1B,SA1BK4R,GA0BOC,EAAwBrL,EAA+BsL,EAAgClC,GAA/D,GAAApJ,QAAA,GAA6B,CAA7BA,EAAA,WAA+B,GAAAsL,QAAA,GAA8B,CAA9BA,EAAA,MAAgC,GAAAlC,QAAA,GAAoC,CAApCA,EAAA,KAElG5P,EAAAzB,KAAAS,KAAM,KAAM4Q,EAEZ5Q,MAAK+S,gBAAkBD,CACvB9S,MAAKgT,iBAAmBH,CACxB7S,MAAKwH,UAAYA,EAMXoL,EAAArS,UAAA8K,QAAP,SAAeC,EAAmCC,GAEjDA,EAASd,iBAAmBzK,KAAK+S,eACjCxH,GAASf,SAAWxK,KAAK+S,gBAS1B5Q,QAAAC,eAAWwQ,EAAArS,UAAA,aX8iDJ8B,IW9iDP,WAEC,MAAOrC,MAAKiT,YX+iDN3Q,IW5iDP,SAAqBC,GAEpB,GAAIA,GAASqQ,EAAsBxL,KAAO7E,GAASqQ,EAAsBM,SACxE,KAAM,IAAI/T,OAAM,qBAEjB,IAAIa,KAAKiT,YAAc1Q,EACtB,MAEDvC,MAAKiT,WAAa1Q,CAElBvC,MAAKmO,4BX0iDC1L,WAAY,KACZC,aAAc,MWriDrBP,QAAAC,eAAWwQ,EAAArS,UAAA,mBX2iDJ8B,IW3iDP,WAEC,MAAOrC,MAAKgT,kBX4iDN1Q,IWziDP,SAA2BC,GAE1BvC,KAAKgT,iBAAmBzQ,GX0iDlBE,WAAY,KACZC,aAAc,MWriDdkQ,GAAArS,UAAAgM,UAAP,SAAiBjB,EAAmCC,EAAmBpG,GAEtEA,EAAMqH,gBAAgBjB,EAASmH,uBAAwB1S,KAAKgT,iBAAkB1H,EAAaa,eAAgBb,EAAaY,kBAAmBZ,EAAamB,cAExJzL,GAAAT,UAAMgM,UAAShN,KAAAS,KAACsL,EAAcC,EAAUpG,GAMlCyN,GAAArS,UAAAqP,6BAAP,SAAoCtE,EAAmCC,EAAmBK,EAAiCC,EAAmCC,GAE7J,GAAI1M,EACJ,IAAI+T,GAAoCtH,EAAcG,mBACtD,IAAImG,GAA6BtG,EAAcoD,2BAC/C1D,GAASmH,uBAAyBS,EAAYlQ,KAE9C7D,GAAOyL,EAAqBoB,mBAAmBkG,EAAMrG,EAAiBqH,EAAanT,KAAKgT,iBAAkB1H,EAAaY,kBAAmBZ,EAAaa,eAAgBb,EAAamB,cAAeX,EAAgBsH,mBAEnN,QAAQpT,KAAKiT,YACZ,IAAKL,GAAsBM,SAC1B9T,GAAQ,OAASY,KAAK6O,qBAAuB,KAAO7O,KAAK6O,qBAAuB,KAAOsD,EAAO,IAC9F,MACD,KAAKS,GAAsBxL,IAC1BhI,GAAQ,OAASY,KAAK6O,qBAAuB,KAAO7O,KAAK6O,qBAAuB,KAAOsD,EAAO,IAC9F,OAGF/S,GAAQ4B,EAAAT,UAAMqP,6BAA4BrQ,KAAAS,KAACsL,EAAcC,EAAUK,EAAWC,EAAeC,EAE7F,OAAO1M,GA5GMwT,GAAAM,SAAkB,UAMlBN,GAAAxL,IAAa,KAwG5B,OAAAwL,IApHoCnC,EAsHL/Q,GAAAJ,QAAtBsT,IX+iDNzB,4DAA4DlN,UAAU4I,mDAAmD5I,YAAYoP,iEAAiE,SAAS7U,EAAQkB,EAAOJ,GACjO,GAAIS,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GYhrDtB,IAAOoQ,GAAsBjS,EAAa,4DZwrD1C,IYhrDM8U,GAAuB,SAAAtS,GAASjB,EAAhCuT,EAAuBtS,EAuB5B,SAvBKsS,GAuBOC,EAAmCC,EAA4B5C,GAvB5E,GAAAC,GAAA7Q,IAuBa,IAAAuT,QAAA,GAAiC,CAAjCA,EAAA,IAAmC,GAAAC,QAAA,GAA0B,CAA1BA,EAAA,GAA4B,GAAA5C,QAAA,GAAoC,CAApCA,EAAA,KAE1E5P,EAAAzB,KAAAS,KAAM,KAAM4Q,EAnBL5Q,MAAAyT,cAAuB,CAEvBzT,MAAA0T,cAAgC,QAGhC1T,MAAA2T,UAAmB,CACnB3T,MAAA4T,UAAmB,CACnB5T,MAAA6T,UAAmB,CAc1B7T,MAAK0R,YAAYlC,iBAAmB,SAAClE,EAA+BC,EAAmBK,EAAiCC,EAAmCC,GAAuC,MAAA+E,GAAKiD,aAAaxI,EAAcC,EAAUK,EAAWC,EAAeC,GAOtQ9L,MAAK+T,YAAc,EACnB/T,MAAKyT,cAAgB,EAMfH,EAAA/S,UAAAiL,eAAP,SAAsBF,EAAmCC,GAExDvK,EAAAT,UAAMiL,eAAcjM,KAAAS,KAACsL,EAAcC,EAEnC,IAAIoB,GAAqBrB,EAAa0I,kBACtC,IAAI/Q,GAAuBsI,EAAS0I,6BACpCtH,GAAK1J,GAAS,EACd0J,GAAK1J,EAAQ,IAAM,EACnB0J,GAAK1J,EAAQ,GAAK,CAClB0J,GAAK1J,EAAQ,GAAK,CAElB0J,GAAOrB,EAAaoB,oBACpBzJ,GAAQsI,EAAS0F,+BACjBtE,GAAK1J,EAAQ,GAAK,CAClB0J,GAAK1J,EAAQ,GAAK,CAClB0J,GAAK1J,EAAQ,GAAK,EAAE,GACpB0J,GAAK1J,EAAQ,GAAK,EAAE,KACpB0J,GAAK1J,EAAQ,GAAK,EAAE,QACpB0J,GAAK1J,EAAQ,IAAM,EACnB0J,GAAK1J,EAAQ,KAAO,GAGdqQ,GAAA/S,UAAAqO,sBAAP,WAEC5N,EAAAT,UAAMqO,sBAAqBrP,KAAAS,KAE3BA,MAAKkU,kBAAoB,IACzBlU,MAAKmU,SAAW,IAChBnU,MAAKoU,eAAiB,IACtBpU,MAAKqU,UAAY,IACjBrU,MAAKsU,QAAU,IACftU,MAAKuU,WAAa,KAOnBpS,QAAAC,eAAWkR,EAAA/S,UAAA,cZiqDJ8B,IYjqDP,WAEC,MAAOrC,MAAK+T,aZkqDNzR,IY/pDP,SAAsBC,GAErBvC,KAAK+T,YAAcxR,GZgqDbE,WAAY,KACZC,aAAc,MY3pDrBP,QAAAC,eAAWkR,EAAA/S,UAAA,gBZiqDJ8B,IYjqDP,WAEC,MAAOrC,MAAKyT,eZkqDNnR,IY/pDP,SAAwBC,GAEvBvC,KAAKyT,cAAgBlR,GZgqDfE,WAAY,KACZC,aAAc,MY3pDrBP,QAAAC,eAAWkR,EAAA/S,UAAA,gBZiqDJ8B,IYjqDP,WAEC,MAAOrC,MAAK0T,eZkqDNpR,IY/pDP,SAAwBkS,GAEvBxU,KAAK0T,cAAgBc,CACrBxU,MAAK2T,WAAca,GAAgB,GAAM,KAAM,GAC/CxU,MAAK4T,WAAcY,GAAgB,EAAK,KAAM,GAC9CxU,MAAK6T,WAAaW,EAAe,KAAM,KZgqDjC/R,WAAY,KACZC,aAAc,MY3pDd4Q,GAAA/S,UAAAwR,eAAP,SAAsBzG,EAA+BC,EAAmBM,EAAmCC,GAE1G,GAAI1M,GAAc4B,EAAAT,UAAMwR,eAAcxS,KAAAS,KAACsL,EAAcC,EAAUM,EAAeC,EAC9E,IAAI2I,EACJ,IAAIC,EACJ,IAAIvC,GAA6BtG,EAAc8I,yBAE/CD,GAAgB7I,EAAc+I,uBAC9BrJ,GAAS0I,8BAAgCS,EAAczR,MAAM,CAE7DjD,MAAKkU,kBAAoBrI,EAAcgJ,gBACvCJ,GAAkB5I,EAAc+I,uBAChC/I,GAAc+I,uBACd/I,GAAc+I,uBACd/I,GAAc+I,uBAEdxV,IAAQ,OAAS+S,EAAO,UAAYsC,EAAkB,KACrD,OAAStC,EAAO,SAAWA,EAAO,SAAWA,EAAO,OACpD,OAASA,EAAO,QAAUA,EAAO,QAAUuC,EAAgB,QAC3D,OAASvC,EAAO,QAAUA,EAAO,QAAUuC,EAAgB,QAC3D,OAAS1U,KAAKkU,kBAAoB,SAAW/B,EAAO,SACpD,OAASnS,KAAKkU,kBAAoB,aAEnC,OAAO9U,GAMDkU,GAAA/S,UAAAwO,4BAAP,SAAmCzD,EAAmCC,EAAmBM,EAAmCC,GAE3H9L,KAAKqU,UAAYxI,EAAcS,yBAC/BtM,MAAKsU,QAAUzI,EAAcS,yBAC7BtM,MAAKmU,SAAWtI,EAAcS,yBAC9Bf,GAAS0F,gCAAkCjR,KAAKqU,UAAUpR,MAAM,CAEhE,OAAOjC,GAAAT,UAAMwO,4BAA2BxP,KAAAS,KAACsL,EAAcC,EAAUM,EAAeC,GAM1EwH,GAAA/S,UAAA4O,yBAAP,SAAgC7D,EAAmCC,EAAmB6D,EAAmCC,EAAmCxD,EAAmCC,GAE9L9L,KAAKgP,eAAiB,IACtBhP,MAAKoU,eAAiB/E,CACtB,OAAOrO,GAAAT,UAAM4O,yBAAwB5P,KAAAS,KAACsL,EAAcC,EAAU6D,EAAaC,EAAaxD,EAAeC,GAMjGwH,GAAA/S,UAAAqP,6BAAP,SAAoCtE,EAAmCC,EAAmBK,EAAiCC,EAAmCC,GAE7J,GAAI1M,GAAc4B,EAAAT,UAAMqP,6BAA4BrQ,KAAAS,KAACsL,EAAcC,EAAUK,EAAWC,EAAeC,EACvG,IAAIqG,GAA6BtG,EAAcoD,2BAE/C7P,IAAQ,OAAS+S,EAAO,SAAWnS,KAAKoU,eAAiB,SAAWpU,KAAKuU,WAAa,OACrF,OAASpC,EAAO,SAAWA,EAAO,SAAWnS,KAAKqU,UAAY,SAC9D,OAASzI,EAAY,SAAWA,EAAY,SAAWuG,EAAO,QAE/D,IAAInS,KAAKuU,YAAczI,EAAgBgJ,gBACtCjJ,EAAc4D,wBAAwB7D,EAEvC,OAAOxM,GAMDkU,GAAA/S,UAAAgM,UAAP,SAAiBjB,EAAmCC,EAAmBpG,GAEtEnE,EAAAT,UAAMgM,UAAShN,KAAAS,KAACsL,EAAcC,EAAUpG,EAExC,IAAIlC,GAAuBsI,EAAS0F,+BACpC,IAAItE,GAAqBrB,EAAaoB,oBACtCC,GAAK1J,GAASjD,KAAK2T,SACnBhH,GAAK1J,EAAQ,GAAKjD,KAAK4T,SACvBjH,GAAK1J,EAAQ,GAAKjD,KAAK6T,SACvBlH,GAAK1J,EAAQ,GAAKjD,KAAK+T,WACvBpH,GAAK1J,EAAQ,GAAKjD,KAAKyT,cAMjBH,GAAA/S,UAAA0P,gBAAP,SAAuB3E,EAA+BC,EAAmB2E,EAA2B/K,EAAagL,GAEhHhL,EAAMqH,gBAAgBjB,EAASmH,uBAAwB1S,KAAK+U,WAAWC,cAAc9E,GAAa5E,EAAaa,eAAgBb,EAAaY,kBAAmBZ,EAAamB,cAE5KzM,MAAK+U,WAAWE,gBAAgB/E,GAAYgF,cAAc5J,EAAa0I,mBAAoBzI,EAAS0I,8BAAgC,EAAG,MAMhIX,GAAA/S,UAAAuT,aAAR,SAAqBxI,EAA+BC,EAAmBK,EAAiCC,EAAmCC,GAG1I,IAAK9L,KAAKgP,eACT,MAAO,EAERhP,MAAKgP,eAAiB,KAEtB,IAAI5P,GAAc,EAClB,IAAI+V,GAAiCtJ,EAAcG,mBAEnD,IAAIF,EAAgBgJ,gBAAiB,CACpC9U,KAAKuU,WAAazI,EAAgBgJ,oBAC5B,CACN9U,KAAKuU,WAAa1I,EAAcoD,2BAChCpD,GAAcqD,sBAAsBlP,KAAKuU,WAAY,GAGtDhJ,EAASmH,uBAAyByC,EAASlS,KAE3C,IAAIkP,GAA6BtG,EAAcoD,2BAC/C7P,IAAQ,OAAS+S,EAAO,KAAOnS,KAAKkU,kBAAoB,KAAOiB,EAAW,wBAEzE,OAASvJ,EAAY,OAASuG,EAAO,KAAOnS,KAAKsU,QAAU,IAE5DlV,IAAQ,OAASwM,EAAY,OAAS5L,KAAKkU,kBAAoB,OAAStI,EAAY,OAEnF,OAASA,EAAY,OAAS5L,KAAKmU,SAAW,OAASvI,EAAY,OACnE,OAASA,EAAY,OAAS5L,KAAKmU,SAAW,OAASvI,EAAY,OACnE,OAASA,EAAY,OAASA,EAAY,OAI1C,OAASA,EAAY,OAASA,EAAY,OAC1C,OAASA,EAAY,OAASA,EAAY,OAAS5L,KAAKmU,SAAW,OACnE,OAASvI,EAAY,OAASA,EAAY,OAAS5L,KAAKmU,SAAW,OACnE,OAASnU,KAAKuU,WAAa,OAAS3I,EAAY,OAASA,EAAY,OAGrE,OAASA,EAAY,OAAS5L,KAAKqU,UAAY,OAASrU,KAAKuU,WAAa,OAC1E,OAAS3I,EAAY,OAASA,EAAY,OAASA,EAAY,MAEhE,OAAOxM,GAET,OAAAkU,IArQsC7C,EAuQtC/Q,GAAiCJ,QAAxBgU,IZ+mDNnC,4DAA4DlN,YAAYmR,2DAA2D,SAAS5W,EAAQkB,EAAOJ,GAC9J,GAAIS,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,Gax4DtB,IAAOO,GAAkBpC,EAAc,wDb+4DvC,Iaz4DM6W,GAAiB,SAAArU,GAASjB,EAA1BsV,EAAiBrU,EAStB,SATKqU,GASOC,GAAA,GAAAA,QAAA,GAAsB,CAAtBA,EAAA,GAEXtU,EAAAzB,KAAAS,KAEAA,MAAKsV,WAAaA,EAMZD,EAAA9U,UAAAqO,sBAAP,WAEC5N,EAAAT,UAAMqO,sBAAqBrP,KAAAS,KAE3BA,MAAKuV,kBAAoB,KAM1BpT,QAAAC,eAAWiT,EAAA9U,UAAA,cbk4DJ8B,Ial4DP,WAEC,MAAOrC,MAAKwV,abm4DNlT,Iah4DP,SAAsBC,GAErBvC,KAAKwV,YAAcjT,CACnBvC,MAAKwV,YAAc,GAAGjT,EAAQ,Ibi4DxBE,WAAY,KACZC,aAAc,Ma53Dd2S,GAAA9U,UAAAwO,4BAAP,SAAmCzD,EAAmCC,EAAmBM,EAAmCC,GAE3H,GAAI1M,GAAc4B,EAAAT,UAAMwO,4BAA2BxP,KAAAS,KAACsL,EAAcC,EAAUM,EAAeC,EAC3F9L,MAAKgP,eAAiB,IACtBhP,MAAKuV,kBAAoB1J,EAAcS,yBACvCf,GAAS0F,gCAAkCjR,KAAKuV,kBAAkBtS,MAAM,CAExE,OAAO7D,GAMDiW,GAAA9U,UAAA4O,yBAAP,SAAgC7D,EAAmCC,EAAmB6D,EAAmCC,EAAmCxD,EAAmCC,GAE9L,GAAI1M,GAAc,EAClB,IAAIV,EAGJ,IAAIsB,KAAKgP,eAAgB,CACxBtQ,EAAIsB,KAAK6O,yBACH,CACNnQ,EAAImN,EAAcoD,2BAClBpD,GAAcqD,sBAAsBxQ,EAAG,GAGxCU,GAAQ,OAASV,EAAI,OAAS0Q,EAAc,SAAWtD,EAAgBwB,eAAiB,SACvF,OAAS5O,EAAI,OAASA,EAAI,OAASsB,KAAKuV,kBAAoB,OAC5D,OAAS7W,EAAI,OAASA,EAAI,OAASsB,KAAKuV,kBAAoB,OAC5D,OAAS7W,EAAI,OAASA,EAAI,OAC1B,OAASA,EAAI,QAAUA,EAAI,OAAS0Q,EAAc,OAEnD,IAAIpP,KAAKwP,kBAAoB,KAC5BpQ,GAAQY,KAAKwP,iBAAiBlE,EAAcC,EAAU6D,EAAavD,EAAeC,EAEnF1M,IAAQ,OAASV,EAAI,KAAOA,EAAI,OAAS2Q,EAAc,IAEvD,KAAKrP,KAAKgP,eAAgB,CACzB5P,GAAQ,OAASY,KAAK6O,qBAAuB,SAAW7O,KAAK6O,qBAAuB,SAAWnQ,EAAI,QACnGmN,GAAc4D,wBAAwB/Q,GAGvCsB,KAAKgP,eAAiB,KAEtB,OAAO5P,GAMDiW,GAAA9U,UAAAgM,UAAP,SAAiBjB,EAAmCC,EAAmBpG,GAEtEnE,EAAAT,UAAMgM,UAAShN,KAAAS,KAACsL,EAAcC,EAAUpG,EAExC,IAAIlC,GAAuBsI,EAAS0F,+BACpC,IAAItE,GAAqBrB,EAAaoB,oBACtCC,GAAK1J,GAASjD,KAAKwV,WACnB7I,GAAK1J,EAAQ,GAAK,GAAGjD,KAAKwV,YAAc,GAE1C,OAAAH,IAtGgCzU,EAwGhClB,GAA2BJ,QAAlB+V,Ibm3DNhR,wDAAwDJ,YAAYwR,+DAA+D,SAASjX,EAAQkB,EAAOJ,GAC9J,GAAIS,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,Gcr+DtB,IAAOwK,GAAoBrM,EAAc,mDAGzC,IAAOkX,GAAgBlX,EAAe,sDd2+DtC,Icp+DMmX,GAAqB,SAAA3U,GAASjB,EAA9B4V,EAAqB3U,EAW1B,SAXK2U,GAWO7T,EAAuBgR,GAAA,GAAAA,QAAA,GAA8B,CAA9BA,EAAA,MAElC9R,EAAAzB,KAAAS,KAEAA,MAAKsO,SAAWxM,CAChB9B,MAAK+S,gBAAkBD,EAMjB6C,EAAApV,UAAA8K,QAAP,SAAeC,EAA+BC,GAE7CA,EAASd,iBAAmBzK,KAAK+S,eACjCxH,GAASf,SAAWxK,KAAK+S,gBAQ1B5Q,QAAAC,eAAWuT,EAAApV,UAAA,kBd89DJ8B,Ic99DP,WAEC,MAAOrC,MAAK+S,iBd+9DNzQ,Ic59DP,SAA0BC,GAEzB,GAAIvC,KAAK+S,iBAAmBxQ,EAC3B,MACDvC,MAAK+S,gBAAkBxQ,CACvBvC,MAAKmO,4Bd69DC1L,WAAY,KACZC,aAAc,Mcx9DrBP,QAAAC,eAAWuT,EAAApV,UAAA,Wd89DJ8B,Ic99DP,WAEC,MAAOrC,MAAKsO,Ud+9DNhM,Ic59DP,SAAmBC,GAElBvC,KAAKsO,SAAW/L,Gd69DVE,WAAY,KACZC,aAAc,Mcx9DdiT,GAAApV,UAAAgM,UAAP,SAAiBjB,EAAmCC,EAAmBpG,GAEtEA,EAAMqH,gBAAgBjB,EAAStB,cAAejK,KAAKsO,SAAUhD,EAAaa,eAAgBb,EAAaY,kBAAmBZ,EAAamB,eAMjIkJ,GAAApV,UAAAoL,iBAAP,SAAwBL,EAA+BC,EAAmBK,EAAiCC,EAAmCC,GAE7I,GAAI8J,GAAmC/J,EAAcG,mBACrD,IAAImG,GAA6BtG,EAAcoD,2BAC/C,IAAI4G,GAA8B7V,KAAK+S,gBAAiBjH,EAAgBsH,mBAAqBtH,EAAgBgK,SAC7GvK,GAAStB,cAAgB2L,EAAW3S,KAEpC,OAAO4H,GAAqBoB,mBAAmBkG,EAAMrG,EAAiB8J,EAAY5V,KAAKsO,SAAUhD,EAAaY,kBAAmBZ,EAAaa,eAAgBb,EAAamB,cAAeoJ,GACzL,OAASjK,EAAY,KAAOA,EAAY,KAAOuG,EAAO,OAEzD,OAAAwD,IAhFoCD,EAkFpChW,GAA+BJ,QAAtBqW,Id29DNI,sDAAsD9R,UAAU4I,mDAAmD5I,YAAY+R,iEAAiE,SAASxX,EAAQkB,EAAOJ,GAC3N,GAAIS,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,Ge7jEtB,IAAOqV,GAAgBlX,EAAe,sDfmkEtC,Ie9jEMyX,GAAuB,SAAAjV,GAASjB,EAAhCkW,EAAuBjV,EAS5B,SATKiV,GASOC,GAEXlV,EAAAzB,KAAAS,KAEA,IAAIkW,EAAO1W,QAAU,GACpB,KAAM,IAAIL,OAAM,4BAEjBa,MAAKmW,QAAUD,EAMhB/T,OAAAC,eAAW6T,EAAA1V,UAAA,efyjEJ8B,IezjEP,WAEC,MAAOrC,MAAKmW,Sf0jEN7T,IevjEP,SAAuBC,GAEtBvC,KAAKmW,QAAU5T,GfwjETE,WAAY,KACZC,aAAc,MenjEduT,GAAA1V,UAAAoL,iBAAP,SAAwBL,EAA+BC,EAAmBK,EAAiCC,EAAmCC,GAE7I,GAAI1M,GAAc,EAClB,IAAIgX,GAAqCvK,EAAcS,yBACvDT,GAAcS,yBACdT,GAAcS,yBACdT,GAAcS,yBAEd,IAAI+J,GAAuCxK,EAAcS,yBAEzDf,GAASpB,uBAAyBiM,EAAanT,MAAM,CAErD,IAAIkP,GAA6BtG,EAAcoD,2BAE/C7P,IAAQ,OAAS+S,EAAO,KAAOvG,EAAY,KAAOwK,EAAe,KAC/D,OAASxK,EAAY,KAAOuG,EAAO,KAAOkE,EAAiB,IAE7D,OAAOjX,GAMD6W,GAAA1V,UAAAgM,UAAP,SAAiBjB,EAA+BC,EAAmBpG,GAElE,GAAI+Q,GAAuBlW,KAAKmW,OAChC,IAAIlT,GAAuBsI,EAASpB,sBACpC,IAAIwC,GAAqBrB,EAAaoB,oBAGtCC,GAAK1J,GAASiT,EAAO,EACrBvJ,GAAK1J,EAAQ,GAAKiT,EAAO,EACzBvJ,GAAK1J,EAAQ,GAAKiT,EAAO,EACzBvJ,GAAK1J,EAAQ,GAAKiT,EAAO,EAGzBvJ,GAAK1J,EAAQ,GAAKiT,EAAO,EACzBvJ,GAAK1J,EAAQ,GAAKiT,EAAO,EACzBvJ,GAAK1J,EAAQ,GAAKiT,EAAO,EACzBvJ,GAAK1J,EAAQ,GAAKiT,EAAO,EAGzBvJ,GAAK1J,EAAQ,GAAKiT,EAAO,GACzBvJ,GAAK1J,EAAQ,GAAKiT,EAAO,GACzBvJ,GAAK1J,EAAQ,IAAMiT,EAAO,GAC1BvJ,GAAK1J,EAAQ,IAAMiT,EAAO,GAG1BvJ,GAAK1J,EAAQ,IAAMiT,EAAO,GAC1BvJ,GAAK1J,EAAQ,IAAMiT,EAAO,GAC1BvJ,GAAK1J,EAAQ,IAAMiT,EAAO,GAC1BvJ,GAAK1J,EAAQ,IAAMiT,EAAO,GAG1BvJ,GAAK1J,EAAQ,IAAMiT,EAAO,EAC1BvJ,GAAK1J,EAAQ,IAAMiT,EAAO,EAC1BvJ,GAAK1J,EAAQ,IAAMiT,EAAO,GAC1BvJ,GAAK1J,EAAQ,IAAMiT,EAAO,IAE5B,OAAAD,IA9FsCP,EAgGLhW,GAAAJ,QAAxB2W,If6iENF,sDAAsD9R,YAAYqS,oEAAoE,SAAS9X,EAAQkB,EAAOJ,GACjK,GAAIS,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GgBrpEtB,IAAOqV,GAAgBlX,EAAc,sDhB4pErC,IgBtpEM+X,GAA0B,SAAAvV,GAASjB,EAAnCwW,EAA0BvV,EAO/B,SAPKuV,KASJvV,EAAAzB,KAAAS,MAMDmC,OAAAC,eAAWmU,EAAAhW,UAAA,kBhBmpEJ8B,IgBnpEP,WAEC,MAAOrC,MAAKwW,iBhBopENlU,IgBjpEP,SAA0BC,GAEzBvC,KAAKwW,gBAAkBjU,GhBkpEjBE,WAAY,KACZC,aAAc,MgB7oEd6T,GAAAhW,UAAAoL,iBAAP,SAAwBL,EAA+BC,EAAmBK,EAAiCC,EAAmCC,GAE7I,GAAI1M,GAAc,EAClB,IAAIgX,GAAqCvK,EAAcS,yBACvD,IAAImK,GAAqC5K,EAAcS,yBAEvDf,GAASpB,uBAAyBiM,EAAanT,MAAM,CAIrD7D,IAAQ,OAASwM,EAAY,KAAOA,EAAY,KAAOwK,EAAe,KAAO,OAASxK,EAAY,KAAOA,EAAY,KAAO6K,EAAe,IAE3I,OAAOrX,GAMDmX,GAAAhW,UAAAgM,UAAP,SAAiBjB,EAA+BC,EAAmBpG,GAElE,GAAIuR,GAAa,EAAE,GACnB,IAAIzT,GAAesI,EAASpB,sBAC5B,IAAIwC,GAAqBrB,EAAaoB,oBAEtCC,GAAK1J,GAASjD,KAAKwW,gBAAgBG,aACnChK,GAAK1J,EAAQ,GAAKjD,KAAKwW,gBAAgBI,eACvCjK,GAAK1J,EAAQ,GAAKjD,KAAKwW,gBAAgBK,cACvClK,GAAK1J,EAAQ,GAAKjD,KAAKwW,gBAAgB7O,eACvCgF,GAAK1J,EAAQ,GAAKjD,KAAKwW,gBAAgBM,UAAUJ,CACjD/J,GAAK1J,EAAQ,GAAKjD,KAAKwW,gBAAgBO,YAAYL,CACnD/J,GAAK1J,EAAQ,GAAKjD,KAAKwW,gBAAgBQ,WAAWN,CAClD/J,GAAK1J,EAAQ,GAAKjD,KAAKwW,gBAAgBS,YAAYP,EAGrD,OAAAH,IA9DyCb,EAgELhW,GAAAJ,QAA3BiX,IhB4oENR,sDAAsD9R,YAAYiT,4DAA4D,SAAS1Y,EAAQkB,EAAOJ,GACzJ,GAAIS,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GiBxtEtB,IAAOwK,GAAoBrM,EAAc,mDAGzC,IAAOkX,GAAgBlX,EAAe,sDjB4tEtC,IiBvtEM2Y,GAAkB,SAAAnW,GAASjB,EAA3BoX,EAAkBnW,EAWvB,SAXKmW,GAWOnK,EAAwB9K,GAAA,GAAAA,QAAA,GAAgB,CAAhBA,EAAA,EAEnClB,EAAAzB,KAAAS,KACAA,MAAKiN,aAAeD,CACpBhN,MAAKgL,OAAS9I,EAOfC,OAAAC,eAAW+U,EAAA5W,UAAA,QjBktEJ8B,IiBltEP,WAEC,MAAOrC,MAAKoX,OjBmtEN9U,IiBhtEP,SAAgBC,GAEf,GAAIA,GAASvC,KAAKoX,OAAU7U,GAASvC,KAAKoX,OAAU7U,EAAMkM,QAAUzO,KAAKoX,MAAM3I,OAC9EzO,KAAKmO,0BAENnO,MAAKoX,MAAQ7U,GjBgtEPE,WAAY,KACZC,aAAc,MiB3sEdyU,GAAA5W,UAAA8K,QAAP,SAAeC,EAA+BC,GAE7CA,EAASjB,aAAe,IACxBiB,GAASlB,UAAY,IACrBkB,GAASf,QAAUxK,KAAKoX,OAAS,KAMlCjV,QAAAC,eAAW+U,EAAA5W,UAAA,UjB+sEJ8B,IiB/sEP,WAEC,MAAOrC,MAAKiN,cjBgtEN3K,IiB7sEP,SAAkBC,GAEjBvC,KAAKiN,aAAe1K,GjB8sEdE,WAAY,KACZC,aAAc,MiBzsEdyU,GAAA5W,UAAA+H,QAAP,YAOAnG,QAAAC,eAAW+U,EAAA5W,UAAA,SjB6sEJ8B,IiB7sEP,WAEC,MAAOrC,MAAKgL,QjB8sEN1I,IiB3sEP,SAAiBC,GAEhBvC,KAAKgL,OAASzI,GjB4sERE,WAAY,KACZC,aAAc,MiBvsEdyU,GAAA5W,UAAAgM,UAAP,SAAiBjB,EAA+BC,EAAmBpG,GAElEmG,EAAaoB,qBAAqBnB,EAASpB,wBAA0BnK,KAAKgL,MAE1E7F,GAAM+H,oBAAoB3B,EAAStB,cAAejK,KAAKiN,aAAc3B,EAAaY,kBAAkBZ,EAAamB,cAEjH,IAAIzM,KAAKoX,MACRjS,EAAMqH,gBAAgBjB,EAAStB,cAAgB,EAAGjK,KAAKoX,MAAQ9L,EAAaa,eAAgBb,EAAaY,kBAAkBZ,EAAamB,eAMnI0K,GAAA5W,UAAAoL,iBAAP,SAAwBL,EAA+BC,EAAmBK,EAAiCC,EAAmCC,GAE7I,GAAIuL,GAAqCxL,EAAcS,yBACvD,IAAI6F,GAA6BtG,EAAcoD,2BAC/C,IAAI7P,GAAc,EAClB,IAAIgO,GAAmCvB,EAAcG,mBAErDT,GAAStB,cAAgBmD,EAAWnK,KACpCsI,GAASpB,uBAAyBkN,EAAapU,MAAM,CAErD4I,GAAcqD,sBAAsBiD,EAAM,EAC1C,IAAImF,GAA8BzL,EAAcoD,2BAGhD7P,IAAQ,OAAS+S,EAAO,OAASrG,EAAgBgJ,gBAAkB,SAAWhJ,EAAgBwB,eAAiB,SAC7G,OAAS6E,EAAO,OAASA,EAAO,OAASA,EAAO,OAChD,OAASA,EAAO,SAAWrG,EAAgBwB,eAAiB,SAAW6E,EAAO,OAC9E,OAASA,EAAO,SAAWA,EAAO,SAAWrG,EAAgBgJ,gBAAkB,SAChFjK,EAAqBwC,qBAAqB8E,EAAM/E,EAAYpN,KAAKiN,aAAc3B,EAAaY,kBAAmBZ,EAAamB,cAAe0F,GAC1I,OAASmF,EAAQ,OAASnF,EAAO,cACjC,OAASmF,EAAQ,OACjB,OAASnF,EAAO,KAAOA,EAAO,KAAOvG,EAAY,IAEnD,IAAI5L,KAAKoX,MACRhY,GAAQyL,EAAqBoB,mBAAmBqL,EAAOxL,EAAiBD,EAAcG,oBAAqBhM,KAAKoX,MAAO9L,EAAaY,kBAAmBZ,EAAaa,eAAgBb,EAAamB,eAChM,OAAS0F,EAAO,KAAOmF,EAAQ,KAAOnF,EAAO,IAE/C/S,IAAQ,OAAS+S,EAAO,KAAOA,EAAO,KAAOkF,EAAe,OAC1D,OAASzL,EAAY,KAAOA,EAAY,KAAOuG,EAAO,IAExDtG,GAAc4D,wBAAwB0C,EAEtC,OAAO/S,GAET,OAAA+X,IAhIiCzB,EAkILhW,GAAAJ,QAAnB6X,IjB0rENpB,sDAAsD9R,UAAU4I,mDAAmD5I,YAAYsT,yDAAyD,SAAS/Y,EAAQkB,EAAOJ,GACnN,GAAIS,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GkBz0EtB,IAAOqV,GAAgBlX,EAAe,sDlB+0EtC,IkB10EMgZ,GAAe,SAAAxW,GAASjB,EAAxByX,EAAexW,EAepB,SAfKwW,GAeOC,EAAoBC,EAAoBC,GAAA,GAAAA,QAAA,GAAmC,CAAnCA,EAAA,QAEnD3W,EAAAzB,KAAAS,KAfOA,MAAA4X,aAAsB,CACtB5X,MAAA6X,aAAsB,GAe7B7X,MAAKyX,YAAcA,CACnBzX,MAAK0X,YAAcA,CACnB1X,MAAK2X,SAAWA,EAMVH,EAAAjX,UAAA8K,QAAP,SAAeC,EAAmCC,GAEjDA,EAASnB,gBAAkB,KAMrBoN,GAAAjX,UAAAiL,eAAP,SAAsBF,EAA+BC,GAEpD,GAAIoB,GAAqBrB,EAAaoB,oBACtC,IAAIzJ,GAAuBsI,EAASpB,sBACpCwC,GAAK1J,EAAQ,GAAK,CAClB0J,GAAK1J,EAAQ,GAAK,CAClB0J,GAAK1J,EAAQ,GAAK,EAMnBd,QAAAC,eAAWoV,EAAAjX,UAAA,elBi0EJ8B,IkBj0EP,WAEC,MAAOrC,MAAK4X,clBk0ENtV,IkB/zEP,SAAuBC,GAEtBvC,KAAK4X,aAAerV,GlBg0EdE,WAAY,KACZC,aAAc,MkB3zErBP,QAAAC,eAAWoV,EAAAjX,UAAA,elBi0EJ8B,IkBj0EP,WAEC,MAAOrC,MAAK6X,clBk0ENvV,IkB/zEP,SAAuBC,GAEtBvC,KAAK6X,aAAetV,GlBg0EdE,WAAY,KACZC,aAAc,MkB3zErBP,QAAAC,eAAWoV,EAAAjX,UAAA,YlBi0EJ8B,IkBj0EP,WAEC,MAAOrC,MAAK8X,WlBk0ENxV,IkB/zEP,SAAoBC,GAEnBvC,KAAK8X,UAAYvV,CACjBvC,MAAK+X,OAAUxV,GAAS,GAAM,KAAM,GACpCvC,MAAKgY,OAAUzV,GAAS,EAAK,KAAM,GACnCvC,MAAKiY,OAAS1V,EAAQ,KAAM,KlBg0EtBE,WAAY,KACZC,aAAc,MkB3zEd8U,GAAAjX,UAAAgM,UAAP,SAAiBjB,EAA+BC,EAAmBpG,GAElE,GAAIwH,GAAqBrB,EAAaoB,oBACtC,IAAIzJ,GAAuBsI,EAASpB,sBACpCwC,GAAK1J,GAASjD,KAAK+X,KACnBpL,GAAK1J,EAAQ,GAAKjD,KAAKgY,KACvBrL,GAAK1J,EAAQ,GAAKjD,KAAKiY,KACvBtL,GAAK1J,EAAQ,GAAKjD,KAAK4X,YACvBjL,GAAK1J,EAAQ,GAAK,GAAGjD,KAAK6X,aAAe7X,KAAK4X,cAMxCJ,GAAAjX,UAAAoL,iBAAP,SAAwBL,EAA+BC,EAAmBK,EAAiCC,EAAmCC,GAE7I,GAAI6L,GAAiC9L,EAAcS,yBACnD,IAAI4L,GAAgCrM,EAAcS,yBAClD,IAAI6F,GAA6BtG,EAAcoD,2BAC/CpD,GAAcqD,sBAAsBiD,EAAM,EAC1C,IAAImF,GAA8BzL,EAAcoD,2BAChD,IAAI7P,GAAc,EAClBmM,GAASpB,uBAAyBwN,EAAS1U,MAAM,CAEjD7D,IAAQ,OAASkY,EAAQ,OAASxL,EAAgBqM,mBAAqB,OAASD,EAAU,OACxF,OAASZ,EAAQ,OAASA,EAAQ,OAASY,EAAU,OACrD,OAASZ,EAAQ,OAASA,EAAQ,OAClC,OAASnF,EAAO,KAAOwF,EAAW,KAAO/L,EAAY,KACrD,OAASuG,EAAO,KAAOA,EAAO,KAAOmF,EAAQ,OAC7C,OAAS1L,EAAY,KAAOA,EAAY,KAAOuG,EAAO,IAExDtG,GAAc4D,wBAAwB0C,EAEtC,OAAO/S,GAET,OAAAoY,IA3H8B9B,EA6HLhW,GAAAJ,QAAhBkY,IlBwzENzB,sDAAsD9R,YAAYmU,mEAAmE,SAAS5Z,EAAQkB,EAAOJ,GAChK,GAAIS,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GmB/7EtB,IAAOwK,GAAoBrM,EAAc,mDAGzC,IAAOkX,GAAgBlX,EAAe,sDnBo8EtC,ImB97EM6Z,GAAyB,SAAArX,GAASjB,EAAlCsY,EAAyBrX,EAc9B,SAdKqX,GAcOrL,EAAwB9K,GAAA,GAAAA,QAAA,GAAgB,CAAhBA,EAAA,EAEnClB,EAAAzB,KAAAS,KAbOA,MAAAsY,cAAuB,CACvBtY,MAAAuY,mBAA4B,CAcnCvY,MAAKiN,aAAeD,CACpBhN,MAAKgL,OAAS9I,EAMRmW,EAAA9X,UAAA8K,QAAP,SAAeC,EAA+BC,GAE7CA,EAASjB,aAAe,IACxBiB,GAASlB,UAAY,IACrBkB,GAASf,QAAUxK,KAAKoX,OAAS,KAM3BiB,GAAA9X,UAAAiL,eAAP,SAAsBF,EAA+BC,GAEpDD,EAAaoB,qBAAqBnB,EAASpB,uBAAyB,GAAK,EAM1EhI,QAAAC,eAAWiW,EAAA9X,UAAA,QnBq7EJ8B,ImBr7EP,WAEC,MAAOrC,MAAKoX,OnBs7EN9U,ImBn7EP,SAAgBC,GAEf,GAAIwE,QAAQxE,IAAUwE,QAAQ/G,KAAKoX,QACjC7U,GAASvC,KAAKoX,OAAU7U,EAAMkM,QAAUzO,KAAKoX,MAAM3I,OAAU,CAC9DzO,KAAKmO,2BAENnO,KAAKoX,MAAQ7U,GnBm7EPE,WAAY,KACZC,aAAc,MmB96ErBP,QAAAC,eAAWiW,EAAA9X,UAAA,gBnBo7EJ8B,ImBp7EP,WAEC,MAAOrC,MAAKsY,enBq7ENhW,ImBl7EP,SAAwBC,GAEvBvC,KAAKsY,cAAgB/V,GnBm7EfE,WAAY,KACZC,aAAc,MmB96ErBP,QAAAC,eAAWiW,EAAA9X,UAAA,UnBo7EJ8B,ImBp7EP,WAEC,MAAOrC,MAAKiN,cnBq7EN3K,ImBl7EP,SAAkBC,GAEjBvC,KAAKiN,aAAe1K,GnBm7EdE,WAAY,KACZC,aAAc,MmB96ErBP,QAAAC,eAAWiW,EAAA9X,UAAA,SnBo7EJ8B,ImBp7EP,WAEC,MAAOrC,MAAKgL,QnBq7EN1I,ImBl7EP,SAAiBC,GAEhBvC,KAAKgL,OAASzI,GnBm7ERE,WAAY,KACZC,aAAc,MmB96ErBP,QAAAC,eAAWiW,EAAA9X,UAAA,qBnBo7EJ8B,ImBp7EP,WAEC,MAAOrC,MAAKuY,oBnBq7ENjW,ImBl7EP,SAA6BC,GAE5BvC,KAAKuY,mBAAqBhW,GnBm7EpBE,WAAY,KACZC,aAAc,MmB96Ed2V,GAAA9X,UAAAgM,UAAP,SAAiBjB,EAA+BC,EAAmBpG,GAElE,GAAIwH,GAAqBrB,EAAaoB,oBACtC,IAAIzJ,GAAuBsI,EAASpB,sBACpCwC,GAAK1J,GAASjD,KAAKgL,MACnB2B,GAAK1J,EAAQ,GAAKjD,KAAKuY,kBACvB5L,GAAK1J,EAAQ,GAAKjD,KAAKsY,aAEvBnT,GAAM+H,oBAAoB3B,EAAStB,cAAejK,KAAKiN,aAAc3B,EAAaY,kBAAmBZ,EAAamB,cAElH,IAAIzM,KAAKoX,MACRjS,EAAMqH,gBAAgBjB,EAAStB,cAAgB,EAAGjK,KAAKoX,MAAO9L,EAAaa,eAAgBb,EAAaY,kBAAmBZ,EAAamB,eAMnI4L,GAAA9X,UAAAoL,iBAAP,SAAwBL,EAA+BC,EAAmBK,EAAiCC,EAAmCC,GAE7I,GAAIuL,GAAqCxL,EAAcS,yBACvD,IAAI6F,GAA6BtG,EAAcoD,2BAC/C,IAAI7P,GAAc,EAClB,IAAIgO,GAAmCvB,EAAcG,mBACrD,IAAIwM,GAAmC1M,EAAgBgJ,eACvD,IAAI2D,GAAkC3M,EAAgBwB,cAEtD/B,GAAStB,cAAgBmD,EAAWnK,KACpCsI,GAASpB,uBAAyBkN,EAAapU,MAAM,CAErD4I,GAAcqD,sBAAsBiD,EAAM,EAC1C,IAAImF,GAA8BzL,EAAcoD,2BAGhD7P,IAAQ,OAAS+S,EAAO,OAASqG,EAAa,SAAWC,EAAY,SACnE,OAAStG,EAAO,OAASA,EAAO,OAASA,EAAO,OAChD,OAASA,EAAO,SAAWsG,EAAY,SAAWtG,EAAO,OACzD,OAASA,EAAO,SAAWA,EAAO,SAAWqG,EAAa,SAC3D3N,EAAqBwC,qBAAqB8E,EAAM/E,EAAYpN,KAAKiN,aAAc3B,EAAaY,kBAAmBZ,EAAamB,cAAe0F,GAC1I,OAASmF,EAAQ,OAASnF,EAAO,cACjC,OAASmF,EAAQ,OACjB,OAASnF,EAAO,KAAOA,EAAO,KAAOvG,EAAY,IAGnDxM,IAAQ,OAASoZ,EAAa,OAASA,EAAa,SAAWC,EAAY,SACzE,OAASD,EAAa,OAASnB,EAAe,OAASmB,EAAa,OACpE,OAASA,EAAa,OAASA,EAAa,OAASnB,EAAe,OACpE,OAASoB,EAAY,OAASpB,EAAe,OAASmB,EAAa,OACnE,OAASC,EAAY,OAASpB,EAAe,OAASoB,EAAY,OAClE,OAASD,EAAa,OAASA,EAAa,OAASC,EAAY,OAGjE,OAASD,EAAa,OAASnB,EAAe,OAASmB,EAAa,MAEtE,IAAIxY,KAAKoX,MAAO,CACf,GAAIsB,GAAgC7M,EAAcG,mBAClD5M,IAAQyL,EAAqBoB,mBAAmBqL,EAAOxL,EAAiB4M,EAAS1Y,KAAKoX,MAAO9L,EAAaY,kBAAmBZ,EAAaa,eAAgBb,EAAamB,eACtK,OAAS+L,EAAa,OAASlB,EAAQ,OAASkB,EAAa,OAI/DpZ,GAAQ,OAAS+S,EAAO,KAAOA,EAAO,KAAOqG,EAAa,OACxD,OAAS5M,EAAY,KAAOA,EAAY,KAAOuG,EAAO,IAExDtG,GAAc4D,wBAAwB0C,EAEtC,OAAO/S,GAET,OAAAiZ,IAnLwC3C,EAqLxChW,GAAmCJ,QAA1B+Y,InBw5ENtC,sDAAsD9R,UAAU4I,mDAAmD5I,YAAY0U,8DAA8D,SAASna,EAAQkB,EAAOJ,GACxN,GAAIS,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GoB5lFtB,IAAOwK,GAAoBrM,EAAc,mDAGzC,IAAOkX,GAAgBlX,EAAe,sDpBkmFtC,IoB3lFMoa,GAAoB,SAAA5X,GAASjB,EAA7B6Y,EAAoB5X,EAwBzB,SAxBK4X,GAwBO9W,EAAuB0F,EAA+BsL,GAA/B,GAAAtL,QAAA,GAA6B,CAA7BA,EAAA,WAA+B,GAAAsL,QAAA,GAA8B,CAA9BA,EAAA,MAEjE9R,EAAAzB,KAAAS,KAEAA,MAAK+S,gBAAkBD,CACvB9S,MAAKsO,SAAWxM,CAChB9B,MAAKwH,UAAYA,EAMXoR,EAAArY,UAAA8K,QAAP,SAAeC,EAA+BC,GAE7CA,EAASf,SAAWxK,KAAK+S,eACzBxH,GAASd,iBAAmBzK,KAAK+S,gBASlC5Q,QAAAC,eAAWwW,EAAArY,UAAA,apB0kFJ8B,IoB1kFP,WAEC,MAAOrC,MAAKiT,YpB2kFN3Q,IoBxkFP,SAAqBC,GAEpB,GAAIA,GAASqW,EAAqBxR,KAAO7E,GAASqW,EAAqB1F,SACtE,KAAM,IAAI/T,OAAM,qBACjB,IAAIa,KAAKiT,YAAc1Q,EACtB,MAEDvC,MAAKiT,WAAa1Q,CAElBvC,MAAKmO,4BpBukFC1L,WAAY,KACZC,aAAc,MoBlkFrBP,QAAAC,eAAWwW,EAAArY,UAAA,WpBwkFJ8B,IoBxkFP,WAEC,MAAOrC,MAAKsO,UpBykFNhM,IoBtkFP,SAAmBC,GAElB,GAAIA,EAAMkM,QAAUzO,KAAKsO,SAASG,OACjCzO,KAAKmO,0BAENnO,MAAKsO,SAAW/L,GpBskFVE,WAAY,KACZC,aAAc,MoBjkFdkW,GAAArY,UAAAgM,UAAP,SAAiBjB,EAA+BC,EAAmBpG,GAElEA,EAAMqH,gBAAgBjB,EAAStB,cAAejK,KAAKsO,SAAUhD,EAAaa,eAAgBb,EAAaY,kBAAmBZ,EAAamB,cAEvIzL,GAAAT,UAAMgM,UAAShN,KAAAS,KAACsL,EAAcC,EAAUpG,GAMlCyT,GAAArY,UAAAoL,iBAAP,SAAwBL,EAA+BC,EAAmBK,EAAiCC,EAAmCC,GAE7I,GAAI1M,EACJ,IAAI+T,GAAoCtH,EAAcG,mBACtD,IAAImG,GAA6BtG,EAAcoD,2BAC/C1D,GAAStB,cAAgBkJ,EAAYlQ,KAErC7D,GAAOyL,EAAqBoB,mBAAmBkG,EAAMrG,EAAiBqH,EAAanT,KAAKsO,SAAUhD,EAAaY,kBAAmBZ,EAAaa,eAAgBb,EAAamB,cAAezM,KAAK+S,gBAAiBjH,EAAgBsH,mBAAqBtH,EAAgBgK,UAEtQ,QAAQ9V,KAAKiT,YACZ,IAAK2F,GAAqB1F,SACzB9T,GAAQ,OAASwM,EAAY,KAAOA,EAAY,KAAOuG,EAAO,IAC9D,MACD,KAAKyG,GAAqBxR,IACzBhI,GAAQ,OAASwM,EAAY,KAAOA,EAAY,KAAOuG,EAAO,IAC9D,OAGF,MAAO/S,GA3GMwZ,GAAA1F,SAAkB,UAKlB0F,GAAAxR,IAAa,KAwG5B,OAAAwR,IAlHmClD,EAoHnChW,GAA8BJ,QAArBsZ,IpB0kFN7C,sDAAsD9R,UAAU4I,mDAAmD5I,YAAY4U,0DAA0D,SAASra,EAAQkB,EAAOJ,GACpN,GAAIS,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GqBrtFtB,IAAOyY,GAASta,EAAe,oCAE/B,IAAOua,GAAmBva,EAAa,6CAQvC,IAAOsM,GAAiBtM,EAAa,uDrBotFrC,IqB9sFMkX,GAAgB,SAAA1U,GAASjB,EAAzB2V,EAAgB1U,EAErB,SAFK0U,KAIJ1U,EAAAzB,KAAAS,MAMDmC,OAAAC,eAAWsT,EAAAnV,UAAA,arB6sFJ8B,IqB7sFP,WAEC,MAAOyW,GAAUE,gBrB8sFXvW,WAAY,KACZC,aAAc,MqBrsFdgT,GAAAnV,UAAAoL,iBAAP,SAAwBL,EAA+BC,EAAmBK,EAAiCC,EAAmCC,GAE7I,KAAM,IAAIiN,EACV,OAAO,GAET,OAAArD,IA3B+B5K,EA6BLpL,GAAAJ,QAAjBoW,IrBgtFNuD,6CAA6ChV,UAAUiV,oCAAoCjV,UAAU2I,uDAAuD3I,YAAYkV,sEAAsE,SAAS3a,EAAQkB,EAAOJ,GACzQ,GAAIS,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GsB1vFtB,IAAOwK,GAAoBrM,EAAc,mDAGzC,IAAOkX,GAAgBlX,EAAe,sDtB8vFtC,IsBzvFM4a,GAA4B,SAAApY,GAASjB,EAArCqZ,EAA4BpY,EAoBjC,SApBKoY,GAoBOpM,EAAwBqM,EAA6BC,EAAwBC,EAAwBC,GAA7E,GAAAH,QAAA,GAA2B,CAA3BA,EAAA,GAA6B,GAAAC,QAAA,GAAsB,CAAtBA,EAAA,EAAwB,GAAAC,QAAA,GAAsB,CAAtBA,EAAA,EAAwB,GAAAC,QAAA,GAAsB,CAAtBA,EAAA,EAEhHxY,EAAAzB,KAAAS,KAlBOA,MAAAyZ,aAAsB,CACtBzZ,MAAA0Z,aAAsB,CACtB1Z,MAAA2Z,aAAsB,CAGtB3Z,MAAAgL,OAAgB,CAcvBhL,MAAK4Z,QAAU5M,CACfhN,MAAKyZ,aAAeH,CACpBtZ,MAAK0Z,aAAeH,CACpBvZ,MAAK2Z,aAAeH,CACpBxZ,MAAK6Z,iBAAmB7Z,KAAKyZ,cAAgBzZ,KAAK2Z,cAAgB3Z,KAAKyZ,cAAgBzZ,KAAK0Z,aAC5F1Z,MAAK8Z,iBAAmBT,EAMlBD,EAAA7Y,UAAAiL,eAAP,SAAsBF,EAA+BC,GAEpD,GAAItI,GAAuBsI,EAASpB,sBACpC,IAAIwC,GAAqBrB,EAAaoB,oBACtCC,GAAK1J,EAAQ,GAAK,CAClB0J,GAAK1J,EAAQ,GAAK,CAClB0J,GAAK1J,EAAQ,GAAK,EAMZmW,GAAA7Y,UAAA8K,QAAP,SAAeC,EAA+BC,GAE7CA,EAASjB,aAAe,IACxBiB,GAASlB,UAAY,KAMtBlI,QAAAC,eAAWgX,EAAA7Y,UAAA,UtBmvFJ8B,IsBnvFP,WAEC,MAAOrC,MAAK4Z,StBovFNtX,IsBjvFP,SAAkBC,GAEjBvC,KAAK4Z,QAAUrX,GtBkvFTE,WAAY,KACZC,aAAc,MsB7uFrBP,QAAAC,eAAWgX,EAAA7Y,UAAA,mBtBmvFJ8B,IsBnvFP,WAEC,MAAOrC,MAAK8Z,kBtBovFNxX,IsBjvFP,SAA2BC,GAE1BvC,KAAK8Z,iBAAmBvX,GtBkvFlBE,WAAY,KACZC,aAAc,MsB7uFrBP,QAAAC,eAAWgX,EAAA7Y,UAAA,etBmvFJ8B,IsBnvFP,WAEC,MAAOrC,MAAKyZ,ctBovFNnX,IsBjvFP,SAAuBC,GAEtBvC,KAAKyZ,aAAelX,CAEpB,IAAIwX,KAA0B/Z,KAAKyZ,cAAgBzZ,KAAK2Z,cAAgB3Z,KAAKyZ,cAAgBzZ,KAAK0Z,aAClG,IAAI1Z,KAAK6Z,gBAAkBE,EAAe,CACzC/Z,KAAKmO,0BACLnO,MAAK6Z,eAAiBE,ItBkvFjBtX,WAAY,KACZC,aAAc,MsB5uFrBP,QAAAC,eAAWgX,EAAA7Y,UAAA,etBkvFJ8B,IsBlvFP,WAEC,MAAOrC,MAAK0Z,ctBmvFNpX,IsBhvFP,SAAuBC,GAEtBvC,KAAK0Z,aAAenX,CAEpB,IAAIwX,KAA0B/Z,KAAKyZ,cAAgBzZ,KAAK2Z,cAAgB3Z,KAAKyZ,cAAgBzZ,KAAK0Z,aAClG,IAAI1Z,KAAK6Z,gBAAkBE,EAAe,CACzC/Z,KAAKmO,0BACLnO,MAAK6Z,eAAiBE,ItBivFjBtX,WAAY,KACZC,aAAc,MsB3uFrBP,QAAAC,eAAWgX,EAAA7Y,UAAA,etBivFJ8B,IsBjvFP,WAEC,MAAOrC,MAAK2Z,ctBkvFNrX,IsB/uFP,SAAuBC,GAEtBvC,KAAK2Z,aAAepX,CAEpB,IAAIwX,KAA0B/Z,KAAKyZ,cAAgBzZ,KAAK2Z,cAAgB3Z,KAAKyZ,cAAgBzZ,KAAK0Z,aAClG,IAAI1Z,KAAK6Z,gBAAkBE,EAAe,CACzC/Z,KAAKmO,0BACLnO,MAAK6Z,eAAiBE,ItBgvFjBtX,WAAY,KACZC,aAAc,MsBzuFrBP,QAAAC,eAAWgX,EAAA7Y,UAAA,StBgvFJ8B,IsBhvFP,WAEC,MAAOrC,MAAKgL,QtBivFN1I,IsB9uFP,SAAiBC,GAEhBvC,KAAKgL,OAASzI,GtB+uFRE,WAAY,KACZC,aAAc,MsB1uFd0W,GAAA7Y,UAAAgM,UAAP,SAAiBjB,EAA+BC,EAAmBpG,GAElE,GAAIlC,GAAuBsI,EAASpB,sBACpC,IAAIwC,GAAqBrB,EAAaoB,oBAEtCC,GAAK1J,GAASjD,KAAKyZ,aAAezZ,KAAK8Z,gBAEvC,IAAI9Z,KAAK6Z,eAAgB,CACxBlN,EAAK1J,EAAQ,GAAKjD,KAAK0Z,aAAe1Z,KAAK8Z,gBAC3CnN,GAAK1J,EAAQ,GAAKjD,KAAK2Z,aAAe3Z,KAAK8Z,iBAE5CnN,EAAK1J,EAAQ,GAAKjD,KAAKgL,MAEvB7F,GAAM+H,oBAAoB3B,EAAStB,cAAejK,KAAK4Z,QAAStO,EAAaY,kBAAmBZ,EAAamB,eAMvG2M,GAAA7Y,UAAAoL,iBAAP,SAAwBL,EAA+BC,EAAmBK,EAAiCC,EAAmCC,GtB4uFvI,GsBzuFFa,GAA6Bd,EAAcS,yBAC/C,IAAI0N,GAA8BnO,EAAcS,yBAChD,IAAIlN,GAAc,EAClB,IAAIgO,GAAmCvB,EAAcG,mBACrD,IAAIiO,EACJ,IAAIC,EACJ,IAAI/H,EAEJ5G,GAAStB,cAAgBmD,EAAWnK,KACpCsI,GAASpB,uBAAyBwC,EAAK1J,MAAM,CAE7CgX,GAAgBpO,EAAcoD,2BAC9BpD,GAAcqD,sBAAsB+K,EAAe,EACnDC,GAAkBrO,EAAcoD,2BAChCpD,GAAcqD,sBAAsBgL,EAAiB,EAErD/H,GAAOtG,EAAcoD,2BAErB,IAAIuJ,GAAmC1M,EAAgBgJ,eACvD,IAAI2D,GAAkC3M,EAAgBwB,cAEtDlO,IAAQ,OAASoZ,EAAa,SAAWA,EAAa,QAEtDpZ,IAAQ,OAAS+S,EAAO,OAASqG,EAAa,SAAWC,EAAY,SACpE,OAAStG,EAAO,OAASA,EAAO,OAASA,EAAO,OAChD,OAASA,EAAO,OAAS6H,EAAQ,OAAS7H,EAAO,OACjD,OAASA,EAAO,OAASxF,EAAO,OAASwF,EAAO,OAChD,OAASA,EAAO,OAASxF,EAAO,OAASwF,EAAO,OAChD,OAASA,EAAO,OAAS6H,EAAQ,OAAS7H,EAAO,OACjD,OAASA,EAAO,OAASA,EAAO,OAEhC,OAASA,EAAO,OAASxF,EAAO,OAASwF,EAAO,OAChD,OAASA,EAAO,OAASA,EAAO,OAASA,EAAO,OAChD,OAASA,EAAO,SAAWA,EAAO,OAASsG,EAAY,SAEvD,OAASwB,EAAgB,KAAOtN,EAAO,OAAS6L,EAAa,KAC7D,OAASyB,EAAgB,SAAWA,EAAgB,SAAW9H,EAAO,SACtE,OAAS8H,EAAgB,SAAWA,EAAgB,QACrD7a,IAAQyL,EAAqBwC,qBAAqB6M,EAAiB9M,EAAYpN,KAAK4Z,QAAStO,EAAaY,kBAAmBZ,EAAamB,cAAewN,GACxJ,OAASC,EAAkB,OAASA,EAAkB,eACtD,OAASA,EAAkB,MAE5B,IAAIla,KAAK6Z,eAAgB,CAExBza,GAAQ,OAAS+S,EAAO,OAASqG,EAAa,SAAWC,EAAY,SACpE,OAAStG,EAAO,OAASA,EAAO,OAASA,EAAO,OAChD,OAASA,EAAO,OAAS6H,EAAQ,OAAS7H,EAAO,OACjD,OAASA,EAAO,OAASxF,EAAO,OAASwF,EAAO,OAChD,OAASA,EAAO,OAASxF,EAAO,OAASwF,EAAO,OAChD,OAASA,EAAO,OAAS6H,EAAQ,OAAS7H,EAAO,OACjD,OAASA,EAAO,OAASA,EAAO,OAEhC,OAASA,EAAO,OAASxF,EAAO,OAASwF,EAAO,OAChD,OAASA,EAAO,OAASA,EAAO,OAASA,EAAO,OAChD,OAASA,EAAO,SAAWA,EAAO,OAASsG,EAAY,SAEvD,OAASwB,EAAgB,KAAOtN,EAAO,OAAS6L,EAAa,KAC7D,OAASyB,EAAgB,SAAWA,EAAgB,SAAW9H,EAAO,SACtE,OAAS8H,EAAgB,SAAWA,EAAgB,QACrD7a,IAAQyL,EAAqBwC,qBAAqB8E,EAAM/E,EAAYpN,KAAK4Z,QAAStO,EAAaY,kBAAmBZ,EAAamB,cAAewN,GAC7I,OAASC,EAAkB,OAAS/H,EAAO,MAG5C/S,IAAQ,OAAS+S,EAAO,OAASqG,EAAa,SAAWC,EAAY,SACpE,OAAStG,EAAO,OAASA,EAAO,OAASA,EAAO,OAChD,OAASA,EAAO,OAAS6H,EAAQ,OAAS7H,EAAO,OACjD,OAASA,EAAO,OAASxF,EAAO,OAASwF,EAAO,OAChD,OAASA,EAAO,OAASxF,EAAO,OAASwF,EAAO,OAChD,OAASA,EAAO,OAAS6H,EAAQ,OAAS7H,EAAO,OACjD,OAASA,EAAO,OAASA,EAAO,OAEhC,OAASA,EAAO,OAASxF,EAAO,OAASwF,EAAO,OAChD,OAASA,EAAO,OAASA,EAAO,OAASA,EAAO,OAChD,OAASA,EAAO,SAAWA,EAAO,OAASsG,EAAY,SAEvD,OAASwB,EAAgB,KAAOtN,EAAO,OAAS6L,EAAa,KAC7D,OAASyB,EAAgB,SAAWA,EAAgB,SAAW9H,EAAO,SACtE,OAAS8H,EAAgB,SAAWA,EAAgB,QACrD7a,IAAQyL,EAAqBwC,qBAAqB8E,EAAM/E,EAAYpN,KAAK4Z,QAAStO,EAAaY,kBAAmBZ,EAAamB,cAAewN,GAC7I,OAASC,EAAkB,OAAS/H,EAAO,OAG7CtG,EAAc4D,wBAAwBwK,EAEtC7a,IAAQ,OAAS8a,EAAkB,SAAWA,EAAkB,SAAWtO,EAAY,SACtF,OAASsO,EAAkB,SAAWA,EAAkB,SAAWvN,EAAO,OAC1E,OAASf,EAAY,SAAWA,EAAY,SAAWsO,EAAkB,QAE1ErO,GAAc4D,wBAAwByK,EAGtC9a,IAAQ,OAASoZ,EAAa,SAAWA,EAAa,QAEtD,OAAOpZ,GAET,OAAAga,IA7Q2C1D,EA+Q3ChW,GAAsCJ,QAA7B8Z,ItB+qFNrD,sDAAsD9R,UAAU4I,mDAAmD5I,YAAYkW,8DAA8D,SAAS3b,EAAQkB,EAAOJ,GACxN,GAAIS,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GuB38FtB,IAAOqV,GAAgBlX,EAAe,sDvBi9FtC,IuB58FM4b,GAAoB,SAAApZ,GAASjB,EAA7Bqa,EAAoBpZ,EAsBzB,SAtBKoZ,GAsBOpY,EAAkCqY,EAAsBC,EAAkBC,GAA1E,GAAAvY,QAAA,GAAgC,CAAhCA,EAAA,SAAkC,GAAAqY,QAAA,GAAoB,CAApBA,EAAA,GAAsB,GAAAC,QAAA,GAAgB,CAAhBA,EAAA,EAAkB,GAAAC,QAAA,GAAoB,CAApBA,EAAA;CAErFvZ,EAAAzB,KAAAS,KAEAA,MAAKiT,WAAasH,CAClBva,MAAKwa,UAAYH,CACjBra,MAAKya,OAASH,CAEdta,MAAKgC,MAAQA,EAMPoY,EAAA7Z,UAAAiL,eAAP,SAAsBF,EAA+BC,GAEpDD,EAAaoB,qBAAqBnB,EAASpB,uBAAyB,GAAK,EAMnEiQ,GAAA7Z,UAAA8K,QAAP,SAAeC,EAA+BC,GAE7CA,EAASjB,aAAe,IACxBiB,GAASlB,UAAY,KAWtBlI,QAAAC,eAAWgY,EAAA7Z,UAAA,avB47FJ8B,IuB57FP,WAEC,MAAOrC,MAAKiT,YvB67FN3Q,IuB17FP,SAAqBC,GAEpB,GAAIvC,KAAKiT,YAAc1Q,EACtB,MAEDvC,MAAKiT,WAAa1Q,CAElBvC,MAAKmO,4BvBy7FC1L,WAAY,KACZC,aAAc,MuBp7FrBP,QAAAC,eAAWgY,EAAA7Z,UAAA,SvB07FJ8B,IuB17FP,WAEC,MAAOrC,MAAK+K,QvB27FNzI,IuBx7FP,SAAiBC,GAEhBvC,KAAK+K,OAASxI,CACdvC,MAAKiL,SAAY1I,GAAS,GAAM,KAAM,GACtCvC,MAAKkL,SAAY3I,GAAS,EAAK,KAAM,GACrCvC,MAAKmL,SAAW5I,EAAQ,KAAM,KvBy7FxBE,WAAY,KACZC,aAAc,MuBp7FrBP,QAAAC,eAAWgY,EAAA7Z,UAAA,YvB07FJ8B,IuB17FP,WAEC,MAAOrC,MAAKwa,WvB27FNlY,IuBx7FP,SAAoBC,GAEnBvC,KAAKwa,UAAYjY,GvBy7FXE,WAAY,KACZC,aAAc,MuBp7FrBP,QAAAC,eAAWgY,EAAA7Z,UAAA,SvB07FJ8B,IuB17FP,WAEC,MAAOrC,MAAKya,QvB27FNnY,IuBx7FP,SAAiBC,GAEhBvC,KAAKya,OAASlY,GvBy7FRE,WAAY,KACZC,aAAc,MuBp7Fd0X,GAAA7Z,UAAAgM,UAAP,SAAiBjB,EAA+BC,EAAmBpG,GAElE,GAAIlC,GAAuBsI,EAASpB,sBACpC,IAAIwC,GAAqBrB,EAAaoB,oBACtCC,GAAK1J,GAASjD,KAAKiL,OACnB0B,GAAK1J,EAAQ,GAAKjD,KAAKkL,OACvByB,GAAK1J,EAAQ,GAAKjD,KAAKmL,OACvBwB,GAAK1J,EAAQ,GAAKjD,KAAKwa,SACvB7N,GAAK1J,EAAQ,GAAKjD,KAAKya,OAMjBL,GAAA7Z,UAAAoL,iBAAP,SAAwBL,EAA+BC,EAAmBK,EAAiCC,EAAmCC,GAE7I,GAAIuL,GAAqCxL,EAAcS,yBACvD,IAAIoO,GAAsC7O,EAAcS,yBACxD,IAAI6F,GAA6BtG,EAAcoD,2BAC/C,IAAI7P,GAAc,EAElBmM,GAASpB,uBAAyBkN,EAAapU,MAAM,CAErD7D,IAAQ,OAAS+S,EAAO,OAASrG,EAAgBgJ,gBAAkB,SAAWhJ,EAAgBwB,eAAiB,SAC9G,OAAS6E,EAAO,OAASA,EAAO,OAChC,OAASA,EAAO,OAASkF,EAAe,OAASlF,EAAO,OACxD,OAASA,EAAO,OAASA,EAAO,OAASuI,EAAgB,OACzD,OAASvI,EAAO,OAASA,EAAO,OAASuI,EAAgB,OACzD,OAASvI,EAAO,OAASkF,EAAe,OAASlF,EAAO,OACxD,OAASvG,EAAY,SAAWA,EAAY,SAAWuG,EAAO,OAC9D,OAASA,EAAO,OAASkF,EAAe,OAASlF,EAAO,MAEzD,IAAInS,KAAKiT,YAAcmH,EAAqBhT,IAAK,CAChDhI,GAAQ,OAAS+S,EAAO,SAAWA,EAAO,OAASkF,EAAe,SACjE,OAASzL,EAAY,SAAWA,EAAY,SAAWuG,EAAO,aACzD,IAAInS,KAAKiT,YAAcmH,EAAqBlH,SAAU,CAC5D9T,GAAQ,OAAS+S,EAAO,SAAWA,EAAO,OAASkF,EAAe,SACjE,OAASzL,EAAY,SAAWA,EAAY,SAAWuG,EAAO,aACzD,CACN/S,GAAQ,OAAS+S,EAAO,SAAWkF,EAAe,SAAWzL,EAAY,SACxE,OAASuG,EAAO,SAAWA,EAAO,SAAWA,EAAO,OACpD,OAASvG,EAAY,SAAWA,EAAY,SAAWuG,EAAO,SAGhE,MAAO/S,GAhKMgb,GAAAhT,IAAa,KACbgT,GAAAlH,SAAkB,UAClBkH,GAAAO,IAAa,KAgK5B,OAAAP,IApKmC1E,EAsKnChW,GAA8BJ,QAArB8a,IvB+6FNrE,sDAAsD9R,YAAY2W,4DAA4D,SAASpc,EAAQkB,EAAOJ,GACzJ,GAAIS,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GwBhmGtB,IAAOyK,GAAiBtM,EAAa,uDxBumGrC,IwBjmGMgP,GAAkB,SAAAxM,GAASjB,EAA3ByN,EAAkBxM,EAUvB,SAVKwM,KAYJxM,EAAAzB,KAAAS,MASMwN,EAAAjN,UAAAwO,4BAAP,SAAmCzD,EAAmCC,EAAmBM,EAAmCC,GAE3H,MAAO,GAWD0B,GAAAjN,UAAA4O,yBAAP,SAAgC7D,EAAmCC,EAAmB6D,EAAmCC,EAAmCxD,EAAmCC,GAE9L,MAAO,GAWD0B,GAAAjN,UAAAmP,yBAAP,SAAgCpE,EAAmCC,EAAmB6B,EAAkCuC,EAAuB9D,EAAmCC,GAEjL,MAAO,GAWD0B,GAAAjN,UAAAqP,6BAAP,SAAoCtE,EAAmCC,EAAmBK,EAAiCC,EAAmCC,GAE7J,MAAO,GAET,OAAA0B,IAhEiC1C,EAkELpL,GAAAJ,QAAnBkO,IxBslGNZ,uDAAuD3I,YAAY4W,2DAA2D,SAASrc,EAAQkB,EAAOJ,GACzJ,GAAIS,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GyBlqGtB,IAAOwK,GAAoBrM,EAAa,mDAGxC,IAAOsM,GAAiBtM,EAAa,uDzBsqGrC,IyBjqGMqC,GAAiB,SAAAG,GAASjB,EAA1Bc,EAAiBG,EAStB,SATKH,KAWJG,EAAAzB,KAAAS,MAGMa,EAAAN,UAAA2N,QAAP,SAAe5C,GAEd,IAAKtL,KAAK8a,cAAgBxP,EAAayP,mBACtC,MAAO,MAER,OAAO,MAMDla,GAAAN,UAAA8K,QAAP,SAAeC,EAA+BC,GAE7CA,EAASf,QAAUxK,KAAK8a,YAMlBja,GAAAN,UAAAya,uBAAP,WAEC,MAAO,MAMDna,GAAAN,UAAAoC,SAAP,SAAgBG,GAEf,GAAIjE,GAAQiE,CACZ,IAAImY,GAA4CnY,CAEhD,IAAImY,EAAI3X,WAAa,KACpBtD,KAAKsD,UAAY2X,EAAI3X,UAMvBnB,QAAAC,eAAWvB,EAAAN,UAAA,azBkpGJ8B,IyBlpGP,WAEC,MAAOrC,MAAKsO,UzBmpGNhM,IyBhpGP,SAAqBC,GAEpB,GAAIrC,GAAaqC,GAAS,IAE1B,IAAIrC,GAAKF,KAAK8a,aAAgBvY,GAASvC,KAAKsO,UAAa/L,EAAMkM,QAAUzO,KAAKsO,SAASG,OACtFzO,KAAKmO,0BAENnO,MAAK8a,YAAc5a,CACnBF,MAAKsO,SAAW/L,GzB+oGVE,WAAY,KACZC,aAAc,MyBzoGd7B,GAAAN,UAAAqO,sBAAP,WAEC5N,EAAAT,UAAMqO,sBAAqBrP,KAAAS,KAC3BA,MAAKkb,wBAA0B,KAMzBra,GAAAN,UAAA+H,QAAP,WAEC,GAAItI,KAAKsO,SACRtO,KAAKsO,SAAW,KAMXzN,GAAAN,UAAAgM,UAAP,SAAiBjB,EAA+BC,EAAmBpG,GAElE,GAAIoG,EAAStB,eAAiB,EAC7B9E,EAAMqH,gBAAgBjB,EAAStB,cAAejK,KAAKsO,SAAUhD,EAAaa,eAAgBb,EAAaY,kBAAmBZ,EAAamB,eAMlI5L,GAAAN,UAAAoL,iBAAP,SAAwBL,EAA+BC,EAAmBK,EAAiCC,EAAmCC,GAE7I9L,KAAKkb,wBAA0BrP,EAAcG,mBAE7CT,GAAStB,cAAgBjK,KAAKkb,wBAAwBjY,KAEtD,OAAO4H,GAAqBoB,mBAAmBL,EAAWE,EAAiB9L,KAAKkb,wBAAyBlb,KAAKsO,SAAUhD,EAAaY,kBAAmBZ,EAAaa,eAAgBb,EAAamB,eACjM,OAASb,EAAY,SAAWA,EAAY,SAAWE,EAAgBwD,QAAU,SACjF,OAAS1D,EAAY,SAAWA,EAAY,KAE/C,OAAA/K,IA9GgCiK,EAgHhCpL,GAA2BJ,QAAlBuB,IzBsoGN+L,uDAAuD3I,UAAU4I,mDAAmD5I,YAAYkX,+DAA+D,SAAS3c,EAAQkB,EAAOJ,GAC1N,GAAIS,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G0BrwGtB,IAAOwK,GAAoBrM,EAAc,mDAGzC,IAAOqC,GAAiBrC,EAAc,uD1BywGtC,I0BnwGM4c,GAAqB,SAAApa,GAASjB,EAA9Bqb,EAAqBpa,EAa1B,SAbKoa,GAaOC,EAAyBC,EAAmBC,EAAoBC,GAE3Exa,EAAAzB,KAAAS,KAEAA,MAAKsD,UAAY+X,CACjBrb,MAAKyb,cAAgBH,EAAWC,CAChCvb,MAAK0b,cAAgBF,EAAWD,EAM1BH,EAAA7a,UAAAiL,eAAP,SAAsBF,EAA+BC,GAEpD,GAAItI,GAAuBsI,EAASpB,sBACpC,IAAIwC,GAAqBrB,EAAaoB,oBACtCC,GAAK1J,GAAS,EAAEjD,KAAKsD,UAAUqY,KAC/BhP,GAAK1J,EAAQ,GAAK,EAAEjD,KAAKsD,UAAUsY,MACnCjP,GAAK1J,EAAQ,GAAK,CAClB0J,GAAK1J,EAAQ,GAAK,CAClB0J,GAAK1J,EAAQ,GAAKjD,KAAKyb,aACvB9O,GAAK1J,EAAQ,GAAKjD,KAAK0b,cAMxBvZ,QAAAC,eAAWgZ,EAAA7a,UAAA,gB1B4vGJ8B,I0B5vGP,WAEC,MAAO,Q1B6vGDI,WAAY,KACZC,aAAc,M0BxvGd0Y,GAAA7a,UAAAoC,SAAP,SAAgBG,GAEf9B,EAAAT,UAAMoC,SAAQpD,KAAAS,KAAC8C,EAEf9C,MAAKyb,cAAyC3Y,EAAQ2Y,aACtDzb,MAAK0b,cAAyC5Y,EAAQ4Y,cAMhDN,GAAA7a,UAAAoL,iBAAP,SAAwBL,EAA+BC,EAAmBK,EAAiCC,EAAmCC,GAE7I,GAAIqG,GAA6BtG,EAAcoD,2BAC/C,IAAI4M,GAAgChQ,EAAcS,yBAClD,IAAIwP,GAAiCjQ,EAAcS,yBACnDtM,MAAKkb,wBAA0BrP,EAAcG,mBAC7CT,GAAStB,cAAgBjK,KAAKkb,wBAAwBjY,KACtDsI,GAASpB,uBAAyB0R,EAAQ5Y,MAAM,CAEhD,OAAO4H,GAAqBoB,mBAAmBL,EAAWE,EAAiB9L,KAAKkb,wBAAyBlb,KAAKsD,UAAWgI,EAAaY,kBAAmBZ,EAAaa,eAAgBb,EAAamB,cAAeX,EAAgBgK,UAAW,SAE5O,OAAS3D,EAAO,KAAOrG,EAAgBgK,UAAY,KAAO+F,EAAU,UAEpEhR,EAAqBoB,mBAAmBkG,EAAMrG,EAAiB9L,KAAKkb,wBAAyBlb,KAAKsD,UAAWgI,EAAaY,kBAAmBZ,EAAaa,eAAgBb,EAAamB,cAAe0F,EAAM,SAE5M,OAASvG,EAAY,OAASA,EAAY,OAASuG,EAAO,OAC1D,OAASA,EAAO,KAAOrG,EAAgBgK,UAAY,KAAO+F,EAAU,UAEpEhR,EAAqBoB,mBAAmBkG,EAAMrG,EAAiB9L,KAAKkb,wBAAyBlb,KAAKsD,UAAWgI,EAAaY,kBAAmBZ,EAAaa,eAAgBb,EAAamB,cAAe0F,EAAM,SAE5M,OAASvG,EAAY,OAASA,EAAY,OAASuG,EAAO,OAC1D,OAASvG,EAAY,OAASiQ,EAAU,OACxC,OAASjQ,EAAY,QAAUA,EAAY,QAAUkQ,EAAW,QAChE,OAASlQ,EAAY,SAAWA,EAAY,SAE/C,OAAAwP,IApFoCva,EAsFpCnB,GAA+BJ,QAAtB8b,I1B6uGN9W,uDAAuDL,UAAU4I,mDAAmD5I,YAAY8X,iEAAiE,SAASvd,EAAQkB,EAAOJ,GAC5N,GAAIS,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G2B/0GtB,IAAOwK,GAAoBrM,EAAc,mDAGzC,IAAOqC,GAAiBrC,EAAc,uD3Bm1GtC,I2B90GMwd,GAAuB,SAAAhb,GAASjB,EAAhCic,EAAuBhb,EAe5B,SAfKgb,GAeOC,EAAwBC,GAEnClb,EAAAzB,KAAAS,KAbOA,MAAAmc,oBAA8B,KAC9Bnc,MAAAoc,eAAwB,CACxBpc,MAAAqc,eAAwB,CACxBrc,MAAAsc,eAAwB,CACxBtc,MAAAuc,eAAwB,CAU/Bvc,MAAKsD,UAAY2Y,CACjBjc,MAAKwc,mBAAqBN,EAMpBF,EAAAzb,UAAAiL,eAAP,SAAsBF,EAA+BC,GAEpD,GAAItI,GAAesI,EAASpB,sBAC5B,IAAIwC,GAAqBrB,EAAaoB,oBACtCC,GAAK1J,GAAS,EACd0J,GAAK1J,EAAQ,GAAK,CAClB0J,GAAK1J,EAAQ,GAAK,CAClB0J,GAAK1J,EAAQ,GAAK,EAMZ+Y,GAAAzb,UAAA8K,QAAP,SAAeC,EAA+BC,GAE7CvK,EAAAT,UAAM8K,QAAO9L,KAAAS,KAACsL,EAAcC,EAE5BvL,MAAKmc,oBAAsBnc,KAAKsD,WAAatD,KAAKwc,mBAMnDra,QAAAC,eAAW4Z,EAAAzb,UAAA,iB3Bq0GJ8B,I2Br0GP,WAEC,MAAOrC,MAAKoc,gB3Bs0GN9Z,I2Bn0GP,SAAyBC,GAExBvC,KAAKoc,eAAiB7Z,G3Bo0GhBE,WAAY,KACZC,aAAc,M2B/zGrBP,QAAAC,eAAW4Z,EAAAzb,UAAA,iB3Bq0GJ8B,I2Br0GP,WAEC,MAAOrC,MAAKqc,gB3Bs0GN/Z,I2Bn0GP,SAAyBC,GAExBvC,KAAKqc,eAAiB9Z,G3Bo0GhBE,WAAY,KACZC,aAAc,M2B/zGrBP,QAAAC,eAAW4Z,EAAAzb,UAAA,iB3Bq0GJ8B,I2Br0GP,WAEC,MAAOrC,MAAKsc,gB3Bs0GNha,I2Bn0GP,SAAyBC,GAExBvC,KAAKsc,eAAiB/Z,G3Bo0GhBE,WAAY,KACZC,aAAc,M2B/zGrBP,QAAAC,eAAW4Z,EAAAzb,UAAA,iB3Bq0GJ8B,I2Br0GP,WAEC,MAAOrC,MAAKuc,gB3Bs0GNja,I2Bn0GP,SAAyBC,GAExBvC,KAAKuc,eAAiBha,G3Bo0GhBE,WAAY,KACZC,aAAc,M2B/zGrBP,QAAAC,eAAW4Z,EAAAzb,UAAA,sB3Bq0GJ8B,I2Br0GP,WAEC,MAAOrC,MAAKyc,W3Bs0GNna,I2Bn0GP,SAA8BC,GAE7BvC,KAAKyc,UAAYla,G3Bo0GXE,WAAY,KACZC,aAAc,M2B/zGdsZ,GAAAzb,UAAAqO,sBAAP,WAEC5N,EAAAT,UAAMqO,sBAAqBrP,KAAAS,KAC3BA,MAAK0c,wBAA0B,KAMzBV,GAAAzb,UAAA+H,QAAP,WAECtH,EAAAT,UAAM+H,QAAO/I,KAAAS,KACbA,MAAKyc,UAAY,KAMXT,GAAAzb,UAAAgM,UAAP,SAAiBjB,EAA+BC,EAAmBpG,GAElEnE,EAAAT,UAAMgM,UAAShN,KAAAS,KAACsL,EAAcC,EAAUpG,EAExC,IAAIwH,GAAqBrB,EAAaoB,oBACtC,IAAIzJ,GAAesI,EAASpB,sBAE5BwC,GAAK1J,EAAQ,GAAKjD,KAAKoc,cACvBzP,GAAK1J,EAAQ,GAAKjD,KAAKqc,cACvB1P,GAAK1J,EAAQ,GAAKjD,KAAKsc,cACvB3P,GAAK1J,EAAQ,GAAKjD,KAAKuc,cAGvB,IAAIvc,KAAKmc,oBACRhX,EAAMqH,gBAAgBjB,EAAStB,cAAgB,EAAGjK,KAAKyc,UAAWnR,EAAaa,eAAgBb,EAAaY,kBAAmBZ,EAAamB,eAMvIuP,GAAAzb,UAAAoL,iBAAP,SAAwBL,EAA+BC,EAAmBK,EAAiCC,EAAmCC,GAE7I,GAAIqG,GAA6BtG,EAAcoD,2BAC/C,IAAI4M,GAAgChQ,EAAcS,yBAClD,IAAIwP,GAAiCjQ,EAAcS,yBACnDtM,MAAKkb,wBAA0BrP,EAAcG,mBAC7ChM,MAAK0c,wBAA0B1c,KAAKmc,oBAAqBtQ,EAAcG,oBAAoBhM,KAAKkb,uBAChG3P,GAAStB,cAAgBjK,KAAKkb,wBAAwBjY,KAEtDsI,GAASpB,uBAAyB0R,EAAQ5Y,MAAM,CAEhD,OAAO,OAASkP,EAAO,KAAOrG,EAAgBgK,UAAY,KAAOgG,EAAW,UAC3EjR,EAAqBoB,mBAAmBL,EAAWE,EAAiB9L,KAAKkb,wBAAyBlb,KAAKsD,UAAWgI,EAAaY,kBAAmBZ,EAAaa,eAAgBb,EAAamB,cAAe0F,GAC3M,OAASA,EAAO,KAAOrG,EAAgBgK,UAAY,KAAOgG,EAAW,UACrEjR,EAAqBoB,mBAAmBkG,EAAMrG,EAAiB9L,KAAK0c,wBAAyB1c,KAAKyc,UAAWnR,EAAaY,kBAAmBZ,EAAaa,eAAgBb,EAAamB,cAAe0F,GACtM,OAASvG,EAAY,KAAOA,EAAY,KAAOuG,EAAO,OACtD,OAASvG,EAAY,KAAOA,EAAY,KAAOiQ,EAAU,QACzD,OAASjQ,EAAY,SAAWA,EAAY,SAAWE,EAAgBwD,QAAU,UACjF,OAAS1D,EAAY,SAAWA,EAAY,gBAE/C,OAAAoQ,IA3KsCnb,EA6KLnB,GAAAJ,QAAxB0c,I3BozGN1X,uDAAuDL,UAAU4I,mDAAmD5I,YAAY0Y,2DAA2D,SAASne,EAAQkB,EAAOJ,GACtN,GAAIS,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G4Bt/GtB,IAAOuc,GAAcpe,EAAc,yCAOnC,IAAO6S,GAAkB7S,EAAa,kD5Bu/GtC,I4B1+GMsM,GAAiB,SAAA9J,GAASjB,EAA1B+K,EAAiB9J,EAKtB,SALK8J,KAOJ9J,EAAAzB,KAAAS,MAGM8K,EAAAvK,UAAA2N,QAAP,SAAe5C,GAEd,MAAO,MAUDR,GAAAvK,UAAA8K,QAAP,SAAeC,EAA+BC,IAYvCT,GAAAvK,UAAAiL,eAAP,SAAsBF,EAA+BC,IAS9CT,GAAAvK,UAAAsc,kBAAP,WAEC,MAAO,MAMD/R,GAAAvK,UAAA+H,QAAP,YAUOwC,GAAAvK,UAAAyJ,OAAP,WAEChK,KAAK4O,wBAQC9D,GAAAvK,UAAAqO,sBAAP,YAWO9D,GAAAvK,UAAAwR,eAAP,SAAsBzG,EAA+BC,EAAmBM,EAAmCC,GAE1G,MAAO,GAMDhB,GAAAvK,UAAAoL,iBAAP,SAAwBL,EAA+BC,EAAmBK,EAAiCC,EAAmCC,GAE7I,MAAO,MAWDhB,GAAAvK,UAAAgM,UAAP,SAAiBjB,EAA+BC,EAAmBpG,IAe5D2F,GAAAvK,UAAA0P,gBAAP,SAAuB3E,EAA+BC,EAAmB2E,EAA2B/K,EAAagL,IAY1GrF,GAAAvK,UAAAuR,YAAP,SAAmBxG,EAA+BC,EAAmBpG,IAU9D2F,GAAAvK,UAAA4N,yBAAP,WAECnO,KAAK8c,cAAc,GAAIzL,GAAmBA,EAAmBO,qBAMvD9G,GAAAvK,UAAAoC,SAAP,SAAgBG,IAGjB,OAAAgI,IAvJgC8R,EAyJLld,GAAAJ,QAAlBwL,I5By8GNiS,yCAAyC9Y,UAAU+N,kDAAkD/N,YAAY+Y,6DAA6D,SAASxe,EAAQkB,EAAOJ,GACzM,GAAIS,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G6B3nHtB,IAAO4c,GAAKze,EAAiB,+BAI7B,IAAO0e,GAAgB1e,EAAe,+CAMtC,IAAO6S,GAAkB7S,EAAc,kDAQvC,IAAOqL,GAAQrL,EAAiB,2CAChC,IAAO2e,GAAmB3e,EAAc,yD7BqnHxC,I6B5mHM4e,GAAmB,SAAApc,GAASjB,EAA5Bqd,EAAmBpc,EAYxB,SAZKoc,GAYOC,GAZb,GAAAxM,GAAA7Q,IAcEgB,GAAAzB,KAAAS,KAAMqd,EAAiBpV,aAEvBjI,MAAKsd,YAAcD,CACnB,MAAMrd,KAAKud,yBAA0BL,IACpC,KAAM,IAAI/d,OAAM,+DAEjBa,MAAKwd,qBAA6Cxd,KAAKud,eAAeE,YAEtE,KAAKzd,KAAKwd,qBACT,KAAM,IAAIre,OAAM,yGAEjBa,MAAKwd,qBAAqB7L,iBAAiBsL,EAAMS,OAAQ,SAAClM,GAAgB,MAAAX,GAAK8M,gBAAgBnM,IAC/FxR,MAAKsd,YAAY3L,iBAAiBN,EAAmBO,mBAAoB,SAACJ,GAA6B,MAAAX,GAAKY,oBAAoBD,KAUjIrP,OAAAC,eAAWgb,EAAA7c,UAAA,c7BmmHJ8B,I6BnmHP,WAEC,MAAOrC,MAAKsd,a7BomHNhb,I6BjmHP,SAAsBC,GAAtB,GAAAsO,GAAA7Q,IAEC,IAAIA,KAAKsd,aAAe/a,EACvB,MAEDvC,MAAKsd,YAAYzL,oBAAoBR,EAAmBO,mBAAoB,SAACJ,GAA6B,MAAAX,GAAKY,oBAAoBD,IAEnIxR,MAAKsd,YAAc/a,CAEnBvC,MAAKsd,YAAY3L,iBAAiBN,EAAmBO,mBAAoB,SAACJ,GAA6B,MAAAX,GAAKY,oBAAoBD,IAEhIxR,MAAKmO,4B7B+lHC1L,WAAY,KACZC,aAAc,M6B1lHd0a,GAAA7c,UAAA8K,QAAP,SAAeC,EAAmCC,GAEjD,GAAIqS,GAAkB,GAAI/T,GAAS7J,KAAKsd,YACxCtd,MAAKsd,YAAYjS,QAAQC,EAAcsS,EAEvCrS,GAASb,qBAAuB,IAChCa,GAASnB,gBAAkB,KAMrBgT,GAAA7c,UAAAiL,eAAP,SAAsBF,EAA+BC,GAEpD,GAAIsS,GAA6BvS,EAAaoB,oBAC9C,IAAIoR,GAA2BxS,EAAa0I,kBAC5C,IAAI/Q,GAAesI,EAASpB,sBAC5B0T,GAAa5a,GAAS,CACtB4a,GAAa5a,EAAQ,GAAK,EAAE,GAC5B4a,GAAa5a,EAAQ,GAAK,EAAE,KAC5B4a,GAAa5a,EAAQ,GAAK,EAAE,QAE5B4a,GAAa5a,EAAQ,GAAK,EAC1B4a,GAAa5a,EAAQ,IAAM,EAE3BA,GAAQsI,EAASrB,oBACjB4T,GAAW7a,GAAS,EACpB6a,GAAW7a,EAAQ,IAAM,EACzB6a,GAAW7a,EAAQ,GAAK,EAMlBma,GAAA7c,UAAAqO,sBAAP,WAEC5N,EAAAT,UAAMqO,sBAAqBrP,KAAAS,KAC3BA,MAAK+d,oBAAsB,IAC3B/d,MAAKge,uBAAyB,KAMxBZ,GAAA7c,UAAAwR,eAAP,SAAsBzG,EAA+BC,EAAmBM,EAAmCC,GAE1G,GAAI1M,GAAc,EAClB,IAAIyc,GAAgChQ,EAAc+I,uBAElD5U,MAAKie,oBAAoBpS,EACzBN,GAASrB,qBAAuB2R,EAAQ5Y,MAAM,CAE9C,IAAIkP,GAA6BtG,EAAc8I,yBAE/C,KAAK,GAAI1V,GAAW,EAAGA,EAAIe,KAAKwd,qBAAqBU,cAAejf,EAAG,CACtEG,GAAQ,OAAS+S,EAAO,KAAOrG,EAAgBqS,qBAAuB,KAAOne,KAAK+d,oBAAoB9e,GAAK,KAC1G,OAASe,KAAKge,uBAAuB/e,GAAK,KAAOkT,EAAO,KAAO0J,EAAU,UAG3E,MAAOzc,GAMAge,GAAA7c,UAAA0d,oBAAR,SAA4BpS,GAE3B7L,KAAK+d,oBAAsB,GAAIzc,OAA6BtB,KAAKwd,qBAAqBU,YACtFle,MAAKge,uBAAyB,GAAI1c,OAA6BtB,KAAKwd,qBAAqBU,YAEzF,KAAK,GAAIjf,GAAW,EAAGA,EAAIe,KAAKwd,qBAAqBU,cAAejf,EAAG,CACtEe,KAAKge,uBAAuB/e,GAAK4M,EAAcgJ,gBAC/C7U,MAAK+d,oBAAoB9e,GAAK4M,EAAc+I,uBAC5C/I,GAAc+I,uBACd/I,GAAc+I,uBACd/I,GAAc+I,yBAOTwI,GAAA7c,UAAAoL,iBAAP,SAAwBL,EAA+BC,EAAmBK,EAAiCC,EAAmCC,GAE7I,GAAIoS,GAAqBle,KAAKwd,qBAAqBU,WACnD,IAAIE,GAAyCvS,EAAcG,mBAC3D,IAAIoG,GAA+BvG,EAAcS,yBACjD,IAAIuP,GAAgChQ,EAAcS,yBAClD,IAAI+R,GAAyCxS,EAAcS,yBAC3D,IAAIgS,GAA+Bhd,MAAe+c,EAAmB,KAAMA,EAAmB,KAAMA,EAAmB,KAAMA,EAAmB,KAChJ,IAAIjf,EAEJmM,GAASpB,uBAAyBiI,EAAOnP,MAAM,CAC/CsI,GAAStB,cAAgBmU,EAAiBnb,KAE1C,IAAIsb,GAA+B1S,EAAcoD,2BACjDpD,GAAcqD,sBAAsBqP,EAAQ,EAC5C,IAAIC,GAAgC3S,EAAcoD,2BAClDpD,GAAcqD,sBAAsBsP,EAAS,EAG7Cpf,GAAO,OAASof,EAAU,KAAOxe,KAAKge,uBAAuBE,EAAc,GAAK,IAEhF,KAAK,GAAIjf,GAAWif,EAAc,EAAGjf,GAAK,IAAKA,EAAG,CACjD,GAAIwf,GAAqCze,KAAKge,uBAAuB/e,EAGrEG,IAAQ,OAASmf,EAAS,OAASzS,EAAgBqM,mBAAqB,OAASmG,EAAerf,GAAK,IAErG,IAAIkT,GAA6BtG,EAAcoD,2BAG/C7P,IAAQ,OAAS+S,EAAO,KAAOsM,EAAe,KAAOD,EAAU,KAC9D,OAASrM,EAAO,KAAOA,EAAO,KAAOoM,EAAS,OAC9C,OAASC,EAAU,KAAOA,EAAU,KAAOrM,EAAO,KAGpDtG,EAAc4D,wBAAwB8O,EAEtCnf,IAAQ,OAASof,EAAU,KAAOA,EAAU,KAAOA,EAAU,OAC5D,OAASA,EAAU,QAAUA,EAAU,QAAU3C,EAAU,QAC3D,OAAS2C,EAAU,QAAUA,EAAU,QAAU3C,EAAU,OAE5Dzc,IAAQY,KAAKsd,YAAYoB,yBAAyBpT,EAAcC,EAAU6G,EAAQgM,EAAkBI,EAAS5S,EAAWC,EAAeC,GACtI,OAASF,EAAY,OAASA,EAAY,OAASiQ,EAAU,MAE9DhQ,GAAc4D,wBAAwB+O,EAEtC,OAAOpf,GAMDge,GAAA7c,UAAAgM,UAAP,SAAiBjB,EAA+BC,EAAmBpG,GAElEA,EAAMqH,gBAAgBjB,EAAStB,cAA+BjK,KAAKud,eAAeE,aAAakB,SAAUrT,EAAaa,eAAgBb,EAAaY,kBAAmBZ,EAAamB,cAEnL,IAAIqR,GAA2BxS,EAAa0I,kBAC5C,IAAI4K,GAAqBrT,EAASrB,oBAElCoB,GAAa0I,mBAAmBzI,EAASrB,qBAAuB,IAAM,GAAGlK,KAAKwd,qBAAqBqB,MAAM7e,KAAK8e,UAE9G,IAAIZ,GAAqBle,KAAKwd,qBAAqBU,WACnDU,IAAe,CACf,KAAK,GAAIG,GAAW,EAAGA,EAAIb,IAAea,EAAG,CAC5C/e,KAAKwd,qBAAqBwB,oBAAoBD,GAAG7J,cAAc4I,EAAYc,EAAa,KACxFA,IAAe,GAGhB,GAAIf,GAA6BvS,EAAaoB,oBAC9C,IAAIuS,GAAuB1T,EAASpB,sBACpC0T,GAAaoB,EAAgB,GAAK,EAAIjf,KAAKkf,OAE3C,IAAIC,GAAmCnf,KAAKwd,qBAAqB4B,oBAEjEH,IAAiB,CACjB,KAAK,GAAIhgB,GAAW,EAAGA,EAAIif,IAAejf,EACzC4e,EAAaoB,EAAgBhgB,GAAKkgB,EAAmBlgB,EAEtDe,MAAKsd,YAAY+B,oBAAoB/T,EAAcC,EAAUpG,GAMvDiY,GAAA7c,UAAA0P,gBAAP,SAAuB3E,EAA+BC,EAAmB2E,EAA2B/K,EAAagL,IAOzGiN,GAAA7c,UAAAod,gBAAR,SAAwBnM,GAEvBxR,KAAKmO,2BAMEiP,GAAA7c,UAAAkR,oBAAR,SAA4BD,GAE3BxR,KAAKmO,2BAEP,OAAAiP,IAnPkCD,EAqPlCzd,GAA6BJ,QAApB8d,I7B8iHNkC,+BAA+Brb,UAAUsb,+CAA+Ctb,UAAUub,2CAA2Cvb,UAAUwb,yDAAyDxb,UAAU+N,kDAAkD/N,YAAYyb,8DAA8D,SAASlhB,EAAQkB,EAAOJ,GACjX,GAAIS,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G8Bp0HtB,IAAOsf,GAAUnhB,EAAgB,kCACjC,IAAOohB,GAAaphB,EAAe,yCAanC,IAAOqhB,GAAgBrhB,EAAe,sD9B8zHtC,I8BzzHMshB,GAAoB,SAAA9e,GAASjB,EAA7B+f,EAAoB9e,EAczB,SAdK8e,GAcO7X,EAA+B8X,EAA+BC,GAA/B,GAAAD,QAAA,GAA6B,CAA7BA,EAAA,EAA+B,GAAAC,QAAA,GAAgB,CAAhBA,EAAA,EAEzEhf,EAAAzB,KAAAS,KAAMiI,EAENjI,MAAKigB,cAAgBjgB,KAAKud,eAAeE,aAAalK,YAEtDvT,MAAK+f,WAAaA,CAClB/f,MAAKggB,MAAQA,IAEXF,EAAqBI,YAEvB,KAAKJ,EAAqBK,cACzBngB,KAAKogB,mBAOPje,OAAAC,eAAW0d,EAAAvf,UAAA,c9B+yHJ8B,I8B/yHP,WAEC,MAAOrC,MAAKqgB,a9BgzHN/d,I8B7yHP,SAAsBC,GAErBvC,KAAKqgB,YAAc9d,CACnB,IAAIvC,KAAKqgB,YAAc,EACtBrgB,KAAKqgB,YAAc,MAAQ,IAAIrgB,KAAKqgB,YAAc,GAClDrgB,KAAKqgB,YAAc,EACpBrgB,MAAKmO,4B9B+yHC1L,WAAY,KACZC,aAAc,M8B1yHdod,GAAAvf,UAAA8K,QAAP,SAAeC,EAAmCC,GAEjDvK,EAAAT,UAAM8K,QAAO9L,KAAAS,KAACsL,EAAcC,EAE5BA,GAASnB,gBAAkB,KAMrB0V,GAAAvf,UAAAiL,eAAP,SAAsBF,EAA+BC,GAEpDvK,EAAAT,UAAMiL,eAAcjM,KAAAS,KAACsL,EAAcC,EAEnC,IAAIsS,GAA6BvS,EAAaoB,oBAC9C,IAAIzJ,GAAuBsI,EAASpB,sBACpC0T,GAAa5a,EAAQ,GAAK,EAAEjD,KAAKqgB,YAMlCle,QAAAC,eAAW0d,EAAAvf,UAAA,S9B0yHJ8B,I8B1yHP,WAEC,MAAOrC,MAAKsgB,OAAO,G9B2yHbhe,I8BxyHP,SAAiBC,GAEhBvC,KAAKsgB,OAAS/d,EAAM,G9ByyHdE,WAAY,KACZC,aAAc,M8BpyHbod,GAAAvf,UAAA6f,iBAAR,WAECN,EAAqBS,iBAAmB,GAAIZ,GAAW,GAAI,GAAI,MAC/D,IAAIa,GAA6B,GAAIlf,MACrC,IAAI4H,GAAsB,IAC1B,IAAIuX,GAAc,GAAGzgB,KAAKigB,cAAcjgB,KAAKsgB,OAC7C,IAAI1hB,GAAU8hB,CAEd,KAAK,GAAIzhB,GAAoB,EAAGA,EAAIiK,IAAOjK,EAAG,CAC7CL,EAAI,GAAGuK,KAAKwX,SAAW,GACvBD,GAAI,GAAGvX,KAAKwX,SAAW,GACvB,IAAI/hB,EAAI,EACPA,GAAK6hB,MACL7hB,IAAK6hB,CACN,IAAIC,EAAI,EACPA,GAAKD,MACLC,IAAKD,CACN,IAAI7hB,EAAI,EACPA,EAAI,MAAQ,IAAIA,GAAK,EACrBA,GAAK,CACN,IAAI8hB,EAAI,EACPA,EAAI,MAAQ,IAAIA,GAAK,EACrBA,GAAK,CACNF,GAAIvhB,GAAMkK,KAAKyX,OAAOhiB,EAAE,GAAK,IAAI,MAAS,GAAOuK,KAAKyX,OAAOF,EAAE,GAAK,IAAI,MAAS,EAGlFZ,EAAqBS,iBAAiBM,SAASf,EAAqBS,iBAAiBO,KAAMN,EAC3FV,GAAqBK,cAAgB,GAAIP,GAAcE,EAAqBS,kBAMtET,GAAAvf,UAAA+H,QAAP,WAEC,KAAMwX,EAAqBI,cAAgB,EAAG,CAC7CJ,EAAqBK,cAAc7X,SACnCwX,GAAqBS,iBAAiBjY,SACtCwX,GAAqBK,cAAgB,MAOhCL,GAAAvf,UAAAgM,UAAP,SAAiBjB,EAA+BC,EAAmBpG,GAElEnE,EAAAT,UAAMgM,UAAShN,KAAAS,KAACsL,EAAcC,EAAUpG,EAExC,IAAIwH,GAAqBrB,EAAaoB,oBACtC,IAAIzJ,GAAwBsI,EAASpB,sBACrCwC,GAAK1J,EAAQ,IAAMkC,EAAMwW,MAAQ,GAAG,EACpChP,GAAK1J,EAAQ,KAAOkC,EAAMyW,OAAS,GAAG,EACtCjP,GAAK1J,EAAQ,IAAM,EAAEjD,KAAKsgB,OAAOtgB,KAAKigB,aAEtC9a,GAAMqH,gBAAgBjB,EAAStB,cAAgB,EAAG6V,EAAqBK,cAAe7U,EAAaa,eAAgBb,EAAaY,kBAAmBZ,EAAamB,eAM1JqT,GAAAvf,UAAAwgB,wBAAP,SAA+BxV,EAAmBK,EAAiCuB,EAA8BrB,GAEhH,GAAIsS,GAAyCjR,EAASnB,mBACtD,IAAIoG,GAA+BjF,EAASb,yBAC5C,IAAIuP,GAAgC1O,EAASb,yBAC7C,IAAI0U,GAAsC7T,EAASb,yBAEnDf,GAASpB,uBAAyBiI,EAAOnP,MAAM,CAC/CsI,GAAStB,cAAgBmU,EAAiBnb,KAE1C,OAAOjD,MAAKihB,cAAcD,EAAe5C,EAAkBhM,EAAQxG,EAAWuB,EAAUrB,GAUjFgU,GAAAvf,UAAA0gB,cAAR,SAAsBD,EAAqC5C,EAAwChM,EAA8BxG,EAAiCuB,EAA8BrB,GAE/L,GAAI1M,GAAc,EAClB,IAAI8hB,GAAsC/T,EAASnB,mBACnD,IAAI6J,GAA8B1I,EAAS8B,2BAC3C,IAAI8Q,GAA4B/f,KAAKqgB,WACrClT,GAAS+B,sBAAsB2G,EAAO,EAEtC,IAAI1D,GAA6BhF,EAAS8B,2BAE1C,IAAIkS,GAAsCrV,EAAgBqM,kBAE1D/Y,IAAQ,OAASyW,EAAQ,KAAOsL,EAAgB,KAAOA,EAAgB,OAAS,OAAStL,EAAQ,QAAUA,EAAQ,QAAUmL,EAAgB,OAE7I,OAAOjB,EAAa,EAAG,CACtB,GAAIA,GAAc/f,KAAKqgB,YACtBjhB,GAAQ,OAASyW,EAAQ,KAAOA,EAAQ,KAAOqL,EAAgB,qCAE/D9hB,IAAQ,OAASyW,EAAQ,KAAOA,EAAQ,UAAYqL,EAAgB,gCAGrE9hB,IAAQ,OAASyW,EAAQ,QAAUA,EAAQ,gBAC1C,OAASA,EAAQ,QAAUA,EAAQ,QAAUmL,EAAgB,MAE9D,IAAIjB,GAAc/f,KAAKqgB,YAAa,CAEnCjhB,GAAQ,OAASyW,EAAQ,QAAUA,EAAQ,QAAU7V,KAAKohB,mBAAqB,QAC9E,OAASjP,EAAO,KAAO0D,EAAQ,KAAOuI,EAAmB,gCACzD,OAASjM,EAAO,OAASA,EAAO,KAAOC,EAAS,KAChD,OAASxG,EAAY,OAAS5L,KAAKohB,mBAAqB,OAASjP,EAAO,WACnE,CACN/S,GAAQY,KAAKqhB,UAAUxL,EAAOuI,EAAkBhM,EAAQxG,EAAWuB,GAGpE,GAAI4S,EAAa,EAChB3gB,GAAQ,OAASyW,EAAQ,QAAUA,EAAQ,QAAUA,EAAQ,QAAU7V,KAAKqhB,UAAUxL,EAAOuI,EAAkBhM,EAAQxG,EAAWuB,EAEnI,IAAI4S,EAAa,EAChB3gB,GAAQ,OAASyW,EAAQ,QAAU7V,KAAKohB,mBAAqB,QAAUvL,EAAQ,QAAU7V,KAAKqhB,UAAUxL,EAAOuI,EAAkBhM,EAAQxG,EAAWuB,EAErJ,IAAI4S,EAAa,EAChB3gB,GAAQ,OAASyW,EAAQ,QAAUA,EAAQ,QAAUA,EAAQ,QAAU7V,KAAKqhB,UAAUxL,EAAOuI,EAAkBhM,EAAQxG,EAAWuB,EAEnI,IAAI4S,EAAa,EAAG,CACnB3gB,GAAQ,OAASyW,EAAQ,OAASA,EAAQ,MAC1CzW,IAAQ,OAASyW,EAAQ,QAAUA,EAAQ,QAAU7V,KAAKohB,mBAAqB,QAAUphB,KAAKqhB,UAAUxL,EAAOuI,EAAkBhM,EAAQxG,EAAWuB,GAGrJ,GAAI4S,EAAa,EAChB3gB,GAAQ,OAASyW,EAAQ,QAAUA,EAAQ,QAAUA,EAAQ,QAAU7V,KAAKqhB,UAAUxL,EAAOuI,EAAkBhM,EAAQxG,EAAWuB,EAEnI,IAAI4S,EAAa,EAChB3gB,GAAQ,OAASyW,EAAQ,QAAU7V,KAAKohB,mBAAqB,QAAUvL,EAAQ,QAAU7V,KAAKqhB,UAAUxL,EAAOuI,EAAkBhM,EAAQxG,EAAWuB,EAErJ,IAAI4S,EAAa,EAChB3gB,GAAQ,OAASyW,EAAQ,QAAUA,EAAQ,QAAUA,EAAQ,QAAU7V,KAAKqhB,UAAUxL,EAAOuI,EAAkBhM,EAAQxG,EAAWuB,EAEnI4S,IAAc,EAGf5S,EAASsC,wBAAwBoG,EACjCzW,IAAQ,OAASwM,EAAY,OAASA,EAAY,OAASoV,EAAgB,MAC3E,OAAO5hB,GAYA0gB,GAAAvf,UAAA8gB,UAAR,SAAkBxL,EAA6BuI,EAAwChM,EAA8BxG,EAAiCuB,GAErJ,GAAIgF,GAA6BhF,EAAS8B,2BAE1C,OAAO,OAASkD,EAAO,KAAO0D,EAAQ,KAAOuI,EAAmB,gCAC/D,OAASjM,EAAO,OAASA,EAAO,KAAOC,EAAS,KAChD,OAASD,EAAO,OAASnS,KAAKohB,mBAAqB,OAASjP,EAAO,OACnE,OAASvG,EAAY,OAASA,EAAY,OAASuG,EAAO,OAMrD2N,GAAAvf,UAAA8e,oBAAP,SAA2B/T,EAA+BC,EAAmBpG,GAE5E,GAAIwH,GAAqBrB,EAAaoB,oBACtC,IAAIzJ,GAAwBsI,EAAS0F,+BACrCtE,GAAK1J,GAAS,EAAEjD,KAAKqgB,WACrB1T,GAAK1J,EAAQ,IAAMkC,EAAMwW,MAAQ,GAAG,EACpChP,GAAK1J,EAAQ,IAAMkC,EAAMyW,OAAS,GAAG,EACrCjP,GAAK1J,EAAQ,GAAK,EAAEjD,KAAKsgB,OAAOtgB,KAAKigB,aAErC9a,GAAMqH,gBAAgBjB,EAAStB,cAAgB,EAAG6V,EAAqBK,cAAe7U,EAAaa,eAAgBb,EAAaY,kBAAmBZ,EAAamB,eAM1JqT,GAAAvf,UAAAme,yBAAP,SAAgCpT,EAA+BC,EAAmB+V,EAAsCC,EAAoCC,EAAuCC,EAAsC5V,EAAmCC,GAE3Q9L,KAAKohB,mBAAqBI,CAE1B,IAAI3F,GAAgChQ,EAAcS,yBAClDf,GAAS0F,gCAAkC4K,EAAQ5Y,MAAM,CAEzD,OAAOjD,MAAKihB,cAAcpF,EAAS0F,EAAcD,EAAgBG,EAAgB5V,EAAeC,GAElG,OAAAgU,IArRmCD,EAuRLngB,GAAAJ,QAArBwgB,I9BkwHN4B,kCAAkCzd,UAAU0d,yCAAyC1d,UAAU2d,sDAAsD3d,YAAY4d,8DAA8D,SAASrjB,EAAQkB,EAAOJ,GAC1P,GAAIS,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G+BtiItB,IAAOwf,GAAgBrhB,EAAe,sD/B6iItC,I+BviIMsjB,GAAoB,SAAA9gB,GAASjB,EAA7B+hB,EAAoB9gB,EAOzB,SAPK8gB,GAOO7Z,GAEXjH,EAAAzB,KAAAS,KAAMiI,GAMA6Z,EAAAvhB,UAAAiL,eAAP,SAAsBF,EAAmCC,GAExDvK,EAAAT,UAAMiL,eAAcjM,KAAAS,KAACsL,EAAcC,EAEnC,IAAIsS,GAA6BvS,EAAaoB,oBAC9C,IAAIzJ,GAAuBsI,EAASpB,sBACpC0T,GAAa5a,EAAQ,GAAK,EAC1B,IAAI8e,GAAsB/hB,KAAKiI,aAAawV,aAAalK,YACzDsK,GAAa5a,EAAQ,GAAK8e,CAC1BlE,GAAa5a,EAAQ,IAAM,EAAE8e,EAMvBD,GAAAvhB,UAAAwgB,wBAAP,SAA+BxV,EAAmBK,EAAiCuB,EAA8BrB,GAEhH,GAAIsS,GAAyCjR,EAASnB,mBACtD,IAAIoG,GAA+BjF,EAASb,yBAC5C,IAAIuP,GAAgC1O,EAASb,yBAE7CuP,GAAUA,CACV,IAAImF,GAAsC7T,EAASb,yBACnD,IAAI0V,GAAiC7U,EAAS8B,2BAC9C,IAAI4G,EACJ,IAAIzW,GAAc,EAClBmM,GAASpB,uBAAyBiI,EAAOnP,MAAM,CAE/CkK,GAAS+B,sBAAsB8S,EAAU,EAEzCnM,GAAQ1I,EAAS8B,2BACjB9B,GAAS+B,sBAAsB2G,EAAO,EAEtCzW,IAAQ,OAASyW,EAAQ,KAAO7V,KAAKohB,mBAAqB,KAEzD,OAASY,EAAW,KAAOhiB,KAAKohB,mBAAqB,KAAOhD,EAAmB,0BAA4B,OAAS4D,EAAW,OAASA,EAAW,KAAO5P,EAAS,KAAO,OAASyD,EAAQ,OAAS7V,KAAKohB,mBAAqB,OAASY,EAAW,OAElP,OAASnM,EAAQ,OAAS7V,KAAKohB,mBAAqB,OAASJ,EAAgB,OAC7E,OAASgB,EAAW,KAAOnM,EAAQ,KAAOuI,EAAmB,0BAA4B,OAAS4D,EAAW,OAASA,EAAW,KAAO5P,EAAS,KAAO,OAASyD,EAAQ,OAAS7V,KAAKohB,mBAAqB,OAASY,EAAW,OAEhO,OAASA,EAAW,OAAShiB,KAAKohB,mBAAqB,OAASJ,EAAgB,OAAS,OAASgB,EAAW,OAASA,EAAW,OAAS,OAASnM,EAAQ,OAASA,EAAQ,OAASA,EAAQ,OAAS,OAASA,EAAQ,OAASA,EAAQ,OAASmM,EAAW,OAAS,OAASpW,EAAY,OAASiK,EAAQ,OAASA,EAAQ,OAE5T,OAASA,EAAQ,OAAS7V,KAAKohB,mBAAqB,OAAS,OAASvL,EAAQ,OAAS7V,KAAKohB,mBAAqB,OAASJ,EAAgB,OAC1I,OAASgB,EAAW,KAAOnM,EAAQ,KAAOuI,EAAmB,0BAA4B,OAAS4D,EAAW,OAASA,EAAW,KAAO5P,EAAS,KAAO,OAASyD,EAAQ,OAAS7V,KAAKohB,mBAAqB,OAASY,EAAW,OAEhO,OAASnM,EAAQ,OAAS7V,KAAKohB,mBAAqB,OAASJ,EAAgB,OAC7E,OAASgB,EAAW,KAAOnM,EAAQ,KAAOuI,EAAmB,0BAA4B,OAAS4D,EAAW,OAASA,EAAW,KAAO5P,EAAS,KAAO,OAASyD,EAAQ,OAAS7V,KAAKohB,mBAAqB,OAASY,EAAW,OAGhO,OAASA,EAAW,OAAShiB,KAAKohB,mBAAqB,OAASJ,EAAgB,OAAS,OAASgB,EAAW,OAASA,EAAW,OAAS,OAASnM,EAAQ,OAASA,EAAQ,OAASA,EAAQ,OAAS,OAASA,EAAQ,OAASA,EAAQ,OAASmM,EAAW,OAAS,OAASnM,EAAQ,OAASA,EAAQ,OAASA,EAAQ,OAExT,OAASmM,EAAW,OAAShiB,KAAKohB,mBAAqB,OAASJ,EAAgB,OAAS,OAASgB,EAAW,OAASA,EAAW,OAAS,OAASnM,EAAQ,OAASA,EAAQ,OAASjK,EAAY,OAAS,OAASiK,EAAQ,OAASA,EAAQ,OAASmM,EAAW,OAAS,OAASpW,EAAY,OAASA,EAAY,OAASiK,EAAQ,MAErU1I,GAASsC,wBAAwBuS,EACjC7U,GAASsC,wBAAwBoG,EAEjCtK,GAAStB,cAAgBmU,EAAiBnb,KAE1C,OAAO7D,GAMD0iB,GAAAvhB,UAAA8e,oBAAP,SAA2B/T,EAA+BC,EAAmBpG,GAE5E,GAAI4c,GAAsB/hB,KAAKiI,aAAawV,aAAalK,YACzD,IAAItQ,GAAuBsI,EAAS0F,+BACpC,IAAItE,GAAqBrB,EAAaoB,oBACtCC,GAAK1J,GAAS8e,CACdpV,GAAK1J,EAAQ,GAAK,EAAE8e,EAMdD,GAAAvhB,UAAAme,yBAAP,SAAgCpT,EAA+BC,EAAmB+V,EAAsCC,EAAoCC,EAAuCC,EAAsC5V,EAAmCC,GAE3Q,GAAI1M,EACJ,IAAIyc,GAAgChQ,EAAcS,yBAClDf,GAAS0F,gCAAkC4K,EAAQ5Y,MAAM,CACzD,IAAIkP,GAA6BtG,EAAcoD,2BAC/CpD,GAAcqD,sBAAsBiD,EAAM,EAC1C,IAAI8P,GAAkCpW,EAAcoD,2BACpDpD,GAAcqD,sBAAsB+S,EAAW,EAE/C7iB,GAAO,OAAS+S,EAAO,KAAOqP,EAAkB,KAAOD,EAAe,0BAA4B,OAASpP,EAAO,OAASA,EAAO,KAAOmP,EAAiB,KAAO,OAASW,EAAY,OAAST,EAAkB,OAASrP,EAAO,OAEhO,OAASqP,EAAkB,OAASA,EAAkB,OAAS3F,EAAU,OAAS,OAAS1J,EAAO,KAAOqP,EAAkB,KAAOD,EAAe,0BAA4B,OAASpP,EAAO,OAASA,EAAO,KAAOmP,EAAiB,KAAO,OAASW,EAAY,OAAST,EAAkB,OAASrP,EAAO,OAE5S,OAASqP,EAAkB,OAASA,EAAkB,OAAS3F,EAAU,OAAS,OAAS1J,EAAO,KAAOqP,EAAkB,KAAOD,EAAe,0BAA4B,OAASpP,EAAO,OAASA,EAAO,KAAOmP,EAAiB,KAAO,OAASW,EAAY,OAAST,EAAkB,OAASrP,EAAO,OAE5S,OAASqP,EAAkB,OAASA,EAAkB,OAAS3F,EAAU,OAAS,OAAS1J,EAAO,KAAOqP,EAAkB,KAAOD,EAAe,0BAA4B,OAASpP,EAAO,OAASA,EAAO,KAAOmP,EAAiB,KAAO,OAASW,EAAY,OAAST,EAAkB,OAASrP,EAAO,OAE5S,OAASA,EAAO,QAAUqP,EAAkB,QAAU3F,EAAU,OAAS,OAAS1J,EAAO,QAAUA,EAAO,QAG1G,OAASqP,EAAkB,KAAOS,EAAY,UAAYA,EAAY,UAAY,OAAST,EAAkB,KAAOA,EAAkB,KAAOrP,EAAO,OAEpJ,OAAS8P,EAAY,QAAUA,EAAY,QAAUT,EAAkB,QAEvE,OAASS,EAAY,OAASA,EAAY,OAASA,EAAY,OAAS,OAASA,EAAY,OAASA,EAAY,OAAS9P,EAAO,OAAS,OAASsP,EAAiB,OAASQ,EAAY,OAASA,EAAY,MAEhNpW,GAAc4D,wBAAwB0C,EACtCtG,GAAc4D,wBAAwBwS,EACtC,OAAO7iB,GAET,OAAA0iB,IA1HmCjC,EA4HLngB,GAAAJ,QAArBwiB,I/Bu/HNF,sDAAsD3d,YAAYie,0DAA0D,SAAS1jB,EAAQkB,EAAOJ,GACvJ,GAAIS,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GgC/nItB,IAAOwf,GAAgBrhB,EAAc,sDhCqoIrC,IgChoIM2jB,GAAgB,SAAAnhB,GAASjB,EAAzBoiB,EAAgBnhB,EAKrB,SALKmhB,GAKOla,GAEXjH,EAAAzB,KAAAS,KAAMiI,GAMAka,EAAA5hB,UAAAwgB,wBAAP,SAA+BxV,EAAmBK,EAAiCuB,EAA8BrB,GAEhH,GAAIsS,GAAyCjR,EAASnB,mBACtD,IAAIoG,GAA+BjF,EAASb,yBhC+nItC,IgC5nIFuP,GAAgC1O,EAASb,yBAE7C,IAAI0V,GAAiC7U,EAAS8B,2BAC9C,IAAI7P,GAAc,EAElBmM,GAASpB,uBAAyBiI,EAAOnP,MAAM,CAC/CsI,GAAStB,cAAgBmU,EAAiBnb,KAE1C7D,IAAQ,OAAS4iB,EAAW,KAAOhiB,KAAKohB,mBAAqB,KAAOhD,EAAmB,0BACtF,OAAS4D,EAAW,OAASA,EAAW,KAAO5P,EAAS,KACxD,OAASxG,EAAY,OAAS5L,KAAKohB,mBAAqB,OAASY,EAAW,MAE7E,OAAO5iB,GAMD+iB,GAAA5hB,UAAA6hB,uBAAP,SAA8B7W,EAAmBK,EAAiCuB,EAA8BrB,GAE/G,GAAIsS,GAAyCjR,EAASnB,mBACtD,IAAIoG,GAA+BjF,EAASb,yBAC5C,IAAI+V,GAA+BlV,EAASb,yBAC5C,IAAIgW,GAA+BnV,EAASb,yBAC5C,IAAIiW,GAAuCpV,EAAS8B,2BACpD9B,GAAS+B,sBAAsBqT,EAAgB,EAC/C,IAAIC,GAAiCrV,EAAS8B,2BAC9C,IAAI7P,GAAc,EAElBmM,GAASpB,uBAAyBiI,EAAOnP,MAAM,CAC/CsI,GAAStB,cAAgBmU,EAAiBnb,KAE1C7D,IAAQ,OAASojB,EAAW,KAAO1W,EAAgB2W,sBAAwB,KAAOH,EAAS,KAC1F,OAASE,EAAW,OAASA,EAAW,SAAWA,EAAW,SAC9D,OAASA,EAAW,OAASA,EAAW,OAASF,EAAS,OAC1D,OAASE,EAAW,SAAWA,EAAW,SAE1C,OAASD,EAAiB,KAAOC,EAAW,KAAOpE,EAAmB,4BACtE,OAASmE,EAAiB,OAASA,EAAiB,KAAOnQ,EAAS,KACpE,OAASxG,EAAY,OAAS4W,EAAW,OAASH,EAAS,OAE3D,OAASzW,EAAY,OAASA,EAAY,OAAS2W,EAAiB,MAErEpV,GAASsC,wBAAwB8S,EAEjC,OAAOnjB,GAMD+iB,GAAA5hB,UAAAme,yBAAP,SAAgCpT,EAA+BC,EAAmB+V,EAAsCC,EAAoCC,EAAuCC,EAAsC5V,EAAmCC,GAE3Q,GAAIqG,GAA6BtG,EAAcoD,2BAC/C,OAAO,OAASkD,EAAO,KAAOqP,EAAkB,KAAOD,EAAe,0BACrE,OAASpP,EAAO,OAASA,EAAO,KAAOmP,EAAiB,KACxD,OAASG,EAAiB,OAASD,EAAkB,OAASrP,EAAO,OAMhEgQ,GAAA5hB,UAAA8e,oBAAP,SAA2B/T,EAA+BC,EAAmBpG,IAG9E,OAAAgd,IApF+BtC,EAsFLngB,GAAAJ,QAAjB6iB,IhComINP,sDAAsD3d,YAAYye,6DAA6D,SAASlkB,EAAQkB,EAAOJ,GAC1J,GAAIS,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GiC9sItB,IAAOyY,GAASta,EAAe,oCAM/B,IAAOsM,GAAiBtM,EAAa,uDjC+sIrC,IiC1sIM2e,GAAmB,SAAAnc,GAASjB,EAA5Bod,EAAmBnc,EAYxB,SAZKmc,GAYOlV,GAEXjH,EAAAzB,KAAAS,KATMA,MAAA8e,UAAmB,GACnB9e,MAAAkf,QAAiB,CASvBlf,MAAKud,eAAiBtV,CACtBA,GAAa0a,aAAe,IAC5B3iB,MAAK4iB,eAAiB3a,EAAawV,aAOpCtb,OAAAC,eAAW+a,EAAA5c,UAAA,ajCosIJ8B,IiCpsIP,WAEC,MAAOyW,GAAU+J,mBjCqsIXpgB,WAAY,KACZC,aAAc,MiChsIrBP,QAAAC,eAAW+a,EAAA5c,UAAA,SjCssIJ8B,IiCtsIP,WAEC,MAAOrC,MAAKkf,SjCusIN5c,IiCpsIP,SAAiBC,GAEhBvC,KAAKkf,QAAU3c,GjCqsITE,WAAY,KACZC,aAAc,MiChsIrBP,QAAAC,eAAW+a,EAAA5c,UAAA,gBjCssIJ8B,IiCtsIP,WAEC,MAAOrC,MAAKud,gBjCusIN9a,WAAY,KACZC,aAAc,MiCjsIrBP,QAAAC,eAAW+a,EAAA5c,UAAA,WjCwsIJ8B,IiCxsIP,WAEC,MAAOrC,MAAK8e,WjCysINxc,IiCtsIP,SAAmBC,GAElBvC,KAAK8e,UAAYvc,GjCusIXE,WAAY,KACZC,aAAc,MiCtsItB,OAAAya,IA/DkCrS,EAiElCpL,GAA6BJ,QAApB6d,IjC2sINjE,oCAAoCjV,UAAU2I,uDAAuD3I,YAAY6e,0DAA0D,SAAStkB,EAAQkB,EAAOJ,GACtM,GAAIS,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GkC3xItB,IAAO0Y,GAAmBva,EAAa,6CAOvC,IAAOukB,GAAUvkB,EAAe,yCAahC,IAAO2e,GAAmB3e,EAAa,yDlC+wIvC,IkC1wIMqhB,GAAgB,SAAA7e,GAASjB,EAAzB8f,EAAgB7e,EASrB,SATK6e,GASO5X,GAEXjI,KAAKgjB,WAAc/a,YAAwB8a,EAE3C/hB,GAAAzB,KAAAS,KAAMiI,GAMA4X,EAAAtf,UAAA8K,QAAP,SAAeC,EAAmCC,GAEjDA,EAASlB,UAAY,IACrBkB,GAASb,qBAAuB,IAChCa,GAASZ,uBAAyB3K,KAAKgjB,UACvCzX,GAASjB,aAAegB,EAAalF,UAAY,EAM3CyZ,GAAAtf,UAAAiL,eAAP,SAAsBF,EAA+BC,GAEpD,GAAIsS,GAA6BvS,EAAaoB,oBAC9C,IAAIoR,GAA2BxS,EAAa0I,kBAC5C,IAAI/Q,GAAuBsI,EAASpB,sBACpC0T,GAAa5a,GAAS,CACtB4a,GAAa5a,EAAQ,GAAK,EAAE,GAC5B4a,GAAa5a,EAAQ,GAAK,EAAE,KAC5B4a,GAAa5a,EAAQ,GAAK,EAAE,QAE5B4a,GAAa5a,EAAQ,GAAK,CAC1B4a,GAAa5a,EAAQ,GAAK,CAE1B,IAAIjD,KAAKgjB,WAAY,CACpBnF,EAAa5a,EAAQ,GAAK,CAC1B4a,GAAa5a,EAAQ,GAAK,CAC1B4a,GAAa5a,EAAQ,IAAM,CAC3B4a,GAAa5a,EAAQ,IAAM,EAG5BA,EAAQsI,EAASrB,oBACjB,IAAIjH,IAAU,EAAG,CAChB6a,EAAW7a,GAAS,EACpB6a,GAAW7a,EAAQ,GAAK,EACxB6a,GAAW7a,EAAQ,GAAK,CACxB6a,GAAW7a,EAAQ,GAAK,GAO1Bd,QAAAC,eAAWyd,EAAAtf,UAAA,sBlC8vIJ8B,IkC9vIP,WAEC,MAAOrC,MAAKohB,oBlC+vIN9e,IkC5vIP,SAA8BC,GAE7BvC,KAAKohB,mBAAqB7e,GlC6vIpBE,WAAY,KACZC,aAAc,MkCxvIdmd,GAAAtf,UAAAqO,sBAAP,WAEC5N,EAAAT,UAAMqO,sBAAqBrP,KAAAS,KAE3BA,MAAKohB,mBAAqB,KAMpBvB,GAAAtf,UAAAwR,eAAP,SAAsBzG,EAA+BC,EAAmB4B,EAA8BrB,GAErG,MAAO9L,MAAKgjB,WAAYhjB,KAAKijB,qBAAqB1X,EAAU4B,EAAUrB,GAAiB9L,KAAKkjB,qBAAqB3X,EAAU4B,EAAUrB,GAS/H+T,GAAAtf,UAAA0iB,qBAAP,SAA4B1X,EAAmB4B,EAA8BrB,GAE5EP,EAASrB,sBAAwB,CACjC,OAAO,GASD2V,GAAAtf,UAAA2iB,qBAAP,SAA4B3X,EAAmB4B,EAA8BrB,GAE5E,GAAI1M,GAAc,EAClB,IAAI+S,GAA6BhF,EAASwH,yBAC1C,IAAIkH,GAAgC1O,EAASyH,uBAC7C,IAAIuO,GAAqChW,EAASyH,uBAClDzH,GAASyH,uBACTzH,GAASyH,uBACTzH,GAASyH,uBACT5U,MAAKohB,mBAAqBjU,EAAS0H,gBACnCtJ,GAASrB,qBAAuB2R,EAAQ5Y,MAAM,CAI9C7D,IAAQ,OAAS+S,EAAO,KAAOrG,EAAgBqS,qBAAuB,KAAOgF,EAAe,KAAO,OAAShR,EAAO,KAAOA,EAAO,KAAOA,EAAO,OAAS,OAASA,EAAO,QAAUA,EAAO,QAAU0J,EAAU,QAAU,OAAS7b,KAAKohB,mBAAqB,KAAOjP,EAAO,KAAO0J,EAAU,SAGzR,OAAOzc,GAMDygB,GAAAtf,UAAAoL,iBAAP,SAAwBL,EAA+BC,EAAmBK,EAAiCC,EAAmCC,GAE7I,GAAI1M,GAAcY,KAAKgjB,WAAYhjB,KAAKoiB,uBAAuB7W,EAAUK,EAAWC,EAAeC,GAAiB9L,KAAK+gB,wBAAwBxV,EAAUK,EAAWC,EAAeC,EACrL1M,IAAQ,OAASwM,EAAY,OAASA,EAAY,UAAYL,EAASpB,uBAAuB,EAAI,GAAK,OAAS,OAASyB,EAAY,OAASA,EAAY,MAC1J,OAAOxM,GAUDygB,GAAAtf,UAAAwgB,wBAAP,SAA+BxV,EAAmBK,EAAiCuB,EAA8BrB,GAEhH,KAAM,IAAIiN,EACV,OAAO,GAUD8G,GAAAtf,UAAA6hB,uBAAP,SAA8B7W,EAAmBK,EAAiCuB,EAA8BrB,GAE/G,KAAM,IAAIiN,EACV,OAAO,GAMD8G,GAAAtf,UAAA0P,gBAAP,SAAuB3E,EAA+BC,EAAmB2E,EAA2B/K,EAAagL,GAEhH,IAAKnQ,KAAKgjB,WACkBhjB,KAAK4iB,eAAgBQ,iBAAiBlO,cAAc5J,EAAa0I,mBAAoBzI,EAASrB,qBAAuB,EAAG,MAa9I2V,GAAAtf,UAAAme,yBAAP,SAAgCpT,EAA+BC,EAAmB+V,EAAsCC,EAAoCC,EAAuCC,EAAsC5V,EAAmCC,GAE3Q,KAAM,IAAI3M,OAAM,2DAMV0gB,GAAAtf,UAAAgM,UAAP,SAAiBjB,EAA+BC,EAAmBpG,GAElE,GAAI0Y,GAA6BvS,EAAaoB,oBAC9C,IAAIzJ,GAAuBsI,EAASpB,sBAEpC,IAAInK,KAAKgjB,WACRnF,EAAa5a,EAAQ,IAAMkG,KAAKka,IAAI,GAAiBrjB,KAAKud,eAAgB+F,QAAQtjB,KAAK8e,WAAY,OAEnGxT,GAAa0I,mBAAmBzI,EAASrB,qBAAuB,IAAM,GAA8BlK,KAAK4iB,eAAgB/D,MAAM7e,KAAK8e,UAErIjB,GAAa5a,EAAQ,GAAK,EAAIjD,KAAKkf,OAEnC,IAAIlf,KAAKgjB,WAAY,CACpB,GAAIO,GAAevjB,KAAKud,eAAeiG,aACvC3F,GAAa5a,EAAQ,GAAKsgB,EAAIE,CAC9B5F,GAAa5a,EAAQ,GAAKsgB,EAAIG,CAC9B7F,GAAa5a,EAAQ,IAAMsgB,EAAII,ClCquItB,IkCnuILzkB,GAAyBc,KAAKud,eAAgB+F,OAClDzF,GAAa5a,EAAQ,IAAM,GAAG,EAAE/D,EAAEA,GAGnC,IAAKc,KAAKgjB,WACT7d,EAAMye,sBAAsBrY,EAAStB,cAA+BjK,KAAKud,eAAeE,aAAakB,UAQhGkB,GAAAtf,UAAA8e,oBAAP,SAA2B/T,EAA+BC,EAAmBpG,GAE5E,KAAM,IAAIhG,OAAM,2DAElB,OAAA0gB,IAlO+B1C,EAoOLzd,GAAAJ,QAAjBugB,IlCmuIN5G,6CAA6ChV,UAAU4f,yCAAyC5f,UAAUwb,yDAAyDxb,YAAY6f,0DAA0D,SAAStlB,EAAQkB,EAAOJ,GACpQ,GAAIS,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD;QAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GmCh+ItB,IAAOgR,GAAkB7S,EAAc,kDAQvC,IAAOqhB,GAAgBrhB,EAAe,sDnCm+ItC,ImC19IMulB,GAAgB,SAAA/iB,GAASjB,EAAzBgkB,EAAgB/iB,EAcrB,SAdK+iB,GAcOnT,EAA6BoT,GAd1C,GAAAnT,GAAA7Q,IAc0C,IAAAgkB,QAAA,GAAqB,CAArBA,EAAA,GAExChjB,EAAAzB,KAAAS,KAAM4Q,EAAW3I,aAEjBjI,MAAKuR,6BAA+B,SAACC,GAA6B,MAAAX,GAAKY,oBAAoBD,GAE3FxR,MAAKsd,YAAc1M,CACnB5Q,MAAKikB,WAAaD,CAClBhkB,MAAKkkB,kBAAkDlkB,KAAKud,eAAeE,YAC3E,KAAKzd,KAAKkkB,kBACT,KAAM,IAAI/kB,OAAM,8GACjBa,MAAKsd,YAAY3L,iBAAiBN,EAAmBO,mBAAoB5R,KAAKuR,8BAM/EpP,OAAAC,eAAW2hB,EAAAxjB,UAAA,cnCk9IJ8B,ImCl9IP,WAEC,MAAOrC,MAAKsd,anCm9INhb,ImCh9IP,SAAsBC,GAErB,GAAIvC,KAAKsd,aAAe/a,EACvB,MAEDvC,MAAKsd,YAAYzL,oBAAoBR,EAAmBO,mBAAoB5R,KAAKuR,6BAEjFvR,MAAKsd,YAAc/a,CAEnBvC,MAAKsd,YAAY3L,iBAAiBN,EAAmBO,mBAAoB5R,KAAKuR,6BAE9EvR,MAAKmO,4BnC68IC1L,WAAY,KACZC,aAAc,MmCx8IdqhB,GAAAxjB,UAAAiL,eAAP,SAAsBF,EAA+BC,GAEpDvK,EAAAT,UAAMiL,eAAcjM,KAAAS,KAACsL,EAAcC,EACnCvL,MAAKsd,YAAY9R,eAAeF,EAAcC,EAE9C,IAAIsS,GAA6BvS,EAAaoB,oBAC9C,IAAIzJ,GAAuBsI,EAAS0F,+BACpC4M,GAAa5a,EAAQ,GAAK,CAC1B4a,GAAa5a,EAAQ,GAAK,EAMpB8gB,GAAAxjB,UAAA8K,QAAP,SAAeC,EAAmCC,GAEjDvL,KAAKsd,YAAYjS,QAAQC,EAAcC,EAEvCA,GAASnB,gBAAkB,KAMrB2Z,GAAAxjB,UAAA+H,QAAP,WAECtI,KAAKsd,YAAYzL,oBAAoBR,EAAmBO,mBAAoB5R,KAAKuR,8BAMlFpP,QAAAC,eAAW2hB,EAAAxjB,UAAA,SnCs8IJ8B,ImCt8IP,WAEC,MAAOrC,MAAKsd,YAAYpb,OnCu8IlBI,ImCp8IP,SAAiBC,GAEhBvC,KAAKsd,YAAYpb,MAAQK,GnCq8InBE,WAAY,KACZC,aAAc,MmCh8IrBP,QAAAC,eAAW2hB,EAAAxjB,UAAA,WnCs8IJ8B,ImCt8IP,WAEC,MAAOrC,MAAKsd,YAAY6G,SnCu8IlB7hB,ImCp8IP,SAAmBC,GAElBvC,KAAKsd,YAAY6G,QAAU5hB,GnCq8IrBE,WAAY,KACZC,aAAc,MmCh8IrBP,QAAAC,eAAW2hB,EAAAxjB,UAAA,anCs8IJ8B,ImCt8IP,WAEC,MAAOrC,MAAKikB,YnCu8IN3hB,ImCp8IP,SAAqBC,GAEpBvC,KAAKikB,WAAa1hB,GnCq8IZE,WAAY,KACZC,aAAc,MmCh8IdqhB,GAAAxjB,UAAAoL,iBAAP,SAAwBL,EAA+BC,EAAmBK,EAAiCC,EAAmCC,GAE7I,GAAI1M,GAAcY,KAAKsd,YAAY3R,iBAAiBL,EAAcC,EAAUK,EAAWC,EAAeC,EAEtG,IAAI+P,GAAgChQ,EAAcS,yBAClD,IAAI6F,GAA6BtG,EAAcuY,2BAC/C7Y,GAAS0F,gCAAkC4K,EAAQ5Y,MAAM,CAEzD7D,IAAQ,OAAS+S,EAAO,KAAOrG,EAAgBqM,mBAAqB,OACnE,OAAShG,EAAO,KAAOA,EAAO,KAAO0J,EAAU,OAC/C,OAAS1J,EAAO,KAAOA,EAAO,KAAO0J,EAAU,OAC/C,OAAS1J,EAAO,KAAOA,EAAO,KAC9B,OAASA,EAAO,KAAO0J,EAAU,MAAQ1J,EAAO,KAChD,OAASvG,EAAY,OAASiQ,EAAU,MAAQjQ,EAAY,OAC5D,OAASA,EAAY,OAASA,EAAY,OAASuG,EAAO,KAC1D,OAASvG,EAAY,OAASiQ,EAAU,MAAQjQ,EAAY,MAE7D,OAAOxM,GAMD2kB,GAAAxjB,UAAAgM,UAAP,SAAiBjB,EAA+BC,EAAmBpG,GAElEnF,KAAKsd,YAAY/Q,UAAUjB,EAAcC,EAAUpG,GAM7C4e,GAAAxjB,UAAAuR,YAAP,SAAmBxG,EAA+BC,EAAmBpG,GAEpEnF,KAAKsd,YAAYxL,YAAYxG,EAAcC,EAAUpG,GAM/C4e,GAAAxjB,UAAA0P,gBAAP,SAAuB3E,EAA+BC,EAAmB2E,EAA2B/K,EAAagL,GnCu7I1G,GmCp7IFkU,GAAclU,EAAOmU,WAAWD,IACpC,IAAIpkB,GAAWkQ,EAAOmU,WAAWC,IAAMF,CACvC,IAAI3M,GAAqB1X,KAAKkkB,kBAAkBM,aAChD,IAAI/M,GAAqBC,GAAa,EAAI1X,KAAKikB,WAE/CvM,GAAc2M,EAAO3M,EAAYzX,CACjCwX,GAAc4M,EAAO5M,EAAYxX,CAEjC,IAAI4d,GAA6BvS,EAAaoB,oBAC9C,IAAIzJ,GAAuBsI,EAAS0F,+BACpC4M,GAAa5a,GAASwU,CACtBoG,GAAa5a,EAAQ,GAAK,GAAGyU,EAAcD,EAE3CzX,MAAKsd,YAAYrN,gBAAgB3E,EAAcC,EAAU2E,EAAY/K,EAAOgL,GAMtE4T,GAAAxjB,UAAAwR,eAAP,SAAsBzG,EAA+BC,EAAmBM,EAAmCC,GAE1G,MAAO9L,MAAKsd,YAAYvL,eAAezG,EAAcC,EAAUM,EAAeC,GAMxEiY,GAAAxjB,UAAAyJ,OAAP,WAEChK,KAAKsd,YAAYtT,SAMX+Z,GAAAxjB,UAAAqO,sBAAP,WAEC5N,EAAAT,UAAMqO,sBAAqBrP,KAAAS,KAC3BA,MAAKsd,YAAY1O,wBAMVmV,GAAAxjB,UAAAkR,oBAAR,SAA4BD,GAE3BxR,KAAKmO,2BAEP,OAAA4V,IAtN+BlE,EAwNLngB,GAAAJ,QAAjBykB,InC46INnC,sDAAsD3d,UAAU+N,kDAAkD/N,YAAYwgB,0DAA0D,SAASjmB,EAAQkB,EAAOJ,GACnN,GAAIS,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GoChqJtB,IAAOqkB,GAAalmB,EAAe,qCAYnC,IAAOqhB,GAAgBrhB,EAAe,sDpC2pJtC,IoCtpJMmmB,GAAgB,SAAA3jB,GAASjB,EAAzB4kB,EAAgB3jB,EAYrB,SAZK2jB,GAYO1c,EAA+B8X,EAA+BC,GAA/B,GAAAD,QAAA,GAA6B,CAA7BA,EAAA,EAA+B,GAAAC,QAAA,GAAgB,CAAhBA,EAAA,EAEzEhf,EAAAzB,KAAAS,KAAMiI,EAZCjI,MAAAsgB,OAAgB,CAcvBtgB,MAAK+f,WAAaA,CAClB/f,MAAKggB,MAAQA,EAOd7d,OAAAC,eAAWuiB,EAAApkB,UAAA,cpCmpJJ8B,IoCnpJP,WAEC,MAAOrC,MAAKqgB,apCopJN/d,IoCjpJP,SAAsBC,GAErBvC,KAAKqgB,YAAc9d,CAEnB,IAAIvC,KAAKqgB,YAAc,EACtBrgB,KAAKqgB,YAAc,MACf,IAAIrgB,KAAKqgB,YAAc,GAC3BrgB,KAAKqgB,YAAc,EAEpBrgB,MAAK4kB,SAAWF,EAAcG,gBAAgB7kB,KAAKqgB,YAEnDrgB,MAAKmO,4BpC+oJC1L,WAAY,KACZC,aAAc,MoC1oJrBP,QAAAC,eAAWuiB,EAAApkB,UAAA,SpCgpJJ8B,IoChpJP,WAEC,MAAOrC,MAAKsgB,QpCipJNhe,IoC9oJP,SAAiBC,GAEhBvC,KAAKsgB,OAAS/d,GpC+oJRE,WAAY,KACZC,aAAc,MoC1oJdiiB,GAAApkB,UAAAiL,eAAP,SAAsBF,EAA+BC,GAEpDvK,EAAAT,UAAMiL,eAAcjM,KAAAS,KAACsL,EAAcC,EAEnCD,GAAaoB,qBAAqBnB,EAASpB,uBAAyB,GAAK,EAAEnK,KAAKqgB,WAChF/U,GAAaoB,qBAAqBnB,EAASpB,uBAAyB,GAAK,EAMnEwa,GAAApkB,UAAAgM,UAAP,SAAiBjB,EAA+BC,EAAmBpG,GAElEnE,EAAAT,UAAMgM,UAAShN,KAAAS,KAACsL,EAAcC,EAAUpG,EAExC,IAAI2f,GAAkB,GAAG9kB,KAAKsgB,OAAOtgB,KAAKud,eAAeE,aAAalK,YACtE,IAAI5G,GAAqBrB,EAAaoB,oBACtC,IAAIzJ,GAAwBsI,EAASpB,uBAAyB,EAC9D,IAAIjB,GAAsBlJ,KAAKqgB,aAAe,CAE9C,KAAK,GAAIphB,GAAmB,EAAGA,EAAIiK,IAAOjK,EACzC0N,EAAK1J,EAAQhE,GAAKe,KAAK4kB,SAAS3lB,GAAG6lB,EAM9BH,GAAApkB,UAAAwgB,wBAAP,SAA+BxV,EAAmBK,EAAiCuB,EAA8BrB,GpC0oJ1G,GoCvoJFsS,GAAyCjR,EAASnB,mBACtD,IAAIoG,GAA+BjF,EAASb,yBAC5C,IAAIuP,GAAgC1O,EAASb,yBAC7C,IAAI0U,GAAsC7T,EAASb,yBAEnDf,GAASpB,uBAAyBiI,EAAOnP,MAAM,CAC/CsI,GAAStB,cAAgBmU,EAAiBnb,KAE1C,OAAOjD,MAAKihB,cAAc9T,EAAUiR,EAAkBhM,EAAQxG,EAAWoV,GAYlE2D,GAAApkB,UAAA8gB,UAAR,SAAkB0D,EAA0BjjB,EAA+BkjB,EAA8BC,EAA8B9X,GAEtI,GAAIgF,GAA6BhF,EAAS8B,2BAC1C,OAAO,OAASkD,EAAO,KAAO4S,EAAK,KAAOjjB,EAAU,wBACnD,OAASqQ,EAAO,OAASA,EAAO,KAAO6S,EAAS,KAChD,OAASD,EAAK,OAAS/kB,KAAKohB,mBAAqB,OAASjP,EAAO,OACjE,OAAS8S,EAAS,OAASA,EAAS,OAASF,EAAK,OAM7CJ,GAAApkB,UAAA8e,oBAAP,SAA2B/T,EAA+BC,EAAmBpG,GAE5EnE,EAAAT,UAAMgM,UAAShN,KAAAS,KAACsL,EAAcC,EAAUpG,EAExC,IAAI2f,GAAkB9kB,KAAKsgB,OAAOtgB,KAAKud,eAAeE,aAAalK,YACnE,IAAI5G,GAAqBrB,EAAaoB,oBACtC,IAAIzJ,GAAwBsI,EAAS0F,+BACrC,IAAI/H,GAAsBlJ,KAAKqgB,aAAe,CAC9C1T,GAAK1J,GAAS,EAAEjD,KAAKqgB,WACrB1T,GAAK1J,EAAQ,GAAK,CAClBA,IAAS,CAET,KAAK,GAAIhE,GAAmB,EAAGA,EAAIiK,IAAOjK,EACzC0N,EAAK1J,EAAQhE,GAAKe,KAAK4kB,SAAS3lB,GAAG6lB,CAEpC,IAAI5b,EAAI,GAAK,EAAG,CACfyD,EAAK1J,EAAQiG,GAAO,CACpByD,GAAK1J,EAAQiG,EAAM,GAAK,GAOnByb,GAAApkB,UAAAme,yBAAP,SAAgCpT,EAA+BC,EAAmB+V,EAAsCC,EAAoCC,EAAuCC,EAAsC5V,EAAmCC,GAE3Q9L,KAAKohB,mBAAqBI,CAE1B,IAAI3F,GAAgChQ,EAAcS,yBAClDf,GAAS0F,gCAAkC4K,EAAQ5Y,MAAM,CAEzD,OAAOjD,MAAKihB,cAAcpV,EAAe0V,EAAcD,EAAgBG,EAAgB5F,GAWhF8I,GAAApkB,UAAA0gB,cAAR,SAAsB9T,EAA8BoU,EAAoCD,EAAsCG,EAAsC5F,GAEnK,GAAIhG,EACJ,IAAIzW,EACJ,IAAI8lB,GAAwB,GAAI5jB,OAAcua,EAAU,MACxDhG,GAAQ1I,EAAS8B,2BACjB9B,GAAS+B,sBAAsB2G,EAAO,EAEtC,IAAI1D,GAA6BhF,EAAS8B,2BAE1C,IAAIkW,GAAyBnlB,KAAKqgB,aAAe,CACjD,KAAK,GAAIphB,GAAmB,EAAGA,EAAIkmB,IAAWlmB,EAAG,CAChD,GAAImmB,GAA4BjY,EAASb,yBACzC4Y,GAAQniB,KAAKqiB,EAAM,MACnBF,GAAQniB,KAAKqiB,EAAM,OAGpB,IAAKnmB,EAAI,EAAGA,EAAIe,KAAKqgB,cAAephB,EAAG,CACtC,GAAIA,GAAK,EAAG,CACXG,EAAO,OAASyW,EAAQ,KAAO7V,KAAKohB,mBAAqB,KAAOvF,EAAU,UACzE,OAAS1J,EAAO,KAAO0D,EAAQ,KAAO0L,EAAe,wBACrD,OAASpP,EAAO,OAASA,EAAO,KAAOmP,EAAiB,KACxD,OAASG,EAAiB,OAASzhB,KAAKohB,mBAAqB,OAASjP,EAAO,WACxE,CACN/S,GAAQ,OAASyW,EAAQ,QAAU7V,KAAKohB,mBAAqB,QAAU8D,EAAQjmB,GAAK,KACnFe,KAAKqhB,UAAUxL,EAAO0L,EAAcD,EAAgBG,EAAgBtU,IAIvEA,EAASsC,wBAAwBoG,EAEjCzW,IAAQ,OAASqiB,EAAiB,OAASA,EAAiB,OAAS5F,EAAU,MAE/E,OAAOzc,GAET,OAAAulB,IAtM+B9E,EAwMLngB,GAAAJ,QAAjBqlB,IpC+mJNU,qCAAqCphB,UAAU2d,sDAAsD3d,YAAYqhB,mEAAmE,SAAS9mB,EAAQkB,EAAOJ,GAC/M,GAAIS,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GqCv0JtB,IAAOS,GAAmBtC,EAAc,yDrC+0JxC,IqCx0JM+mB,GAAyB,SAAAvkB,GAASjB,EAAlCwlB,EAAyBvkB,EAK9B,SALKukB,KAOJvkB,EAAAzB,KAAAS,MAMMulB,EAAAhlB,UAAA8K,QAAP,SAAeC,EAAmCC,GAEjDA,EAAShB,cAAgB,IACzBgB,GAASlB,UAAY,KAMfkb,GAAAhlB,UAAA4O,yBAAP,SAAgC7D,EAAmCC,EAAmB6D,EAAmCC,EAAmCxD,EAAmCC,GAE9L,GAAI1M,GAAc,EAClB,IAAIV,EAEJ,IAAIsB,KAAKgP,eACRtQ,EAAIsB,KAAK6O,yBACL,CACJnQ,EAAImN,EAAcoD,2BAClBpD,GAAcqD,sBAAsBxQ,EAAG,GAKxCU,GAAQ,OAASV,EAAI,SAAWoN,EAAgB0Z,eAAiB,SAChE,OAAS9mB,EAAI,OAASA,EAAI,SAAW0Q,EAAc,SACnD,OAAS1Q,EAAI,OAASA,EAAI,SAAWoN,EAAgBgJ,gBAAkB,QAGxE1V,IAAQ,OAASV,EAAI,OAASA,EAAI,OACjC,OAASA,EAAI,OAASA,EAAI,OAE1B,OAASA,EAAI,OAASA,EAAI,OAASA,EAAI,OAEvC,OAASA,EAAI,OAASA,EAAI,OAC1B,OAASA,EAAI,OAASA,EAAI,OAE1B,OAASA,EAAI,OAASA,EAAI,OAASA,EAAI,OAEvC,OAASA,EAAI,OAASA,EAAI,OAASA,EAAI,MAExC,IAAIsB,KAAKoO,aAAc,CAEtBhP,GAAQ,OAASY,KAAKylB,kBAAoB,OAASzlB,KAAKylB,kBAAoB,OAASzlB,KAAK0lB,uBAAyB,OAClH,OAAShnB,EAAI,OAASA,EAAI,OAASsB,KAAKylB,kBAAoB,WAE7DrmB,IAAQ,OAASV,EAAI,OAASA,EAAI,OAASsB,KAAK0lB,uBAAyB,MAG1EtmB,IAAQ,OAASV,EAAI,OAASA,EAAI,OAAS0Q,EAAc,MAEzD,IAAIpP,KAAKwP,kBAAoB,KAC5BpQ,GAAQY,KAAKwP,iBAAiBlE,EAAcC,EAAU7M,EAAGmN,EAAeC,EAEzE1M,IAAQ,OAASV,EAAI,SAAW2Q,EAAc,SAAW3Q,EAAI,MAE7D,KAAKsB,KAAKgP,eAAgB,CACzB5P,GAAQ,OAASY,KAAK6O,qBAAuB,SAAW7O,KAAK6O,qBAAuB,SAAWnQ,EAAI,QACnGmN,GAAc4D,wBAAwB/Q,GAGvCsB,KAAKgP,eAAiB,KAEtB,OAAO5P,GAET,OAAAmmB,IA7EwCzkB,EA+ExCpB,GAAmCJ,QAA1BimB,IrC+yJNhhB,yDAAyDN,YAAY0hB,6DAA6D,SAASnnB,EAAQkB,EAAOJ,GAC7J,GAAIS,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GsCx4JtB,IAAOwK,GAAoBrM,EAAa,mDAGxC,IAAOgP,GAAkBhP,EAAa,wDtC64JtC,IsCt4JMsC,GAAmB,SAAAE,GAASjB,EAA5Be,EAAmBE,EAqBxB,SArBKF,KAuBJE,EAAAzB,KAAAS,KAbOA,MAAA4lB,OAAgB,EAChB5lB,MAAA6lB,UAAmB,CACnB7lB,MAAA8lB,eAAwB,QACzB9lB,MAAA+lB,YAAqB,CACrB/lB,MAAAgmB,YAAqB,CACrBhmB,MAAAimB,YAAqB,EAWrBnlB,EAAAP,UAAA2N,QAAP,SAAe5C,GAEd,IAAKA,EAAalF,UACjB,MAAO,MAER,OAAO,MAMDtF,GAAAP,UAAA8K,QAAP,SAAeC,EAAmCC,GAEjDA,EAASf,QAAUxK,KAAKoO,YACxB7C,GAASjB,aAAegB,EAAalF,UAAY,CACjDmF,GAASlB,UAAYiB,EAAalF,UAAY,EAM/CjE,QAAAC,eAAWtB,EAAAP,UAAA,StCs3JJ8B,IsCt3JP,WAEC,MAAOrC,MAAK4lB,QtCu3JNtjB,IsCp3JP,SAAiBC,GAEhBvC,KAAK4lB,OAASrjB,GtCq3JRE,WAAY,KACZC,aAAc,MsCh3JrBP,QAAAC,eAAWtB,EAAAP,UAAA,YtCs3JJ8B,IsCt3JP,WAEC,MAAOrC,MAAK6lB,WtCu3JNvjB,IsCp3JP,SAAoBC,GAEnB,GAAIA,GAASvC,KAAK6lB,UACjB,MAED7lB,MAAK6lB,UAAYtjB,CACjBvC,MAAKkmB,kBtCo3JCzjB,WAAY,KACZC,aAAc,MsC/2JrBP,QAAAC,eAAWtB,EAAAP,UAAA,iBtCq3JJ8B,IsCr3JP,WAEC,MAAOrC,MAAK8lB,gBtCs3JNxjB,IsCn3JP,SAAyBC,GAExB,GAAIvC,KAAK8lB,gBAAkBvjB,EAC1B,MAGD,IAAIvC,KAAK8lB,gBAAkB,GAAKvjB,GAAS,EACxCvC,KAAKmO,0BAENnO,MAAK8lB,eAAiBvjB,CACtBvC,MAAKkmB,kBtCk3JCzjB,WAAY,KACZC,aAAc,MsC32JrBP,QAAAC,eAAWtB,EAAAP,UAAA,WtCm3JJ8B,IsCn3JP,WAEC,MAAOrC,MAAKsO,UtCo3JNhM,IsCj3JP,SAAmBC,GAElB,GAAIrC,GAAcqC,GAAS,IAE3B,IAAIrC,GAAKF,KAAKoO,cAAiB7L,GAASvC,KAAKsO,UAAa/L,EAAMkM,QAAUzO,KAAKsO,SAASG,OACvFzO,KAAKmO,0BAENnO,MAAKoO,aAAelO,CACpBF,MAAKsO,SAAW/L,GtCg3JVE,WAAY,KACZC,aAAc,MsC12Jd5B,GAAAP,UAAAoC,SAAP,SAAgBG,GAGf,GAAI4I,GAAQ5I,CACZ,IAAIqjB,GAAgDrjB,CAEpD,IAAIsjB,GAA2BD,CAC/BnmB,MAAK8B,QAAUskB,EAAKtkB,OACpB9B,MAAKyD,SAAW2iB,EAAK3iB,QACrBzD,MAAK4D,cAAgBwiB,EAAKxiB,aAC1B5D,MAAKuD,MAAQ6iB,EAAK7iB,MAMZzC,GAAAP,UAAAqO,sBAAP,WAEC5N,EAAAT,UAAMqO,sBAAqBrP,KAAAS,KAC3BA,MAAK6O,qBAAuB,IAC5B7O,MAAKqmB,0BAA4B,IACjCrmB,MAAKylB,kBAAoB,IACzBzlB,MAAK0lB,uBAAyB,KAMxB5kB,GAAAP,UAAAwO,4BAAP,SAAmCzD,EAAmCC,EAAmBM,EAAmCC,GAE3H,GAAI1M,GAAc,EAElBY,MAAKgP,eAAiB,IAEtBhP,MAAK0lB,uBAAyB7Z,EAAcS,yBAC5Cf,GAASpB,uBAAyBnK,KAAK0lB,uBAAuBziB,MAAM,CAEpE,IAAIjD,KAAKoO,aAAc,CAEtBpO,KAAKylB,kBAAoB5Z,EAAcoD,2BACvCpD,GAAcqD,sBAAsBlP,KAAKylB,kBAAmB,EAC5DzlB,MAAKqmB,0BAA4Bxa,EAAcG,mBAC/CT,GAAStB,cAAgBjK,KAAKqmB,0BAA0BpjB,KACxD7D,GAAOyL,EAAqBoB,mBAAmBjM,KAAKylB,kBAAmB3Z,EAAiB9L,KAAKqmB,0BAA2BrmB,KAAKsO,SAAUhD,EAAaY,kBAAmBZ,EAAaa,eAAgBb,EAAamB,mBAE3M,CAENzM,KAAKqmB,0BAA4B,KAGlCrmB,KAAK6O,qBAAuBhD,EAAcoD,2BAC1CpD,GAAcqD,sBAAsBlP,KAAK6O,qBAAsB,EAE/D,OAAOzP,GAMD0B,GAAAP,UAAA4O,yBAAP,SAAgC7D,EAAmCC,EAAmB6D,EAAmCC,EAAmCxD,EAAmCC,GAE9L,GAAI1M,GAAc,EAClB,IAAIV,EAEJ,IAAIsB,KAAKgP,eAAgB,CACxBtQ,EAAIsB,KAAK6O,yBACH,CACNnQ,EAAImN,EAAcoD,2BAClBpD,GAAcqD,sBAAsBxQ,EAAG,GAGxC,GAAI8Z,GAAmC1M,EAAgBgJ,eACvD,IAAI2D,GAAkC3M,EAAgBwB,cAGtDlO,IAAQ,OAASV,EAAI,KAAO0Q,EAAc,KAAOoJ,EAAa,KAC5D,OAAS9Z,EAAI,SAAWA,EAAI,KAC5B,OAASA,EAAI,OAAS+Z,EAAY,KAAO/Z,EAAI,KAC7C,OAASA,EAAI,OAASA,EAAI,MAE5B,IAAIsB,KAAKoO,aAAc,CAEtBhP,GAAQ,OAASY,KAAKylB,kBAAoB,OAASzlB,KAAKylB,kBAAoB,OAASzlB,KAAK0lB,uBAAyB,OACjH,OAAShnB,EAAI,OAASA,EAAI,OAASsB,KAAKylB,kBAAoB,WACxD,CACNrmB,GAAQ,OAASV,EAAI,OAASA,EAAI,OAASsB,KAAK0lB,uBAAyB,OAI1E,GAAIpa,EAAaiE,iBAChBnQ,GAAQ,OAASV,EAAI,OAASA,EAAI,OAAS0Q,EAAc,MAE1D,IAAIpP,KAAKwP,kBAAoB,KAC5BpQ,GAAQY,KAAKwP,iBAAiBlE,EAAcC,EAAU7M,EAAGmN,EAAeC,EAEzE1M,IAAQ,OAASV,EAAI,SAAW2Q,EAAc,KAAO3Q,EAAI,MAEzD,KAAKsB,KAAKgP,eAAgB,CACzB5P,GAAQ,OAASY,KAAK6O,qBAAuB,SAAW7O,KAAK6O,qBAAuB,KAAOnQ,EAAI,IAC/FmN,GAAc4D,wBAAwB/Q,GAGvCsB,KAAKgP,eAAiB,KAEtB,OAAO5P,GAMD0B,GAAAP,UAAAmP,yBAAP,SAAgCpE,EAAmCC,EAAmB6B,EAAkCuC,EAAuB9D,EAAmCC,GAEjL,GAAI1M,GAAc,EAClB,IAAIV,EAGJ,IAAIsB,KAAKgP,eAAgB,CACxBtQ,EAAIsB,KAAK6O,yBACH,CACNnQ,EAAImN,EAAcoD,2BAClBpD,GAAcqD,sBAAsBxQ,EAAG,GAGxC,GAAI+Z,GAAkC3M,EAAgBwB,cACtD,IAAIkL,GAAmC1M,EAAgBgJ,eAEvD1V,IAAQ,OAASV,EAAI,OAAS+Z,EAAY,KAAOD,EAAa,KAC5D,OAAS9Z,EAAI,OAASA,EAAI,OAASA,EAAI,OACvC,OAASA,EAAI,KAAOA,EAAI,OAAS+Z,EAAY,KAC7C,OAAS/Z,EAAI,KAAOA,EAAI,KAAO8Z,EAAa,KAC5C,OAAS9Z,EAAI,KAAOA,EAAI,KAAO0O,EAAa,WAAa9B,EAAaY,kBAAmB,SAAS,WAAa,gBAC/G,OAASxN,EAAI,SAAWA,EAAI,KAAOiR,EAAiB,IAEtD,IAAI3P,KAAKwP,kBAAoB,KAC5BpQ,GAAQY,KAAKwP,iBAAiBlE,EAAcC,EAAU7M,EAAGmN,EAAeC,EAEzE,KAAK9L,KAAKgP,eAAgB,CACzB5P,GAAQ,OAASY,KAAK6O,qBAAuB,SAAW7O,KAAK6O,qBAAuB,KAAOnQ,EAAI,IAC/FmN,GAAc4D,wBAAwB/Q,GAGvCsB,KAAKgP,eAAiB,KAEtB,OAAO5P,GAMD0B,GAAAP,UAAAqP,6BAAP,SAAoCtE,EAAmCC,EAAmBK,EAAiCC,EAAmCC,GAE7J,GAAI1M,GAAc,EAElB,IAAI0M,EAAgBgE,aACnB1Q,GAAQ,OAASY,KAAK6O,qBAAuB,SAAW7O,KAAK6O,qBAAuB,KAAO/C,EAAgBgE,aAAe,MAE3H,IAAI9P,KAAKoO,aAAc,CAEtBhP,GAAQ,OAASY,KAAK6O,qBAAuB,SAAW7O,KAAK6O,qBAAuB,KAAO7O,KAAKylB,kBAAoB,MACpH5Z,GAAc4D,wBAAwBzP,KAAKylB,mBAI5CrmB,GAAQ,OAASY,KAAK6O,qBAAuB,SAAW7O,KAAK6O,qBAAuB,KAAO7O,KAAK0lB,uBAAyB,KACxH,OAAS9Z,EAAY,SAAWA,EAAY,KAAO5L,KAAK6O,qBAAuB,IAChFhD,GAAc4D,wBAAwBzP,KAAK6O,qBAE3C,OAAOzP,GAMD0B,GAAAP,UAAAgM,UAAP,SAAiBjB,EAAmCC,EAAmBpG,GAEtE,GAAIoG,EAAStB,eAAiB,EAC7B9E,EAAMqH,gBAAgBjB,EAAStB,cAAejK,KAAKsO,SAAUhD,EAAaa,eAAgBb,EAAaY,kBAAmBZ,EAAamB,cAExI,IAAIxJ,GAAesI,EAASpB,sBAC5B,IAAIwC,GAAqBrB,EAAaoB,oBACtCC,GAAK1J,GAASjD,KAAK+lB,WACnBpZ,GAAK1J,EAAQ,GAAKjD,KAAKgmB,WACvBrZ,GAAK1J,EAAQ,GAAKjD,KAAKimB,WACvBtZ,GAAK1J,EAAQ,GAAKjD,KAAK4lB,OAMhB9kB,GAAAP,UAAA2lB,eAAR,WAEClmB,KAAK+lB,aAAiB/lB,KAAK8lB,gBAAkB,GAAM,KAAM,IAAK9lB,KAAK6lB,SACnE7lB,MAAKgmB,aAAiBhmB,KAAK8lB,gBAAkB,EAAK,KAAM,IAAK9lB,KAAK6lB,SAClE7lB,MAAKimB,aAAgBjmB,KAAK8lB,eAAiB,KAAM,IAAK9lB,KAAK6lB,UAE7D,OAAA/kB,IA3TkC0M,EA6TlC9N,GAA6BJ,QAApBwB,ItC6zJNyP,wDAAwDtM,UAAU4I,mDAAmD5I,YAAYqiB,2DAA2D,SAAS9nB,EAAQkB,EAAOJ,GACvN,GAAIS,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GuCvoKtB,IAAOkmB,GAAuB/nB,EAAa,6DvC6oK3C,IuCxoKMgoB,GAAiB,SAAAxlB,GAASjB,EAA1BymB,EAAiBxlB,EAWtB,SAXKwlB,GAWOC,EAA4B7V,GAXzC,GAAAC,GAAA7Q,IAWa,IAAAymB,QAAA,GAA0B,CAA1BA,EAAA,GAA4B,GAAA7V,QAAA,GAAqC,CAArCA,EAAA,KAEvC5P,EAAAzB,KAAAS,KAAM,KAAM4Q,EAVL5Q,MAAA8Q,YAAqB,EACrB9Q,MAAA0mB,gBAAyB,EAWhC1mB,MAAK4Q,WAAWpB,iBAAmB,SAAClE,EAA+BC,EAAmBK,EAAiCC,EAAmCC,GAAuC,MAAA+E,GAAK8V,cAAcrb,EAAcC,EAAUK,EAAWC,EAAeC,GAEtQ9L,MAAK0mB,gBAAkBD,EAMxBtkB,OAAAC,eAAWokB,EAAAjmB,UAAA,cvCsoKJ8B,IuCtoKP,WAEC,MAAOrC,MAAK8Q,avCuoKNxO,IuCpoKP,SAAsBC,GAErBvC,KAAK8Q,YAAcvO,GvCqoKbE,WAAY,KACZC,aAAc,MuChoKrBP,QAAAC,eAAWokB,EAAAjmB,UAAA,kBvCsoKJ8B,IuCtoKP,WAEC,MAAOrC,MAAK0mB,iBvCuoKNpkB,IuCpoKP,SAA0BC,GAEzBvC,KAAK0mB,gBAAkBnkB,GvCqoKjBE,WAAY,KACZC,aAAc,MuChoKd8jB,GAAAjmB,UAAAgM,UAAP,SAAiBjB,EAAmCC,EAAmBpG,GAEtEnE,EAAAT,UAAMgM,UAAShN,KAAAS,KAACsL,EAAcC,EAAUpG,EAExC,IAAIlC,GAAuBsI,EAAS0F,+BACpC,IAAItE,GAAqBrB,EAAaoB,oBACtCC,GAAK1J,GAASjD,KAAK8Q,WACnBnE,GAAK1J,EAAQ,GAAKjD,KAAK0mB,gBAMjBF,GAAAjmB,UAAAqO,sBAAP,WAEC5N,EAAAT,UAAMqO,sBAAqBrP,KAAAS,KAC3BA,MAAKkR,SAAW,KAWTsV,GAAAjmB,UAAAomB,cAAR,SAAsBrb,EAA+BC,EAAmBK,EAAiCC,EAAmCC,GAE3I,MAAO,OAASF,EAAY,OAASA,EAAY,OAAS5L,KAAKkR,SAAW,OACzE,OAAStF,EAAY,OAASA,EAAY,OAAS5L,KAAKkR,SAAW,OACnE,OAAStF,EAAY,OAASA,EAAY,OAC1C,OAASA,EAAY,OAASA,EAAY,OAAS5L,KAAKkR,SAAW,OACnE,OAAStF,EAAY,OAASA,EAAY,OAASA,EAAY,OAM1D4a,GAAAjmB,UAAAwO,4BAAP,SAAmCzD,EAAmCC,EAAmBM,EAAmCC,GAE3H9L,KAAKkR,SAAWrF,EAAcS,yBAC9Bf,GAAS0F,gCAAkCjR,KAAKkR,SAASjO,MAAM,CAE/D,OAAOjC,GAAAT,UAAMwO,4BAA2BxP,KAAAS,KAACsL,EAAcC,EAAUM,EAAeC,GAElF,OAAA0a,IA/FgCD,EAiGhC7mB,GAA2BJ,QAAlBknB,IvC2nKNI,6DAA6D3iB,YAAY4iB,iEAAiE,SAASroB,EAAQkB,EAAOJ,GACrK,GAAIS,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GwCzuKtB,IAAOgR,GAAkB7S,EAAc,kDAQvC,IAAOsC,GAAmBtC,EAAc,yDxCyuKxC,IwCnuKM+nB,GAAuB,SAAAvlB,GAASjB,EAAhCwmB,EAAuBvlB,EAY5B,SAZKulB,GAYOjV,EAAqLV,GAZlM,GAAAC,GAAA7Q,IAYkM,IAAA4Q,QAAA,GAAqC,CAArCA,EAAA,KAEhM5P,EAAAzB,KAAAS,KAEAA,MAAKuR,6BAA+B,SAACC,GAA6B,MAAAX,GAAKY,oBAAoBD,GAE3FxR,MAAKsd,YAAc1M,GAAc,GAAI9P,EACrCd,MAAKsd,YAAY9N,iBAAmB8B,CACpCtR,MAAKsd,YAAY3L,iBAAiBN,EAAmBO,mBAAoB5R,KAAKuR,8BAMxEgV,EAAAhmB,UAAA8K,QAAP,SAAeC,EAAmCC,GAEjDvL,KAAKsd,YAAYjS,QAAQC,EAAcC,GAMjCgb,GAAAhmB,UAAAiL,eAAP,SAAsBF,EAA+BC,GAEpDvL,KAAKsd,YAAY9R,eAAeF,EAAcC,GAM/CpJ,QAAAC,eAAWmkB,EAAAhmB,UAAA,cxC0tKJ8B,IwC1tKP,WAEC,MAAOrC,MAAKsd,axC2tKNhb,IwCxtKP,SAAsBC,GAErB,GAAIvC,KAAKsd,aAAe/a,EACvB,MAEDvC,MAAKsd,YAAYzL,oBAAoBR,EAAmBO,mBAAoB5R,KAAKuR,6BAEjFvR,MAAKsd,YAAc/a,CAEnBvC,MAAKsd,YAAY3L,iBAAiBN,EAAmBO,mBAAoB5R,KAAKuR,6BAE9EvR,MAAKmO,4BxCqtKC1L,WAAY,KACZC,aAAc,MwChtKrBP,QAAAC,eAAWmkB,EAAAhmB,UAAA,SxCstKJ8B,IwCttKP,WAEC,MAAOrC,MAAKsd,YAAY/Z,OxCutKlBjB,IwCptKP,SAAiBC,GAEhBvC,KAAKsd,YAAY/Z,MAAQhB,GxCqtKnBE,WAAY,KACZC,aAAc,MwChtKrBP,QAAAC,eAAWmkB,EAAAhmB,UAAA,YxCstKJ8B,IwCttKP,WAEC,MAAOrC,MAAKsd,YAAY7Z,UxCutKlBnB,IwCptKP,SAAoBC,GAEnBvC,KAAKsd,YAAY7Z,SAAWlB,GxCqtKtBE,WAAY,KACZC,aAAc,MwChtKd6jB,GAAAhmB,UAAA+H,QAAP,WAECtI,KAAKsd,YAAYzL,oBAAoBR,EAAmBO,mBAAoB5R,KAAKuR,6BACjFvR,MAAKsd,YAAYhV,UAMlBnG,QAAAC,eAAWmkB,EAAAhmB,UAAA,WxCotKJ8B,IwCptKP,WAEC,MAAOrC,MAAKsd,YAAYxb,SxCqtKlBQ,IwCltKP,SAAmBC,GAElBvC,KAAKsd,YAAYxb,QAAUS,GxCmtKrBE,WAAY,KACZC,aAAc,MwC9sKd6jB,GAAAhmB,UAAAgM,UAAP,SAAiBjB,EAAmCC,EAAmBpG,GAEtEnF,KAAKsd,YAAY/Q,UAAUjB,EAAcC,EAAUpG,GAM7CohB,GAAAhmB,UAAA0P,gBAAP,SAAuB3E,EAAmCC,EAAmB2E,EAA2B/K,EAAagL,GAEpHnQ,KAAKsd,YAAYrN,gBAAgB3E,EAAcC,EAAU2E,EAAY/K,EAAOgL,GAMtEoW,GAAAhmB,UAAAuR,YAAP,SAAmBxG,EAA+BC,EAAmBpG,GAEpEnF,KAAKsd,YAAYxL,YAAYxG,EAAcC,EAAUpG,GAM/CohB,GAAAhmB,UAAAwR,eAAP,SAAsBzG,EAA+BC,EAAmBM,EAAmCC,GAE1G,MAAO9L,MAAKsd,YAAYvL,eAAezG,EAAcC,EAAUM,EAAeC,GAMxEya,GAAAhmB,UAAAwO,4BAAP,SAAmCzD,EAAmCC,EAAmBM,EAAmCC,GAE3H,MAAO9L,MAAKsd,YAAYvO,4BAA4BzD,EAAcC,EAAUM,EAAeC,GAMrFya,GAAAhmB,UAAA4O,yBAAP,SAAgC7D,EAAmCC,EAAmB6D,EAAmCC,EAAmCxD,EAAmCC,GAE9L,MAAO9L,MAAKsd,YAAYnO,yBAAyB7D,EAAcC,EAAU6D,EAAaC,EAAaxD,EAAeC,GAO5Gya,GAAAhmB,UAAAmP,yBAAP,SAAgCpE,EAAmCC,EAAmB6B,EAAkCuC,EAAuB9D,EAAmCC,GAEjL,MAAO9L,MAAKsd,YAAY5N,yBAAyBpE,EAAcC,EAAU6B,EAAYuC,EAAgB9D,EAAeC,GAM9Gya,GAAAhmB,UAAAqP,6BAAP,SAAoCtE,EAAmCC,EAAmBK,EAAiCC,EAAmCC,GAE7J,MAAO9L,MAAKsd,YAAY1N,6BAA6BtE,EAAcC,EAAUK,EAAWC,EAAeC,GAMjGya,GAAAhmB,UAAAyJ,OAAP,WAEChK,KAAKsd,YAAYtT,SAMXuc,GAAAhmB,UAAAqO,sBAAP,WAEC5N,EAAAT,UAAMqO,sBAAqBrP,KAAAS,KAC3BA,MAAKsd,YAAY1O,wBAMV2X,GAAAhmB,UAAAkR,oBAAR,SAA4BD,GAE3BxR,KAAKmO,2BAEP,OAAAoY,IAtMsCzlB,EAwMLpB,GAAAJ,QAAxBinB,IxCisKNhiB,yDAAyDN,UAAU+N,kDAAkD/N,YAAY6iB,+DAA+D,SAAStoB,EAAQkB,EAAOJ,GAC3N,GAAIS,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GyCv5KtB,IAAOkmB,GAAuB/nB,EAAa,6DzC65K3C,IyCx5KMuoB,GAAqB,SAAA/lB,GAASjB,EAA9BgnB,EAAqB/lB,EAY1B,SAZK+lB,GAYOC,EAA+BpW,GAZ5C,GAAAC,GAAA7Q,IAYa,IAAAgnB,QAAA,GAA6B,CAA7BA,EAAA,KAA+B,GAAApW,QAAA,GAAqC,CAArCA,EAAA,KAG1C5P,EAAAzB,KAAAS,KAAM,KAAM4Q,EAXL5Q,MAAAsY,cAAuB,CACvBtY,MAAAuY,mBAA4B,IAYnCvY,MAAK4Q,WAAWpB,iBAAmB,SAAClE,EAA+BC,EAAmBK,EAAiCC,EAAmCC,GAAuC,MAAA+E,GAAKoW,iBAAiB3b,EAAcC,EAAUK,EAAWC,EAAeC,GAEzQ9L,MAAKknB,gBAAkBF,EAMjBD,EAAAxmB,UAAAiL,eAAP,SAAsBF,EAA+BC,GAGpD,GAAItI,GAAesI,EAAS0F,+BAC5B3F,GAAaoB,qBAAqBzJ,EAAQ,GAAK,CAC/CqI,GAAaoB,qBAAqBzJ,EAAQ,GAAK,EAMhDd,QAAAC,eAAW2kB,EAAAxmB,UAAA,kBzCk5KJ8B,IyCl5KP,WAEC,OAAQrC,KAAKknB,gBzCm5KP5kB,IyCh5KP,SAA0BC,GAEzB,GAAIvC,KAAKknB,gBAAkB3kB,EAC1B,MAEDvC,MAAKknB,gBAAkB3kB,CAEvBvC,MAAKmO,4BzC+4KC1L,WAAY,KACZC,aAAc,MyC14KrBP,QAAAC,eAAW2kB,EAAAxmB,UAAA,gBzCg5KJ8B,IyCh5KP,WAEC,MAAOrC,MAAKsY,ezCi5KNhW,IyC94KP,SAAwBC,GAEvBvC,KAAKsY,cAAgB/V,GzC+4KfE,WAAY,KACZC,aAAc,MyC14KdqkB,GAAAxmB,UAAAqO,sBAAP,WAEC5N,EAAAT,UAAMqO,sBAAqBrP,KAAAS,KAC3BA,MAAKkR,SAAW,KAMjB/O,QAAAC,eAAW2kB,EAAAxmB,UAAA,qBzC84KJ8B,IyC94KP,WAEC,MAAOrC,MAAKuY,oBzC+4KNjW,IyC54KP,SAA6BC,GAE5BvC,KAAKuY,mBAAqBhW,GzC64KpBE,WAAY,KACZC,aAAc,MyCx4KdqkB,GAAAxmB,UAAAgM,UAAP,SAAiBjB,EAAmCC,EAAmBpG,GAEtEnE,EAAAT,UAAMgM,UAAShN,KAAAS,KAACsL,EAAcC,EAAUpG,EAExC,IAAI0Y,GAA6BvS,EAAaoB,oBAE9C,IAAIzJ,GAAesI,EAAS0F,+BAC5B4M,GAAa5a,GAASjD,KAAKuY,kBAC3BsF,GAAa5a,EAAQ,GAAKjD,KAAKsY,cAMzByO,GAAAxmB,UAAAwO,4BAAP,SAAmCzD,EAAmCC,EAAmBM,EAAmCC,GAE3H9L,KAAKkR,SAAWrF,EAAcS,yBAE9Bf,GAAS0F,gCAAkCjR,KAAKkR,SAASjO,MAAM,CAE/D,OAAOjC,GAAAT,UAAMwO,4BAA2BxP,KAAAS,KAACsL,EAAcC,EAAUM,EAAeC,GAYzEib,GAAAxmB,UAAA0mB,iBAAR,SAAyB3b,EAA+BC,EAAmBK,EAAiCC,EAAmCC,GAE9I,GAAI1M,EAEJA,GAAO,OAASwM,EAAY,OAASE,EAAgBgJ,gBAAkB,UAAY9U,KAAKknB,eAAgBtb,EAAYE,EAAgBwB,gBAAkB,SACrJ,OAAS1B,EAAY,OAAS5L,KAAKkR,SAAW,OAAStF,EAAY,OACnE,OAASA,EAAY,OAASA,EAAY,OAAS5L,KAAKkR,SAAW,OACnE,OAAStF,EAAY,OAAS5L,KAAKkR,SAAW,OAAStF,EAAY,OACnE,OAASA,EAAY,OAAS5L,KAAKkR,SAAW,OAAStF,EAAY,OACnE,OAASA,EAAY,OAASA,EAAY,OAASA,EAAY,OAC/D,OAASA,EAAY,OAASA,EAAY,OAASA,EAAY,MAEhE,OAAOxM,GAGT,OAAA2nB,IAxIoCR,EA0IL7mB,GAAAJ,QAAtBynB,IzC83KNH,6DAA6D3iB,YAAYkjB,6DAA6D,SAAS3oB,EAAQkB,EAAOJ,GACjK,GAAIS,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G0CxhLtB,IAAOS,GAAmBtC,EAAc,yD1C8hLxC,I0CzhLM4oB,GAAmB,SAAApmB,GAASjB,EAA5BqnB,EAAmBpmB,EAKxB,SALKomB,KAOJpmB,EAAAzB,KAAAS,MAMMonB,EAAA7mB,UAAA4O,yBAAP,SAAgC7D,EAAmCC,EAAmB6D,EAAmCC,EAAmCxD,EAAmCC,GAE9L,GAAI1M,GAAc,EAClB,IAAIV,EAEJ,IAAIsB,KAAKgP,eAAgB,CACxBtQ,EAAIsB,KAAK6O,yBACH,CACNnQ,EAAImN,EAAcoD,2BAClBpD,GAAcqD,sBAAsBxQ,EAAG,GAGxC,GAAI8Z,GAAkC1M,EAAgBgJ,eACtD,IAAI2D,GAAiC3M,EAAgBwB,cAGrDlO,IAAQ,OAASV,EAAI,OAAS0Q,EAAc,KAAOqJ,EAAY,KAG9D,OAAS/Z,EAAI,OAASA,EAAI,OAASA,EAAI,OACvC,OAASA,EAAI,SAAW+Z,EAAY,KAAO/Z,EAAI,OAC/C,OAASA,EAAI,SAAWA,EAAI,KAAO0Q,EAAc,KAGjD,OAAS1Q,EAAI,OAASA,EAAI,OAAQoN,EAAgBwD,QAAU,OAC5D,OAAS5Q,EAAI,OAASA,EAAI,OAC1B,OAASA,EAAI,SAAWA,EAAI,KAAOA,EAAI,OAGvC,OAASA,EAAI,OAASA,EAAI,KAAO8Z,EAAa,KAC9C,OAAS9Z,EAAI,OAASA,EAAI,MAE3B,IAAIsB,KAAKoO,aAAc,CAEtBhP,GAAQ,OAASY,KAAKylB,kBAAoB,OAASzlB,KAAKylB,kBAAoB,OAASzlB,KAAK0lB,uBAAyB,OAAS,OAAShnB,EAAI,OAASA,EAAI,OAASsB,KAAKylB,kBAAoB,WAExLrmB,IAAQ,OAASV,EAAI,OAASA,EAAI,OAASsB,KAAK0lB,uBAAyB,MAG1E,IAAIpa,EAAaiE,iBAChBnQ,GAAQ,OAASV,EAAI,OAASA,EAAI,OAAS0Q,EAAc,MAE1D,IAAIpP,KAAKwP,kBAAoB,KAC5BpQ,GAAQY,KAAKwP,iBAAiBlE,EAAcC,EAAU7M,EAAGmN,EAAeC,EAEzE1M,IAAQ,OAASV,EAAI,SAAW2Q,EAAc,SAAW3Q,EAAI,MAE7D,KAAKsB,KAAKgP,eAAgB,CACzB5P,GAAQ,OAASY,KAAK6O,qBAAuB,SAAW7O,KAAK6O,qBAAuB,SAAWnQ,EAAI,QACnGmN,GAAc4D,wBAAwB/Q,GAGvCsB,KAAKgP,eAAiB,KAEtB,OAAO5P,GAET,OAAAgoB,IArEkCtmB,EAuElCpB,GAA6BJ,QAApB8nB,I1CmgLN7iB,yDAAyDN,YAAYojB,uDAAuD,SAAS7oB,EAAQkB,EAAOJ,G2CrlLvJ,GAAMgoB,GAAQ,WAAd,QAAMA,MAKSA,EAAAhgB,QAAiB,CAKjBggB,GAAAxf,SAAkB,CAKlBwf,GAAA1f,aAAsB,CACrC,OAAA0f,KAEA5nB,GAAkBJ,QAATgoB,O3CwlLHC,mDAAmD,SAAS/oB,EAAQkB,EAAOJ,GACjF,GAAIS,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G4CzmLtB,IAAO4c,GAAKze,EAAiB,+BAO7B,IAAOgpB,GAAYhpB,EAAgB,4CAKnC,IAAOipB,GAAoBjpB,EAAc,yDACzC,IAAO6S,GAAkB7S,EAAc,kDACvC,IAAOkpB,GAAgBlpB,EAAe,qDAKtC,IAAOmpB,GAAcnpB,EAAe,8CAIpC,IAAOqL,GAAQrL,EAAiB,2CAIhC,IAAO+X,GAA0B/X,EAAY,gEAM7C,IAAOqG,GAAcrG,EAAe,mD5CulLpC,I4CjlLMsG,GAAU,SAAA9D,GAASjB,EAAnB+E,EAAU9D,EAoIf,SApIK8D,GAoIOiB,EAAa6hB,EAAyCC,EAAgC3iB,EAAkCC,GApIrI,GAAA0L,GAAA7Q,IAsIEgB,GAAAzB,KAAAS,KAAM4nB,EAAcC,EAAmB3iB,EAAiBC,EApIjDnF,MAAA8nB,WAAoB,CAEpB9nB,MAAA6B,MAAe,CAIf7B,MAAA+nB,gBAA0B,IAQ3B/nB,MAAAgoB,YAA8B,GAAI1mB,MAElCtB,MAAAioB,uBAAgC,CAKhCjoB,MAAAuF,qBAA8B,CAE9BvF,MAAAwF,eAAwB,CAExBxF,MAAAsF,eAAwB,CAExBtF,MAAA+I,kBAA2B,CAE3B/I,MAAA8I,wBAAgC,CAEhC9I,MAAAgJ,kBAA2B,CAuGjChJ,MAAK6B,MAAQkE,CAEb/F,MAAKoF,UAAYyiB,CAEjB7nB,MAAKkoB,wBAA0B,SAAC1W,GAAgB,MAAAX,GAAKsX,eAAe3W,GAEpExR,MAAKooB,6BAA+B,SAAC5W,GAA6B,MAAAX,GAAKwX,oBAAoB7W,GAE3FxR,MAAKqF,YAAcwiB,EAAkBxiB,WAErC,IAAIrF,KAAKsoB,SAAW,KACnBtoB,KAAKuoB,gBA7GPpmB,OAAAC,eAAW0C,EAAAvE,UAAA,Q5C4kLJ8B,I4C5kLP,WAEC,MAAOrC,MAAK6B,O5C6kLNS,I4C1kLP,SAAgBC,GAEf,GAAIvC,KAAK6B,OAASU,EACjB,MAEDvC,MAAK6B,MAAQU,CAEbvC,MAAKwoB,iB5CykLC/lB,WAAY,KACZC,aAAc,M4CpkLrBP,QAAAC,eAAW0C,EAAAvE,UAAA,kB5C0kLJ8B,I4C1kLP,WAEC,MAAOrC,MAAK+nB,iB5C2kLNzlB,I4CxkLP,SAA0BC,GAEzB,GAAIvC,KAAK+nB,iBAAmBxlB,EAC3B,MAEDvC,MAAK+nB,gBAAkBxlB,CAEvBvC,MAAKwoB,iB5CukLC/lB,WAAY,KACZC,aAAc,M4CjkLrBP,QAAAC,eAAW0C,EAAAvE,UAAA,e5CwkLJ8B,I4CxkLP,WAEC,MAAOrC,MAAKyoB,c5CykLNnmB,I4CtkLP,SAAuBC,GAKtB,GAAIvC,KAAKyoB,aACRzoB,KAAKyoB,aAAa5W,oBAAoBoL,EAAMS,OAAQ1d,KAAKkoB,wBAE1DloB,MAAKyoB,aAAelmB,CAEpB,IAAIvC,KAAKyoB,aACRzoB,KAAKyoB,aAAa9W,iBAAiBsL,EAAMS,OAAQ1d,KAAKkoB,wBAEvDloB,MAAKwoB,iB5CmkLC/lB,WAAY,KACZC,aAAc,M4C7jLrBP,QAAAC,eAAW0C,EAAAvE,UAAA,sB5CokLJ8B,I4CpkLP,WAEC,MAAOrC,MAAKoF,UAAUsjB,oB5CqkLhBjmB,WAAY,KACZC,aAAc,M4C7jLrBP,QAAAC,eAAW0C,EAAAvE,UAAA,uB5CskLJ8B,I4CtkLP,WAEC,MAAOrC,MAAKoF,UAAUujB,qB5CukLhBlmB,WAAY,KACZC,aAAc,M4C/jLrBP,QAAAC,eAAW0C,EAAAvE,UAAA,wB5CwkLJ8B,I4CxkLP,WAEC,MAAOrC,MAAKoF,UAAUwjB,sB5CykLhBnmB,WAAY,KACZC,aAAc,M4ChjLboC,GAAAvE,UAAAgoB,cAAR,WAEC,IAAKvoB,KAAKuF,sBAAwBvF,KAAKwF,gBAAkBxF,KAAKsF,mBAAqBtF,KAAKsoB,kBAAmBb,IAAuB,CACjI,GAAIznB,KAAKsoB,SAAW,KACnBtoB,KAAKsoB,QAAQhgB,SAEdtI,MAAKsoB,QAAU,GAAIb,GAAqBznB,KAAK+H,iBAAkB/H,KAAMA,KAAKgI,YACpE,MAAMhI,KAAKsoB,kBAAmBZ,IAAmB,CACvD,GAAI1nB,KAAKsoB,SAAW,KACnBtoB,KAAKsoB,QAAQhgB,SAEdtI,MAAKsoB,QAAU,GAAIZ,GAAiB1nB,KAAK+H,iBAAkB/H,KAAMA,KAAKgI,SAOjElD,GAAAvE,UAAAsoB,mBAAP,SAA0Bvd,GAEzBtK,EAAAT,UAAMsoB,mBAAkBtpB,KAAAS,KAACsL,E5CgjLnB,I4C7iLFpC,GAAalJ,KAAKgoB,YAAYxoB,MAClC,KAAK,GAAIP,GAAW,EAAGA,EAAIiK,IAAOjK,EACjCe,KAAKgoB,YAAY/oB,GAAG6D,OAAO0I,eAAeF,EAActL,KAAKgoB,YAAY/oB,IAM3EkD,QAAAC,eAAW0C,EAAAvE,UAAA,kB5C6iLJ8B,I4C7iLP,WAEC,MAAOrC,MAAK8oB,qBAAsB9oB,KAAK8oB,qBAAqBphB,eAAiB,M5C8iLvEpF,I4C3iLP,SAA0BC,GAEzB,GAAIA,EAAO,CACV,GAAIvC,KAAK8oB,sBAAwB,KAChC9oB,KAAK8oB,qBAAuB,GAAIvS,EAEjCvW,MAAK8oB,qBAAqBphB,eAAiBnF,MAErC,KAAKA,EAAO,CAClB,GAAIvC,KAAK8oB,qBACR9oB,KAAK8oB,qBAAuB,O5C4iLxBrmB,WAAY,KACZC,aAAc,M4CtiLrBP,QAAAC,eAAW0C,EAAAvE,UAAA,wB5C4iLJ8B,I4C5iLP,WAEC,MAAOrC,MAAK+oB,yBAAuD/oB,KAAK+oB,yBAAyBjmB,OAAS,M5C6iLpGR,I4C1iLP,SAAgCC,GAE/B,GAAIvC,KAAK+oB,0BAA4B/oB,KAAK+oB,yBAAyBjmB,QAAUP,EAC5E,MAED,IAAIvC,KAAK+oB,yBAA0B,CAClC/oB,KAAKgpB,kBAAkBhpB,KAAK+oB,yBAC5B/oB,MAAK+oB,yBAA2B,KAGjC,GAAIxmB,EAAO,CACVvC,KAAK+oB,yBAA2B,GAAIlf,GAAStH,EAC7CvC,MAAKipB,eAAejpB,KAAK+oB,4B5C0iLpBtmB,WAAY,KACZC,aAAc,M4CviLboC,GAAAvE,UAAAyoB,kBAAR,SAA0Bzd,EAAmB2d,GAAA,GAAAA,QAAA,GAAiC,CAAjCA,EAAA,MAE5C,GAAIjmB,GAAejD,KAAKgoB,YAAY3kB,QAAQkI,EAE5C,KAAK2d,EACJlpB,KAAKioB,wBAEN1c,GAASzI,OAAO+O,oBAAoBR,EAAmBO,mBAAoB5R,KAAKooB,6BAChFpoB,MAAKgoB,YAAY7kB,OAAOF,EAAO,EAE/BjD,MAAKmpB,iBAGErkB,GAAAvE,UAAA0oB,eAAR,SAAuB1d,EAAmB2d,EAAmCjmB,GAAnC,GAAAimB,QAAA,GAAiC,CAAjCA,EAAA,MAAmC,GAAAjmB,QAAA,GAAiB,CAAjBA,GAAgB,EAE5FsI,EAASzI,OAAO6O,iBAAiBN,EAAmBO,mBAAoB5R,KAAKooB,6BAE7E,IAAIc,EAAmB,CACtB,GAAIjmB,IAAU,EACbjD,KAAKgoB,YAAY7kB,OAAOF,EAAQjD,KAAKgoB,YAAYxoB,OAASQ,KAAKioB,uBAAwB,EAAG1c,OAE1FvL,MAAKgoB,YAAYjlB,KAAKwI,EACvBvL,MAAKioB,6BACC,CACNjoB,KAAKgoB,YAAY7kB,OAAOnD,KAAKgoB,YAAYxoB,OAASQ,KAAKioB,uBAAwB,EAAG1c,GAGnFvL,KAAKmpB,iBAQCrkB,GAAAvE,UAAAsC,gBAAP,SAAuBC,GAEtB9C,KAAKipB,eAAe,GAAIpf,GAAS/G,GAAS,MAM3CX,QAAAC,eAAW0C,EAAAvE,UAAA,oB5CmiLJ8B,I4CniLP,WAEC,MAAOrC,MAAKioB,wB5CoiLNxlB,WAAY,KACZC,aAAc,M4C5hLdoC,GAAAvE,UAAA6oB,gBAAP,SAAuBtmB,GAEtB,MAAO9C,MAAKqpB,uBAAuBvmB,IAAW,KAQxCgC,GAAAvE,UAAAyC,kBAAP,SAAyBC,GAExB,GAAIA,EAAQ,GAAKA,EAAQjD,KAAKioB,uBAAyB,EACtD,MAAO,KAER,OAA0BjoB,MAAKgoB,YAAY/kB,EAAQjD,KAAKgoB,YAAYxoB,OAASQ,KAAKioB,wBAAwBnlB,OAQpGgC,GAAAvE,UAAA2C,kBAAP,SAAyBJ,EAAyBG,GAEjDjD,KAAKipB,eAAe,GAAIpf,GAAS/G,GAAS,KAAMG,GAO1C6B,GAAAvE,UAAA6C,mBAAP,SAA0BN,GAEzB,GAAIyI,GAAoBvL,KAAKqpB,uBAAuBvmB,EAEpD,IAAIyI,GAAY,KACfvL,KAAKgpB,kBAAkBzd,EAAU,MAO5BzG,GAAAvE,UAAA8I,qBAAP,SAA4BpG,GAE3B,GAAIA,EAAQ,GAAKA,EAAQjD,KAAKioB,uBAAyB,EACtD,MAED,IAAI1c,GAAoBvL,KAAKgoB,YAAY/kB,EAAQjD,KAAKgoB,YAAYxoB,OAASQ,KAAKioB,uBAEhF,IAAI1c,GAAY,KACfvL,KAAKgpB,kBAAkBzd,EAAU,MAI3BzG,GAAAvE,UAAA8oB,uBAAR,SAA+BvmB,GAE9B,GAAIoG,GAAalJ,KAAKgoB,YAAYxoB,MAClC,KAAK,GAAIP,GAAW,EAAGA,EAAIiK,IAAOjK,EACjC,GAAIe,KAAKgoB,YAAY/oB,GAAG6D,QAAUA,EACjC,MAAO9C,MAAKgoB,YAAY/oB,EAE1B,OAAO,MAMRkD,QAAAC,eAAW0C,EAAAvE,UAAA,gB5CkhLJ8B,I4ClhLP,WAEC,MAAOrC,MAAKspB,iBAAsCtpB,KAAKspB,iBAAiBxmB,OAAS,M5CmhL3ER,I4ChhLP,SAAwBC,GAEvB,GAAIvC,KAAKspB,kBAAoBtpB,KAAKspB,iBAAiBxmB,QAAUP,EAC5D,MAED,IAAIvC,KAAKspB,iBAAkB,CAC1BtpB,KAAKgpB,kBAAkBhpB,KAAKspB,iBAC5BtpB,MAAKspB,iBAAmB,KAGzB,GAAI/mB,EAAO,CACVvC,KAAKspB,iBAAmB,GAAIzf,GAAStH,EACrCvC,MAAKipB,eAAejpB,KAAKspB,oB5CghLpB7mB,WAAY,KACZC,aAAc,M4C1gLrBP,QAAAC,eAAW0C,EAAAvE,UAAA,iB5CghLJ8B,I4ChhLP,WAEC,MAAOrC,MAAKupB,kBAAwCvpB,KAAKupB,kBAAkBzmB,OAAS,M5CihL9ER,I4C9gLP,SAAyBC,GAExB,GAAIvC,KAAKupB,mBAAqBvpB,KAAKupB,kBAAkBzmB,QAAUP,EAC9D,MAED,IAAIvC,KAAKupB,kBAAmB,CAC3BvpB,KAAKgpB,kBAAkBhpB,KAAKupB,kBAC5BvpB,MAAKupB,kBAAoB,KAG1B,GAAIhnB,EAAO,CACVvC,KAAKupB,kBAAoB,GAAI1f,GAAStH,EACtCvC,MAAKipB,eAAejpB,KAAKupB,qB5C8gLpB9mB,WAAY,KACZC,aAAc,M4CxgLrBP,QAAAC,eAAW0C,EAAAvE,UAAA,gB5C8gLJ8B,I4C9gLP,WAEC,MAAOrC,MAAKwpB,iBAAwCxpB,KAAKwpB,iBAAiB1mB,OAAS,M5C+gL7ER,I4C5gLP,SAAwBC,GAEvB,GAAIvC,KAAKwpB,kBAAoBxpB,KAAKwpB,iBAAiB1mB,QAAUP,EAC5D,MAED,IAAIvC,KAAKwpB,iBAAkB,CAC1BxpB,KAAKgpB,kBAAkBhpB,KAAKwpB,iBAC5BxpB,MAAKwpB,iBAAmB,KAGzB,GAAIjnB,EAAO,CACVvC,KAAKwpB,iBAAmB,GAAI3f,GAAStH,EACrCvC,MAAKipB,eAAejpB,KAAKwpB,oB5C4gLpB/mB,WAAY,KACZC,aAAc,M4CtgLrBP,QAAAC,eAAW0C,EAAAvE,UAAA,iB5C4gLJ8B,I4C5gLP,WAEC,MAAOrC,MAAKypB,kBAAwCzpB,KAAKypB,kBAAkB3mB,OAAS,M5C6gL9ER,I4C1gLP,SAAyBC,GAExB,GAAIvC,KAAKypB,mBAAqBzpB,KAAKypB,kBAAkB3mB,QAAUP,EAC9D,MAED,IAAIvC,KAAKypB,kBAAmB,CAC3BzpB,KAAKgpB,kBAAkBhpB,KAAKypB,kBAC5BzpB,MAAKypB,kBAAoB,KAG1B,GAAIlnB,EAAO,CACVvC,KAAKypB,kBAAoB,GAAI5f,GAAStH,EACtCvC,MAAKipB,eAAejpB,KAAKypB,qB5C0gLpBhnB,WAAY,KACZC,aAAc,M4CpgLrBP,QAAAC,eAAW0C,EAAAvE,UAAA,kB5C0gLJ8B,I4C1gLP,WAEC,MAAOrC,MAAK0pB,mBAA0C1pB,KAAK0pB,mBAAmB5mB,OAAS,M5C2gLjFR,I4CxgLP,SAA0BC,GAEzB,GAAIvC,KAAK0pB,oBAAsB1pB,KAAK0pB,mBAAmB5mB,QAAUP,EAChE,MAED,IAAIvC,KAAK0pB,mBAAoB,CAC5B1pB,KAAKgpB,kBAAkBhpB,KAAK0pB,mBAC5B1pB,MAAK0pB,mBAAqB,KAG3B,GAAInnB,EAAO,CACVvC,KAAK0pB,mBAAqB,GAAI7f,GAAStH,EACvCvC,MAAKipB,eAAejpB,KAAK0pB,sB5CwgLpBjnB,WAAY,KACZC,aAAc,M4ClgLdoC,GAAAvE,UAAA+H,QAAP,WAECtH,EAAAT,UAAM+H,QAAO/I,KAAAS,KAEb,IAAIA,KAAKyoB,aACRzoB,KAAKyoB,aAAa5W,oBAAoBoL,EAAMS,OAAQ1d,KAAKkoB,wBAE1D,OAAOloB,KAAKgoB,YAAYxoB,OACvBQ,KAAKgpB,kBAAkBhpB,KAAKgoB,YAAY,GAEzChoB,MAAKgoB,YAAc,KAMZljB,GAAAvE,UAAA8nB,oBAAR,SAA4B7W,GAE3BxR,KAAKmpB,iBAQCrkB,GAAAvE,UAAAopB,WAAP,SAAkBxZ,GAEjBnP,EAAAT,UAAMopB,WAAUpqB,KAAAS,KAACmQ,EAEjB,IAAI5E,EACJ,IAAIrC,GAAalJ,KAAKgoB,YAAYxoB,MAClC,KAAK,GAAIP,GAAW,EAAGA,EAAIiK,IAAOjK,EAAG,CACpCsM,EAAWvL,KAAKgoB,YAAY/oB,EAC5B,IAAIsM,EAASzB,UACZyB,EAASzI,OAAOyJ,UAAUvM,KAAKsoB,QAAS/c,EAAUvL,KAAKgI,SAWnDlD,GAAAvE,UAAAqpB,SAAP,SAAgB1Z,EAA2BC,EAAe0Z,GAEzD7oB,EAAAT,UAAMqpB,SAAQrqB,KAAAS,KAACkQ,EAAYC,EAAQ0Z,EAEnC,IAAIte,EACJ,IAAIrC,GAAalJ,KAAKgoB,YAAYxoB,MAClC,KAAK,GAAIP,GAAW,EAAGA,EAAIiK,IAAOjK,EAAG,CACpCsM,EAAWvL,KAAKgoB,YAAY/oB,EAC5B;GAAIsM,EAASzB,UACZyB,EAASzI,OAAOmN,gBAAgBjQ,KAAKsoB,QAAS/c,EAAU2E,EAAYlQ,KAAKgI,OAAQmI,IAO7ErL,GAAAvE,UAAAupB,aAAP,WAEC9oB,EAAAT,UAAMupB,aAAYvqB,KAAAS,KAElB,IAAIuL,EACJ,IAAIrC,GAAalJ,KAAKgoB,YAAYxoB,MAClC,KAAK,GAAIP,GAAW,EAAGA,EAAIiK,IAAOjK,EAAG,CACpCsM,EAAWvL,KAAKgoB,YAAY/oB,EAC5B,IAAIsM,EAASzB,UACZyB,EAASzI,OAAOgP,YAAY9R,KAAKsoB,QAAS/c,EAAUvL,KAAKgI,SAIrDlD,GAAAvE,UAAAwpB,sBAAP,SAA6Bze,GAE5BtK,EAAAT,UAAMwpB,sBAAqBxqB,KAAAS,KAACsL,EAG5BA,GAAa0e,sBAAwBjjB,QAAQ/G,KAAK6B,OAASgD,EAAe+C,aAE1E,KAAK0D,EAAa2e,kBAAoBjqB,KAAKwF,eAAiB,GAAK8F,EAAa4e,WAAY,CACzF5e,EAAa6e,uBAEb,IAAIpjB,QAAQ/G,KAAK6B,MAAQgD,EAAeyC,SACvCgE,EAAa8e,sBAAwB,KAGvC,GAAInrB,EACJ,IAAIiK,GAAalJ,KAAKgoB,YAAYxoB,MAClC,KAAKP,EAAI,EAAGA,EAAIiK,IAAOjK,EACtBe,KAAKqqB,0BAA0B/e,EAActL,KAAKgoB,YAAY/oB,GAE/D,KAAKA,EAAI,EAAGA,EAAIiK,IAAOjK,EACtBe,KAAKgoB,YAAY/oB,GAAG6K,UAAY9J,KAAKgoB,YAAY/oB,GAAG6D,OAAOoL,QAAQ5C,GAS7DxG,GAAAvE,UAAA8pB,0BAAR,SAAkC/e,EAA+BC,GAEhEA,EAASxB,OAETwB,GAASzI,OAAOuI,QAAQC,EAAcC,EAEtC,IAAIA,EAASnB,gBACZkB,EAAagf,wBAEd,IAAI/e,EAASb,qBAAsB,CAElCY,EAAa6e,uBAEb,IAAI5e,EAASZ,uBACZW,EAAa8e,sBAAwB,SAEhC,IAAI7e,EAASZ,uBAAwB,CAC3CW,EAAa6e,uBACb7e,GAAa8e,sBAAwB,KAGtC,GAAI7e,EAASjB,aACZgB,EAAayP,oBAEd,IAAIxP,EAAShB,cACZe,EAAaif,qBAEd,IAAIhf,EAASlB,UACZiB,EAAakf,qBAEd,IAAIjf,EAASf,QACZc,EAAamf,gBAEd,IAAIlf,EAASd,iBACZa,EAAaof,0BAGR5lB,GAAAvE,UAAAoqB,2BAAP,SAAkCrf,EAA+BO,EAAmCC,GAEnG,GAAI1M,GAAc,EAElB,IAAIY,KAAKupB,mBAAqBvpB,KAAKupB,kBAAkBzf,UACpD1K,GAAQY,KAAKupB,kBAAkBzmB,OAAOiP,eAAezG,EAActL,KAAKupB,kBAAmB1d,EAAeC,EAE3G,IAAI9L,KAAKypB,mBAAqBzpB,KAAKypB,kBAAkB3f,UACpD1K,GAAQY,KAAKypB,kBAAkB3mB,OAAOiP,eAAezG,EAActL,KAAKypB,kBAAmB5d,EAAeC,EAE3G,IAAI9L,KAAK0pB,oBAAsB1pB,KAAK0pB,mBAAmB5f,UACtD1K,GAAQY,KAAK0pB,mBAAmB5mB,OAAOiP,eAAezG,EAActL,KAAK0pB,mBAAoB7d,EAAeC,EAE7G,OAAO1M,GAGD0F,GAAAvE,UAAAqqB,6BAAP,SAAoCtf,EAA+BO,EAAmCC,GAErG,GAAI1M,GAAc,EAElB,IAAIY,KAAKupB,mBAAqBvpB,KAAKupB,kBAAkBzf,UAAW,CAC/D1K,GAAQY,KAAKupB,kBAAkBzmB,OAAO6I,iBAAiBL,EAActL,KAAKupB,kBAAmBzd,EAAgB+e,aAAchf,EAAeC,EAE1I,IAAI9L,KAAKupB,kBAAkBjf,aAC1BuB,EAAc4D,wBAAwB3D,EAAgBwB,eAEvD,IAAItN,KAAKupB,kBAAkBlf,UAC1BwB,EAAc4D,wBAAwB3D,EAAgBgJ,iBAGxD,GAAI9U,KAAKypB,mBAAqBzpB,KAAKypB,kBAAkB3f,UACpD1K,GAA8BY,KAAKypB,kBAAkB3mB,OAAQiM,4BAAmDzD,EAActL,KAAKypB,kBAAmB5d,EAAeC,EAEtK,IAAI9L,KAAK0pB,oBAAsB1pB,KAAK0pB,mBAAmB5f,UACtD1K,GAA8BY,KAAK0pB,mBAAmB5mB,OAAQiM,4BAAmDzD,EAActL,KAAK0pB,mBAAoB7d,EAAeC,EAExK,OAAO1M,GAGD0F,GAAAvE,UAAAuqB,iCAAP,SAAwCxf,EAAmC8D,EAAmC2b,EAAuClf,EAAmCC,GAEvL,MAA6B9L,MAAKypB,kBAAkB3mB,OAAQqM,yBAAyB7D,EAActL,KAAKypB,kBAAmBra,EAAa2b,EAAiBlf,EAAeC,GAGlKhH,GAAAvE,UAAAyqB,kCAAP,SAAyC1f,EAAmC8D,EAAmC6b,EAAwCpf,EAAmCC,GAEzL,MAA6B9L,MAAK0pB,mBAAmB5mB,OAAQqM,yBAAyB7D,EAActL,KAAK0pB,mBAAoBta,EAAa6b,EAAkBpf,EAAeC,GAGrKhH,GAAAvE,UAAA2qB,iCAAP,SAAwC5f,EAAmC6f,EAA8BC,EAAkBvf,EAAmCC,GAE7J,MAA6B9L,MAAKypB,kBAAkB3mB,OAAQ4M,yBAAyBpE,EAActL,KAAKypB,kBAAmB0B,EAAQC,EAAWvf,EAAeC,GAGvJhH,GAAAvE,UAAA8qB,kCAAP,SAAyC/f,EAAmC6f,EAA8BC,EAAkBvf,EAAmCC,GAE9J,MAA6B9L,MAAK0pB,mBAAmB5mB,OAAQ4M,yBAAyBpE,EAActL,KAAK0pB,mBAAoByB,EAAQC,EAAWvf,EAAeC,GAGzJhH,GAAAvE,UAAA+qB,4BAAP,SAAmChgB,EAAmCO,EAAmCC,GAExG,GAAI1M,GAAc,EAElB,IAAIY,KAAKwpB,iBACRpqB,GAAQY,KAAKwpB,iBAAiB1mB,OAAOiP,eAAezG,EAActL,KAAKwpB,iBAAkB3d,EAAeC,EAEzG,OAAO1M,GAGD0F,GAAAvE,UAAAgrB,8BAAP,SAAqCjgB,EAAmCO,EAAmCC,GAE1G,GAAI1M,GAAc,EAElB,IAAIkM,EAAakgB,uBAAyBxrB,KAAKyrB,iBAAkB,CAChErsB,GAAQ,OAAS0M,EAAgB+e,aAAe,OAAS/e,EAAgB+e,aAAe,OAAS/e,EAAgBwD,QAAU,OAC3H,OAASxD,EAAgB+e,aAAe,SAAW/e,EAAgB+e,aAAe,KAAO/e,EAAgB+e,aAAe,OACxH,OAAS/e,EAAgB+e,aAAe,OAAS/e,EAAgB+e,aAAe,OAAS/e,EAAgBwD,QAAU,OACnH,OAASxD,EAAgB+e,aAAe,SAAW/e,EAAgB+e,aAAe,KAGnF,GAAI7qB,KAAKwpB,iBACRpqB,GAAQY,KAAKwpB,iBAAiB1mB,OAAO6I,iBAAiBL,EAActL,KAAKwpB,iBAAkB1d,EAAgBgE,aAAcjE,EAAeC,EAEzI,IAAI9L,KAAKypB,mBAAqBzpB,KAAKypB,kBAAkB3f,UAAW,CAC/D1K,GAA8BY,KAAKypB,kBAAkB3mB,OAAQ8M,6BAA6BtE,EAActL,KAAKypB,kBAAmB3d,EAAgB+e,aAAchf,EAAeC,EAG7K,IAAI9L,KAAKypB,kBAAkBnf,aAC1BuB,EAAc4D,wBAAwB3D,EAAgBwB,eAEvD,IAAItN,KAAKypB,kBAAkBpf,UAC1BwB,EAAc4D,wBAAwB3D,EAAgBgJ,iBAGxD,GAAI9U,KAAK0pB,oBAAsB1pB,KAAK0pB,mBAAmB5f,UAAW,CACjE1K,GAA8BY,KAAK0pB,mBAAmB5mB,OAAQ8M,6BAA6BtE,EAActL,KAAK0pB,mBAAoB5d,EAAgB+e,aAAchf,EAAeC,EAC/K,IAAI9L,KAAK0pB,mBAAmBpf,aAC3BuB,EAAc4D,wBAAwB3D,EAAgBwB,eACvD,IAAItN,KAAK0pB,mBAAmBrf,UAC3BwB,EAAc4D,wBAAwB3D,EAAgBgJ,iBAGxD,GAAI9U,KAAKwpB,iBACR3d,EAAc4D,wBAAwB3D,EAAgBgE,aAEvD,OAAO1Q,GAOD0F,GAAAvE,UAAAmrB,mBAAP,SAA0BpgB,GAEzB,GAAIA,EAAaqgB,WAChB,MAAO,MAER,IAAIpgB,EACJ,IAAIrC,GAAalJ,KAAKgoB,YAAYxoB,MAClC,KAAK,GAAIP,GAAW,EAAGA,EAAIiK,IAAOjK,EAAG,CACpCsM,EAAWvL,KAAKgoB,YAAY/oB,EAC5B,IAAIsM,EAASzB,YAAcyB,EAASzI,OAAO+Z,oBAC1C,MAAO,OAGT,MAAO,MAMD/X,GAAAvE,UAAAqrB,wBAAP,SAA+BtgB,GAE9B,MAA4BtL,MAAKspB,iBAAiBxmB,OAAQkY,yBAMpDlW,GAAAvE,UAAAsrB,iBAAP,SAAwBvgB,GAEvB,MAAOtL,MAAKspB,kBAAoBtpB,KAAKspB,iBAAiBxf,UAIhDhF,GAAAvE,UAAAurB,sBAAP,SAA6BxgB,EAA+BO,EAAmCC,GAE9F,MAAO9L,MAAKspB,iBAAiBxmB,OAAOiP,eAAezG,EAActL,KAAKspB,iBAAkBzd,EAAeC,GAGjGhH,GAAAvE,UAAAwrB,wBAAP,SAA+BzgB,EAA+BO,EAAmCC,GAEhG,GAAI1M,GAAcY,KAAKspB,iBAAiBxmB,OAAO6I,iBAAiBL,EAActL,KAAKspB,iBAAkBxd,EAAgBwB,eAAgBzB,EAAeC,EAEpJ,IAAI9L,KAAKspB,iBAAiBjf,UACzBwB,EAAc4D,wBAAwB3D,EAAgBgJ,gBAEvD,IAAI9U,KAAKspB,iBAAiB3e,wBAA0B3K,KAAKspB,iBAAiB5e,qBACzEmB,EAAcmgB,sBAAsBlgB,EAAgBqS,qBAErD,OAAO/e,GAMD0F,GAAAvE,UAAA0rB,gBAAP,SAAuB3gB,EAA+B6B,EAA8B+e,GAEnF,GAAI9sB,GAAc,EAClB,IAAImM,EACJ,IAAIrC,GAAalJ,KAAKgoB,YAAYxoB,MAClC,KAAK,GAAIP,GAAWiK,EAAMlJ,KAAKioB,uBAAwBhpB,EAAIiK,EAAKjK,IAAK,CACpEsM,EAAWvL,KAAKgoB,YAAY/oB,EAC5B,IAAIsM,EAASzB,UAAW,CACvB1K,GAAQmM,EAASzI,OAAOiP,eAAezG,EAAcC,EAAU4B,EAAU+e,EAEzE,IAAI3gB,EAASb,sBAAwBa,EAASZ,uBAC7CwC,EAAS6e,sBAAsBE,EAAU/N,uBAI5C,GAAIne,KAAK+oB,0BAA4B/oB,KAAK+oB,yBAAyBjf,UAClE1K,GAAQY,KAAK+oB,yBAAyBjmB,OAAOiP,eAAezG,EAActL,KAAK+oB,yBAA0B5b,EAAU+e,EAEpH,OAAO9sB,GAMD0F,GAAAvE,UAAA4rB,kBAAP,SAAyB7gB,EAA+B6B,EAA8B+e,GAErF,GAAI9sB,GAAc,EAClB,IAAIgtB,EAEJ,IAAIpsB,KAAK6H,eAAiB7H,KAAKioB,uBAAyB,EAAG,CAC1DmE,EAAWjf,EAASiX,2BACpBjX,GAAS+B,sBAAsBkd,EAAU,EACzChtB,IAAQ,OAASgtB,EAAW,KAAOF,EAAUrB,aAAe,OAG7D,GAAItf,EACJ,IAAIrC,GAAalJ,KAAKgoB,YAAYxoB,MAClC,KAAK,GAAIP,GAAWiK,EAAMlJ,KAAKioB,uBAAwBhpB,EAAIiK,EAAKjK,IAAK,CACpEsM,EAAWvL,KAAKgoB,YAAY/oB,EAC5B,IAAIsM,EAASzB,UAAW,CACvB1K,GAAQmM,EAASzI,OAAO6I,iBAAiBL,EAAcC,EAAU2gB,EAAUrB,aAAc1d,EAAU+e,EAEnG,IAAI3gB,EAASjB,aACZ6C,EAASsC,wBAAwByc,EAAU5e,eAE5C,IAAI/B,EAASlB,UACZ8C,EAASsC,wBAAwByc,EAAUpX,kBAK9C,GAAI9U,KAAK6H,eAAiB7H,KAAKioB,uBAAyB,EAAG,CAC1D7oB,GAAQ,OAAS8sB,EAAUrB,aAAe,OAASuB,EAAW,IAC9Djf,GAASsC,wBAAwB2c,GAGlC,GAAIpsB,KAAK+oB,0BAA4B/oB,KAAK+oB,yBAAyBjf,UAClE1K,GAAQY,KAAK+oB,yBAAyBjmB,OAAO6I,iBAAiBL,EAActL,KAAK+oB,yBAA0BmD,EAAUrB,aAAc1d,EAAU+e,EAE9I,OAAO9sB,GAKD0F,GAAAvE,UAAA8rB,cAAP,SAAqB/gB,GAEpB,MAAOvE,SAAQ/G,KAAKwpB,mBAAqBxpB,KAAKyoB,aAAa6D,yBAAyB9sB,OAAS,GAAKQ,KAAKyoB,aAAa8D,mBAAmB/sB,OAAS,IAM1IsF,GAAAvE,UAAAisB,eAAP,SAAsBlhB,GAErB,MAAOvE,SAAQ/G,KAAK0pB,oBAMd5kB,GAAAvE,UAAAksB,cAAP,SAAqBnhB,GAEpB,MAAOvE,SAAQ/G,KAAKypB,mBAIb3kB,GAAAvE,UAAA4nB,eAAR,SAAuB3W,GAEtBxR,KAAKwoB,gBAGE1jB,GAAAvE,UAAAioB,cAAR,WAEC,GAAIkE,GAAiC1sB,KAAKuF,oBAC1C,IAAIonB,GAA2B3sB,KAAKwF,cACpC,IAAIonB,GAA2B5sB,KAAKsF,cAEpC,IAAItF,KAAKyoB,cAAiBzoB,KAAK6B,MAAQgD,EAAeiD,SAAW,CAChE9H,KAAKuF,qBAAuBvF,KAAK6sB,8BAA8B7sB,KAAKyoB,aAAaljB,qBACjFvF,MAAKwF,eAAiBxF,KAAK8sB,wBAAwB9sB,KAAKyoB,aAAajjB,eACrExF,MAAKsF,eAAiBtF,KAAK+sB,mBAAmB/sB,KAAKyoB,aAAanjB,eAEhE,IAAItF,KAAK+nB,gBAAiB,CACzB/nB,KAAKuF,sBAAwBvF,KAAKyoB,aAAahjB,2BAC/CzF,MAAKwF,gBAAkBxF,KAAKyoB,aAAa/iB,2BAGpC,CACN1F,KAAKuF,qBAAuB,CAC5BvF,MAAKwF,eAAiB,CACtBxF,MAAKsF,eAAiB,EAGvB,GAAIonB,GAA2B1sB,KAAKuF,sBAAwBonB,GAAqB3sB,KAAKwF,gBAAkBonB,GAAqB5sB,KAAKsF,eAAgB,CACjJtF,KAAKuoB,eAELvoB,MAAKmpB,kBASCrkB,GAAAvE,UAAAssB,8BAAR,SAAsCtnB,GAErC,MAAO4D,MAAK6jB,IAAIznB,EAAuBvF,KAAK8I,wBAAyB9I,KAAK8nB,YAQnEhjB,GAAAvE,UAAAusB,wBAAR,SAAgCtnB,GAE/B,GAAIynB,GAAiBjtB,KAAK8nB,WAAa9nB,KAAKuF,oBAC5C,OAAO4D,MAAK6jB,IAAIxnB,EAAiBxF,KAAK+I,kBAAmBkkB,GAQlDnoB,GAAAvE,UAAAwsB,mBAAR,SAA2BznB,GAE1B,GAAI4nB,GAAqB,CAEzB,KAAKltB,KAAK4oB,qBAAuBpB,EAAa2F,SAAW,IACtDD,CAEH,KAAKltB,KAAK2oB,oBAAsBnB,EAAa2F,SAAW,IACrDD,CAGH,OAAO/jB,MAAK6jB,IAAI1nB,EAAiBtF,KAAKgJ,kBAAoB,EAAEkkB,EAAe,GAE7E,OAAApoB,IAr6ByB6iB,EAu6BzBjoB,GAAoBJ,QAAXwF,I5Cy4KNwa,+BAA+Brb,UAAUmpB,4CAA4CnpB,UAAUub,2CAA2Cvb,UAAUopB,gEAAgEppB,UAAUyF,mDAAmDzF,UAAUqpB,yDAAyDrpB,UAAUspB,qDAAqDtpB,UAAU+N,kDAAkD/N,UAAUupB,8CAA8CvpB,YAAYwpB,8DAA8D,SAASjvB,EAAQkB,EAAOJ,GAC5mB,GAAIS,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G6Cl2MtB,IAAOqtB,GAAQlvB,EAAiB,gCAChC,IAAOmvB,GAAanvB,EAAe,yCAGnC,IAAOovB,GAAmBpvB,EAAc,8CAKxC,IAAOqvB,GAAoBrvB,EAAc,+CAWzC,IAAOmpB,GAAcnpB,EAAe,8C7Cy1MpC,I6Cn1MMsvB,GAAqB,SAAA9sB,GAASjB,EAA9B+tB,EAAqB9sB,EAsC1B,SAtCK8sB,GAsCOlG,EAA+BC,EAAsC3iB,EAAkCC,GAElHnE,EAAAzB,KAAAS,KAAM4nB,EAAcC,EAAmB3iB,EAAiBC,EApCjDnF,MAAA+tB,aAA+B,GAC/B/tB,MAAAguB,YAA4B1sB,MAAc,GAAI,EAAG,EAAG,EAEpDtB,MAAAiuB,2BAAqC,KAK7C9rB,OAAAC,eAAW0rB,EAAAvtB,UAAA,e7C41MJ8B,I6C51MP,WAEC,MAAOrC,MAAK+tB,c7C61MNzrB,I6C11MP,SAAuBC,GAEtBvC,KAAK+tB,aAAexrB,G7C21MdE,WAAY,KACZC,aAAc,M6Ct1MrBP,QAAAC,eAAW0rB,EAAAvtB,UAAA,c7C41MJ8B,I6C51MP,WAEC,MAAOrC,MAAKguB,YAAY,I7C61MlB1rB,I6C11MP,SAAsBC,GAErBvC,KAAKguB,YAAY,GAAKzrB,G7C21MhBE,WAAY,KACZC,aAAc,M6Cv0MdorB,GAAAvtB,UAAA+H,QAAP,WAEC,GAAItI,KAAKkuB,UAAW,CACnB,IAAK,GAAIC,KAAOnuB,MAAKkuB,UAAW,CAC/B,GAAIpsB,GAAwB9B,KAAKkuB,UAAUC,EAC3CrsB,GAAQwG,UAETtI,KAAKkuB,UAAY,MAOXJ,GAAAvtB,UAAA6tB,yBAAR,WAEC,GAAIpuB,KAAKkuB,UAAW,CACnB,IAAK,GAAIC,KAAOnuB,MAAKkuB,UAAW,CAC/B,GAAIpsB,GAAwB9B,KAAKkuB,UAAUC,EAC3CrsB,GAAQwG,WAIVtI,KAAKkuB,UAAY,GAAI/rB,OACrBnC,MAAKquB,aAAe,GAAIlsB,OACxBnC,MAAKiuB,2BAA6B,MAM5BH,GAAAvtB,UAAA0rB,gBAAP,WAEC,GAAI7sB,EAEJA,GAAO,yBACL,sBACA,oBAEFA,IAAQ,sBACN,eAGFA,IAAQ,sBAER,OAAOA,GAMD0uB,GAAAvtB,UAAA4rB,kBAAP,SAAyB7gB,EAA+BO,EAAmCC,GAE1F,GAAI1M,GAAc,EAGlBA,IAAQ,uBACN,iBACA,2BACA,sBACA,eAEF,OAAOA,GASD0uB,GAAAvtB,UAAAyU,cAAP,SAAqB9E,GAEpB,MAAOlQ,MAAKkuB,UAAUhe,EAAWoe,gBAAgBhlB,IAQ3CwkB,GAAAvtB,UAAA0U,gBAAP,SAAuB/E,GAEtB,MAAOlQ,MAAKquB,aAAane,EAAWoe,gBAAgBhlB,IAM9CwkB,GAAAvtB,UAAAqpB,SAAP,SAAgB1Z,EAA2BC,EAAe0Z,GAEzD,GAAI3T,EACJ,IAAIqY,GAAqBvuB,KAAKgI,OAAOumB,OACrC,IAAIrlB,EACJ,IAAIslB,EACJ,IAAIC,GAA0BzuB,KAAK0uB,mBAAmBrpB,YAAYspB,eAClE,IAAIC,GAAa1e,EAAWoe,gBAAgBhlB,EAE5C,KAAKtJ,KAAKkuB,UAAUU,GACnB5uB,KAAKkuB,UAAUU,GAAO,GAAIjB,GAAc3tB,KAAK+tB,aAAc/tB,KAAK+tB,aAEjE,KAAK/tB,KAAKquB,aAAaO,GACtB5uB,KAAKquB,aAAaO,GAAO,GAAIlB,EAE9BxkB,GAAMulB,EAAOjvB,MAGbgvB,GAAQC,EAAO,EAEfvY,GAASsY,EAAMK,2BAA2B3e,EAAW4e,aAAc3e,EAAQnQ,KAAKquB,aAAaO,GAE7F5uB,MAAKgI,OAAO+mB,gBAAgB/uB,KAAKkuB,UAAUU,GAAM,KACjDL,GAAQS,MAAM,EAAK,EAAK,EACxBT,GAAQU,8BAA8BpB,EAAqBqB,OAAQ,EAAGhZ,EAAQ,KAC9EqY,GAAQY,6BAA6BtB,EAAqBuB,SAAU,EAAGpvB,KAAKqvB,KAAM,EAElFrvB,MAAKgI,OAAOsnB,eAAe,EAAGpf,EAAWqf,cAAc3B,EAAoB4B,eAAgBtf,EAAWuf,gBAAgB7B,EAAoB4B,eAAgB5B,EAAoB8B,gBAC9K1vB,MAAKgI,OAAOsnB,eAAe,EAAGpf,EAAWqf,cAAc3B,EAAoB+B,aAAczf,EAAWuf,gBAAgB7B,EAAoB+B,aAAc/B,EAAoBgC,cAC1KrB,GAAQsB,cAAc7vB,KAAKgI,OAAO8nB,eAAe5f,EAAW6f,gBAAiB,EAAG7f,EAAW8f,cAMrFlC,GAAAvtB,UAAAopB,WAAP,SAAkBxZ,GAEjB,GAAInQ,KAAKiuB,2BACRjuB,KAAKouB,0BAGNptB,GAAAT,UAAMopB,WAAUpqB,KAAAS,KAACmQ,EAEjBnQ,MAAKgI,OAAOumB,QAAQY,6BAA6BtB,EAAqBqB,OAAQ,EAAGlvB,KAAKguB,YAAa,GAErG,OAAAF,IA3LoCnG,EA6LpCjoB,GAA+BJ,QAAtBwuB,I7C2yMNmC,gCAAgChsB,UAAUisB,yCAAyCjsB,UAAUksB,8CAA8ClsB,UAAUupB,8CAA8CvpB,UAAUmsB,+CAA+CnsB,YAAYosB,2DAA2D,SAAS7xB,EAAQkB,EAAOJ,GAC9V,GAAIS,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G8C7/MtB,IAAOiwB,GAAkB9xB,EAAa,gDAEtC,IAAO+xB,GAAgB/xB,EAAc,qDAKrC,IAAOuG,GAA0BvG,EAAW,oE9C8/M5C,I8Cz/MMgyB,GAAoB,SAAAxvB,GAASjB,EAA7BywB,EAAoBxvB,EASzB,SATKwvB,GASOtrB,EAAkCC,GAE7CnE,EAAAzB,KAAAS,KAAMkF,EAAiBC,EAEvBnF,MAAKywB,gCAAkC,GAAIF,GAAiBxrB,EAA4B/E,KAAK+H,iBAAkB/H,KAAKgI,QAQ9GwoB,EAAAjwB,UAAAwD,sBAAP,SAA6B8jB,GAE5B,MAAO7nB,MAAKywB,gCAAgCC,QAAQ7I,GASvC2I,GAAAG,QAAd,SAAsBzrB,EAAkCC,GAEvD,GAAIyrB,GAAgBN,EAAmBO,OAAO1rB,EAAM2rB,cAAgBR,EAAmBO,OAAO1rB,EAAM2rB,YAAc,GAAI3uB,QAEtH,OAAQyuB,GAAM1rB,EAAgBoE,MAAQsnB,EAAM1rB,EAAgBoE,IAAM,GAAIknB,GAAqBtrB,EAAiBC,IAE9G,OAAAqrB,IAtCmCF,EAwCL5wB,GAAAJ,QAArBkxB,I9Cm/MNO,oEAAoE9sB,UAAU+sB,qDAAqD/sB,UAAUgtB,gDAAgDhtB,YAAYitB,yDAAyD,SAAS1yB,EAAQkB,EAAOJ,GAC7R,GAAIS,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G+CtjNtB,IAAO8wB,GAAmB3yB,EAAa,iDACvC,IAAO4yB,GAAqB5yB,EAAY,mDACxC,IAAO6yB,GAAqB7yB,EAAY,mDACxC,IAAO8yB,GAAyB9yB,EAAW,uDAC3C,IAAO+yB,GAAgB/yB,EAAc,8CAGrC,IAAOgyB,GAAoBhyB,EAAa,uD/C6jNxC,I+CrjNMgzB,GAAkB,SAAAxwB,GAASjB,EAA3ByxB,EAAkBxwB,EAKvB,SALKwwB,GAKOC,GAEXzwB,EAAAzB,KAAAS,KAAMyxB,GAGAD,EAAAjxB,UAAAmxB,aAAP,WAEC1xB,KAAK2xB,yBAA2BnB,EAAqBG,QAAQQ,EAAqBnxB,KAAK4xB,QACvF5xB,MAAK6xB,2BAA6BrB,EAAqBG,QAAQS,EAAuBpxB,KAAK4xB,QAC3F5xB,MAAK8xB,+BAAiCtB,EAAqBG,QAAQW,EAA2BtxB,KAAK4xB,QACnG5xB,MAAK+xB,2BAA6BvB,EAAqBG,QAAQU,EAAuBrxB,KAAK4xB,SAE7F,OAAAJ,IAjBiCD,EAmBjC7xB,GAA4BJ,QAAnBkyB,I/CqjNNQ,uDAAuD/tB,UAAUguB,iDAAiDhuB,UAAUiuB,mDAAmDjuB,UAAUkuB,mDAAmDluB,UAAUmuB,8CAA8CnuB,UAAUouB,uDAAuDpuB","file":"awayjs-methodmaterials.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","class MethodMaterialMode\r\n{\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static SINGLE_PASS:string = \"singlePass\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static MULTI_PASS:string = \"multiPass\";\r\n}\r\n\r\nexport = MethodMaterialMode;",null,"﻿import Texture2DBase\t\t\t\t= require(\"awayjs-core/lib/textures/Texture2DBase\");\r\n\r\nimport BlendMode\t\t\t\t\t= require(\"awayjs-core/lib/base/BlendMode\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport StaticLightPicker\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/StaticLightPicker\");\r\nimport IRenderObjectOwner\t\t\t= require(\"awayjs-display/lib/base/IRenderObjectOwner\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\nimport IRenderObject\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderObject\");\r\n\r\nimport ContextGLCompareMode\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLCompareMode\");\r\n\r\nimport AmbientBasicMethod\t\t\t= require(\"awayjs-methodmaterials/lib/methods/AmbientBasicMethod\");\r\nimport DiffuseBasicMethod\t\t\t= require(\"awayjs-methodmaterials/lib/methods/DiffuseBasicMethod\");\r\nimport EffectMethodBase\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/EffectMethodBase\");\r\nimport NormalBasicMethod\t\t\t= require(\"awayjs-methodmaterials/lib/methods/NormalBasicMethod\");\r\nimport ShadowMapMethodBase\t\t\t= require(\"awayjs-methodmaterials/lib/methods/ShadowMapMethodBase\");\r\nimport SpecularBasicMethod\t\t\t= require(\"awayjs-methodmaterials/lib/methods/SpecularBasicMethod\");\r\nimport MethodMaterialMode\t\t\t= require(\"awayjs-methodmaterials/lib/MethodMaterialMode\");\r\n\r\nimport MethodRenderablePool\t\t\t= require(\"awayjs-methodmaterials/lib/pool/MethodRenderablePool\");\r\n\r\n/**\r\n * MethodMaterial forms an abstract base class for the default shaded materials provided by Stage,\r\n * using material methods to define their appearance.\r\n */\r\nclass MethodMaterial extends MaterialBase\r\n{\r\n\tprivate _effectMethods:Array<EffectMethodBase> = new Array<EffectMethodBase>();\r\n\tprivate _mode:string;\r\n\r\n\tprivate _ambientMethod:AmbientBasicMethod = new AmbientBasicMethod();\r\n\tprivate _shadowMethod:ShadowMapMethodBase;\r\n\tprivate _diffuseMethod:DiffuseBasicMethod = new DiffuseBasicMethod();\r\n\tprivate _normalMethod:NormalBasicMethod = new NormalBasicMethod();\r\n\tprivate _specularMethod:SpecularBasicMethod = new SpecularBasicMethod();\r\n\r\n\r\n\tprivate _depthCompareMode:string = ContextGLCompareMode.LESS_EQUAL;\r\n\r\n\t/**\r\n\t * Creates a new MethodMaterial object.\r\n\t *\r\n\t * @param texture The texture used for the material's albedo color.\r\n\t * @param smooth Indicates whether the texture should be filtered when sampled. Defaults to true.\r\n\t * @param repeat Indicates whether the texture should be tiled when sampled. Defaults to false.\r\n\t * @param mipmap Indicates whether or not any used textures should use mipmapping. Defaults to false.\r\n\t */\r\n\tconstructor(texture?:Texture2DBase, smooth?:boolean, repeat?:boolean, mipmap?:boolean);\r\n\tconstructor(color?:number, alpha?:number);\r\n\tconstructor(textureColor:any = null, smoothAlpha:any = null, repeat:boolean = false, mipmap:boolean = true)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._mode = MethodMaterialMode.SINGLE_PASS;\r\n\r\n\t\tif (textureColor instanceof Texture2DBase) {\r\n\t\t\tthis.texture = <Texture2DBase> textureColor;\r\n\r\n\t\t\tthis.smooth = (smoothAlpha == null)? true : false;\r\n\t\t\tthis.repeat = repeat;\r\n\t\t\tthis.mipmap = mipmap;\r\n\t\t} else {\r\n\t\t\tthis.color = (textureColor == null)? 0xFFFFFF : Number(textureColor);\r\n\t\t\tthis.alpha = (smoothAlpha == null)? 1 : Number(smoothAlpha);\r\n\t\t}\r\n\t}\r\n\r\n\r\n\tpublic get mode():string\r\n\t{\r\n\t\treturn this._mode;\r\n\t}\r\n\r\n\tpublic set mode(value:string)\r\n\t{\r\n\t\tif (this._mode == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._mode = value;\r\n\r\n\t\tthis._pInvalidateRenderObject();\r\n\t}\r\n\r\n\t/**\r\n\t * The depth compare mode used to render the renderables using this material.\r\n\t *\r\n\t * @see away.stagegl.ContextGLCompareMode\r\n\t */\r\n\r\n\tpublic get depthCompareMode():string\r\n\t{\r\n\t\treturn this._depthCompareMode;\r\n\t}\r\n\r\n\tpublic set depthCompareMode(value:string)\r\n\t{\r\n\t\tif (this._depthCompareMode == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._depthCompareMode = value;\r\n\r\n\t\tthis._pInvalidateRenderObject();\r\n\t}\r\n\r\n\t/**\r\n\t * The texture object to use for the ambient colour.\r\n\t */\r\n\tpublic get diffuseTexture():Texture2DBase\r\n\t{\r\n\t\treturn this._diffuseMethod.texture;\r\n\t}\r\n\r\n\tpublic set diffuseTexture(value:Texture2DBase)\r\n\t{\r\n\t\tthis._diffuseMethod.texture = value;\r\n\t}\r\n\r\n\t/**\r\n\t * The method that provides the ambient lighting contribution. Defaults to AmbientBasicMethod.\r\n\t */\r\n\tpublic get ambientMethod():AmbientBasicMethod\r\n\t{\r\n\t\treturn this._ambientMethod;\r\n\t}\r\n\r\n\tpublic set ambientMethod(value:AmbientBasicMethod)\r\n\t{\r\n\t\tif (this._ambientMethod == value)\r\n\t\t\treturn;\r\n\r\n\t\tif (value && this._ambientMethod)\r\n\t\t\tvalue.copyFrom(this._ambientMethod);\r\n\r\n\t\tthis._ambientMethod = value;\r\n\r\n\t\tthis._pInvalidateRenderObject();\r\n\t}\r\n\r\n\t/**\r\n\t * The method used to render shadows cast on this surface, or null if no shadows are to be rendered. Defaults to null.\r\n\t */\r\n\tpublic get shadowMethod():ShadowMapMethodBase\r\n\t{\r\n\t\treturn this._shadowMethod;\r\n\t}\r\n\r\n\tpublic set shadowMethod(value:ShadowMapMethodBase)\r\n\t{\r\n\t\tif (this._shadowMethod == value)\r\n\t\t\treturn;\r\n\r\n\t\tif (value && this._shadowMethod)\r\n\t\t\tvalue.copyFrom(this._shadowMethod);\r\n\r\n\t\tthis._shadowMethod = value;\r\n\r\n\t\tthis._pInvalidateRenderObject();\r\n\t}\r\n\r\n\t/**\r\n\t * The method that provides the diffuse lighting contribution. Defaults to DiffuseBasicMethod.\r\n\t */\r\n\tpublic get diffuseMethod():DiffuseBasicMethod\r\n\t{\r\n\t\treturn this._diffuseMethod;\r\n\t}\r\n\r\n\tpublic set diffuseMethod(value:DiffuseBasicMethod)\r\n\t{\r\n\t\tif (this._diffuseMethod == value)\r\n\t\t\treturn;\r\n\r\n\t\tif (value && this._diffuseMethod)\r\n\t\t\tvalue.copyFrom(this._diffuseMethod);\r\n\r\n\t\tthis._diffuseMethod = value;\r\n\r\n\t\tthis._pInvalidateRenderObject();\r\n\t}\r\n\r\n\t/**\r\n\t * The method that provides the specular lighting contribution. Defaults to SpecularBasicMethod.\r\n\t */\r\n\tpublic get specularMethod():SpecularBasicMethod\r\n\t{\r\n\t\treturn this._specularMethod;\r\n\t}\r\n\r\n\tpublic set specularMethod(value:SpecularBasicMethod)\r\n\t{\r\n\t\tif (this._specularMethod == value)\r\n\t\t\treturn;\r\n\r\n\t\tif (value && this._specularMethod)\r\n\t\t\tvalue.copyFrom(this._specularMethod);\r\n\r\n\t\tthis._specularMethod = value;\r\n\r\n\t\tthis._pInvalidateRenderObject();\r\n\t}\r\n\r\n\t/**\r\n\t * The method used to generate the per-pixel normals. Defaults to NormalBasicMethod.\r\n\t */\r\n\tpublic get normalMethod():NormalBasicMethod\r\n\t{\r\n\t\treturn this._normalMethod;\r\n\t}\r\n\r\n\tpublic set normalMethod(value:NormalBasicMethod)\r\n\t{\r\n\t\tif (this._normalMethod == value)\r\n\t\t\treturn;\r\n\r\n\t\tif (value && this._normalMethod)\r\n\t\t\tvalue.copyFrom(this._normalMethod);\r\n\r\n\t\tthis._normalMethod = value;\r\n\r\n\t\tthis._pInvalidateRenderObject();\r\n\t}\r\n\r\n\tpublic get numEffectMethods():number\r\n\t{\r\n\t\treturn this._effectMethods.length;\r\n\t}\r\n\r\n\t/**\r\n\t * Appends an \"effect\" shading method to the shader. Effect methods are those that do not influence the lighting\r\n\t * but modulate the shaded colour, used for fog, outlines, etc. The method will be applied to the result of the\r\n\t * methods added prior.\r\n\t */\r\n\tpublic addEffectMethod(method:EffectMethodBase)\r\n\t{\r\n\t\tthis._effectMethods.push(method);\r\n\r\n\t\tthis._pInvalidateRenderObject();\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the method added at the given index.\r\n\t * @param index The index of the method to retrieve.\r\n\t * @return The method at the given index.\r\n\t */\r\n\tpublic getEffectMethodAt(index:number):EffectMethodBase\r\n\t{\r\n\t\treturn this._effectMethods[index];\r\n\t}\r\n\r\n\t/**\r\n\t * Adds an effect method at the specified index amongst the methods already added to the material. Effect\r\n\t * methods are those that do not influence the lighting but modulate the shaded colour, used for fog, outlines,\r\n\t * etc. The method will be applied to the result of the methods with a lower index.\r\n\t */\r\n\tpublic addEffectMethodAt(method:EffectMethodBase, index:number)\r\n\t{\r\n\t\tthis._effectMethods.splice(index, 0, method);\r\n\r\n\t\tthis._pInvalidateRenderObject();\r\n\t}\r\n\r\n\t/**\r\n\t * Removes an effect method from the material.\r\n\t * @param method The method to be removed.\r\n\t */\r\n\tpublic removeEffectMethod(method:EffectMethodBase)\r\n\t{\r\n\t\tthis._effectMethods.splice(this._effectMethods.indexOf(method), 1);\r\n\r\n\t\tthis._pInvalidateRenderObject();\r\n\t}\r\n\r\n\t/**\r\n\t * The normal map to modulate the direction of the surface for each texel. The default normal method expects\r\n\t * tangent-space normal maps, but others could expect object-space maps.\r\n\t */\r\n\tpublic get normalMap():Texture2DBase\r\n\t{\r\n\t\treturn this._normalMethod.normalMap;\r\n\t}\r\n\r\n\tpublic set normalMap(value:Texture2DBase)\r\n\t{\r\n\t\tthis._normalMethod.normalMap = value;\r\n\t}\r\n\r\n\t/**\r\n\t * A specular map that defines the strength of specular reflections for each texel in the red channel,\r\n\t * and the gloss factor in the green channel. You can use SpecularBitmapTexture if you want to easily set\r\n\t * specular and gloss maps from grayscale images, but correctly authored images are preferred.\r\n\t */\r\n\tpublic get specularMap():Texture2DBase\r\n\t{\r\n\t\treturn this._specularMethod.texture;\r\n\t}\r\n\r\n\tpublic set specularMap(value:Texture2DBase)\r\n\t{\r\n\t\tthis._specularMethod.texture = value;\r\n\t}\r\n\r\n\t/**\r\n\t * The glossiness of the material (sharpness of the specular highlight).\r\n\t */\r\n\tpublic get gloss():number\r\n\t{\r\n\t\treturn this._specularMethod.gloss;\r\n\t}\r\n\r\n\tpublic set gloss(value:number)\r\n\t{\r\n\t\tthis._specularMethod.gloss = value;\r\n\t}\r\n\r\n\t/**\r\n\t * The strength of the ambient reflection.\r\n\t */\r\n\tpublic get ambient():number\r\n\t{\r\n\t\treturn this._ambientMethod.ambient;\r\n\t}\r\n\r\n\tpublic set ambient(value:number)\r\n\t{\r\n\t\tthis._ambientMethod.ambient = value;\r\n\t}\r\n\r\n\t/**\r\n\t * The overall strength of the specular reflection.\r\n\t */\r\n\tpublic get specular():number\r\n\t{\r\n\t\treturn this._specularMethod.specular;\r\n\t}\r\n\r\n\tpublic set specular(value:number)\r\n\t{\r\n\t\tthis._specularMethod.specular = value;\r\n\t}\r\n\r\n\t/**\r\n\t * The colour of the ambient reflection.\r\n\t */\r\n\tpublic get ambientColor():number\r\n\t{\r\n\t\treturn this._diffuseMethod.ambientColor;\r\n\t}\r\n\r\n\tpublic set ambientColor(value:number)\r\n\t{\r\n\t\tthis._diffuseMethod.ambientColor = value;\r\n\t}\r\n\r\n\t/**\r\n\t * The colour of the diffuse reflection.\r\n\t */\r\n\tpublic get diffuseColor():number\r\n\t{\r\n\t\treturn this._diffuseMethod.diffuseColor;\r\n\t}\r\n\r\n\tpublic set diffuseColor(value:number)\r\n\t{\r\n\t\tthis._diffuseMethod.diffuseColor = value;\r\n\t}\r\n\r\n\t/**\r\n\t * The colour of the specular reflection.\r\n\t */\r\n\tpublic get specularColor():number\r\n\t{\r\n\t\treturn this._specularMethod.specularColor;\r\n\t}\r\n\r\n\tpublic set specularColor(value:number)\r\n\t{\r\n\t\tthis._specularMethod.specularColor = value;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param renderer\r\n\t *\r\n\t * @internal\r\n\t */\r\n\tpublic getRenderObject(renderablePool:MethodRenderablePool):IRenderObject\r\n\t{\r\n\t\treturn renderablePool.getMethodRenderObject(this);\r\n\t}\r\n}\r\n\r\nexport = MethodMaterial;","import ColorTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\r\nimport Matrix\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\r\nimport Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Matrix3DUtils\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\r\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport AbstractMethodError\t\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\nimport Texture2DBase\t\t\t\t\t= require(\"awayjs-core/lib/textures/Texture2DBase\");\r\n\r\nimport BlendMode\t\t\t\t\t\t= require(\"awayjs-core/lib/base/BlendMode\");\r\nimport TriangleSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport IRenderObjectOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderObjectOwner\");\r\nimport StaticLightPicker\t\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/StaticLightPicker\");\r\n\r\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\r\nimport ContextGLCompareMode\t\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLCompareMode\");\r\n\r\nimport RendererBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/base/RendererBase\");\r\nimport RenderObjectPool\t\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/RenderObjectPool\");\r\nimport ShadingMethodEvent\t\t\t\t= require(\"awayjs-renderergl/lib/events/ShadingMethodEvent\");\r\nimport ShaderObjectBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderObjectBase\");\r\nimport RenderObjectBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/RenderObjectBase\");\r\nimport RenderableBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/pool/RenderableBase\");\r\nimport IRenderableClass\t\t\t\t\t= require(\"awayjs-renderergl/lib/pool/IRenderableClass\");\r\n\r\nimport MethodMaterial\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/MethodMaterial\");\r\nimport MethodPassMode\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/passes/MethodPassMode\");\r\nimport MethodPass\t\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/passes/MethodPass\");\r\nimport AmbientBasicMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/AmbientBasicMethod\");\r\nimport DiffuseBasicMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/DiffuseBasicMethod\");\r\nimport EffectColorTransformMethod\t\t= require(\"awayjs-methodmaterials/lib/methods/EffectColorTransformMethod\");\r\nimport EffectMethodBase\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/EffectMethodBase\");\r\nimport LightingMethodBase\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/LightingMethodBase\");\r\nimport NormalBasicMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/NormalBasicMethod\");\r\nimport ShadowMapMethodBase\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/ShadowMapMethodBase\");\r\nimport SpecularBasicMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/SpecularBasicMethod\");\r\nimport MethodMaterialMode\t\t\t\t= require(\"awayjs-methodmaterials/lib/MethodMaterialMode\");\r\n\r\n/**\r\n * CompiledPass forms an abstract base class for the default compiled pass materials provided by Away3D,\r\n * using material methods to define their appearance.\r\n */\r\nclass RenderMethodMaterialObject extends RenderObjectBase\r\n{\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static id:string = \"method\";\r\n\r\n\tprivate _material:MethodMaterial;\r\n\tprivate _screenPass:MethodPass;\r\n\tprivate _casterLightPass:MethodPass;\r\n\tprivate _nonCasterLightPasses:Array<MethodPass>;\r\n\t\r\n\t/**\r\n\t * The maximum total number of lights provided by the light picker.\r\n\t */\r\n\tprivate get numLights():number\r\n\t{\r\n\t\treturn this._material.lightPicker? this._material.lightPicker.numLightProbes + this._material.lightPicker.numDirectionalLights + this._material.lightPicker.numPointLights + this._material.lightPicker.numCastingDirectionalLights + this._material.lightPicker.numCastingPointLights : 0;\r\n\t}\r\n\r\n\t/**\r\n\t * The amount of lights that don't cast shadows.\r\n\t */\r\n\tprivate get numNonCasters():number\r\n\t{\r\n\t\treturn this._material.lightPicker? this._material.lightPicker.numLightProbes + this._material.lightPicker.numDirectionalLights + this._material.lightPicker.numPointLights : 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new CompiledPass object.\r\n\t *\r\n\t * @param material The material to which this pass belongs.\r\n\t */\r\n\tconstructor(pool:RenderObjectPool, material:MethodMaterial, renderableClass:IRenderableClass, stage:Stage)\r\n\t{\r\n\t\tsuper(pool, material, renderableClass, stage);\r\n\r\n\t\tthis._material = material;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pUpdateRenderObject()\r\n\t{\r\n\t\tsuper._pUpdateRenderObject();\r\n\r\n\t\tthis.initPasses();\r\n\r\n\t\tthis.setBlendAndCompareModes();\r\n\r\n\t\tthis._pClearScreenPasses();\r\n\r\n\t\tif (this._material.mode == MethodMaterialMode.MULTI_PASS) {\r\n\t\t\tif (this._casterLightPass)\r\n\t\t\t\tthis._pAddScreenPass(this._casterLightPass);\r\n\r\n\t\t\tif (this._nonCasterLightPasses)\r\n\t\t\t\tfor (var i:number = 0; i < this._nonCasterLightPasses.length; ++i)\r\n\t\t\t\t\tthis._pAddScreenPass(this._nonCasterLightPasses[i]);\r\n\t\t}\r\n\r\n\t\tif (this._screenPass)\r\n\t\t\tthis._pAddScreenPass(this._screenPass);\r\n\t}\r\n\r\n\t/**\r\n\t * Initializes all the passes and their dependent passes.\r\n\t */\r\n\tprivate initPasses()\r\n\t{\r\n\t\t// let the effects pass handle everything if there are no lights, when there are effect methods applied\r\n\t\t// after shading, or when the material mode is single pass.\r\n\t\tif (this.numLights == 0 || this._material.numEffectMethods > 0 || this._material.mode == MethodMaterialMode.SINGLE_PASS)\r\n\t\t\tthis.initEffectPass();\r\n\t\telse if (this._screenPass)\r\n\t\t\tthis.removeEffectPass();\r\n\r\n\t\t// only use a caster light pass if shadows need to be rendered\r\n\t\tif (this._material.shadowMethod && this._material.mode == MethodMaterialMode.MULTI_PASS)\r\n\t\t\tthis.initCasterLightPass();\r\n\t\telse if (this._casterLightPass)\r\n\t\t\tthis.removeCasterLightPass();\r\n\r\n\t\t// only use non caster light passes if there are lights that don't cast\r\n\t\tif (this.numNonCasters > 0 && this._material.mode == MethodMaterialMode.MULTI_PASS)\r\n\t\t\tthis.initNonCasterLightPasses();\r\n\t\telse if (this._nonCasterLightPasses)\r\n\t\t\tthis.removeNonCasterLightPasses();\r\n\t}\r\n\r\n\t/**\r\n\t * Sets up the various blending modes for all screen passes, based on whether or not there are previous passes.\r\n\t */\r\n\tprivate setBlendAndCompareModes()\r\n\t{\r\n\t\tvar forceSeparateMVP:boolean = Boolean(this._casterLightPass || this._screenPass);\r\n\r\n\t\t// caster light pass is always first if it exists, hence it uses normal blending\r\n\t\tif (this._casterLightPass) {\r\n\t\t\tthis._casterLightPass.forceSeparateMVP = forceSeparateMVP;\r\n\t\t\tthis._casterLightPass.setBlendMode(BlendMode.NORMAL);\r\n\t\t\tthis._casterLightPass.depthCompareMode = this._material.depthCompareMode;\r\n\t\t}\r\n\r\n\t\tif (this._nonCasterLightPasses) {\r\n\t\t\tvar firstAdditiveIndex:number = 0;\r\n\r\n\t\t\t// if there's no caster light pass, the first non caster light pass will be the first\r\n\t\t\t// and should use normal blending\r\n\t\t\tif (!this._casterLightPass) {\r\n\t\t\t\tthis._nonCasterLightPasses[0].forceSeparateMVP = forceSeparateMVP;\r\n\t\t\t\tthis._nonCasterLightPasses[0].setBlendMode(BlendMode.NORMAL);\r\n\t\t\t\tthis._nonCasterLightPasses[0].depthCompareMode = this._material.depthCompareMode;\r\n\t\t\t\tfirstAdditiveIndex = 1;\r\n\t\t\t}\r\n\r\n\t\t\t// all lighting passes following the first light pass should use additive blending\r\n\t\t\tfor (var i:number = firstAdditiveIndex; i < this._nonCasterLightPasses.length; ++i) {\r\n\t\t\t\tthis._nonCasterLightPasses[i].forceSeparateMVP = forceSeparateMVP;\r\n\t\t\t\tthis._nonCasterLightPasses[i].setBlendMode(BlendMode.ADD);\r\n\t\t\t\tthis._nonCasterLightPasses[i].depthCompareMode = ContextGLCompareMode.LESS_EQUAL;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this._casterLightPass || this._nonCasterLightPasses) {\r\n\t\t\t//cannot be blended by blendmode property if multipass enabled\r\n\t\t\tthis._pRequiresBlending = false;\r\n\r\n\t\t\t// there are light passes, so this should be blended in\r\n\t\t\tif (this._screenPass) {\r\n\t\t\t\tthis._screenPass.mode = MethodPassMode.EFFECTS;\r\n\t\t\t\tthis._screenPass.depthCompareMode = ContextGLCompareMode.LESS_EQUAL;\r\n\t\t\t\tthis._screenPass.setBlendMode(BlendMode.LAYER);\r\n\t\t\t\tthis._screenPass.forceSeparateMVP = forceSeparateMVP;\r\n\t\t\t}\r\n\r\n\t\t} else if (this._screenPass) {\r\n\t\t\tthis._pRequiresBlending = (this._material.blendMode != BlendMode.NORMAL || this._material.alphaBlending || (this._material.colorTransform && this._material.colorTransform.alphaMultiplier < 1));\r\n\t\t\t// effects pass is the only pass, so it should just blend normally\r\n\t\t\tthis._screenPass.mode = MethodPassMode.SUPER_SHADER;\r\n\t\t\tthis._screenPass.depthCompareMode = this._material.depthCompareMode;\r\n\t\t\tthis._screenPass.preserveAlpha = this._pRequiresBlending;\r\n\t\t\tthis._screenPass.colorTransform = this._material.colorTransform;\r\n\t\t\tthis._screenPass.setBlendMode((this._material.blendMode == BlendMode.NORMAL && this._pRequiresBlending)? BlendMode.LAYER : this._material.blendMode);\r\n\t\t\tthis._screenPass.forceSeparateMVP = false;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate initCasterLightPass()\r\n\t{\r\n\r\n\t\tif (this._casterLightPass == null)\r\n\t\t\tthis._casterLightPass = new MethodPass(MethodPassMode.LIGHTING, this, this._material, this._renderableClass, this._stage);\r\n\r\n\t\tthis._casterLightPass.lightPicker = new StaticLightPicker([this._material.shadowMethod.castingLight]);\r\n\t\tthis._casterLightPass.shadowMethod = this._material.shadowMethod;\r\n\t\tthis._casterLightPass.diffuseMethod = this._material.diffuseMethod;\r\n\t\tthis._casterLightPass.ambientMethod = this._material.ambientMethod;\r\n\t\tthis._casterLightPass.normalMethod = this._material.normalMethod;\r\n\t\tthis._casterLightPass.specularMethod = this._material.specularMethod;\r\n\t}\r\n\r\n\tprivate removeCasterLightPass()\r\n\t{\r\n\t\tthis._casterLightPass.dispose();\r\n\t\tthis._pRemoveScreenPass(this._casterLightPass);\r\n\t\tthis._casterLightPass = null;\r\n\t}\r\n\r\n\tprivate initNonCasterLightPasses()\r\n\t{\r\n\t\tthis.removeNonCasterLightPasses();\r\n\t\tvar pass:MethodPass;\r\n\t\tvar numDirLights:number = this._material.lightPicker.numDirectionalLights;\r\n\t\tvar numPointLights:number = this._material.lightPicker.numPointLights;\r\n\t\tvar numLightProbes:number = this._material.lightPicker.numLightProbes;\r\n\t\tvar dirLightOffset:number = 0;\r\n\t\tvar pointLightOffset:number = 0;\r\n\t\tvar probeOffset:number = 0;\r\n\r\n\t\tif (!this._casterLightPass) {\r\n\t\t\tnumDirLights += this._material.lightPicker.numCastingDirectionalLights;\r\n\t\t\tnumPointLights += this._material.lightPicker.numCastingPointLights;\r\n\t\t}\r\n\r\n\t\tthis._nonCasterLightPasses = new Array<MethodPass>();\r\n\r\n\t\twhile (dirLightOffset < numDirLights || pointLightOffset < numPointLights || probeOffset < numLightProbes) {\r\n\t\t\tpass = new MethodPass(MethodPassMode.LIGHTING, this, this._material, this._renderableClass, this._stage);\r\n\t\t\tpass.includeCasters = this._material.shadowMethod == null;\r\n\t\t\tpass.directionalLightsOffset = dirLightOffset;\r\n\t\t\tpass.pointLightsOffset = pointLightOffset;\r\n\t\t\tpass.lightProbesOffset = probeOffset;\r\n\t\t\tpass.lightPicker = this._material.lightPicker;\r\n\t\t\tpass.diffuseMethod = this._material.diffuseMethod;\r\n\t\t\tpass.ambientMethod = this._material.ambientMethod;\r\n\t\t\tpass.normalMethod = this._material.normalMethod;\r\n\t\t\tpass.specularMethod = this._material.specularMethod;\r\n\t\t\tthis._nonCasterLightPasses.push(pass);\r\n\r\n\t\t\tdirLightOffset += pass.numDirectionalLights;\r\n\t\t\tpointLightOffset += pass.numPointLights;\r\n\t\t\tprobeOffset += pass.numLightProbes;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate removeNonCasterLightPasses()\r\n\t{\r\n\t\tif (!this._nonCasterLightPasses)\r\n\t\t\treturn;\r\n\r\n\t\tfor (var i:number = 0; i < this._nonCasterLightPasses.length; ++i)\r\n\t\t\tthis._pRemoveScreenPass(this._nonCasterLightPasses[i]);\r\n\r\n\t\tthis._nonCasterLightPasses = null;\r\n\t}\r\n\r\n\tprivate removeEffectPass()\r\n\t{\r\n\t\tif (this._screenPass.ambientMethod != this._material.ambientMethod)\r\n\t\t\tthis._screenPass.ambientMethod.dispose();\r\n\r\n\t\tif (this._screenPass.diffuseMethod != this._material.diffuseMethod)\r\n\t\t\tthis._screenPass.diffuseMethod.dispose();\r\n\r\n\t\tif (this._screenPass.specularMethod != this._material.specularMethod)\r\n\t\t\tthis._screenPass.specularMethod.dispose();\r\n\r\n\t\tif (this._screenPass.normalMethod != this._material.normalMethod)\r\n\t\t\tthis._screenPass.normalMethod.dispose();\r\n\r\n\t\tthis._pRemoveScreenPass(this._screenPass);\r\n\t\tthis._screenPass = null;\r\n\t}\r\n\r\n\tprivate initEffectPass()\r\n\t{\r\n\t\tif (this._screenPass == null)\r\n\t\t\tthis._screenPass = new MethodPass(MethodPassMode.SUPER_SHADER, this, this._material, this._renderableClass, this._stage);\r\n\r\n\t\tif (this._material.mode == MethodMaterialMode.SINGLE_PASS) {\r\n\t\t\tthis._screenPass.ambientMethod = this._material.ambientMethod;\r\n\t\t\tthis._screenPass.diffuseMethod = this._material.diffuseMethod;\r\n\t\t\tthis._screenPass.specularMethod = this._material.specularMethod;\r\n\t\t\tthis._screenPass.normalMethod = this._material.normalMethod;\r\n\t\t\tthis._screenPass.shadowMethod = this._material.shadowMethod;\r\n\t\t} else if (this._material.mode == MethodMaterialMode.MULTI_PASS) {\r\n\t\t\tif (this.numLights == 0) {\r\n\t\t\t\tthis._screenPass.ambientMethod = this._material.ambientMethod;\r\n\t\t\t} else {\r\n\t\t\t\tthis._screenPass.ambientMethod = null;\r\n\t\t\t}\r\n\r\n\t\t\tthis._screenPass.preserveAlpha = false;\r\n\t\t\tthis._screenPass.normalMethod = this._material.normalMethod;\r\n\t\t}\r\n\r\n\t\t//update effect methods\r\n\t\tvar i:number = 0;\r\n\t\tvar effectMethod:EffectMethodBase;\r\n\t\tvar len:number = Math.max(this._material.numEffectMethods, this._screenPass.numEffectMethods);\r\n\r\n\t\twhile (i < len) {\r\n\t\t\teffectMethod = this._material.getEffectMethodAt(i);\r\n\t\t\tif (effectMethod != this._screenPass.getEffectMethodAt(i)) {\r\n\t\t\t\tthis._screenPass.removeEffectMethodAt(i);\r\n\r\n\t\t\t\tif (effectMethod != null) {\r\n\t\t\t\t\tif (i < this._screenPass.numEffectMethods)\r\n\t\t\t\t\t\tthis._screenPass.addEffectMethodAt(effectMethod, i);\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\tthis._screenPass.addEffectMethod(effectMethod);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\ti++;\r\n\t\t}\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tsuper.dispose();\r\n\r\n\t\t//TODO\r\n\t}\r\n}\r\n\r\nexport = RenderMethodMaterialObject;","import ShadingMethodBase\t\t\t= require(\"awayjs-methodmaterials/lib/methods/ShadingMethodBase\");\r\n\r\n/**\r\n * MethodVO contains data for a given shader object for the use within a single material.\r\n * This allows shader methods to be shared across materials while their non-public state differs.\r\n */\r\nclass MethodVO\r\n{\r\n\tpublic useMethod:boolean = true;\r\n\r\n\tpublic method:ShadingMethodBase;\r\n\r\n\t// public register indices\r\n\tpublic texturesIndex:number;\r\n\tpublic secondaryTexturesIndex:number; // sometimes needed for composites\r\n\tpublic vertexConstantsIndex:number;\r\n\tpublic secondaryVertexConstantsIndex:number; // sometimes needed for composites\r\n\tpublic fragmentConstantsIndex:number;\r\n\tpublic secondaryFragmentConstantsIndex:number; // sometimes needed for composites\r\n\r\n\t// internal stuff for the material to know before assembling code\r\n\tpublic needsProjection:boolean;\r\n\tpublic needsView:boolean;\r\n\tpublic needsNormals:boolean;\r\n\tpublic needsTangents:boolean;\r\n\tpublic needsUV:boolean;\r\n\tpublic needsSecondaryUV:boolean;\r\n\tpublic needsGlobalVertexPos:boolean;\r\n\tpublic needsGlobalFragmentPos:boolean;\r\n\r\n\tpublic usesTexture:boolean;\r\n\r\n\t/**\r\n\t * Creates a new MethodVO object.\r\n\t */\r\n\tconstructor(method:ShadingMethodBase)\r\n\t{\r\n\t\tthis.method = method;\r\n\t}\r\n\r\n\t/**\r\n\t * Resets the values of the value object to their \"unused\" state.\r\n\t */\r\n\tpublic reset()\r\n\t{\r\n\t\tthis.method.iReset();\r\n\r\n\t\tthis.texturesIndex = -1;\r\n\t\tthis.vertexConstantsIndex = -1;\r\n\t\tthis.fragmentConstantsIndex = -1;\r\n\r\n\t\tthis.needsProjection = false;\r\n\t\tthis.needsView = false;\r\n\t\tthis.needsNormals = false;\r\n\t\tthis.needsTangents = false;\r\n\t\tthis.needsUV = false;\r\n\t\tthis.needsSecondaryUV = false;\r\n\t\tthis.needsGlobalVertexPos = false;\r\n\t\tthis.needsGlobalFragmentPos = false;\r\n\t}\r\n}\r\n\r\nexport = MethodVO;\r\n","import Texture2DBase\t\t\t\t= require(\"awayjs-core/lib/textures/Texture2DBase\");\r\n\r\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\r\n\r\nimport ShaderObjectBase\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderObjectBase\");\r\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterCache\");\r\nimport ShaderRegisterData\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterData\");\r\nimport ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterElement\");\r\nimport ShaderCompilerHelper\t\t\t= require(\"awayjs-renderergl/lib/utils/ShaderCompilerHelper\");\r\n\r\nimport MethodVO\t\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/data/MethodVO\");\r\nimport ShadingMethodBase\t\t\t= require(\"awayjs-methodmaterials/lib/methods/ShadingMethodBase\");\r\n\r\n/**\r\n * AmbientBasicMethod provides the default shading method for uniform ambient lighting.\r\n */\r\nclass AmbientBasicMethod extends ShadingMethodBase\r\n{\r\n\tprivate _color:number = 0xffffff;\r\n\tprivate _alpha:number = 1;\r\n\r\n\tprivate _colorR:number = 1;\r\n\tprivate _colorG:number = 1;\r\n\tprivate _colorB:number = 1;\r\n\r\n\tprivate _ambient:number = 1;\r\n\r\n\t/**\r\n\t * Creates a new AmbientBasicMethod object.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic iInitVO(shaderObject:ShaderObjectBase, methodVO:MethodVO)\r\n\t{\r\n\t\tmethodVO.needsUV = Boolean(shaderObject.texture != null);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic iInitConstants(shaderObject:ShaderObjectBase, methodVO:MethodVO)\r\n\t{\r\n\t\tif (!methodVO.needsUV) {\r\n\t\t\tthis._color = shaderObject.color;\r\n\t\t\tthis.updateColor();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * The strength of the ambient reflection of the surface.\r\n\t */\r\n\tpublic get ambient():number\r\n\t{\r\n\t\treturn this._ambient;\r\n\t}\r\n\r\n\tpublic set ambient(value:number)\r\n\t{\r\n\t\tif (this._ambient == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._ambient = value;\r\n\r\n\t\tthis.updateColor();\r\n\t}\r\n\r\n\t/**\r\n\t * The alpha component of the surface.\r\n\t */\r\n\tpublic get alpha():number\r\n\t{\r\n\t\treturn this._alpha;\r\n\t}\r\n\r\n\tpublic set alpha(value:number)\r\n\t{\r\n\t\tif (this._alpha == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._alpha = value;\r\n\r\n\t\tthis.updateColor();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic copyFrom(method:ShadingMethodBase)\r\n\t{\r\n\t\tvar m:any = method;\r\n\t\tvar b:AmbientBasicMethod = <AmbientBasicMethod> m;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic iGetFragmentCode(shaderObject:ShaderObjectBase, methodVO:MethodVO, targetReg:ShaderRegisterElement, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\r\n\t{\r\n\t\tvar code:string = \"\";\r\n\t\tvar ambientInputRegister:ShaderRegisterElement;\r\n\r\n\t\tif (methodVO.needsUV) {\r\n\t\t\tambientInputRegister = registerCache.getFreeTextureReg();\r\n\r\n\t\t\tmethodVO.texturesIndex = ambientInputRegister.index;\r\n\r\n\t\t\tcode += ShaderCompilerHelper.getTex2DSampleCode(targetReg, sharedRegisters, ambientInputRegister, shaderObject.texture, shaderObject.useSmoothTextures, shaderObject.repeatTextures, false);\r\n\r\n\t\t\tif (shaderObject.alphaThreshold > 0) {\r\n\t\t\t\tvar cutOffReg:ShaderRegisterElement = registerCache.getFreeFragmentConstant();\r\n\t\t\t\tmethodVO.fragmentConstantsIndex = cutOffReg.index*4;\r\n\r\n\t\t\t\tcode += \"sub \" + targetReg + \".w, \" + targetReg + \".w, \" + cutOffReg + \".x\\n\" +\r\n\t\t\t\t\t\"kil \" + targetReg + \".w\\n\" +\r\n\t\t\t\t\t\"add \" + targetReg + \".w, \" + targetReg + \".w, \" + cutOffReg + \".x\\n\";\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\t\t\tambientInputRegister = registerCache.getFreeFragmentConstant();\r\n\t\t\tmethodVO.fragmentConstantsIndex = ambientInputRegister.index*4;\r\n\r\n\t\t\tcode += \"mov \" + targetReg + \", \" + ambientInputRegister + \"\\n\";\r\n\t\t}\r\n\r\n\t\treturn code;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic iActivate(shaderObject:ShaderObjectBase, methodVO:MethodVO, stage:Stage)\r\n\t{\r\n\t\tif (methodVO.needsUV) {\r\n\t\t\tstage.activateTexture(methodVO.texturesIndex, shaderObject.texture, shaderObject.repeatTextures, shaderObject.useSmoothTextures, shaderObject.useMipmapping);\r\n\r\n\t\t\tif (shaderObject.alphaThreshold > 0)\r\n\t\t\t\tshaderObject.fragmentConstantData[methodVO.fragmentConstantsIndex] = shaderObject.alphaThreshold;\r\n\t\t} else {\r\n\t\t\tvar index:number = methodVO.fragmentConstantsIndex;\r\n\t\t\tvar data:Array<number> = shaderObject.fragmentConstantData;\r\n\t\t\tdata[index] = this._colorR;\r\n\t\t\tdata[index + 1] = this._colorG;\r\n\t\t\tdata[index + 2] = this._colorB;\r\n\t\t\tdata[index + 3] = this._alpha;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the ambient color data used by the render state.\r\n\t */\r\n\tprivate updateColor()\r\n\t{\r\n\t\tthis._colorR = ((this._color >> 16) & 0xff)/0xff*this._ambient;\r\n\t\tthis._colorG = ((this._color >> 8) & 0xff)/0xff*this._ambient;\r\n\t\tthis._colorB = (this._color & 0xff)/0xff*this._ambient;\r\n\t}\r\n}\r\n\r\nexport = AmbientBasicMethod;","import CubeTextureBase\t\t\t\t\t= require(\"awayjs-core/lib/textures/CubeTextureBase\");\r\n\r\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\r\n\r\nimport ShaderObjectBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderObjectBase\");\r\nimport ShaderRegisterCache\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterCache\");\r\nimport ShaderRegisterData\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterData\");\r\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterElement\");\r\nimport ShaderCompilerHelper\t\t\t\t= require(\"awayjs-renderergl/lib/utils/ShaderCompilerHelper\");\r\n\r\nimport MethodVO\t\t\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/data/MethodVO\");\r\nimport AmbientBasicMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/AmbientBasicMethod\");\r\n\r\n/**\r\n * AmbientEnvMapMethod provides a diffuse shading method that uses a diffuse irradiance environment map to\r\n * approximate global lighting rather than lights.\r\n */\r\nclass AmbientEnvMapMethod extends AmbientBasicMethod\r\n{\r\n\tprivate _cubeTexture:CubeTextureBase;\r\n\t\r\n\t/**\r\n\t * Creates a new <code>AmbientEnvMapMethod</code> object.\r\n\t *\r\n\t * @param envMap The cube environment map to use for the ambient lighting.\r\n\t */\r\n\tconstructor(envMap:CubeTextureBase)\r\n\t{\r\n\t\tsuper();\r\n\t\tthis._cubeTexture = envMap;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic iInitVO(shaderObject:ShaderObjectBase, methodVO:MethodVO)\r\n\t{\r\n\t\tsuper.iInitVO(shaderObject, methodVO);\r\n\r\n\t\tmethodVO.needsNormals = true;\r\n\t}\r\n\t\r\n\t/**\r\n\t * The cube environment map to use for the diffuse lighting.\r\n\t */\r\n\tpublic get envMap():CubeTextureBase\r\n\t{\r\n\t\treturn this._cubeTexture;\r\n\t}\r\n\t\r\n\tpublic set envMap(value:CubeTextureBase)\r\n\t{\r\n\t\tthis._cubeTexture = value;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic iActivate(shaderObject:ShaderObjectBase, methodVO:MethodVO, stage:Stage)\r\n\t{\r\n\t\tsuper.iActivate(shaderObject, methodVO, stage);\r\n\r\n\t\tstage.activateCubeTexture(methodVO.texturesIndex, this._cubeTexture, shaderObject.useSmoothTextures, shaderObject.useMipmapping);\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic iGetFragmentCode(shaderObject:ShaderObjectBase, methodVO:MethodVO, targetReg:ShaderRegisterElement, regCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\r\n\t{\r\n\t\tvar code:string = \"\";\r\n\t\tvar ambientInputRegister:ShaderRegisterElement;\r\n\t\tvar cubeMapReg:ShaderRegisterElement = regCache.getFreeTextureReg();\r\n\t\tmethodVO.texturesIndex = cubeMapReg.index;\r\n\t\t\r\n\t\tcode += ShaderCompilerHelper.getTexCubeSampleCode(targetReg, cubeMapReg, this._cubeTexture, shaderObject.useSmoothTextures, shaderObject.useMipmapping, sharedRegisters.normalFragment);\r\n\r\n\t\tambientInputRegister = regCache.getFreeFragmentConstant();\r\n\t\tmethodVO.fragmentConstantsIndex = ambientInputRegister.index;\r\n\t\t\r\n\t\tcode += \"add \" + targetReg + \".xyz, \" + targetReg + \".xyz, \" + ambientInputRegister + \".xyz\\n\";\r\n\t\t\r\n\t\treturn code;\r\n\t}\r\n}\r\n\r\nexport = AmbientEnvMapMethod;","import Texture2DBase\t\t\t\t= require(\"awayjs-core/lib/textures/Texture2DBase\");\r\n\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\n\r\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\r\n\r\nimport ShaderLightingObject\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderLightingObject\");\r\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterCache\");\r\nimport ShaderRegisterData\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterData\");\r\nimport ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterElement\");\r\nimport ShaderCompilerHelper\t\t\t= require(\"awayjs-renderergl/lib/utils/ShaderCompilerHelper\");\r\nimport RenderableBase\t\t\t\t= require(\"awayjs-renderergl/lib/pool/RenderableBase\");\r\n\r\nimport MethodVO\t\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/data/MethodVO\");\r\nimport ShadingMethodBase\t\t\t= require(\"awayjs-methodmaterials/lib/methods/ShadingMethodBase\");\r\nimport LightingMethodBase\t\t\t= require(\"awayjs-methodmaterials/lib/methods/LightingMethodBase\");\r\n\r\n/**\r\n * DiffuseBasicMethod provides the default shading method for Lambert (dot3) diffuse lighting.\r\n */\r\nclass DiffuseBasicMethod extends LightingMethodBase\r\n{\r\n\tprivate _multiply:boolean = true;\r\n\r\n\tpublic _pUseTexture:boolean;\r\n\tpublic _pTotalLightColorReg:ShaderRegisterElement;\r\n\tpublic _pDiffuseInputRegister:ShaderRegisterElement;\r\n\r\n\tprivate _texture:Texture2DBase;\r\n\tprivate _diffuseColor:number = 0xffffff;\r\n\tprivate _ambientColor:number = 0xffffff;\r\n\tprivate _diffuseR:number = 1;\r\n\tprivate _diffuseG:number = 1;\r\n\tprivate _diffuseB:number = 1;\r\n\tprivate _ambientR:number = 1;\r\n\tprivate _ambientG:number = 1;\r\n\tprivate _ambientB:number = 1;\r\n\r\n\tpublic _pIsFirstLight:boolean;\r\n\r\n\t/**\r\n\t * Creates a new DiffuseBasicMethod object.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\tpublic iIsUsed(shaderObject:ShaderLightingObject):boolean\r\n\t{\r\n\t\tif (!shaderObject.numLights)\r\n\t\t\treturn false;\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * Set internally if diffuse color component multiplies or replaces the ambient color\r\n\t */\r\n\tpublic get multiply():boolean\r\n\t{\r\n\t\treturn this._multiply;\r\n\t}\r\n\r\n\tpublic set multiply(value:boolean)\r\n\t{\r\n\t\tif (this._multiply == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._multiply = value;\r\n\r\n\t\tthis.iInvalidateShaderProgram();\r\n\t}\r\n\r\n\tpublic iInitVO(shaderObject:ShaderLightingObject, methodVO:MethodVO)\r\n\t{\r\n\t\tmethodVO.needsUV = this._pUseTexture;\r\n\t\tmethodVO.needsNormals = shaderObject.numLights > 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Forces the creation of the texture's mipmaps.\r\n\t * @param stage The Stage used by the renderer\r\n\t */\r\n\tpublic generateMip(stage:Stage)\r\n\t{\r\n\t\tif (this._pUseTexture)\r\n\t\t\tstage.activateTexture(0, this._texture, true, true, true);\r\n\t}\r\n\r\n\t/**\r\n\t * The color of the diffuse reflection when not using a texture.\r\n\t */\r\n\tpublic get diffuseColor():number\r\n\t{\r\n\t\treturn this._diffuseColor;\r\n\t}\r\n\r\n\tpublic set diffuseColor(value:number)\r\n\t{\r\n\t\tif (this._diffuseColor == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._diffuseColor = value;\r\n\r\n\t\tthis.updateDiffuse();\r\n\t}\r\n\r\n\t/**\r\n\t * The color of the ambient reflection\r\n\t */\r\n\tpublic get ambientColor():number\r\n\t{\r\n\t\treturn this._ambientColor;\r\n\t}\r\n\r\n\tpublic set ambientColor(value:number)\r\n\t{\r\n\t\tif (this._ambientColor == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._ambientColor = value;\r\n\r\n\t\tthis.updateAmbient();\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * The bitmapData to use to define the diffuse reflection color per texel.\r\n\t */\r\n\tpublic get texture():Texture2DBase\r\n\t{\r\n\t\treturn this._texture;\r\n\t}\r\n\r\n\tpublic set texture(value:Texture2DBase)\r\n\t{\r\n\t\tvar b:boolean = (value != null);\r\n\r\n\t\tif (b != this._pUseTexture || (value && this._texture && (value.format != this._texture.format)))\r\n\t\t\tthis.iInvalidateShaderProgram();\r\n\r\n\t\tthis._pUseTexture = b;\r\n\t\tthis._texture = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tthis._texture = null;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic copyFrom(method:ShadingMethodBase)\r\n\t{\r\n\t\tvar diff:DiffuseBasicMethod = <DiffuseBasicMethod> method;\r\n\r\n\t\tthis.texture = diff.texture;\r\n\t\tthis.multiply = diff.multiply;\r\n\t\tthis.diffuseColor = diff.diffuseColor;\r\n\t\tthis.ambientColor = diff.ambientColor;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic iCleanCompilationData()\r\n\t{\r\n\t\tsuper.iCleanCompilationData();\r\n\r\n\t\tthis._pTotalLightColorReg = null;\r\n\t\tthis._pDiffuseInputRegister = null;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic iGetFragmentPreLightingCode(shaderObject:ShaderLightingObject, methodVO:MethodVO, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\r\n\t{\r\n\t\tvar code:string = \"\";\r\n\r\n\t\tthis._pIsFirstLight = true;\r\n\r\n\t\tthis._pTotalLightColorReg = registerCache.getFreeFragmentVectorTemp();\r\n\t\tregisterCache.addFragmentTempUsages(this._pTotalLightColorReg, 1);\r\n\r\n\t\treturn code;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic iGetFragmentCodePerLight(shaderObject:ShaderLightingObject, methodVO:MethodVO, lightDirReg:ShaderRegisterElement, lightColReg:ShaderRegisterElement, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\r\n\t{\r\n\t\tvar code:string = \"\";\r\n\t\tvar t:ShaderRegisterElement;\r\n\r\n\t\t// write in temporary if not first light, so we can add to total diffuse colour\r\n\t\tif (this._pIsFirstLight) {\r\n\t\t\tt = this._pTotalLightColorReg;\r\n\t\t} else {\r\n\t\t\tt = registerCache.getFreeFragmentVectorTemp();\r\n\t\t\tregisterCache.addFragmentTempUsages(t, 1);\r\n\t\t}\r\n\r\n\t\tcode += \"dp3 \" + t + \".x, \" + lightDirReg + \", \" + sharedRegisters.normalFragment + \"\\n\" +\r\n\t\t\t\t\"max \" + t + \".w, \" + t + \".x, \" + sharedRegisters.commons + \".y\\n\";\r\n\r\n\t\tif (shaderObject.usesLightFallOff)\r\n\t\t\tcode += \"mul \" + t + \".w, \" + t + \".w, \" + lightDirReg + \".w\\n\";\r\n\r\n\t\tif (this._iModulateMethod != null)\r\n\t\t\tcode += this._iModulateMethod(shaderObject, methodVO, t, registerCache, sharedRegisters);\r\n\r\n\t\tcode += \"mul \" + t + \", \" + t + \".w, \" + lightColReg + \"\\n\";\r\n\r\n\t\tif (!this._pIsFirstLight) {\r\n\t\t\tcode += \"add \" + this._pTotalLightColorReg + \".xyz, \" + this._pTotalLightColorReg + \", \" + t + \"\\n\";\r\n\t\t\tregisterCache.removeFragmentTempUsage(t);\r\n\t\t}\r\n\r\n\t\tthis._pIsFirstLight = false;\r\n\r\n\t\treturn code;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic iGetFragmentCodePerProbe(shaderObject:ShaderLightingObject, methodVO:MethodVO, cubeMapReg:ShaderRegisterElement, weightRegister:string, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\r\n\t{\r\n\t\tvar code:string = \"\";\r\n\t\tvar t:ShaderRegisterElement;\r\n\r\n\t\t// write in temporary if not first light, so we can add to total diffuse colour\r\n\t\tif (this._pIsFirstLight) {\r\n\t\t\tt = this._pTotalLightColorReg;\r\n\t\t} else {\r\n\t\t\tt = registerCache.getFreeFragmentVectorTemp();\r\n\t\t\tregisterCache.addFragmentTempUsages(t, 1);\r\n\t\t}\r\n\r\n\t\tcode += \"tex \" + t + \", \" + sharedRegisters.normalFragment + \", \" + cubeMapReg + \" <cube,linear,miplinear>\\n\" +\r\n\t\t\t\t\"mul \" + t + \".xyz, \" + t + \".xyz, \" + weightRegister + \"\\n\";\r\n\r\n\t\tif (this._iModulateMethod != null)\r\n\t\t\tcode += this._iModulateMethod(shaderObject, methodVO, t, registerCache, sharedRegisters);\r\n\r\n\t\tif (!this._pIsFirstLight) {\r\n\t\t\tcode += \"add \" + this._pTotalLightColorReg + \".xyz, \" + this._pTotalLightColorReg + \", \" + t + \"\\n\";\r\n\t\t\tregisterCache.removeFragmentTempUsage(t);\r\n\t\t}\r\n\r\n\t\tthis._pIsFirstLight = false;\r\n\r\n\t\treturn code;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic iGetFragmentPostLightingCode(shaderObject:ShaderLightingObject, methodVO:MethodVO, targetReg:ShaderRegisterElement, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\r\n\t{\r\n\t\tvar code:string = \"\";\r\n\r\n\t\tvar albedo:ShaderRegisterElement;\r\n\t\tvar cutOffReg:ShaderRegisterElement;\r\n\r\n\t\t// incorporate input from ambient\r\n\t\tif (sharedRegisters.shadowTarget)\r\n\t\t\tcode += this.pApplyShadow(shaderObject, methodVO, registerCache, sharedRegisters);\r\n\r\n\t\talbedo = registerCache.getFreeFragmentVectorTemp();\r\n\t\tregisterCache.addFragmentTempUsages(albedo, 1);\r\n\r\n\t\tvar ambientColorRegister:ShaderRegisterElement = registerCache.getFreeFragmentConstant();\r\n\t\tmethodVO.fragmentConstantsIndex = ambientColorRegister.index*4;\r\n\r\n\t\tif (this._pUseTexture) {\r\n\t\t\tthis._pDiffuseInputRegister = registerCache.getFreeTextureReg();\r\n\r\n\t\t\tmethodVO.texturesIndex = this._pDiffuseInputRegister.index;\r\n\r\n\t\t\tcode += ShaderCompilerHelper.getTex2DSampleCode(albedo, sharedRegisters, this._pDiffuseInputRegister, this._texture, shaderObject.useSmoothTextures, shaderObject.repeatTextures, shaderObject.useMipmapping);\r\n\r\n\t\t} else {\r\n\t\t\tthis._pDiffuseInputRegister = registerCache.getFreeFragmentConstant();\r\n\r\n\t\t\tcode += \"mov \" + albedo + \", \" + this._pDiffuseInputRegister + \"\\n\";\r\n\t\t}\r\n\r\n\t\tcode += \"sat \" + this._pTotalLightColorReg + \", \" + this._pTotalLightColorReg + \"\\n\" +\r\n\t\t\t\"mul \" + albedo + \".xyz, \" + albedo + \", \" + this._pTotalLightColorReg + \"\\n\";\r\n\r\n\t\tif (this._multiply) {\r\n\t\t\tcode += \"add \" + albedo + \".xyz, \" + albedo + \", \" + ambientColorRegister + \"\\n\" +\r\n\t\t\t\t\"mul \" + targetReg + \".xyz, \" + targetReg + \", \" + albedo + \"\\n\";\r\n\t\t} else {\r\n\t\t\tcode += \"mul \" + targetReg + \".xyz, \" + targetReg + \", \" + ambientColorRegister + \"\\n\" +\r\n\t\t\t\t\"mul \" + this._pTotalLightColorReg + \".xyz, \" + targetReg + \", \" + this._pTotalLightColorReg + \"\\n\" +\r\n\t\t\t\t\"sub \" + targetReg + \".xyz, \" + targetReg + \", \" + this._pTotalLightColorReg + \"\\n\" +\r\n\t\t\t\t\"add \" + targetReg + \".xyz, \" + targetReg + \", \" + albedo + \"\\n\";\r\n\t\t}\r\n\r\n\t\tregisterCache.removeFragmentTempUsage(this._pTotalLightColorReg);\r\n\t\tregisterCache.removeFragmentTempUsage(albedo);\r\n\r\n\t\treturn code;\r\n\t}\r\n\r\n\t/**\r\n\t * Generate the code that applies the calculated shadow to the diffuse light\r\n\t * @param methodVO The MethodVO object for which the compilation is currently happening.\r\n\t * @param regCache The register cache the compiler is currently using for the register management.\r\n\t */\r\n\tpublic pApplyShadow(shaderObject:ShaderLightingObject, methodVO:MethodVO, regCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\r\n\t{\r\n\t\treturn \"mul \" + this._pTotalLightColorReg + \".xyz, \" + this._pTotalLightColorReg + \", \" + sharedRegisters.shadowTarget + \".w\\n\";\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic iActivate(shaderObject:ShaderLightingObject, methodVO:MethodVO, stage:Stage)\r\n\t{\r\n\t\tif (this._pUseTexture) {\r\n\t\t\tstage.activateTexture(methodVO.texturesIndex, this._texture, shaderObject.repeatTextures, shaderObject.useSmoothTextures, shaderObject.useMipmapping);\r\n\t\t} else {\r\n\t\t\tvar index:number = methodVO.fragmentConstantsIndex;\r\n\t\t\tvar data:Array<number> = shaderObject.fragmentConstantData;\r\n\t\t\tdata[index + 4] = this._diffuseR;\r\n\t\t\tdata[index + 5] = this._diffuseG;\r\n\t\t\tdata[index + 6] = this._diffuseB;\r\n\t\t\tdata[index + 7] = 1;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the diffuse color data used by the render state.\r\n\t */\r\n\tprivate updateDiffuse()\r\n\t{\r\n\t\tthis._diffuseR = ((this._diffuseColor >> 16) & 0xff)/0xff;\r\n\t\tthis._diffuseG = ((this._diffuseColor >> 8) & 0xff)/0xff;\r\n\t\tthis._diffuseB = (this._diffuseColor & 0xff)/0xff;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the ambient color data used by the render state.\r\n\t */\r\n\tprivate updateAmbient()\r\n\t{\r\n\t\tthis._ambientR = ((this._ambientColor >> 16) & 0xff)/0xff;\r\n\t\tthis._ambientG = ((this._ambientColor >> 8) & 0xff)/0xff;\r\n\t\tthis._ambientB = (this._ambientColor & 0xff)/0xff;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic iSetRenderState(shaderObject:ShaderLightingObject, methodVO:MethodVO, renderable:RenderableBase, stage:Stage, camera:Camera)\r\n\t{\r\n\t\t//TODO move this to Activate (ambientR/G/B currently calc'd in render state)\r\n\t\tif (shaderObject.numLights > 0) {\r\n\t\t\tvar index:number = methodVO.fragmentConstantsIndex;\r\n\t\t\tvar data:Array<number> = shaderObject.fragmentConstantData;\r\n\t\t\tdata[index] = shaderObject.ambientR*this._ambientR;\r\n\t\t\tdata[index + 1] = shaderObject.ambientG*this._ambientG;\r\n\t\t\tdata[index + 2] = shaderObject.ambientB*this._ambientB;\r\n\t\t\tdata[index + 3] = 1;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = DiffuseBasicMethod;","import Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\r\n\r\nimport ShaderLightingObject\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderLightingObject\");\r\nimport ShaderObjectBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderObjectBase\");\r\nimport ShaderRegisterCache\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterCache\");\r\nimport ShaderRegisterData\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterData\");\r\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterElement\");\r\nimport ShaderCompilerHelper\t\t\t\t= require(\"awayjs-renderergl/lib/utils/ShaderCompilerHelper\");\r\n\r\nimport MethodVO\t\t\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/data/MethodVO\");\r\nimport DiffuseBasicMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/DiffuseBasicMethod\");\r\nimport DiffuseCompositeMethod\t\t\t= require(\"awayjs-methodmaterials/lib/methods/DiffuseCompositeMethod\");\r\n\r\n/**\r\n * DiffuseCelMethod provides a shading method to add diffuse cel (cartoon) shading.\r\n */\r\nclass DiffuseCelMethod extends DiffuseCompositeMethod\r\n{\r\n\tprivate _levels:number /*uint*/;\r\n\tprivate _dataReg:ShaderRegisterElement;\r\n\tprivate _smoothness:number = .1;\r\n\r\n\t/**\r\n\t * Creates a new DiffuseCelMethod object.\r\n\t * @param levels The amount of shadow gradations.\r\n\t * @param baseMethod An optional diffuse method on which the cartoon shading is based. If omitted, DiffuseBasicMethod is used.\r\n\t */\r\n\tconstructor(levels:number /*uint*/ = 3, baseMethod:DiffuseBasicMethod = null)\r\n\t{\r\n\t\tsuper(null, baseMethod);\r\n\r\n\t\tthis.baseMethod._iModulateMethod = (shaderObject:ShaderObjectBase, methodVO:MethodVO, targetReg:ShaderRegisterElement, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData) => this.clampDiffuse(shaderObject, methodVO, targetReg, registerCache, sharedRegisters);\r\n\r\n\t\tthis._levels = levels;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic iInitConstants(shaderObject:ShaderLightingObject, methodVO:MethodVO)\r\n\t{\r\n\t\tvar data:Array<number> = shaderObject.fragmentConstantData;\r\n\t\tvar index:number /*int*/ = methodVO.secondaryFragmentConstantsIndex;\r\n\t\tsuper.iInitConstants(shaderObject, methodVO);\r\n\t\tdata[index + 1] = 1;\r\n\t\tdata[index + 2] = 0;\r\n\t}\r\n\r\n\t/**\r\n\t * The amount of shadow gradations.\r\n\t */\r\n\tpublic get levels():number /*uint*/\r\n\t{\r\n\t\treturn this._levels;\r\n\t}\r\n\r\n\tpublic set levels(value:number /*uint*/)\r\n\t{\r\n\t\tthis._levels = value;\r\n\t}\r\n\r\n\t/**\r\n\t * The smoothness of the edge between 2 shading levels.\r\n\t */\r\n\tpublic get smoothness():number\r\n\t{\r\n\t\treturn this._smoothness;\r\n\t}\r\n\r\n\tpublic set smoothness(value:number)\r\n\t{\r\n\t\tthis._smoothness = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic iCleanCompilationData()\r\n\t{\r\n\t\tsuper.iCleanCompilationData();\r\n\t\tthis._dataReg = null;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic iGetFragmentPreLightingCode(shaderObject:ShaderLightingObject, methodVO:MethodVO, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\r\n\t{\r\n\t\tthis._dataReg = registerCache.getFreeFragmentConstant();\r\n\t\tmethodVO.secondaryFragmentConstantsIndex = this._dataReg.index*4;\r\n\r\n\t\treturn super.iGetFragmentPreLightingCode(shaderObject, methodVO, registerCache, sharedRegisters);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic iActivate(shaderObject:ShaderLightingObject, methodVO:MethodVO, stage:Stage)\r\n\t{\r\n\t\tsuper.iActivate(shaderObject, methodVO, stage);\r\n\t\tvar data:Array<number> = shaderObject.fragmentConstantData;\r\n\t\tvar index:number /*int*/ = methodVO.secondaryFragmentConstantsIndex;\r\n\t\tdata[index] = this._levels;\r\n\t\tdata[index + 3] = this._smoothness;\r\n\t}\r\n\r\n\t/**\r\n\t * Snaps the diffuse shading of the wrapped method to one of the levels.\r\n\t * @param vo The MethodVO used to compile the current shader.\r\n\t * @param t The register containing the diffuse strength in the \"w\" component.\r\n\t * @param regCache The register cache used for the shader compilation.\r\n\t * @param sharedRegisters The shared register data for this shader.\r\n\t * @return The AGAL fragment code for the method.\r\n\t */\r\n\tprivate clampDiffuse(shaderObject:ShaderObjectBase, methodVO:MethodVO, targetReg:ShaderRegisterElement, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\r\n\t{\r\n\t\treturn \"mul \" + targetReg + \".w, \" + targetReg + \".w, \" + this._dataReg + \".x\\n\" +\r\n\t\t\t\"frc \" + targetReg + \".z, \" + targetReg + \".w\\n\" +\r\n\t\t\t\"sub \" + targetReg + \".y, \" + targetReg + \".w, \" + targetReg + \".z\\n\" +\r\n\t\t\t\"mov \" + targetReg + \".x, \" + this._dataReg + \".x\\n\" +\r\n\t\t\t\"sub \" + targetReg + \".x, \" + targetReg + \".x, \" + this._dataReg + \".y\\n\" +\r\n\t\t\t\"rcp \" + targetReg + \".x,\" + targetReg + \".x\\n\" +\r\n\t\t\t\"mul \" + targetReg + \".w, \" + targetReg + \".y, \" + targetReg + \".x\\n\" +\r\n\r\n\t\t\t// previous clamped strength\r\n\t\t\t\"sub \" + targetReg + \".y, \" + targetReg + \".w, \" + targetReg + \".x\\n\" +\r\n\r\n\t\t\t// fract/epsilon (so 0 - epsilon will become 0 - 1)\r\n\t\t\t\"div \" + targetReg + \".z, \" + targetReg + \".z, \" + this._dataReg + \".w\\n\" +\r\n\t\t\t\"sat \" + targetReg + \".z, \" + targetReg + \".z\\n\" +\r\n\r\n\t\t\t\"mul \" + targetReg + \".w, \" + targetReg + \".w, \" + targetReg + \".z\\n\" +\r\n\t\t\t// 1-z\r\n\t\t\t\"sub \" + targetReg + \".z, \" + this._dataReg + \".y, \" + targetReg + \".z\\n\" +\r\n\t\t\t\"mul \" + targetReg + \".y, \" + targetReg + \".y, \" + targetReg + \".z\\n\" +\r\n\t\t\t\"add \" + targetReg + \".w, \" + targetReg + \".w, \" + targetReg + \".y\\n\" +\r\n\t\t\t\"sat \" + targetReg + \".w, \" + targetReg + \".w\\n\";\r\n\t}\r\n}\r\n\r\nexport = DiffuseCelMethod;","import Texture2DBase\t\t\t\t\t= require(\"awayjs-core/lib/textures/Texture2DBase\");\r\n\r\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\n\r\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\r\n\r\nimport ShaderLightingObject\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderLightingObject\");\r\nimport ShaderObjectBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderObjectBase\");\r\nimport ShaderRegisterCache\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterCache\");\r\nimport ShaderRegisterData\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterData\");\r\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterElement\");\r\nimport ShadingMethodEvent\t\t\t\t= require(\"awayjs-renderergl/lib/events/ShadingMethodEvent\");\r\nimport RenderableBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/pool/RenderableBase\");\r\n\r\nimport MethodVO\t\t\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/data/MethodVO\");\r\nimport DiffuseBasicMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/DiffuseBasicMethod\");\r\n\r\n/**\r\n * DiffuseCompositeMethod provides a base class for diffuse methods that wrap a diffuse method to alter the\r\n * calculated diffuse reflection strength.\r\n */\r\nclass DiffuseCompositeMethod extends DiffuseBasicMethod\r\n{\r\n\tpublic pBaseMethod:DiffuseBasicMethod;\r\n\r\n\tprivate _onShaderInvalidatedDelegate:Function;\r\n\r\n\t/**\r\n\t * Creates a new <code>DiffuseCompositeMethod</code> object.\r\n\t *\r\n\t * @param modulateMethod The method which will add the code to alter the base method's strength. It needs to have the signature clampDiffuse(t:ShaderRegisterElement, regCache:ShaderRegisterCache):string, in which t.w will contain the diffuse strength.\r\n\t * @param baseMethod The base diffuse method on which this method's shading is based.\r\n\t */\r\n\tconstructor(modulateMethod:(shaderObject:ShaderObjectBase, methodVO:MethodVO, targetReg:ShaderRegisterElement, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData) => string, baseMethod:DiffuseBasicMethod = null)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._onShaderInvalidatedDelegate = (event:ShadingMethodEvent) => this.onShaderInvalidated(event);\r\n\r\n\t\tthis.pBaseMethod = baseMethod || new DiffuseBasicMethod();\r\n\t\tthis.pBaseMethod._iModulateMethod = modulateMethod;\r\n\t\tthis.pBaseMethod.addEventListener(ShadingMethodEvent.SHADER_INVALIDATED, this._onShaderInvalidatedDelegate);\r\n\t}\r\n\r\n\t/**\r\n\t * The base diffuse method on which this method's shading is based.\r\n\t */\r\n\tpublic get baseMethod():DiffuseBasicMethod\r\n\t{\r\n\t\treturn this.pBaseMethod;\r\n\t}\r\n\r\n\tpublic set baseMethod(value:DiffuseBasicMethod)\r\n\t{\r\n\t\tif (this.pBaseMethod == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis.pBaseMethod.removeEventListener(ShadingMethodEvent.SHADER_INVALIDATED, this._onShaderInvalidatedDelegate);\r\n\t\tthis.pBaseMethod = value;\r\n\t\tthis.pBaseMethod.addEventListener(ShadingMethodEvent.SHADER_INVALIDATED, this._onShaderInvalidatedDelegate);\r\n\t\tthis.iInvalidateShaderProgram();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic iInitVO(shaderObject:ShaderLightingObject, methodVO:MethodVO)\r\n\t{\r\n\t\tthis.pBaseMethod.iInitVO(shaderObject, methodVO);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic iInitConstants(shaderObject:ShaderLightingObject, methodVO:MethodVO)\r\n\t{\r\n\t\tthis.pBaseMethod.iInitConstants(shaderObject, methodVO);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tthis.pBaseMethod.removeEventListener(ShadingMethodEvent.SHADER_INVALIDATED, this._onShaderInvalidatedDelegate);\r\n\t\tthis.pBaseMethod.dispose();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic get texture():Texture2DBase\r\n\t{\r\n\t\treturn this.pBaseMethod.texture;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic set texture(value:Texture2DBase)\r\n\t{\r\n\t\tthis.pBaseMethod.texture = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic get diffuseColor():number\r\n\t{\r\n\t\treturn this.pBaseMethod.diffuseColor;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic set diffuseColor(value:number)\r\n\t{\r\n\t\tthis.pBaseMethod.diffuseColor = value;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic get ambientColor():number\r\n\t{\r\n\t\treturn this.pBaseMethod.ambientColor;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic set ambientColor(value:number)\r\n\t{\r\n\t\tthis.pBaseMethod.ambientColor = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic iGetFragmentPreLightingCode(shaderObject:ShaderLightingObject, methodVO:MethodVO, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\r\n\t{\r\n\t\treturn this.pBaseMethod.iGetFragmentPreLightingCode(shaderObject, methodVO, registerCache, sharedRegisters);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic iGetFragmentCodePerLight(shaderObject:ShaderLightingObject, methodVO:MethodVO, lightDirReg:ShaderRegisterElement, lightColReg:ShaderRegisterElement, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\r\n\t{\r\n\t\tvar code:string = this.pBaseMethod.iGetFragmentCodePerLight(shaderObject, methodVO, lightDirReg, lightColReg, registerCache, sharedRegisters);\r\n\t\tthis._pTotalLightColorReg = this.pBaseMethod._pTotalLightColorReg;\r\n\t\treturn code;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic iGetFragmentCodePerProbe(shaderObject:ShaderLightingObject, methodVO:MethodVO, cubeMapReg:ShaderRegisterElement, weightRegister:string, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\r\n\t{\r\n\t\tvar code:string = this.pBaseMethod.iGetFragmentCodePerProbe(shaderObject, methodVO, cubeMapReg, weightRegister, registerCache, sharedRegisters);\r\n\t\tthis._pTotalLightColorReg = this.pBaseMethod._pTotalLightColorReg;\r\n\t\treturn code;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic iActivate(shaderObject:ShaderLightingObject, methodVO:MethodVO, stage:Stage)\r\n\t{\r\n\t\tthis.pBaseMethod.iActivate(shaderObject, methodVO, stage);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic iSetRenderState(shaderObject:ShaderLightingObject, methodVO:MethodVO, renderable:RenderableBase, stage:Stage, camera:Camera)\r\n\t{\r\n\t\tthis.pBaseMethod.iSetRenderState(shaderObject, methodVO, renderable, stage, camera);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic iDeactivate(shaderObject:ShaderLightingObject, methodVO:MethodVO, stage:Stage)\r\n\t{\r\n\t\tthis.pBaseMethod.iDeactivate(shaderObject, methodVO, stage);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic iGetVertexCode(shaderObject:ShaderObjectBase, methodVO:MethodVO, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\r\n\t{\r\n\t\treturn this.pBaseMethod.iGetVertexCode(shaderObject, methodVO, registerCache, sharedRegisters);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic iGetFragmentPostLightingCode(shaderObject:ShaderLightingObject, methodVO:MethodVO, targetReg:ShaderRegisterElement, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\r\n\t{\r\n\t\treturn this.pBaseMethod.iGetFragmentPostLightingCode(shaderObject, methodVO, targetReg, registerCache, sharedRegisters);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic iReset()\r\n\t{\r\n\t\tthis.pBaseMethod.iReset();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic iCleanCompilationData()\r\n\t{\r\n\t\tsuper.iCleanCompilationData();\r\n\t\tthis.pBaseMethod.iCleanCompilationData();\r\n\t}\r\n\r\n\t/**\r\n\t * Called when the base method's shader code is invalidated.\r\n\t */\r\n\tprivate onShaderInvalidated(event:ShadingMethodEvent)\r\n\t{\r\n\t\tthis.iInvalidateShaderProgram();\r\n\t}\r\n}\r\n\r\nexport = DiffuseCompositeMethod;","import ShaderLightingObject\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderLightingObject\");\r\nimport ShaderObjectBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderObjectBase\");\r\nimport ShaderRegisterCache\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterCache\");\r\nimport ShaderRegisterData\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterData\");\r\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterElement\");\r\nimport ShaderCompilerHelper\t\t\t\t= require(\"awayjs-renderergl/lib/utils/ShaderCompilerHelper\");\r\n\r\nimport MethodVO\t\t\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/data/MethodVO\");\r\nimport DiffuseBasicMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/DiffuseBasicMethod\");\r\n\r\n/**\r\n * DiffuseDepthMethod provides a debug method to visualise depth maps\r\n */\r\nclass DiffuseDepthMethod extends DiffuseBasicMethod\r\n{\r\n\t/**\r\n\t * Creates a new DiffuseBasicMethod object.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic iInitConstants(shaderObject:ShaderObjectBase, methodVO:MethodVO)\r\n\t{\r\n\t\tvar data:Array<number> = shaderObject.fragmentConstantData;\r\n\t\tvar index:number /*int*/ = methodVO.fragmentConstantsIndex;\r\n\t\tdata[index] = 1.0;\r\n\t\tdata[index + 1] = 1/255.0;\r\n\t\tdata[index + 2] = 1/65025.0;\r\n\t\tdata[index + 3] = 1/16581375.0;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic iGetFragmentPostLightingCode(shaderObject:ShaderLightingObject, methodVO:MethodVO, targetReg:ShaderRegisterElement, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\r\n\t{\r\n\t\tvar code:string = \"\";\r\n\t\tvar temp:ShaderRegisterElement;\r\n\t\tvar decReg:ShaderRegisterElement;\r\n\r\n\t\tif (!this._pUseTexture)\r\n\t\t\tthrow new Error(\"DiffuseDepthMethod requires texture!\");\r\n\r\n\t\t// incorporate input from ambient\r\n\t\tif (shaderObject.numLights > 0) {\r\n\t\t\tif (sharedRegisters.shadowTarget)\r\n\t\t\t\tcode += \"mul \" + this._pTotalLightColorReg + \".xyz, \" + this._pTotalLightColorReg + \".xyz, \" + sharedRegisters.shadowTarget + \".w\\n\";\r\n\t\t\tcode += \"add \" + targetReg + \".xyz, \" + this._pTotalLightColorReg + \".xyz, \" + targetReg + \".xyz\\n\" +\r\n\t\t\t\t\"sat \" + targetReg + \".xyz, \" + targetReg + \".xyz\\n\";\r\n\t\t\tregisterCache.removeFragmentTempUsage(this._pTotalLightColorReg);\r\n\t\t}\r\n\r\n\t\ttemp = shaderObject.numLights > 0? registerCache.getFreeFragmentVectorTemp():targetReg;\r\n\r\n\t\tthis._pDiffuseInputRegister = registerCache.getFreeTextureReg();\r\n\t\tmethodVO.texturesIndex = this._pDiffuseInputRegister.index;\r\n\t\tdecReg = registerCache.getFreeFragmentConstant();\r\n\t\tmethodVO.fragmentConstantsIndex = decReg.index*4;\r\n\t\tcode += ShaderCompilerHelper.getTex2DSampleCode(temp, sharedRegisters, this._pDiffuseInputRegister, this.texture, shaderObject.useSmoothTextures, shaderObject.repeatTextures, shaderObject.useMipmapping) +\r\n\t\t\t\"dp4 \" + temp + \".x, \" + temp + \", \" + decReg + \"\\n\" +\r\n\t\t\t\"mov \" + temp + \".yz, \" + temp + \".xx\t\t\t\\n\" +\r\n\t\t\t\"mov \" + temp + \".w, \" + decReg + \".x\\n\" +\r\n\t\t\t\"sub \" + temp + \".xyz, \" + decReg + \".xxx, \" + temp + \".xyz\\n\";\r\n\r\n\t\tif (shaderObject.numLights == 0)\r\n\t\t\treturn code;\r\n\r\n\t\tcode += \"mul \" + targetReg + \".xyz, \" + temp + \".xyz, \" + targetReg + \".xyz\\n\" +\r\n\t\t\t\"mov \" + targetReg + \".w, \" + temp + \".w\\n\";\r\n\r\n\t\treturn code;\r\n\t}\r\n}\r\n\r\nexport = DiffuseDepthMethod;","import Texture2DBase\t\t\t\t\t= require(\"awayjs-core/lib/textures/Texture2DBase\");\r\n\r\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\r\n\r\nimport ShaderLightingObject\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderLightingObject\");\r\nimport ShaderRegisterCache\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterCache\");\r\nimport ShaderRegisterData\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterData\");\r\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterElement\");\r\nimport ShaderCompilerHelper\t\t\t\t= require(\"awayjs-renderergl/lib/utils/ShaderCompilerHelper\");\r\n\r\nimport MethodVO\t\t\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/data/MethodVO\");\r\nimport DiffuseBasicMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/DiffuseBasicMethod\");\r\n\r\n/**\r\n * DiffuseGradientMethod is an alternative to DiffuseBasicMethod in which the shading can be modulated with a gradient\r\n * to introduce color-tinted shading as opposed to the single-channel diffuse strength. This can be used as a crude\r\n * approximation to subsurface scattering (for instance, the mid-range shading for skin can be tinted red to similate\r\n * scattered light within the skin attributing to the final colour)\r\n */\r\nclass DiffuseGradientMethod extends DiffuseBasicMethod\r\n{\r\n\tprivate _gradientTextureRegister:ShaderRegisterElement;\r\n\tprivate _gradient:Texture2DBase;\r\n\r\n\t/**\r\n\t * Creates a new DiffuseGradientMethod object.\r\n\t * @param gradient A texture that contains the light colour based on the angle. This can be used to change\r\n\t * the light colour due to subsurface scattering when the surface faces away from the light.\r\n\t */\r\n\tconstructor(gradient:Texture2DBase)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._gradient = gradient;\r\n\t}\r\n\r\n\t/**\r\n\t * A texture that contains the light colour based on the angle. This can be used to change the light colour\r\n\t * due to subsurface scattering when the surface faces away from the light.\r\n\t */\r\n\tpublic get gradient():Texture2DBase\r\n\t{\r\n\t\treturn this._gradient;\r\n\t}\r\n\r\n\tpublic set gradient(value:Texture2DBase)\r\n\t{\r\n\t\tif (value.format != this._gradient.format)\r\n\t\t\tthis.iInvalidateShaderProgram();\r\n\t\tthis._gradient = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic iCleanCompilationData()\r\n\t{\r\n\t\tsuper.iCleanCompilationData();\r\n\t\tthis._gradientTextureRegister = null;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic iGetFragmentPreLightingCode(shaderObject:ShaderLightingObject, methodVO:MethodVO, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\r\n\t{\r\n\t\tvar code:string = super.iGetFragmentPreLightingCode(shaderObject, methodVO, registerCache, sharedRegisters);\r\n\t\tthis._pIsFirstLight = true;\r\n\r\n\t\tif (shaderObject.numLights > 0) {\r\n\t\t\tthis._gradientTextureRegister = registerCache.getFreeTextureReg();\r\n\t\t\tmethodVO.secondaryTexturesIndex = this._gradientTextureRegister.index;\r\n\t\t}\r\n\t\treturn code;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic iGetFragmentCodePerLight(shaderObject:ShaderLightingObject, methodVO:MethodVO, lightDirReg:ShaderRegisterElement, lightColReg:ShaderRegisterElement, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\r\n\t{\r\n\t\tvar code:string = \"\";\r\n\t\tvar t:ShaderRegisterElement;\r\n\r\n\t\t// write in temporary if not first light, so we can add to total diffuse colour\r\n\t\tif (this._pIsFirstLight)\r\n\t\t\tt = this._pTotalLightColorReg;\r\n\t\telse {\r\n\t\t\tt = registerCache.getFreeFragmentVectorTemp();\r\n\t\t\tregisterCache.addFragmentTempUsages(t, 1);\r\n\t\t}\r\n\r\n\t\tcode += \"dp3 \" + t + \".w, \" + lightDirReg + \".xyz, \" + sharedRegisters.normalFragment + \".xyz\\n\" +\r\n\t\t\t\"mul \" + t + \".w, \" + t + \".w, \" + sharedRegisters.commons + \".x\\n\" +\r\n\t\t\t\"add \" + t + \".w, \" + t + \".w, \" + sharedRegisters.commons + \".x\\n\" +\r\n\t\t\t\"mul \" + t + \".xyz, \" + t + \".w, \" + lightDirReg + \".w\\n\";\r\n\r\n\t\tif (this._iModulateMethod != null)\r\n\t\t\tcode += this._iModulateMethod(shaderObject, methodVO, t, registerCache, sharedRegisters);\r\n\r\n\t\tcode += ShaderCompilerHelper.getTex2DSampleCode(t, sharedRegisters, this._gradientTextureRegister, this._gradient, shaderObject.useSmoothTextures, shaderObject.repeatTextures, shaderObject.useMipmapping, t, \"clamp\") +\r\n\t\t\t//\t\t\t\t\t\"mul \" + t + \".xyz, \" + t + \".xyz, \" + t + \".w\\n\" +\r\n\t\t\t\"mul \" + t + \".xyz, \" + t + \".xyz, \" + lightColReg + \".xyz\\n\";\r\n\r\n\t\tif (!this._pIsFirstLight) {\r\n\t\t\tcode += \"add \" + this._pTotalLightColorReg + \".xyz, \" + this._pTotalLightColorReg + \".xyz, \" + t + \".xyz\\n\";\r\n\t\t\tregisterCache.removeFragmentTempUsage(t);\r\n\t\t}\r\n\r\n\t\tthis._pIsFirstLight = false;\r\n\r\n\t\treturn code;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic pApplyShadow(shaderObject:ShaderLightingObject, methodVO:MethodVO, regCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\r\n\t{\r\n\t\tvar t:ShaderRegisterElement = regCache.getFreeFragmentVectorTemp();\r\n\r\n\t\treturn \"mov \" + t + \", \" + sharedRegisters.shadowTarget + \".wwww\\n\" +\r\n\t\t\tShaderCompilerHelper.getTex2DSampleCode(t, sharedRegisters, this._gradientTextureRegister, this._gradient, shaderObject.useSmoothTextures, shaderObject.repeatTextures, shaderObject.useMipmapping, t, \"clamp\") +\r\n\t\t\t\"mul \" + this._pTotalLightColorReg + \".xyz, \" + this._pTotalLightColorReg + \", \" + t + \"\\n\";\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic iActivate(shaderObject:ShaderLightingObject, methodVO:MethodVO, stage:Stage)\r\n\t{\r\n\t\tsuper.iActivate(shaderObject, methodVO, stage);\r\n\r\n\t\tstage.activateTexture(methodVO.secondaryTexturesIndex, this._gradient, shaderObject.repeatTextures, shaderObject.useSmoothTextures, shaderObject.useMipmapping);\r\n\t}\r\n}\r\n\r\nexport = DiffuseGradientMethod;","import Texture2DBase\t\t\t\t\t= require(\"awayjs-core/lib/textures/Texture2DBase\");\r\n\r\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\r\n\r\nimport ShaderLightingObject\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderLightingObject\");\r\nimport ShaderRegisterCache\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterCache\");\r\nimport ShaderRegisterData\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterData\");\r\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterElement\");\r\nimport ShaderCompilerHelper\t\t\t\t= require(\"awayjs-renderergl/lib/utils/ShaderCompilerHelper\");\r\n\r\nimport MethodVO\t\t\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/data/MethodVO\");\r\nimport DiffuseBasicMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/DiffuseBasicMethod\");\r\nimport DiffuseCompositeMethod\t\t\t= require(\"awayjs-methodmaterials/lib/methods/DiffuseCompositeMethod\");\r\n\r\n/**\r\n * DiffuseLightMapMethod provides a diffuse shading method that uses a light map to modulate the calculated diffuse\r\n * lighting. It is different from EffectLightMapMethod in that the latter modulates the entire calculated pixel color, rather\r\n * than only the diffuse lighting value.\r\n */\r\nclass DiffuseLightMapMethod extends DiffuseCompositeMethod\r\n{\r\n\t/**\r\n\t * Indicates the light map should be multiplied with the calculated shading result.\r\n\t * This can be used to add pre-calculated shadows or occlusion.\r\n\t */\r\n\tpublic static MULTIPLY:string = \"multiply\";\r\n\r\n\t/**\r\n\t * Indicates the light map should be added into the calculated shading result.\r\n\t * This can be used to add pre-calculated lighting or global illumination.\r\n\t */\r\n\tpublic static ADD:string = \"add\";\r\n\r\n\tprivate _lightMapTexture:Texture2DBase;\r\n\tprivate _blendMode:string;\r\n\tprivate _useSecondaryUV:boolean;\r\n\r\n\t/**\r\n\t * Creates a new DiffuseLightMapMethod method.\r\n\t *\r\n\t * @param lightMap The texture containing the light map.\r\n\t * @param blendMode The blend mode with which the light map should be applied to the lighting result.\r\n\t * @param useSecondaryUV Indicates whether the secondary UV set should be used to map the light map.\r\n\t * @param baseMethod The diffuse method used to calculate the regular diffuse-based lighting.\r\n\t */\r\n\tconstructor(lightMap:Texture2DBase, blendMode:string = \"multiply\", useSecondaryUV:boolean = false, baseMethod:DiffuseBasicMethod = null)\r\n\t{\r\n\t\tsuper(null, baseMethod);\r\n\r\n\t\tthis._useSecondaryUV = useSecondaryUV;\r\n\t\tthis._lightMapTexture = lightMap;\r\n\t\tthis.blendMode = blendMode;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic iInitVO(shaderObject:ShaderLightingObject, methodVO:MethodVO)\r\n\t{\r\n\t\tmethodVO.needsSecondaryUV = this._useSecondaryUV;\r\n\t\tmethodVO.needsUV = !this._useSecondaryUV;\r\n\t}\r\n\r\n\t/**\r\n\t * The blend mode with which the light map should be applied to the lighting result.\r\n\t *\r\n\t * @see DiffuseLightMapMethod.ADD\r\n\t * @see DiffuseLightMapMethod.MULTIPLY\r\n\t */\r\n\tpublic get blendMode():string\r\n\t{\r\n\t\treturn this._blendMode;\r\n\t}\r\n\r\n\tpublic set blendMode(value:string)\r\n\t{\r\n\t\tif (value != DiffuseLightMapMethod.ADD && value != DiffuseLightMapMethod.MULTIPLY)\r\n\t\t\tthrow new Error(\"Unknown blendmode!\");\r\n\r\n\t\tif (this._blendMode == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._blendMode = value;\r\n\r\n\t\tthis.iInvalidateShaderProgram();\r\n\t}\r\n\r\n\t/**\r\n\t * The texture containing the light map data.\r\n\t */\r\n\tpublic get lightMapTexture():Texture2DBase\r\n\t{\r\n\t\treturn this._lightMapTexture;\r\n\t}\r\n\r\n\tpublic set lightMapTexture(value:Texture2DBase)\r\n\t{\r\n\t\tthis._lightMapTexture = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic iActivate(shaderObject:ShaderLightingObject, methodVO:MethodVO, stage:Stage)\r\n\t{\r\n\t\tstage.activateTexture(methodVO.secondaryTexturesIndex, this._lightMapTexture, shaderObject.repeatTextures, shaderObject.useSmoothTextures, shaderObject.useMipmapping);\r\n\r\n\t\tsuper.iActivate(shaderObject, methodVO, stage);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic iGetFragmentPostLightingCode(shaderObject:ShaderLightingObject, methodVO:MethodVO, targetReg:ShaderRegisterElement, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\r\n\t{\r\n\t\tvar code:string;\r\n\t\tvar lightMapReg:ShaderRegisterElement = registerCache.getFreeTextureReg();\r\n\t\tvar temp:ShaderRegisterElement = registerCache.getFreeFragmentVectorTemp();\r\n\t\tmethodVO.secondaryTexturesIndex = lightMapReg.index;\r\n\r\n\t\tcode = ShaderCompilerHelper.getTex2DSampleCode(temp, sharedRegisters, lightMapReg, this._lightMapTexture, shaderObject.useSmoothTextures, shaderObject.repeatTextures, shaderObject.useMipmapping, sharedRegisters.secondaryUVVarying);\r\n\r\n\t\tswitch (this._blendMode) {\r\n\t\t\tcase DiffuseLightMapMethod.MULTIPLY:\r\n\t\t\t\tcode += \"mul \" + this._pTotalLightColorReg + \", \" + this._pTotalLightColorReg + \", \" + temp + \"\\n\";\r\n\t\t\t\tbreak;\r\n\t\t\tcase DiffuseLightMapMethod.ADD:\r\n\t\t\t\tcode += \"add \" + this._pTotalLightColorReg + \", \" + this._pTotalLightColorReg + \", \" + temp + \"\\n\";\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\tcode += super.iGetFragmentPostLightingCode(shaderObject, methodVO, targetReg, registerCache, sharedRegisters);\r\n\r\n\t\treturn code;\r\n\t}\r\n}\r\n\r\nexport = DiffuseLightMapMethod;","import Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\n\r\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\r\n\r\nimport ShaderLightingObject\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderLightingObject\");\r\nimport ShaderObjectBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderObjectBase\");\r\nimport ShaderRegisterCache\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterCache\");\r\nimport ShaderRegisterData\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterData\");\r\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterElement\");\r\nimport RenderableBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/pool/RenderableBase\");\r\n\r\nimport MethodVO\t\t\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/data/MethodVO\");\r\nimport DiffuseBasicMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/DiffuseBasicMethod\");\r\nimport DiffuseCompositeMethod\t\t\t= require(\"awayjs-methodmaterials/lib/methods/DiffuseCompositeMethod\");\r\nimport SingleObjectDepthPass\t\t\t= require(\"awayjs-methodmaterials/lib/passes/SingleObjectDepthPass\");\r\n\r\n/**\r\n * DiffuseSubSurfaceMethod provides a depth map-based diffuse shading method that mimics the scattering of\r\n * light inside translucent surfaces. It allows light to shine through an object and to soften the diffuse shading.\r\n * It can be used for candle wax, ice, skin, ...\r\n */\r\nclass DiffuseSubSurfaceMethod extends DiffuseCompositeMethod\r\n{\r\n\tprivate _depthPass:SingleObjectDepthPass;\r\n\tprivate _lightProjVarying:ShaderRegisterElement;\r\n\tprivate _propReg:ShaderRegisterElement;\r\n\tprivate _scattering:number;\r\n\tprivate _translucency:number = 1;\r\n\tprivate _lightColorReg:ShaderRegisterElement;\r\n\tprivate _scatterColor:number /*uint*/ = 0xffffff;\r\n\tprivate _colorReg:ShaderRegisterElement;\r\n\tprivate _decReg:ShaderRegisterElement;\r\n\tprivate _scatterR:number = 1.0;\r\n\tprivate _scatterG:number = 1.0;\r\n\tprivate _scatterB:number = 1.0;\r\n\tprivate _targetReg:ShaderRegisterElement;\r\n\t\r\n\t/**\r\n\t * Creates a new <code>DiffuseSubSurfaceMethod</code> object.\r\n\t *\r\n\t * @param depthMapSize The size of the depth map used.\r\n\t * @param depthMapOffset The amount by which the rendered object will be inflated, to prevent depth map rounding errors.\r\n\t * @param baseMethod The diffuse method used to calculate the regular diffuse-based lighting.\r\n\t */\r\n\tconstructor(depthMapSize:number /*int*/ = 512, depthMapOffset:number = 15, baseMethod:DiffuseBasicMethod = null)\r\n\t{\r\n\t\tsuper(null, baseMethod);\r\n\r\n\t\tthis.pBaseMethod._iModulateMethod = (shaderObject:ShaderObjectBase, methodVO:MethodVO, targetReg:ShaderRegisterElement, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData) => this.scatterLight(shaderObject, methodVO, targetReg, registerCache, sharedRegisters);\r\n\r\n\t\t//this._passes = new Array<MaterialPassGLBase>();\r\n\t\t//this._depthPass = new SingleObjectDepthPass();\r\n\t\t//this._depthPass.textureSize = depthMapSize;\r\n\t\t//this._depthPass.polyOffset = depthMapOffset;\r\n\t\t//this._passes.push(this._depthPass);\r\n\t\tthis._scattering = 0.2;\r\n\t\tthis._translucency = 1;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic iInitConstants(shaderObject:ShaderLightingObject, methodVO:MethodVO)\r\n\t{\r\n\t\tsuper.iInitConstants(shaderObject, methodVO);\r\n\r\n\t\tvar data:Array<number> = shaderObject.vertexConstantData;\r\n\t\tvar index:number /*int*/ = methodVO.secondaryVertexConstantsIndex;\r\n\t\tdata[index] = .5;\r\n\t\tdata[index + 1] = -.5;\r\n\t\tdata[index + 2] = 0;\r\n\t\tdata[index + 3] = 1;\r\n\t\t\r\n\t\tdata = shaderObject.fragmentConstantData;\r\n\t\tindex = methodVO.secondaryFragmentConstantsIndex;\r\n\t\tdata[index + 3] = 1.0;\r\n\t\tdata[index + 4] = 1.0;\r\n\t\tdata[index + 5] = 1/255;\r\n\t\tdata[index + 6] = 1/65025;\r\n\t\tdata[index + 7] = 1/16581375;\r\n\t\tdata[index + 10] = .5;\r\n\t\tdata[index + 11] = -.1;\r\n\t}\r\n\t\r\n\tpublic iCleanCompilationData()\r\n\t{\r\n\t\tsuper.iCleanCompilationData();\r\n\r\n\t\tthis._lightProjVarying = null;\r\n\t\tthis._propReg = null;\r\n\t\tthis._lightColorReg = null;\r\n\t\tthis._colorReg = null;\r\n\t\tthis._decReg = null;\r\n\t\tthis._targetReg = null;\r\n\t}\r\n\t\r\n\t/**\r\n\t * The amount by which the light scatters. It can be used to set the translucent surface's thickness. Use low\r\n\t * values for skin.\r\n\t */\r\n\tpublic get scattering():number\r\n\t{\r\n\t\treturn this._scattering;\r\n\t}\r\n\t\r\n\tpublic set scattering(value:number)\r\n\t{\r\n\t\tthis._scattering = value;\r\n\t}\r\n\t\r\n\t/**\r\n\t * The translucency of the object.\r\n\t */\r\n\tpublic get translucency():number\r\n\t{\r\n\t\treturn this._translucency;\r\n\t}\r\n\t\r\n\tpublic set translucency(value:number)\r\n\t{\r\n\t\tthis._translucency = value;\r\n\t}\r\n\t\r\n\t/**\r\n\t * The colour of the \"insides\" of the object, ie: the colour the light becomes after leaving the object.\r\n\t */\r\n\tpublic get scatterColor():number /*uint*/\r\n\t{\r\n\t\treturn this._scatterColor;\r\n\t}\r\n\t\r\n\tpublic set scatterColor(scatterColor:number /*uint*/)\r\n\t{\r\n\t\tthis._scatterColor = scatterColor;\r\n\t\tthis._scatterR = ((scatterColor >> 16) & 0xff)/0xff;\r\n\t\tthis._scatterG = ((scatterColor >> 8) & 0xff)/0xff;\r\n\t\tthis._scatterB = (scatterColor & 0xff)/0xff;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic iGetVertexCode(shaderObject:ShaderObjectBase, methodVO:MethodVO, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\r\n\t{\r\n\t\tvar code:string = super.iGetVertexCode(shaderObject, methodVO, registerCache, sharedRegisters);\r\n\t\tvar lightProjection:ShaderRegisterElement;\r\n\t\tvar toTexRegister:ShaderRegisterElement;\r\n\t\tvar temp:ShaderRegisterElement = registerCache.getFreeVertexVectorTemp();\r\n\t\t\r\n\t\ttoTexRegister = registerCache.getFreeVertexConstant();\r\n\t\tmethodVO.secondaryVertexConstantsIndex = toTexRegister.index*4;\r\n\r\n\t\tthis._lightProjVarying = registerCache.getFreeVarying();\r\n\t\tlightProjection = registerCache.getFreeVertexConstant();\r\n\t\tregisterCache.getFreeVertexConstant();\r\n\t\tregisterCache.getFreeVertexConstant();\r\n\t\tregisterCache.getFreeVertexConstant();\r\n\t\t\r\n\t\tcode += \"m44 \" + temp + \", vt0, \" + lightProjection + \"\\n\" +\r\n\t\t\t\"div \" + temp + \".xyz, \" + temp + \".xyz, \" + temp + \".w\\n\" +\r\n\t\t\t\"mul \" + temp + \".xy, \" + temp + \".xy, \" + toTexRegister + \".xy\\n\" +\r\n\t\t\t\"add \" + temp + \".xy, \" + temp + \".xy, \" + toTexRegister + \".xx\\n\" +\r\n\t\t\t\"mov \" + this._lightProjVarying + \".xyz, \" + temp + \".xyz\\n\" +\r\n\t\t\t\"mov \" + this._lightProjVarying + \".w, va0.w\\n\";\r\n\t\t\r\n\t\treturn code;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic iGetFragmentPreLightingCode(shaderObject:ShaderLightingObject, methodVO:MethodVO, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\r\n\t{\r\n\t\tthis._colorReg = registerCache.getFreeFragmentConstant();\r\n\t\tthis._decReg = registerCache.getFreeFragmentConstant();\r\n\t\tthis._propReg = registerCache.getFreeFragmentConstant();\r\n\t\tmethodVO.secondaryFragmentConstantsIndex = this._colorReg.index*4;\r\n\t\t\r\n\t\treturn super.iGetFragmentPreLightingCode(shaderObject, methodVO, registerCache, sharedRegisters);\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic iGetFragmentCodePerLight(shaderObject:ShaderLightingObject, methodVO:MethodVO, lightDirReg:ShaderRegisterElement, lightColReg:ShaderRegisterElement, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\r\n\t{\r\n\t\tthis._pIsFirstLight = true;\r\n\t\tthis._lightColorReg = lightColReg;\r\n\t\treturn super.iGetFragmentCodePerLight(shaderObject, methodVO, lightDirReg, lightColReg, registerCache, sharedRegisters);\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic iGetFragmentPostLightingCode(shaderObject:ShaderLightingObject, methodVO:MethodVO, targetReg:ShaderRegisterElement, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\r\n\t{\r\n\t\tvar code:string = super.iGetFragmentPostLightingCode(shaderObject, methodVO, targetReg, registerCache, sharedRegisters);\r\n\t\tvar temp:ShaderRegisterElement = registerCache.getFreeFragmentVectorTemp();\r\n\t\t\r\n\t\tcode += \"mul \" + temp + \".xyz, \" + this._lightColorReg + \".xyz, \" + this._targetReg + \".w\\n\" +\r\n\t\t\t\"mul \" + temp + \".xyz, \" + temp + \".xyz, \" + this._colorReg + \".xyz\\n\" +\r\n\t\t\t\"add \" + targetReg + \".xyz, \" + targetReg + \".xyz, \" + temp + \".xyz\\n\";\r\n\t\t\r\n\t\tif (this._targetReg != sharedRegisters.viewDirFragment)\r\n\t\t\tregisterCache.removeFragmentTempUsage(targetReg);\r\n\t\t\r\n\t\treturn code;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic iActivate(shaderObject:ShaderLightingObject, methodVO:MethodVO, stage:Stage)\r\n\t{\r\n\t\tsuper.iActivate(shaderObject, methodVO, stage);\r\n\t\t\r\n\t\tvar index:number /*int*/ = methodVO.secondaryFragmentConstantsIndex;\r\n\t\tvar data:Array<number> = shaderObject.fragmentConstantData;\r\n\t\tdata[index] = this._scatterR;\r\n\t\tdata[index + 1] = this._scatterG;\r\n\t\tdata[index + 2] = this._scatterB;\r\n\t\tdata[index + 8] = this._scattering;\r\n\t\tdata[index + 9] = this._translucency;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic iSetRenderState(shaderObject:ShaderObjectBase, methodVO:MethodVO, renderable:RenderableBase, stage:Stage, camera:Camera)\r\n\t{\r\n\t\tstage.activateTexture(methodVO.secondaryTexturesIndex, this._depthPass._iGetDepthMap(renderable), shaderObject.repeatTextures, shaderObject.useSmoothTextures, shaderObject.useMipmapping);\r\n\r\n\t\tthis._depthPass._iGetProjection(renderable).copyRawDataTo(shaderObject.vertexConstantData, methodVO.secondaryVertexConstantsIndex + 4, true);\r\n\t}\r\n\t\r\n\t/**\r\n\t * Generates the code for this method\r\n\t */\r\n\tprivate scatterLight(shaderObject:ShaderObjectBase, methodVO:MethodVO, targetReg:ShaderRegisterElement, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\r\n\t{\r\n\t\t// only scatter first light\r\n\t\tif (!this._pIsFirstLight)\r\n\t\t\treturn \"\";\r\n\r\n\t\tthis._pIsFirstLight = false;\r\n\r\n\t\tvar code:string = \"\";\r\n\t\tvar depthReg:ShaderRegisterElement = registerCache.getFreeTextureReg();\r\n\r\n\t\tif (sharedRegisters.viewDirFragment) {\r\n\t\t\tthis._targetReg = sharedRegisters.viewDirFragment;\r\n\t\t} else {\r\n\t\t\tthis._targetReg = registerCache.getFreeFragmentVectorTemp();\r\n\t\t\tregisterCache.addFragmentTempUsages(this._targetReg, 1);\r\n\t\t}\r\n\r\n\t\tmethodVO.secondaryTexturesIndex = depthReg.index;\r\n\t\t\r\n\t\tvar temp:ShaderRegisterElement = registerCache.getFreeFragmentVectorTemp();\r\n\t\tcode += \"tex \" + temp + \", \" + this._lightProjVarying + \", \" + depthReg + \" <2d,nearest,clamp>\\n\" +\r\n\t\t\t// reencode RGBA\r\n\t\t\t\"dp4 \" + targetReg + \".z, \" + temp + \", \" + this._decReg + \"\\n\";\r\n\t\t// currentDistanceToLight - closestDistanceToLight\r\n\t\tcode += \"sub \" + targetReg + \".z, \" + this._lightProjVarying + \".z, \" + targetReg + \".z\\n\" +\r\n\t\t\t\r\n\t\t\t\"sub \" + targetReg + \".z, \" + this._propReg + \".x, \" + targetReg + \".z\\n\" +\r\n\t\t\t\"mul \" + targetReg + \".z, \" + this._propReg + \".y, \" + targetReg + \".z\\n\" +\r\n\t\t\t\"sat \" + targetReg + \".z, \" + targetReg + \".z\\n\" +\r\n\t\t\t\r\n\t\t\t// targetReg.x contains dot(lightDir, normal)\r\n\t\t\t// modulate according to incident light angle (scatter = scatter*(-.5*dot(light, normal) + .5)\r\n\t\t\t\"neg \" + targetReg + \".y, \" + targetReg + \".x\\n\" +\r\n\t\t\t\"mul \" + targetReg + \".y, \" + targetReg + \".y, \" + this._propReg + \".z\\n\" +\r\n\t\t\t\"add \" + targetReg + \".y, \" + targetReg + \".y, \" + this._propReg + \".z\\n\" +\r\n\t\t\t\"mul \" + this._targetReg + \".w, \" + targetReg + \".z, \" + targetReg + \".y\\n\" +\r\n\t\t\t\r\n\t\t\t// blend diffuse: d' = (1-s)*d + s*1\r\n\t\t\t\"sub \" + targetReg + \".y, \" + this._colorReg + \".w, \" + this._targetReg + \".w\\n\" +\r\n\t\t\t\"mul \" + targetReg + \".w, \" + targetReg + \".w, \" + targetReg + \".y\\n\";\r\n\t\t\r\n\t\treturn code;\r\n\t}\r\n}\r\n\r\nexport = DiffuseSubSurfaceMethod;","import Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\r\n\r\nimport ShaderLightingObject\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderLightingObject\");\r\nimport ShaderRegisterCache\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterCache\");\r\nimport ShaderRegisterData\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterData\");\r\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterElement\");\r\n\r\nimport MethodVO\t\t\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/data/MethodVO\");\r\nimport DiffuseBasicMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/DiffuseBasicMethod\");\r\n\r\n/**\r\n * DiffuseWrapMethod is an alternative to DiffuseBasicMethod in which the light is allowed to be \"wrapped around\" the normally dark area, to some extent.\r\n * It can be used as a crude approximation to Oren-Nayar or simple subsurface scattering.\r\n */\r\nclass DiffuseWrapMethod extends DiffuseBasicMethod\r\n{\r\n\tprivate _wrapDataRegister:ShaderRegisterElement;\r\n\tprivate _wrapFactor:number;\r\n\r\n\t/**\r\n\t * Creates a new DiffuseWrapMethod object.\r\n\t * @param wrapFactor A factor to indicate the amount by which the light is allowed to wrap\r\n\t */\r\n\tconstructor(wrapFactor:number = .5)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis.wrapFactor = wrapFactor;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic iCleanCompilationData()\r\n\t{\r\n\t\tsuper.iCleanCompilationData();\r\n\r\n\t\tthis._wrapDataRegister = null;\r\n\t}\r\n\r\n\t/**\r\n\t * A factor to indicate the amount by which the light is allowed to wrap.\r\n\t */\r\n\tpublic get wrapFactor():number\r\n\t{\r\n\t\treturn this._wrapFactor;\r\n\t}\r\n\r\n\tpublic set wrapFactor(value:number)\r\n\t{\r\n\t\tthis._wrapFactor = value;\r\n\t\tthis._wrapFactor = 1/(value + 1);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic iGetFragmentPreLightingCode(shaderObject:ShaderLightingObject, methodVO:MethodVO, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\r\n\t{\r\n\t\tvar code:string = super.iGetFragmentPreLightingCode(shaderObject, methodVO, registerCache, sharedRegisters);\r\n\t\tthis._pIsFirstLight = true;\r\n\t\tthis._wrapDataRegister = registerCache.getFreeFragmentConstant();\r\n\t\tmethodVO.secondaryFragmentConstantsIndex = this._wrapDataRegister.index*4;\r\n\r\n\t\treturn code;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic iGetFragmentCodePerLight(shaderObject:ShaderLightingObject, methodVO:MethodVO, lightDirReg:ShaderRegisterElement, lightColReg:ShaderRegisterElement, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\r\n\t{\r\n\t\tvar code:string = \"\";\r\n\t\tvar t:ShaderRegisterElement;\r\n\r\n\t\t// write in temporary if not first light, so we can add to total diffuse colour\r\n\t\tif (this._pIsFirstLight) {\r\n\t\t\tt = this._pTotalLightColorReg;\r\n\t\t} else {\r\n\t\t\tt = registerCache.getFreeFragmentVectorTemp();\r\n\t\t\tregisterCache.addFragmentTempUsages(t, 1);\r\n\t\t}\r\n\r\n\t\tcode += \"dp3 \" + t + \".x, \" + lightDirReg + \".xyz, \" + sharedRegisters.normalFragment + \".xyz\\n\" +\r\n\t\t\t\"add \" + t + \".y, \" + t + \".x, \" + this._wrapDataRegister + \".x\\n\" +\r\n\t\t\t\"mul \" + t + \".y, \" + t + \".y, \" + this._wrapDataRegister + \".y\\n\" +\r\n\t\t\t\"sat \" + t + \".w, \" + t + \".y\\n\" +\r\n\t\t\t\"mul \" + t + \".xz, \" + t + \".w, \" + lightDirReg + \".wz\\n\";\r\n\r\n\t\tif (this._iModulateMethod != null)\r\n\t\t\tcode += this._iModulateMethod(shaderObject, methodVO, lightDirReg, registerCache, sharedRegisters);\r\n\r\n\t\tcode += \"mul \" + t + \", \" + t + \".x, \" + lightColReg + \"\\n\";\r\n\r\n\t\tif (!this._pIsFirstLight) {\r\n\t\t\tcode += \"add \" + this._pTotalLightColorReg + \".xyz, \" + this._pTotalLightColorReg + \".xyz, \" + t + \".xyz\\n\";\r\n\t\t\tregisterCache.removeFragmentTempUsage(t);\r\n\t\t}\r\n\r\n\t\tthis._pIsFirstLight = false;\r\n\r\n\t\treturn code;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic iActivate(shaderObject:ShaderLightingObject, methodVO:MethodVO, stage:Stage)\r\n\t{\r\n\t\tsuper.iActivate(shaderObject, methodVO, stage);\r\n\r\n\t\tvar index:number /*int*/ = methodVO.secondaryFragmentConstantsIndex;\r\n\t\tvar data:Array<number> = shaderObject.fragmentConstantData;\r\n\t\tdata[index] = this._wrapFactor;\r\n\t\tdata[index + 1] = 1/(this._wrapFactor + 1);\r\n\t}\r\n}\r\n\r\nexport = DiffuseWrapMethod;","import Texture2DBase\t\t\t\t\t= require(\"awayjs-core/lib/textures/Texture2DBase\");\r\n\r\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\r\n\r\nimport ShaderLightingObject\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderLightingObject\");\r\nimport ShaderObjectBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderObjectBase\");\r\nimport ShaderRegisterCache\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterCache\");\r\nimport ShaderRegisterData\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterData\");\r\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterElement\");\r\nimport ShaderCompilerHelper\t\t\t\t= require(\"awayjs-renderergl/lib/utils/ShaderCompilerHelper\");\r\n\r\nimport MethodVO\t\t\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/data/MethodVO\");\r\nimport EffectMethodBase\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/EffectMethodBase\");\r\n\r\n/**\r\n * EffectAlphaMaskMethod allows the use of an additional texture to specify the alpha value of the material. When used\r\n * with the secondary uv set, it allows for a tiled main texture with independently varying alpha (useful for water\r\n * etc).\r\n */\r\nclass EffectAlphaMaskMethod extends EffectMethodBase\r\n{\r\n\tprivate _texture:Texture2DBase;\r\n\tprivate _useSecondaryUV:boolean;\r\n\r\n\t/**\r\n\t * Creates a new EffectAlphaMaskMethod object.\r\n\t *\r\n\t * @param texture The texture to use as the alpha mask.\r\n\t * @param useSecondaryUV Indicated whether or not the secondary uv set for the mask. This allows mapping alpha independently.\r\n\t */\r\n\tconstructor(texture:Texture2DBase, useSecondaryUV:boolean = false)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._texture = texture;\r\n\t\tthis._useSecondaryUV = useSecondaryUV;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic iInitVO(shaderObject:ShaderObjectBase, methodVO:MethodVO)\r\n\t{\r\n\t\tmethodVO.needsSecondaryUV = this._useSecondaryUV;\r\n\t\tmethodVO.needsUV = !this._useSecondaryUV;\r\n\t}\r\n\r\n\t/**\r\n\t * Indicated whether or not the secondary uv set for the mask. This allows mapping alpha independently, for\r\n\t * instance to tile the main texture and normal map while providing untiled alpha, for example to define the\r\n\t * transparency over a tiled water surface.\r\n\t */\r\n\tpublic get useSecondaryUV():boolean\r\n\t{\r\n\t\treturn this._useSecondaryUV;\r\n\t}\r\n\r\n\tpublic set useSecondaryUV(value:boolean)\r\n\t{\r\n\t\tif (this._useSecondaryUV == value)\r\n\t\t\treturn;\r\n\t\tthis._useSecondaryUV = value;\r\n\t\tthis.iInvalidateShaderProgram();\r\n\t}\r\n\r\n\t/**\r\n\t * The texture to use as the alpha mask.\r\n\t */\r\n\tpublic get texture():Texture2DBase\r\n\t{\r\n\t\treturn this._texture;\r\n\t}\r\n\r\n\tpublic set texture(value:Texture2DBase)\r\n\t{\r\n\t\tthis._texture = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic iActivate(shaderObject:ShaderLightingObject, methodVO:MethodVO, stage:Stage)\r\n\t{\r\n\t\tstage.activateTexture(methodVO.texturesIndex, this._texture, shaderObject.repeatTextures, shaderObject.useSmoothTextures, shaderObject.useMipmapping);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic iGetFragmentCode(shaderObject:ShaderObjectBase, methodVO:MethodVO, targetReg:ShaderRegisterElement, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\r\n\t{\r\n\t\tvar textureReg:ShaderRegisterElement = registerCache.getFreeTextureReg();\r\n\t\tvar temp:ShaderRegisterElement = registerCache.getFreeFragmentVectorTemp();\r\n\t\tvar uvReg:ShaderRegisterElement = this._useSecondaryUV? sharedRegisters.secondaryUVVarying : sharedRegisters.uvVarying;\r\n\t\tmethodVO.texturesIndex = textureReg.index;\r\n\r\n\t\treturn ShaderCompilerHelper.getTex2DSampleCode(temp, sharedRegisters, textureReg, this._texture, shaderObject.useSmoothTextures, shaderObject.repeatTextures, shaderObject.useMipmapping, uvReg) +\r\n\t\t\t\"mul \" + targetReg + \", \" + targetReg + \", \" + temp + \".x\\n\";\r\n\t}\r\n}\r\n\r\nexport = EffectAlphaMaskMethod;","import Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\r\n\r\nimport ShaderObjectBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderObjectBase\");\r\nimport ShaderRegisterCache\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterCache\");\r\nimport ShaderRegisterData\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterData\");\r\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterElement\");\r\n\r\nimport MethodVO\t\t\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/data/MethodVO\");\r\nimport EffectMethodBase\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/EffectMethodBase\");\r\n\r\n/**\r\n * EffectColorMatrixMethod provides a shading method that changes the colour of a material analogous to a ColorMatrixFilter.\r\n */\r\nclass EffectColorMatrixMethod extends EffectMethodBase\r\n{\r\n\tprivate _matrix:Array<number>;\r\n\r\n\t/**\r\n\t * Creates a new EffectColorTransformMethod.\r\n\t *\r\n\t * @param matrix An array of 20 items for 4 x 5 color transform.\r\n\t */\r\n\tconstructor(matrix:Array<number>)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tif (matrix.length != 20)\r\n\t\t\tthrow new Error(\"Matrix length must be 20!\");\r\n\r\n\t\tthis._matrix = matrix;\r\n\t}\r\n\r\n\t/**\r\n\t * The 4 x 5 matrix to transform the color of the material.\r\n\t */\r\n\tpublic get colorMatrix():Array<number>\r\n\t{\r\n\t\treturn this._matrix;\r\n\t}\r\n\r\n\tpublic set colorMatrix(value:Array<number>)\r\n\t{\r\n\t\tthis._matrix = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic iGetFragmentCode(shaderObject:ShaderObjectBase, methodVO:MethodVO, targetReg:ShaderRegisterElement, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\r\n\t{\r\n\t\tvar code:string = \"\";\r\n\t\tvar colorMultReg:ShaderRegisterElement = registerCache.getFreeFragmentConstant();\r\n\t\tregisterCache.getFreeFragmentConstant();\r\n\t\tregisterCache.getFreeFragmentConstant();\r\n\t\tregisterCache.getFreeFragmentConstant();\r\n\r\n\t\tvar colorOffsetReg:ShaderRegisterElement = registerCache.getFreeFragmentConstant();\r\n\r\n\t\tmethodVO.fragmentConstantsIndex = colorMultReg.index*4;\r\n\r\n\t\tvar temp:ShaderRegisterElement = registerCache.getFreeFragmentVectorTemp();\r\n\r\n\t\tcode += \"m44 \" + temp + \", \" + targetReg + \", \" + colorMultReg + \"\\n\" +\r\n\t\t\t\t\"add \" + targetReg + \", \" + temp + \", \" + colorOffsetReg + \"\\n\";\r\n\r\n\t\treturn code;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic iActivate(shaderObject:ShaderObjectBase, methodVO:MethodVO, stage:Stage)\r\n\t{\r\n\t\tvar matrix:Array<number> = this._matrix;\r\n\t\tvar index:number /*int*/ = methodVO.fragmentConstantsIndex;\r\n\t\tvar data:Array<number> = shaderObject.fragmentConstantData;\r\n\r\n\t\t// r\r\n\t\tdata[index] = matrix[0];\r\n\t\tdata[index + 1] = matrix[1];\r\n\t\tdata[index + 2] = matrix[2];\r\n\t\tdata[index + 3] = matrix[3];\r\n\r\n\t\t// g\r\n\t\tdata[index + 4] = matrix[5];\r\n\t\tdata[index + 5] = matrix[6];\r\n\t\tdata[index + 6] = matrix[7];\r\n\t\tdata[index + 7] = matrix[8];\r\n\r\n\t\t// b\r\n\t\tdata[index + 8] = matrix[10];\r\n\t\tdata[index + 9] = matrix[11];\r\n\t\tdata[index + 10] = matrix[12];\r\n\t\tdata[index + 11] = matrix[13];\r\n\r\n\t\t// a\r\n\t\tdata[index + 12] = matrix[15];\r\n\t\tdata[index + 13] = matrix[16];\r\n\t\tdata[index + 14] = matrix[17];\r\n\t\tdata[index + 15] = matrix[18];\r\n\r\n\t\t// rgba offset\r\n\t\tdata[index + 16] = matrix[4];\r\n\t\tdata[index + 17] = matrix[9];\r\n\t\tdata[index + 18] = matrix[14];\r\n\t\tdata[index + 19] = matrix[19];\r\n\t}\r\n}\r\n\r\nexport = EffectColorMatrixMethod;","import ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\r\n\r\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\r\n\r\nimport ShaderObjectBase\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderObjectBase\");\r\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterCache\");\r\nimport ShaderRegisterData\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterData\");\r\nimport ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterElement\");\r\n\r\nimport MethodVO\t\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/data/MethodVO\");\r\nimport EffectMethodBase\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/EffectMethodBase\");\r\n\r\n/**\r\n * EffectColorTransformMethod provides a shading method that changes the colour of a material analogous to a\r\n * ColorTransform object.\r\n */\r\nclass EffectColorTransformMethod extends EffectMethodBase\r\n{\r\n\tprivate _colorTransform:ColorTransform;\r\n\r\n\t/**\r\n\t * Creates a new EffectColorTransformMethod.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\t/**\r\n\t * The ColorTransform object to transform the colour of the material with.\r\n\t */\r\n\tpublic get colorTransform():ColorTransform\r\n\t{\r\n\t\treturn this._colorTransform;\r\n\t}\r\n\r\n\tpublic set colorTransform(value:ColorTransform)\r\n\t{\r\n\t\tthis._colorTransform = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic iGetFragmentCode(shaderObject:ShaderObjectBase, methodVO:MethodVO, targetReg:ShaderRegisterElement, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\r\n\t{\r\n\t\tvar code:string = \"\";\r\n\t\tvar colorMultReg:ShaderRegisterElement = registerCache.getFreeFragmentConstant();\r\n\t\tvar colorOffsReg:ShaderRegisterElement = registerCache.getFreeFragmentConstant();\r\n\r\n\t\tmethodVO.fragmentConstantsIndex = colorMultReg.index*4;\r\n\r\n\t\t//TODO: AGAL <> GLSL\r\n\r\n\t\tcode += \"mul \" + targetReg + \", \" + targetReg + \", \" + colorMultReg + \"\\n\" + \"add \" + targetReg + \", \" + targetReg + \", \" + colorOffsReg + \"\\n\";\r\n\r\n\t\treturn code;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic iActivate(shaderObject:ShaderObjectBase, methodVO:MethodVO, stage:Stage)\r\n\t{\r\n\t\tvar inv:number = 1/0xff;\r\n\t\tvar index:number = methodVO.fragmentConstantsIndex;\r\n\t\tvar data:Array<number> = shaderObject.fragmentConstantData;\r\n\r\n\t\tdata[index] = this._colorTransform.redMultiplier;\r\n\t\tdata[index + 1] = this._colorTransform.greenMultiplier;\r\n\t\tdata[index + 2] = this._colorTransform.blueMultiplier;\r\n\t\tdata[index + 3] = this._colorTransform.alphaMultiplier;\r\n\t\tdata[index + 4] = this._colorTransform.redOffset*inv;\r\n\t\tdata[index + 5] = this._colorTransform.greenOffset*inv;\r\n\t\tdata[index + 6] = this._colorTransform.blueOffset*inv;\r\n\t\tdata[index + 7] = this._colorTransform.alphaOffset*inv;\r\n\r\n\t}\r\n}\r\n\r\nexport = EffectColorTransformMethod;","import CubeTextureBase\t\t\t\t\t= require(\"awayjs-core/lib/textures/CubeTextureBase\");\r\nimport Texture2DBase\t\t\t\t\t= require(\"awayjs-core/lib/textures/Texture2DBase\");\r\n\r\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\r\n\r\nimport ShaderObjectBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderObjectBase\");\r\nimport ShaderRegisterCache\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterCache\");\r\nimport ShaderRegisterData\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterData\");\r\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterElement\");\r\nimport ShaderCompilerHelper\t\t\t\t= require(\"awayjs-renderergl/lib/utils/ShaderCompilerHelper\");\r\n\r\nimport MethodVO\t\t\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/data/MethodVO\");\r\nimport EffectMethodBase\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/EffectMethodBase\");\r\n\r\n/**\r\n * EffectEnvMapMethod provides a material method to perform reflection mapping using cube maps.\r\n */\r\nclass EffectEnvMapMethod extends EffectMethodBase\r\n{\r\n\tprivate _cubeTexture:CubeTextureBase;\r\n\tprivate _alpha:number;\r\n\tprivate _mask:Texture2DBase;\r\n\r\n\t/**\r\n\t * Creates an EffectEnvMapMethod object.\r\n\t * @param envMap The environment map containing the reflected scene.\r\n\t * @param alpha The reflectivity of the surface.\r\n\t */\r\n\tconstructor(envMap:CubeTextureBase, alpha:number = 1)\r\n\t{\r\n\t\tsuper();\r\n\t\tthis._cubeTexture = envMap;\r\n\t\tthis._alpha = alpha;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * An optional texture to modulate the reflectivity of the surface.\r\n\t */\r\n\tpublic get mask():Texture2DBase\r\n\t{\r\n\t\treturn this._mask;\r\n\t}\r\n\r\n\tpublic set mask(value:Texture2DBase)\r\n\t{\r\n\t\tif (value != this._mask || (value && this._mask && (value.format != this._mask.format)))\r\n\t\t\tthis.iInvalidateShaderProgram();\r\n\r\n\t\tthis._mask = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic iInitVO(shaderObject:ShaderObjectBase, methodVO:MethodVO)\r\n\t{\r\n\t\tmethodVO.needsNormals = true;\r\n\t\tmethodVO.needsView = true;\r\n\t\tmethodVO.needsUV = this._mask != null;\r\n\t}\r\n\r\n\t/**\r\n\t * The cubic environment map containing the reflected scene.\r\n\t */\r\n\tpublic get envMap():CubeTextureBase\r\n\t{\r\n\t\treturn this._cubeTexture;\r\n\t}\r\n\r\n\tpublic set envMap(value:CubeTextureBase)\r\n\t{\r\n\t\tthis._cubeTexture = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t}\r\n\r\n\t/**\r\n\t * The reflectivity of the surface.\r\n\t */\r\n\tpublic get alpha():number\r\n\t{\r\n\t\treturn this._alpha;\r\n\t}\r\n\r\n\tpublic set alpha(value:number)\r\n\t{\r\n\t\tthis._alpha = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic iActivate(shaderObject:ShaderObjectBase, methodVO:MethodVO, stage:Stage)\r\n\t{\r\n\t\tshaderObject.fragmentConstantData[methodVO.fragmentConstantsIndex] = this._alpha;\r\n\r\n\t\tstage.activateCubeTexture(methodVO.texturesIndex, this._cubeTexture, shaderObject.useSmoothTextures,shaderObject.useMipmapping);\r\n\r\n\t\tif (this._mask)\r\n\t\t\tstage.activateTexture(methodVO.texturesIndex + 1, this._mask,  shaderObject.repeatTextures, shaderObject.useSmoothTextures,shaderObject.useMipmapping);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic iGetFragmentCode(shaderObject:ShaderObjectBase, methodVO:MethodVO, targetReg:ShaderRegisterElement, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\r\n\t{\r\n\t\tvar dataRegister:ShaderRegisterElement = registerCache.getFreeFragmentConstant();\r\n\t\tvar temp:ShaderRegisterElement = registerCache.getFreeFragmentVectorTemp();\r\n\t\tvar code:string = \"\";\r\n\t\tvar cubeMapReg:ShaderRegisterElement = registerCache.getFreeTextureReg();\r\n\r\n\t\tmethodVO.texturesIndex = cubeMapReg.index;\r\n\t\tmethodVO.fragmentConstantsIndex = dataRegister.index*4;\r\n\r\n\t\tregisterCache.addFragmentTempUsages(temp, 1);\r\n\t\tvar temp2:ShaderRegisterElement = registerCache.getFreeFragmentVectorTemp();\r\n\r\n\t\t// r = I - 2(I.N)*N\r\n\t\tcode += \"dp3 \" + temp + \".w, \" + sharedRegisters.viewDirFragment + \".xyz, \" + sharedRegisters.normalFragment + \".xyz\\n\" +\r\n\t\t\t\t\"add \" + temp + \".w, \" + temp + \".w, \" + temp + \".w\\n\" +\r\n\t\t\t\t\"mul \" + temp + \".xyz, \" + sharedRegisters.normalFragment + \".xyz, \" + temp + \".w\\n\" +\r\n\t\t\t\t\"sub \" + temp + \".xyz, \" + temp + \".xyz, \" + sharedRegisters.viewDirFragment + \".xyz\\n\" +\r\n\t\t\tShaderCompilerHelper.getTexCubeSampleCode(temp, cubeMapReg, this._cubeTexture, shaderObject.useSmoothTextures, shaderObject.useMipmapping, temp) +\r\n\t\t\t\t\"sub \" + temp2 + \".w, \" + temp + \".w, fc0.x\\n\" + // -.5\r\n\t\t\t\t\"kil \" + temp2 + \".w\\n\" +\t// used for real time reflection mapping - if alpha is not 1 (mock texture) kil output\r\n\t\t\t\t\"sub \" + temp + \", \" + temp + \", \" + targetReg + \"\\n\";\r\n\r\n\t\tif (this._mask)\r\n\t\t\tcode += ShaderCompilerHelper.getTex2DSampleCode(temp2, sharedRegisters, registerCache.getFreeTextureReg(), this._mask, shaderObject.useSmoothTextures, shaderObject.repeatTextures, shaderObject.useMipmapping) +\r\n\t\t\t\t\"mul \" + temp + \", \" + temp2 + \", \" + temp + \"\\n\";\r\n\r\n\t\tcode += \"mul \" + temp + \", \" + temp + \", \" + dataRegister + \".x\\n\" +\r\n\t\t\t\t\"add \" + targetReg + \", \" + targetReg + \", \" + temp + \"\\n\";\r\n\r\n\t\tregisterCache.removeFragmentTempUsage(temp);\r\n\r\n\t\treturn code;\r\n\t}\r\n}\r\n\r\nexport = EffectEnvMapMethod;","import Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\r\n\r\nimport ShaderLightingObject\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderLightingObject\");\r\nimport ShaderObjectBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderObjectBase\");\r\nimport ShaderRegisterCache\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterCache\");\r\nimport ShaderRegisterData\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterData\");\r\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterElement\");\r\n\r\nimport MethodVO\t\t\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/data/MethodVO\");\r\nimport EffectMethodBase\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/EffectMethodBase\");\r\n\r\n/**\r\n * EffectFogMethod provides a method to add distance-based fog to a material.\r\n */\r\nclass EffectFogMethod extends EffectMethodBase\r\n{\r\n\tprivate _minDistance:number = 0;\r\n\tprivate _maxDistance:number = 1000;\r\n\tprivate _fogColor:number /*uint*/;\r\n\tprivate _fogR:number;\r\n\tprivate _fogG:number;\r\n\tprivate _fogB:number;\r\n\r\n\t/**\r\n\t * Creates a new EffectFogMethod object.\r\n\t * @param minDistance The distance from which the fog starts appearing.\r\n\t * @param maxDistance The distance at which the fog is densest.\r\n\t * @param fogColor The colour of the fog.\r\n\t */\r\n\tconstructor(minDistance:number, maxDistance:number, fogColor:number /*uint*/ = 0x808080)\r\n\t{\r\n\t\tsuper();\r\n\t\tthis.minDistance = minDistance;\r\n\t\tthis.maxDistance = maxDistance;\r\n\t\tthis.fogColor = fogColor;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic iInitVO(shaderObject:ShaderLightingObject, methodVO:MethodVO)\r\n\t{\r\n\t\tmethodVO.needsProjection = true;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic iInitConstants(shaderObject:ShaderObjectBase, methodVO:MethodVO)\r\n\t{\r\n\t\tvar data:Array<number> = shaderObject.fragmentConstantData;\r\n\t\tvar index:number /*int*/ = methodVO.fragmentConstantsIndex;\r\n\t\tdata[index + 3] = 1;\r\n\t\tdata[index + 6] = 0;\r\n\t\tdata[index + 7] = 0;\r\n\t}\r\n\r\n\t/**\r\n\t * The distance from which the fog starts appearing.\r\n\t */\r\n\tpublic get minDistance():number\r\n\t{\r\n\t\treturn this._minDistance;\r\n\t}\r\n\r\n\tpublic set minDistance(value:number)\r\n\t{\r\n\t\tthis._minDistance = value;\r\n\t}\r\n\r\n\t/**\r\n\t * The distance at which the fog is densest.\r\n\t */\r\n\tpublic get maxDistance():number\r\n\t{\r\n\t\treturn this._maxDistance;\r\n\t}\r\n\r\n\tpublic set maxDistance(value:number)\r\n\t{\r\n\t\tthis._maxDistance = value;\r\n\t}\r\n\r\n\t/**\r\n\t * The colour of the fog.\r\n\t */\r\n\tpublic get fogColor():number /*uint*/\r\n\t{\r\n\t\treturn this._fogColor;\r\n\t}\r\n\r\n\tpublic set fogColor(value:number/*uint*/)\r\n\t{\r\n\t\tthis._fogColor = value;\r\n\t\tthis._fogR = ((value >> 16) & 0xff)/0xff;\r\n\t\tthis._fogG = ((value >> 8) & 0xff)/0xff;\r\n\t\tthis._fogB = (value & 0xff)/0xff;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic iActivate(shaderObject:ShaderObjectBase, methodVO:MethodVO, stage:Stage)\r\n\t{\r\n\t\tvar data:Array<number> = shaderObject.fragmentConstantData;\r\n\t\tvar index:number /*int*/ = methodVO.fragmentConstantsIndex;\r\n\t\tdata[index] = this._fogR;\r\n\t\tdata[index + 1] = this._fogG;\r\n\t\tdata[index + 2] = this._fogB;\r\n\t\tdata[index + 4] = this._minDistance;\r\n\t\tdata[index + 5] = 1/(this._maxDistance - this._minDistance);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic iGetFragmentCode(shaderObject:ShaderObjectBase, methodVO:MethodVO, targetReg:ShaderRegisterElement, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\r\n\t{\r\n\t\tvar fogColor:ShaderRegisterElement = registerCache.getFreeFragmentConstant();\r\n\t\tvar fogData:ShaderRegisterElement = registerCache.getFreeFragmentConstant();\r\n\t\tvar temp:ShaderRegisterElement = registerCache.getFreeFragmentVectorTemp();\r\n\t\tregisterCache.addFragmentTempUsages(temp, 1);\r\n\t\tvar temp2:ShaderRegisterElement = registerCache.getFreeFragmentVectorTemp();\r\n\t\tvar code:string = \"\";\r\n\t\tmethodVO.fragmentConstantsIndex = fogColor.index*4;\r\n\r\n\t\tcode += \"sub \" + temp2 + \".w, \" + sharedRegisters.projectionFragment + \".z, \" + fogData + \".x\\n\" +\r\n\t\t\t\t\"mul \" + temp2 + \".w, \" + temp2 + \".w, \" + fogData + \".y\\n\" +\r\n\t\t\t\t\"sat \" + temp2 + \".w, \" + temp2 + \".w\\n\" +\r\n\t\t\t\t\"sub \" + temp + \", \" + fogColor + \", \" + targetReg + \"\\n\" + // (fogColor- col)\r\n\t\t\t\t\"mul \" + temp + \", \" + temp + \", \" + temp2 + \".w\\n\" + // (fogColor- col)*fogRatio\r\n\t\t\t\t\"add \" + targetReg + \", \" + targetReg + \", \" + temp + \"\\n\"; // fogRatio*(fogColor- col) + col\r\n\r\n\t\tregisterCache.removeFragmentTempUsage(temp);\r\n\r\n\t\treturn code;\r\n\t}\r\n}\r\n\r\nexport = EffectFogMethod;","import CubeTextureBase\t\t\t\t\t= require(\"awayjs-core/lib/textures/CubeTextureBase\");\r\nimport Texture2DBase\t\t\t\t\t= require(\"awayjs-core/lib/textures/Texture2DBase\");\r\n\r\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\r\n\r\nimport ShaderObjectBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderObjectBase\");\r\nimport ShaderRegisterCache\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterCache\");\r\nimport ShaderRegisterData\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterData\");\r\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterElement\");\r\nimport ShaderCompilerHelper\t\t\t\t= require(\"awayjs-renderergl/lib/utils/ShaderCompilerHelper\");\r\n\r\nimport MethodVO\t\t\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/data/MethodVO\");\r\nimport EffectMethodBase\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/EffectMethodBase\");\r\n\r\n/**\r\n * EffectFresnelEnvMapMethod provides a method to add fresnel-based reflectivity to an object using cube maps, which gets\r\n * stronger as the viewing angle becomes more grazing.\r\n */\r\nclass EffectFresnelEnvMapMethod extends EffectMethodBase\r\n{\r\n\tprivate _cubeTexture:CubeTextureBase;\r\n\tprivate _fresnelPower:number = 5;\r\n\tprivate _normalReflectance:number = 0;\r\n\tprivate _alpha:number;\r\n\tprivate _mask:Texture2DBase;\r\n\r\n\t/**\r\n\t * Creates a new <code>EffectFresnelEnvMapMethod</code> object.\r\n\t *\r\n\t * @param envMap The environment map containing the reflected scene.\r\n\t * @param alpha The reflectivity of the material.\r\n\t */\r\n\tconstructor(envMap:CubeTextureBase, alpha:number = 1)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._cubeTexture = envMap;\r\n\t\tthis._alpha = alpha;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic iInitVO(shaderObject:ShaderObjectBase, methodVO:MethodVO)\r\n\t{\r\n\t\tmethodVO.needsNormals = true;\r\n\t\tmethodVO.needsView = true;\r\n\t\tmethodVO.needsUV = this._mask != null;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic iInitConstants(shaderObject:ShaderObjectBase, methodVO:MethodVO)\r\n\t{\r\n\t\tshaderObject.fragmentConstantData[methodVO.fragmentConstantsIndex + 3] = 1;\r\n\t}\r\n\r\n\t/**\r\n\t * An optional texture to modulate the reflectivity of the surface.\r\n\t */\r\n\tpublic get mask():Texture2DBase\r\n\t{\r\n\t\treturn this._mask;\r\n\t}\r\n\r\n\tpublic set mask(value:Texture2DBase)\r\n\t{\r\n\t\tif (Boolean(value) != Boolean(this._mask) ||\r\n\t\t\t(value && this._mask && (value.format != this._mask.format))) {\r\n\t\t\tthis.iInvalidateShaderProgram();\r\n\t\t}\r\n\t\tthis._mask = value;\r\n\t}\r\n\r\n\t/**\r\n\t * The power used in the Fresnel equation. Higher values make the fresnel effect more pronounced. Defaults to 5.\r\n\t */\r\n\tpublic get fresnelPower():number\r\n\t{\r\n\t\treturn this._fresnelPower;\r\n\t}\r\n\r\n\tpublic set fresnelPower(value:number)\r\n\t{\r\n\t\tthis._fresnelPower = value;\r\n\t}\r\n\r\n\t/**\r\n\t * The cubic environment map containing the reflected scene.\r\n\t */\r\n\tpublic get envMap():CubeTextureBase\r\n\t{\r\n\t\treturn this._cubeTexture;\r\n\t}\r\n\r\n\tpublic set envMap(value:CubeTextureBase)\r\n\t{\r\n\t\tthis._cubeTexture = value;\r\n\t}\r\n\r\n\t/**\r\n\t * The reflectivity of the surface.\r\n\t */\r\n\tpublic get alpha():number\r\n\t{\r\n\t\treturn this._alpha;\r\n\t}\r\n\r\n\tpublic set alpha(value:number)\r\n\t{\r\n\t\tthis._alpha = value;\r\n\t}\r\n\r\n\t/**\r\n\t * The minimum amount of reflectance, ie the reflectance when the view direction is normal to the surface or light direction.\r\n\t */\r\n\tpublic get normalReflectance():number\r\n\t{\r\n\t\treturn this._normalReflectance;\r\n\t}\r\n\r\n\tpublic set normalReflectance(value:number)\r\n\t{\r\n\t\tthis._normalReflectance = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic iActivate(shaderObject:ShaderObjectBase, methodVO:MethodVO, stage:Stage)\r\n\t{\r\n\t\tvar data:Array<number> = shaderObject.fragmentConstantData;\r\n\t\tvar index:number /*int*/ = methodVO.fragmentConstantsIndex;\r\n\t\tdata[index] = this._alpha;\r\n\t\tdata[index + 1] = this._normalReflectance;\r\n\t\tdata[index + 2] = this._fresnelPower;\r\n\r\n\t\tstage.activateCubeTexture(methodVO.texturesIndex, this._cubeTexture, shaderObject.useSmoothTextures, shaderObject.useMipmapping);\r\n\r\n\t\tif (this._mask)\r\n\t\t\tstage.activateTexture(methodVO.texturesIndex + 1, this._mask, shaderObject.repeatTextures, shaderObject.useSmoothTextures, shaderObject.useMipmapping);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic iGetFragmentCode(shaderObject:ShaderObjectBase, methodVO:MethodVO, targetReg:ShaderRegisterElement, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\r\n\t{\r\n\t\tvar dataRegister:ShaderRegisterElement = registerCache.getFreeFragmentConstant();\r\n\t\tvar temp:ShaderRegisterElement = registerCache.getFreeFragmentVectorTemp();\r\n\t\tvar code:string = \"\";\r\n\t\tvar cubeMapReg:ShaderRegisterElement = registerCache.getFreeTextureReg();\r\n\t\tvar viewDirReg:ShaderRegisterElement = sharedRegisters.viewDirFragment;\r\n\t\tvar normalReg:ShaderRegisterElement = sharedRegisters.normalFragment;\r\n\r\n\t\tmethodVO.texturesIndex = cubeMapReg.index;\r\n\t\tmethodVO.fragmentConstantsIndex = dataRegister.index*4;\r\n\r\n\t\tregisterCache.addFragmentTempUsages(temp, 1);\r\n\t\tvar temp2:ShaderRegisterElement = registerCache.getFreeFragmentVectorTemp();\r\n\r\n\t\t// r = V - 2(V.N)*N\r\n\t\tcode += \"dp3 \" + temp + \".w, \" + viewDirReg + \".xyz, \" + normalReg + \".xyz\\n\" +\r\n\t\t\t\t\"add \" + temp + \".w, \" + temp + \".w, \" + temp + \".w\\n\" +\r\n\t\t\t\t\"mul \" + temp + \".xyz, \" + normalReg + \".xyz, \" + temp + \".w\\n\" +\r\n\t\t\t\t\"sub \" + temp + \".xyz, \" + temp + \".xyz, \" + viewDirReg + \".xyz\\n\" +\r\n\t\t\tShaderCompilerHelper.getTexCubeSampleCode(temp, cubeMapReg, this._cubeTexture, shaderObject.useSmoothTextures, shaderObject.useMipmapping, temp) +\r\n\t\t\t\t\"sub \" + temp2 + \".w, \" + temp + \".w, fc0.x\\n\" +               \t// -.5\r\n\t\t\t\t\"kil \" + temp2 + \".w\\n\" +\t// used for real time reflection mapping - if alpha is not 1 (mock texture) kil output\r\n\t\t\t\t\"sub \" + temp + \", \" + temp + \", \" + targetReg + \"\\n\";\r\n\r\n\t\t// calculate fresnel term\r\n\t\tcode += \"dp3 \" + viewDirReg + \".w, \" + viewDirReg + \".xyz, \" + normalReg + \".xyz\\n\" +  // dot(V, H)\r\n\t\t\t\t\"sub \" + viewDirReg + \".w, \" + dataRegister + \".w, \" + viewDirReg + \".w\\n\" +       // base = 1-dot(V, H)\r\n\t\t\t\t\"pow \" + viewDirReg + \".w, \" + viewDirReg + \".w, \" + dataRegister + \".z\\n\" +       // exp = pow(base, 5)\r\n\t\t\t\t\"sub \" + normalReg + \".w, \" + dataRegister + \".w, \" + viewDirReg + \".w\\n\" +        // 1 - exp\r\n\t\t\t\t\"mul \" + normalReg + \".w, \" + dataRegister + \".y, \" + normalReg + \".w\\n\" +         // f0*(1 - exp)\r\n\t\t\t\t\"add \" + viewDirReg + \".w, \" + viewDirReg + \".w, \" + normalReg + \".w\\n\" +          // exp + f0*(1 - exp)\r\n\r\n\t\t\t\t// total alpha\r\n\t\t\t\t\"mul \" + viewDirReg + \".w, \" + dataRegister + \".x, \" + viewDirReg + \".w\\n\";\r\n\r\n\t\tif (this._mask) {\r\n\t\t\tvar maskReg:ShaderRegisterElement = registerCache.getFreeTextureReg();\r\n\t\t\tcode += ShaderCompilerHelper.getTex2DSampleCode(temp2, sharedRegisters, maskReg, this._mask, shaderObject.useSmoothTextures, shaderObject.repeatTextures, shaderObject.useMipmapping) +\r\n\t\t\t\t\"mul \" + viewDirReg + \".w, \" + temp2 + \".x, \" + viewDirReg + \".w\\n\";\r\n\t\t}\r\n\r\n\t\t// blend\r\n\t\tcode += \"mul \" + temp + \", \" + temp + \", \" + viewDirReg + \".w\\n\" +\r\n\t\t\t\t\"add \" + targetReg + \", \" + targetReg + \", \" + temp + \"\\n\";\r\n\r\n\t\tregisterCache.removeFragmentTempUsage(temp);\r\n\r\n\t\treturn code;\r\n\t}\r\n}\r\n\r\nexport = EffectFresnelEnvMapMethod;","import Texture2DBase\t\t\t\t\t= require(\"awayjs-core/lib/textures/Texture2DBase\");\r\n\r\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\r\n\r\nimport ShaderObjectBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderObjectBase\");\r\nimport ShaderRegisterCache\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterCache\");\r\nimport ShaderRegisterData\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterData\");\r\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterElement\");\r\nimport ShaderCompilerHelper\t\t\t\t= require(\"awayjs-renderergl/lib/utils/ShaderCompilerHelper\");\r\n\r\nimport MethodVO\t\t\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/data/MethodVO\");\r\nimport EffectMethodBase\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/EffectMethodBase\");\r\n\r\n/**\r\n * EffectLightMapMethod provides a method that allows applying a light map texture to the calculated pixel colour.\r\n * It is different from DiffuseLightMapMethod in that the latter only modulates the diffuse shading value rather\r\n * than the whole pixel colour.\r\n */\r\nclass EffectLightMapMethod extends EffectMethodBase\r\n{\r\n\t/**\r\n\t * Indicates the light map should be multiplied with the calculated shading result.\r\n\t */\r\n\tpublic static MULTIPLY:string = \"multiply\";\r\n\r\n\t/**\r\n\t * Indicates the light map should be added into the calculated shading result.\r\n\t */\r\n\tpublic static ADD:string = \"add\";\r\n\r\n\tprivate _texture:Texture2DBase;\r\n\r\n\tprivate _blendMode:string;\r\n\tprivate _useSecondaryUV:boolean;\r\n\r\n\t/**\r\n\t * Creates a new EffectLightMapMethod object.\r\n\t *\r\n\t * @param texture The texture containing the light map.\r\n\t * @param blendMode The blend mode with which the light map should be applied to the lighting result.\r\n\t * @param useSecondaryUV Indicates whether the secondary UV set should be used to map the light map.\r\n\t */\r\n\tconstructor(texture:Texture2DBase, blendMode:string = \"multiply\", useSecondaryUV:boolean = false)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._useSecondaryUV = useSecondaryUV;\r\n\t\tthis._texture = texture;\r\n\t\tthis.blendMode = blendMode;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic iInitVO(shaderObject:ShaderObjectBase, methodVO:MethodVO)\r\n\t{\r\n\t\tmethodVO.needsUV = !this._useSecondaryUV;\r\n\t\tmethodVO.needsSecondaryUV = this._useSecondaryUV;\r\n\t}\r\n\r\n\t/**\r\n\t * The blend mode with which the light map should be applied to the lighting result.\r\n\t *\r\n\t * @see EffectLightMapMethod.ADD\r\n\t * @see EffectLightMapMethod.MULTIPLY\r\n\t */\r\n\tpublic get blendMode():string\r\n\t{\r\n\t\treturn this._blendMode;\r\n\t}\r\n\r\n\tpublic set blendMode(value:string)\r\n\t{\r\n\t\tif (value != EffectLightMapMethod.ADD && value != EffectLightMapMethod.MULTIPLY)\r\n\t\t\tthrow new Error(\"Unknown blendmode!\");\r\n\t\tif (this._blendMode == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._blendMode = value;\r\n\r\n\t\tthis.iInvalidateShaderProgram();\r\n\t}\r\n\r\n\t/**\r\n\t * The texture containing the light map.\r\n\t */\r\n\tpublic get texture():Texture2DBase\r\n\t{\r\n\t\treturn this._texture;\r\n\t}\r\n\r\n\tpublic set texture(value:Texture2DBase)\r\n\t{\r\n\t\tif (value.format != this._texture.format)\r\n\t\t\tthis.iInvalidateShaderProgram();\r\n\r\n\t\tthis._texture = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic iActivate(shaderObject:ShaderObjectBase, methodVO:MethodVO, stage:Stage)\r\n\t{\r\n\t\tstage.activateTexture(methodVO.texturesIndex, this._texture, shaderObject.repeatTextures, shaderObject.useSmoothTextures, shaderObject.useMipmapping);\r\n\r\n\t\tsuper.iActivate(shaderObject, methodVO, stage);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic iGetFragmentCode(shaderObject:ShaderObjectBase, methodVO:MethodVO, targetReg:ShaderRegisterElement, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\r\n\t{\r\n\t\tvar code:string;\r\n\t\tvar lightMapReg:ShaderRegisterElement = registerCache.getFreeTextureReg();\r\n\t\tvar temp:ShaderRegisterElement = registerCache.getFreeFragmentVectorTemp();\r\n\t\tmethodVO.texturesIndex = lightMapReg.index;\r\n\r\n\t\tcode = ShaderCompilerHelper.getTex2DSampleCode(temp, sharedRegisters, lightMapReg, this._texture, shaderObject.useSmoothTextures, shaderObject.repeatTextures, shaderObject.useMipmapping, this._useSecondaryUV? sharedRegisters.secondaryUVVarying : sharedRegisters.uvVarying);\r\n\r\n\t\tswitch (this._blendMode) {\r\n\t\t\tcase EffectLightMapMethod.MULTIPLY:\r\n\t\t\t\tcode += \"mul \" + targetReg + \", \" + targetReg + \", \" + temp + \"\\n\";\r\n\t\t\t\tbreak;\r\n\t\t\tcase EffectLightMapMethod.ADD:\r\n\t\t\t\tcode += \"add \" + targetReg + \", \" + targetReg + \", \" + temp + \"\\n\";\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\treturn code;\r\n\t}\r\n}\r\n\r\nexport = EffectLightMapMethod;","import AssetType\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetType\");\r\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\n\r\nimport ShaderObjectBase\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderObjectBase\");\r\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterCache\");\r\nimport ShaderRegisterData\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterData\");\r\nimport ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterElement\");\r\n\r\nimport MethodVO\t\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/data/MethodVO\");\r\nimport ShadingMethodBase\t\t\t= require(\"awayjs-methodmaterials/lib/methods/ShadingMethodBase\");\r\n\r\n/**\r\n * EffectMethodBase forms an abstract base class for shader methods that are not dependent on light sources,\r\n * and are in essence post-process effects on the materials.\r\n */\r\nclass EffectMethodBase extends ShadingMethodBase implements IAsset\r\n{\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn AssetType.EFFECTS_METHOD;\r\n\t}\r\n\r\n\t/**\r\n\t * Get the fragment shader code that should be added after all per-light code. Usually composits everything to the target register.\r\n\t * @param methodVO The MethodVO object containing the method data for the currently compiled material pass.\r\n\t * @param regCache The register cache used during the compilation.\r\n\t * @param targetReg The register that will be containing the method's output.\r\n\t * @private\r\n\t */\r\n\tpublic iGetFragmentCode(shaderObject:ShaderObjectBase, methodVO:MethodVO, targetReg:ShaderRegisterElement, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t\treturn \"\";\r\n\t}\r\n}\r\n\r\nexport = EffectMethodBase;","import CubeTextureBase\t\t\t\t\t= require(\"awayjs-core/lib/textures/CubeTextureBase\");\r\n\r\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\r\n\r\nimport ShaderObjectBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderObjectBase\");\r\nimport ShaderRegisterCache\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterCache\");\r\nimport ShaderRegisterData\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterData\");\r\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterElement\");\r\nimport ShaderCompilerHelper\t\t\t\t= require(\"awayjs-renderergl/lib/utils/ShaderCompilerHelper\");\r\n\r\nimport MethodVO\t\t\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/data/MethodVO\");\r\nimport EffectMethodBase\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/EffectMethodBase\");\r\n\r\n/**\r\n * EffectRefractionEnvMapMethod provides a method to add refracted transparency based on cube maps.\r\n */\r\nclass EffectRefractionEnvMapMethod extends EffectMethodBase\r\n{\r\n\tprivate _envMap:CubeTextureBase;\r\n\r\n\tprivate _dispersionR:number = 0;\r\n\tprivate _dispersionG:number = 0;\r\n\tprivate _dispersionB:number = 0;\r\n\tprivate _useDispersion:boolean;\r\n\tprivate _refractionIndex:number;\r\n\tprivate _alpha:number = 1;\r\n\r\n\t/**\r\n\t * Creates a new EffectRefractionEnvMapMethod object. Example values for dispersion are: dispersionR: -0.03, dispersionG: -0.01, dispersionB: = .0015\r\n\t *\r\n\t * @param envMap The environment map containing the refracted scene.\r\n\t * @param refractionIndex The refractive index of the material.\r\n\t * @param dispersionR The amount of chromatic dispersion of the red channel. Defaults to 0 (none).\r\n\t * @param dispersionG The amount of chromatic dispersion of the green channel. Defaults to 0 (none).\r\n\t * @param dispersionB The amount of chromatic dispersion of the blue channel. Defaults to 0 (none).\r\n\t */\r\n\tconstructor(envMap:CubeTextureBase, refractionIndex:number = .1, dispersionR:number = 0, dispersionG:number = 0, dispersionB:number = 0)\r\n\t{\r\n\t\tsuper();\r\n\t\tthis._envMap = envMap;\r\n\t\tthis._dispersionR = dispersionR;\r\n\t\tthis._dispersionG = dispersionG;\r\n\t\tthis._dispersionB = dispersionB;\r\n\t\tthis._useDispersion = !(this._dispersionR == this._dispersionB && this._dispersionR == this._dispersionG);\r\n\t\tthis._refractionIndex = refractionIndex;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic iInitConstants(shaderObject:ShaderObjectBase, methodVO:MethodVO)\r\n\t{\r\n\t\tvar index:number /*int*/ = methodVO.fragmentConstantsIndex;\r\n\t\tvar data:Array<number> = shaderObject.fragmentConstantData;\r\n\t\tdata[index + 4] = 1;\r\n\t\tdata[index + 5] = 0;\r\n\t\tdata[index + 7] = 1;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic iInitVO(shaderObject:ShaderObjectBase, methodVO:MethodVO)\r\n\t{\r\n\t\tmethodVO.needsNormals = true;\r\n\t\tmethodVO.needsView = true;\r\n\t}\r\n\r\n\t/**\r\n\t * The cube environment map to use for the refraction.\r\n\t */\r\n\tpublic get envMap():CubeTextureBase\r\n\t{\r\n\t\treturn this._envMap;\r\n\t}\r\n\r\n\tpublic set envMap(value:CubeTextureBase)\r\n\t{\r\n\t\tthis._envMap = value;\r\n\t}\r\n\r\n\t/**\r\n\t * The refractive index of the material.\r\n\t */\r\n\tpublic get refractionIndex():number\r\n\t{\r\n\t\treturn this._refractionIndex;\r\n\t}\r\n\r\n\tpublic set refractionIndex(value:number)\r\n\t{\r\n\t\tthis._refractionIndex = value;\r\n\t}\r\n\r\n\t/**\r\n\t * The amount of chromatic dispersion of the red channel. Defaults to 0 (none).\r\n\t */\r\n\tpublic get dispersionR():number\r\n\t{\r\n\t\treturn this._dispersionR;\r\n\t}\r\n\r\n\tpublic set dispersionR(value:number)\r\n\t{\r\n\t\tthis._dispersionR = value;\r\n\r\n\t\tvar useDispersion:boolean = !(this._dispersionR == this._dispersionB && this._dispersionR == this._dispersionG);\r\n\t\tif (this._useDispersion != useDispersion) {\r\n\t\t\tthis.iInvalidateShaderProgram();\r\n\t\t\tthis._useDispersion = useDispersion;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * The amount of chromatic dispersion of the green channel. Defaults to 0 (none).\r\n\t */\r\n\tpublic get dispersionG():number\r\n\t{\r\n\t\treturn this._dispersionG;\r\n\t}\r\n\r\n\tpublic set dispersionG(value:number)\r\n\t{\r\n\t\tthis._dispersionG = value;\r\n\r\n\t\tvar useDispersion:boolean = !(this._dispersionR == this._dispersionB && this._dispersionR == this._dispersionG);\r\n\t\tif (this._useDispersion != useDispersion) {\r\n\t\t\tthis.iInvalidateShaderProgram();\r\n\t\t\tthis._useDispersion = useDispersion;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * The amount of chromatic dispersion of the blue channel. Defaults to 0 (none).\r\n\t */\r\n\tpublic get dispersionB():number\r\n\t{\r\n\t\treturn this._dispersionB;\r\n\t}\r\n\r\n\tpublic set dispersionB(value:number)\r\n\t{\r\n\t\tthis._dispersionB = value;\r\n\r\n\t\tvar useDispersion:boolean = !(this._dispersionR == this._dispersionB && this._dispersionR == this._dispersionG);\r\n\t\tif (this._useDispersion != useDispersion) {\r\n\t\t\tthis.iInvalidateShaderProgram();\r\n\t\t\tthis._useDispersion = useDispersion;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * The amount of transparency of the object. Warning: the alpha applies to the refracted color, not the actual\r\n\t * material. A value of 1 will make it appear fully transparent.\r\n\t */\r\n\tpublic get alpha():number\r\n\t{\r\n\t\treturn this._alpha;\r\n\t}\r\n\r\n\tpublic set alpha(value:number)\r\n\t{\r\n\t\tthis._alpha = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic iActivate(shaderObject:ShaderObjectBase, methodVO:MethodVO, stage:Stage)\r\n\t{\r\n\t\tvar index:number /*int*/ = methodVO.fragmentConstantsIndex;\r\n\t\tvar data:Array<number> = shaderObject.fragmentConstantData;\r\n\r\n\t\tdata[index] = this._dispersionR + this._refractionIndex;\r\n\r\n\t\tif (this._useDispersion) {\r\n\t\t\tdata[index + 1] = this._dispersionG + this._refractionIndex;\r\n\t\t\tdata[index + 2] = this._dispersionB + this._refractionIndex;\r\n\t\t}\r\n\t\tdata[index + 3] = this._alpha;\r\n\r\n\t\tstage.activateCubeTexture(methodVO.texturesIndex, this._envMap, shaderObject.useSmoothTextures, shaderObject.useMipmapping);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic iGetFragmentCode(shaderObject:ShaderObjectBase, methodVO:MethodVO, targetReg:ShaderRegisterElement, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\r\n\t{\r\n\t\t// todo: data2.x could use common reg, so only 1 reg is used\r\n\t\tvar data:ShaderRegisterElement = registerCache.getFreeFragmentConstant();\r\n\t\tvar data2:ShaderRegisterElement = registerCache.getFreeFragmentConstant();\r\n\t\tvar code:string = \"\";\r\n\t\tvar cubeMapReg:ShaderRegisterElement = registerCache.getFreeTextureReg();\r\n\t\tvar refractionDir:ShaderRegisterElement;\r\n\t\tvar refractionColor:ShaderRegisterElement;\r\n\t\tvar temp:ShaderRegisterElement;\r\n\r\n\t\tmethodVO.texturesIndex = cubeMapReg.index;\r\n\t\tmethodVO.fragmentConstantsIndex = data.index*4;\r\n\r\n\t\trefractionDir = registerCache.getFreeFragmentVectorTemp();\r\n\t\tregisterCache.addFragmentTempUsages(refractionDir, 1);\r\n\t\trefractionColor = registerCache.getFreeFragmentVectorTemp();\r\n\t\tregisterCache.addFragmentTempUsages(refractionColor, 1);\r\n\r\n\t\ttemp = registerCache.getFreeFragmentVectorTemp();\r\n\r\n\t\tvar viewDirReg:ShaderRegisterElement = sharedRegisters.viewDirFragment;\r\n\t\tvar normalReg:ShaderRegisterElement = sharedRegisters.normalFragment;\r\n\r\n\t\tcode += \"neg \" + viewDirReg + \".xyz, \" + viewDirReg + \".xyz\\n\";\r\n\r\n\t\tcode += \"dp3 \" + temp + \".x, \" + viewDirReg + \".xyz, \" + normalReg + \".xyz\\n\" +\r\n\t\t\t\"mul \" + temp + \".w, \" + temp + \".x, \" + temp + \".x\\n\" +\r\n\t\t\t\"sub \" + temp + \".w, \" + data2 + \".x, \" + temp + \".w\\n\" +\r\n\t\t\t\"mul \" + temp + \".w, \" + data + \".x, \" + temp + \".w\\n\" +\r\n\t\t\t\"mul \" + temp + \".w, \" + data + \".x, \" + temp + \".w\\n\" +\r\n\t\t\t\"sub \" + temp + \".w, \" + data2 + \".x, \" + temp + \".w\\n\" +\r\n\t\t\t\"sqt \" + temp + \".y, \" + temp + \".w\\n\" +\r\n\r\n\t\t\t\"mul \" + temp + \".x, \" + data + \".x, \" + temp + \".x\\n\" +\r\n\t\t\t\"add \" + temp + \".x, \" + temp + \".x, \" + temp + \".y\\n\" +\r\n\t\t\t\"mul \" + temp + \".xyz, \" + temp + \".x, \" + normalReg + \".xyz\\n\" +\r\n\r\n\t\t\t\"mul \" + refractionDir + \", \" + data + \".x, \" + viewDirReg + \"\\n\" +\r\n\t\t\t\"sub \" + refractionDir + \".xyz, \" + refractionDir + \".xyz, \" + temp + \".xyz\\n\" +\r\n\t\t\t\"nrm \" + refractionDir + \".xyz, \" + refractionDir + \".xyz\\n\";\r\n\t\tcode += ShaderCompilerHelper.getTexCubeSampleCode(refractionColor, cubeMapReg, this._envMap, shaderObject.useSmoothTextures, shaderObject.useMipmapping, refractionDir) +\r\n\t\t\t\"sub \" + refractionColor + \".w, \" + refractionColor + \".w, fc0.x\t\\n\" +\r\n\t\t\t\"kil \" + refractionColor + \".w\\n\";\r\n\r\n\t\tif (this._useDispersion) {\r\n\t\t\t// GREEN\r\n\t\t\tcode += \"dp3 \" + temp + \".x, \" + viewDirReg + \".xyz, \" + normalReg + \".xyz\\n\" +\r\n\t\t\t\t\"mul \" + temp + \".w, \" + temp + \".x, \" + temp + \".x\\n\" +\r\n\t\t\t\t\"sub \" + temp + \".w, \" + data2 + \".x, \" + temp + \".w\\n\" +\r\n\t\t\t\t\"mul \" + temp + \".w, \" + data + \".y, \" + temp + \".w\\n\" +\r\n\t\t\t\t\"mul \" + temp + \".w, \" + data + \".y, \" + temp + \".w\\n\" +\r\n\t\t\t\t\"sub \" + temp + \".w, \" + data2 + \".x, \" + temp + \".w\\n\" +\r\n\t\t\t\t\"sqt \" + temp + \".y, \" + temp + \".w\\n\" +\r\n\r\n\t\t\t\t\"mul \" + temp + \".x, \" + data + \".y, \" + temp + \".x\\n\" +\r\n\t\t\t\t\"add \" + temp + \".x, \" + temp + \".x, \" + temp + \".y\\n\" +\r\n\t\t\t\t\"mul \" + temp + \".xyz, \" + temp + \".x, \" + normalReg + \".xyz\\n\" +\r\n\r\n\t\t\t\t\"mul \" + refractionDir + \", \" + data + \".y, \" + viewDirReg + \"\\n\" +\r\n\t\t\t\t\"sub \" + refractionDir + \".xyz, \" + refractionDir + \".xyz, \" + temp + \".xyz\\n\" +\r\n\t\t\t\t\"nrm \" + refractionDir + \".xyz, \" + refractionDir + \".xyz\\n\";\r\n\t\t\tcode += ShaderCompilerHelper.getTexCubeSampleCode(temp, cubeMapReg, this._envMap, shaderObject.useSmoothTextures, shaderObject.useMipmapping, refractionDir) +\r\n\t\t\t\t\"mov \" + refractionColor + \".y, \" + temp + \".y\\n\";\r\n\r\n\t\t\t// BLUE\r\n\t\t\tcode += \"dp3 \" + temp + \".x, \" + viewDirReg + \".xyz, \" + normalReg + \".xyz\\n\" +\r\n\t\t\t\t\"mul \" + temp + \".w, \" + temp + \".x, \" + temp + \".x\\n\" +\r\n\t\t\t\t\"sub \" + temp + \".w, \" + data2 + \".x, \" + temp + \".w\\n\" +\r\n\t\t\t\t\"mul \" + temp + \".w, \" + data + \".z, \" + temp + \".w\\n\" +\r\n\t\t\t\t\"mul \" + temp + \".w, \" + data + \".z, \" + temp + \".w\\n\" +\r\n\t\t\t\t\"sub \" + temp + \".w, \" + data2 + \".x, \" + temp + \".w\\n\" +\r\n\t\t\t\t\"sqt \" + temp + \".y, \" + temp + \".w\\n\" +\r\n\r\n\t\t\t\t\"mul \" + temp + \".x, \" + data + \".z, \" + temp + \".x\\n\" +\r\n\t\t\t\t\"add \" + temp + \".x, \" + temp + \".x, \" + temp + \".y\\n\" +\r\n\t\t\t\t\"mul \" + temp + \".xyz, \" + temp + \".x, \" + normalReg + \".xyz\\n\" +\r\n\r\n\t\t\t\t\"mul \" + refractionDir + \", \" + data + \".z, \" + viewDirReg + \"\\n\" +\r\n\t\t\t\t\"sub \" + refractionDir + \".xyz, \" + refractionDir + \".xyz, \" + temp + \".xyz\\n\" +\r\n\t\t\t\t\"nrm \" + refractionDir + \".xyz, \" + refractionDir + \".xyz\\n\";\r\n\t\t\tcode += ShaderCompilerHelper.getTexCubeSampleCode(temp, cubeMapReg, this._envMap, shaderObject.useSmoothTextures, shaderObject.useMipmapping, refractionDir) +\r\n\t\t\t\t\"mov \" + refractionColor + \".z, \" + temp + \".z\\n\";\r\n\t\t}\r\n\r\n\t\tregisterCache.removeFragmentTempUsage(refractionDir);\r\n\r\n\t\tcode += \"sub \" + refractionColor + \".xyz, \" + refractionColor + \".xyz, \" + targetReg + \".xyz\\n\" +\r\n\t\t\t\"mul \" + refractionColor + \".xyz, \" + refractionColor + \".xyz, \" + data + \".w\\n\" +\r\n\t\t\t\"add \" + targetReg + \".xyz, \" + targetReg + \".xyz, \" + refractionColor + \".xyz\\n\";\r\n\r\n\t\tregisterCache.removeFragmentTempUsage(refractionColor);\r\n\r\n\t\t// restore\r\n\t\tcode += \"neg \" + viewDirReg + \".xyz, \" + viewDirReg + \".xyz\\n\";\r\n\r\n\t\treturn code;\r\n\t}\r\n}\r\n\r\nexport = EffectRefractionEnvMapMethod;","import Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\r\n\r\nimport ShaderObjectBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderObjectBase\");\r\nimport ShaderRegisterCache\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterCache\");\r\nimport ShaderRegisterData\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterData\");\r\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterElement\");\r\n\r\nimport MethodVO\t\t\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/data/MethodVO\");\r\nimport EffectMethodBase\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/EffectMethodBase\");\r\n\r\n/**\r\n * EffectRimLightMethod provides a method to add rim lighting to a material. This adds a glow-like effect to edges of objects.\r\n */\r\nclass EffectRimLightMethod extends EffectMethodBase\r\n{\r\n\tpublic static ADD:string = \"add\";\r\n\tpublic static MULTIPLY:string = \"multiply\";\r\n\tpublic static MIX:string = \"mix\";\r\n\r\n\tprivate _color:number /*uint*/;\r\n\tprivate _blendMode:string;\r\n\tprivate _colorR:number;\r\n\tprivate _colorG:number;\r\n\tprivate _colorB:number;\r\n\tprivate _strength:number;\r\n\tprivate _power:number;\r\n\r\n\t/**\r\n\t * Creates a new <code>EffectRimLightMethod</code> object.\r\n\t *\r\n\t * @param color The colour of the rim light.\r\n\t * @param strength The strength of the rim light.\r\n\t * @param power The power of the rim light. Higher values will result in a higher edge fall-off.\r\n\t * @param blend The blend mode with which to add the light to the object.\r\n\t */\r\n\tconstructor(color:number /*uint*/ = 0xffffff, strength:number = .4, power:number = 2, blend:string = \"mix\")\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._blendMode = blend;\r\n\t\tthis._strength = strength;\r\n\t\tthis._power = power;\r\n\r\n\t\tthis.color = color;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic iInitConstants(shaderObject:ShaderObjectBase, methodVO:MethodVO)\r\n\t{\r\n\t\tshaderObject.fragmentConstantData[methodVO.fragmentConstantsIndex + 3] = 1;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic iInitVO(shaderObject:ShaderObjectBase, methodVO:MethodVO)\r\n\t{\r\n\t\tmethodVO.needsNormals = true;\r\n\t\tmethodVO.needsView = true;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * The blend mode with which to add the light to the object.\r\n\t *\r\n\t * EffectRimLightMethod.MULTIPLY multiplies the rim light with the material's colour.\r\n\t * EffectRimLightMethod.ADD adds the rim light with the material's colour.\r\n\t * EffectRimLightMethod.MIX provides normal alpha blending.\r\n\t */\r\n\tpublic get blendMode():string\r\n\t{\r\n\t\treturn this._blendMode;\r\n\t}\r\n\r\n\tpublic set blendMode(value:string)\r\n\t{\r\n\t\tif (this._blendMode == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._blendMode = value;\r\n\r\n\t\tthis.iInvalidateShaderProgram();\r\n\t}\r\n\r\n\t/**\r\n\t * The color of the rim light.\r\n\t */\r\n\tpublic get color():number /*uint*/\r\n\t{\r\n\t\treturn this._color;\r\n\t}\r\n\r\n\tpublic set color(value:number /*uint*/)\r\n\t{\r\n\t\tthis._color = value;\r\n\t\tthis._colorR = ((value >> 16) & 0xff)/0xff;\r\n\t\tthis._colorG = ((value >> 8) & 0xff)/0xff;\r\n\t\tthis._colorB = (value & 0xff)/0xff;\r\n\t}\r\n\r\n\t/**\r\n\t * The strength of the rim light.\r\n\t */\r\n\tpublic get strength():number\r\n\t{\r\n\t\treturn this._strength;\r\n\t}\r\n\r\n\tpublic set strength(value:number)\r\n\t{\r\n\t\tthis._strength = value;\r\n\t}\r\n\r\n\t/**\r\n\t * The power of the rim light. Higher values will result in a higher edge fall-off.\r\n\t */\r\n\tpublic get power():number\r\n\t{\r\n\t\treturn this._power;\r\n\t}\r\n\r\n\tpublic set power(value:number)\r\n\t{\r\n\t\tthis._power = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic iActivate(shaderObject:ShaderObjectBase, methodVO:MethodVO, stage:Stage)\r\n\t{\r\n\t\tvar index:number /*int*/ = methodVO.fragmentConstantsIndex;\r\n\t\tvar data:Array<number> = shaderObject.fragmentConstantData;\r\n\t\tdata[index] = this._colorR;\r\n\t\tdata[index + 1] = this._colorG;\r\n\t\tdata[index + 2] = this._colorB;\r\n\t\tdata[index + 4] = this._strength;\r\n\t\tdata[index + 5] = this._power;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic iGetFragmentCode(shaderObject:ShaderObjectBase, methodVO:MethodVO, targetReg:ShaderRegisterElement, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\r\n\t{\r\n\t\tvar dataRegister:ShaderRegisterElement = registerCache.getFreeFragmentConstant();\r\n\t\tvar dataRegister2:ShaderRegisterElement = registerCache.getFreeFragmentConstant();\r\n\t\tvar temp:ShaderRegisterElement = registerCache.getFreeFragmentVectorTemp();\r\n\t\tvar code:string = \"\";\r\n\r\n\t\tmethodVO.fragmentConstantsIndex = dataRegister.index*4;\r\n\r\n\t\tcode += \"dp3 \" + temp + \".x, \" + sharedRegisters.viewDirFragment + \".xyz, \" + sharedRegisters.normalFragment + \".xyz\\n\" +\r\n\t\t\t\"sat \" + temp + \".x, \" + temp + \".x\\n\" +\r\n\t\t\t\"sub \" + temp + \".x, \" + dataRegister + \".w, \" + temp + \".x\\n\" +\r\n\t\t\t\"pow \" + temp + \".x, \" + temp + \".x, \" + dataRegister2 + \".y\\n\" +\r\n\t\t\t\"mul \" + temp + \".x, \" + temp + \".x, \" + dataRegister2 + \".x\\n\" +\r\n\t\t\t\"sub \" + temp + \".x, \" + dataRegister + \".w, \" + temp + \".x\\n\" +\r\n\t\t\t\"mul \" + targetReg + \".xyz, \" + targetReg + \".xyz, \" + temp + \".x\\n\" +\r\n\t\t\t\"sub \" + temp + \".w, \" + dataRegister + \".w, \" + temp + \".x\\n\";\r\n\r\n\t\tif (this._blendMode == EffectRimLightMethod.ADD) {\r\n\t\t\tcode += \"mul \" + temp + \".xyz, \" + temp + \".w, \" + dataRegister + \".xyz\\n\" +\r\n\t\t\t\t\"add \" + targetReg + \".xyz, \" + targetReg + \".xyz, \" + temp + \".xyz\\n\";\r\n\t\t} else if (this._blendMode == EffectRimLightMethod.MULTIPLY) {\r\n\t\t\tcode += \"mul \" + temp + \".xyz, \" + temp + \".w, \" + dataRegister + \".xyz\\n\" +\r\n\t\t\t\t\"mul \" + targetReg + \".xyz, \" + targetReg + \".xyz, \" + temp + \".xyz\\n\";\r\n\t\t} else {\r\n\t\t\tcode += \"sub \" + temp + \".xyz, \" + dataRegister + \".xyz, \" + targetReg + \".xyz\\n\" +\r\n\t\t\t\t\"mul \" + temp + \".xyz, \" + temp + \".xyz, \" + temp + \".w\\n\" +\r\n\t\t\t\t\"add \" + targetReg + \".xyz, \" + targetReg + \".xyz, \" + temp + \".xyz\\n\";\r\n\t\t}\r\n\r\n\t\treturn code;\r\n\t}\r\n}\r\n\r\nexport = EffectRimLightMethod;","import ShaderObjectBase\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderObjectBase\");\r\nimport ShaderLightingObject\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderLightingObject\");\r\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterCache\");\r\nimport ShaderRegisterData\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterData\");\r\nimport ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterElement\");\r\n\r\nimport MethodVO\t\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/data/MethodVO\");\r\nimport ShadingMethodBase\t\t\t= require(\"awayjs-methodmaterials/lib/methods/ShadingMethodBase\");\r\n\r\n/**\r\n * LightingMethodBase provides an abstract base method for shading methods that uses lights.\r\n * Used for diffuse and specular shaders only.\r\n */\r\nclass LightingMethodBase extends ShadingMethodBase\r\n{\r\n\t/**\r\n\t * A method that is exposed to wrappers in case the strength needs to be controlled\r\n\t */\r\n\tpublic _iModulateMethod:(shaderObject:ShaderObjectBase, methodVO:MethodVO, targetReg:ShaderRegisterElement, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData) => string;\r\n\r\n\t/**\r\n\t * Creates a new LightingMethodBase.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\t/**\r\n\t * Get the fragment shader code that will be needed before any per-light code is added.\r\n\t * @param methodVO The MethodVO object containing the method data for the currently compiled material pass.\r\n\t * @param regCache The register cache used during the compilation.\r\n\t * @private\r\n\t */\r\n\tpublic iGetFragmentPreLightingCode(shaderObject:ShaderLightingObject, methodVO:MethodVO, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\r\n\t{\r\n\t\treturn \"\";\r\n\t}\r\n\r\n\t/**\r\n\t * Get the fragment shader code that will generate the code relevant to a single light.\r\n\t *\r\n\t * @param methodVO The MethodVO object containing the method data for the currently compiled material pass.\r\n\t * @param lightDirReg The register containing the light direction vector.\r\n\t * @param lightColReg The register containing the light colour.\r\n\t * @param regCache The register cache used during the compilation.\r\n\t */\r\n\tpublic iGetFragmentCodePerLight(shaderObject:ShaderLightingObject, methodVO:MethodVO, lightDirReg:ShaderRegisterElement, lightColReg:ShaderRegisterElement, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\r\n\t{\r\n\t\treturn \"\";\r\n\t}\r\n\r\n\t/**\r\n\t * Get the fragment shader code that will generate the code relevant to a single light probe object.\r\n\t *\r\n\t * @param methodVO The MethodVO object containing the method data for the currently compiled material pass.\r\n\t * @param cubeMapReg The register containing the cube map for the current probe\r\n\t * @param weightRegister A string representation of the register + component containing the current weight\r\n\t * @param regCache The register cache providing any necessary registers to the shader\r\n\t */\r\n\tpublic iGetFragmentCodePerProbe(shaderObject:ShaderLightingObject, methodVO:MethodVO, cubeMapReg:ShaderRegisterElement, weightRegister:string, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\r\n\t{\r\n\t\treturn \"\";\r\n\t}\r\n\r\n\t/**\r\n\t * Get the fragment shader code that should be added after all per-light code. Usually composits everything to the target register.\r\n\t *\r\n\t * @param methodVO The MethodVO object containing the method data for the currently compiled material pass.\r\n\t * @param regCache The register cache used during the compilation.\r\n\t * @param targetReg The register containing the final shading output.\r\n\t * @private\r\n\t */\r\n\tpublic iGetFragmentPostLightingCode(shaderObject:ShaderLightingObject, methodVO:MethodVO, targetReg:ShaderRegisterElement, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\r\n\t{\r\n\t\treturn \"\";\r\n\t}\r\n}\r\n\r\nexport = LightingMethodBase;","import Texture2DBase\t\t\t\t= require(\"awayjs-core/lib/textures/Texture2DBase\");\r\n\r\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\r\n\r\nimport ShaderObjectBase\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderObjectBase\");\r\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterCache\");\r\nimport ShaderRegisterData\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterData\");\r\nimport ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterElement\");\r\nimport ShaderCompilerHelper\t\t\t= require(\"awayjs-renderergl/lib/utils/ShaderCompilerHelper\");\r\n\r\nimport MethodVO\t\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/data/MethodVO\");\r\nimport ShadingMethodBase\t\t\t= require(\"awayjs-methodmaterials/lib/methods/ShadingMethodBase\");\r\n\r\n/**\r\n * NormalBasicMethod is the default method for standard tangent-space normal mapping.\r\n */\r\nclass NormalBasicMethod extends ShadingMethodBase\r\n{\r\n\tprivate _texture:Texture2DBase;\r\n\tprivate _useTexture:boolean;\r\n\tpublic _pNormalTextureRegister:ShaderRegisterElement;\r\n\r\n\t/**\r\n\t * Creates a new NormalBasicMethod object.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\tpublic iIsUsed(shaderObject:ShaderObjectBase):boolean\r\n\t{\r\n\t\tif (!this._useTexture || !shaderObject.normalDependencies)\r\n\t\t\treturn false;\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic iInitVO(shaderObject:ShaderObjectBase, methodVO:MethodVO)\r\n\t{\r\n\t\tmethodVO.needsUV = this._useTexture;\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not this method outputs normals in tangent space. Override for object-space normals.\r\n\t */\r\n\tpublic iOutputsTangentNormals():boolean\r\n\t{\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic copyFrom(method:ShadingMethodBase)\r\n\t{\r\n\t\tvar s:any = method;\r\n\t\tvar bnm:NormalBasicMethod = <NormalBasicMethod> method;\r\n\r\n\t\tif (bnm.normalMap != null)\r\n\t\t\tthis.normalMap = bnm.normalMap;\r\n\t}\r\n\r\n\t/**\r\n\t * The texture containing the normals per pixel.\r\n\t */\r\n\tpublic get normalMap():Texture2DBase\r\n\t{\r\n\t\treturn this._texture;\r\n\t}\r\n\r\n\tpublic set normalMap(value:Texture2DBase)\r\n\t{\r\n\t\tvar b:boolean = (value != null);\r\n\r\n\t\tif (b != this._useTexture || (value && this._texture && (value.format != this._texture.format)))\r\n\t\t\tthis.iInvalidateShaderProgram();\r\n\r\n\t\tthis._useTexture = b;\r\n\t\tthis._texture = value;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic iCleanCompilationData()\r\n\t{\r\n\t\tsuper.iCleanCompilationData();\r\n\t\tthis._pNormalTextureRegister = null;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tif (this._texture)\r\n\t\t\tthis._texture = null;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic iActivate(shaderObject:ShaderObjectBase, methodVO:MethodVO, stage:Stage)\r\n\t{\r\n\t\tif (methodVO.texturesIndex >= 0)\r\n\t\t\tstage.activateTexture(methodVO.texturesIndex, this._texture, shaderObject.repeatTextures, shaderObject.useSmoothTextures, shaderObject.useMipmapping);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic iGetFragmentCode(shaderObject:ShaderObjectBase, methodVO:MethodVO, targetReg:ShaderRegisterElement, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\r\n\t{\r\n\t\tthis._pNormalTextureRegister = registerCache.getFreeTextureReg();\r\n\r\n\t\tmethodVO.texturesIndex = this._pNormalTextureRegister.index;\r\n\r\n\t\treturn ShaderCompilerHelper.getTex2DSampleCode(targetReg, sharedRegisters, this._pNormalTextureRegister, this._texture, shaderObject.useSmoothTextures, shaderObject.repeatTextures, shaderObject.useMipmapping) +\r\n\t\t\t\"sub \" + targetReg + \".xyz, \" + targetReg + \".xyz, \" + sharedRegisters.commons + \".xxx\\n\" +\r\n\t\t\t\"nrm \" + targetReg + \".xyz, \" + targetReg + \"\\n\";\r\n\t}\r\n}\r\n\r\nexport = NormalBasicMethod;","import Texture2DBase\t\t\t\t\t= require(\"awayjs-core/lib/textures/Texture2DBase\");\r\n\r\nimport ShaderObjectBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderObjectBase\");\r\nimport ShaderRegisterCache\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterCache\");\r\nimport ShaderRegisterData\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterData\");\r\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterElement\");\r\nimport ShaderCompilerHelper\t\t\t\t= require(\"awayjs-renderergl/lib/utils/ShaderCompilerHelper\");\r\n\r\nimport MethodVO\t\t\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/data/MethodVO\");\r\nimport NormalBasicMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/NormalBasicMethod\");\r\nimport ShadingMethodBase\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/ShadingMethodBase\");\r\n\r\n/**\r\n * NormalHeightMapMethod provides a normal map method that uses a height map to calculate the normals.\r\n */\r\nclass NormalHeightMapMethod extends NormalBasicMethod\r\n{\r\n\tprivate _worldXYRatio:number;\r\n\tprivate _worldXZRatio:number;\r\n\r\n\t/**\r\n\t * Creates a new NormalHeightMapMethod method.\r\n\t *\r\n\t * @param heightMap The texture containing the height data. 0 means low, 1 means high.\r\n\t * @param worldWidth The width of the 'world'. This is used to map uv coordinates' u component to scene dimensions.\r\n\t * @param worldHeight The height of the 'world'. This is used to map the height map values to scene dimensions.\r\n\t * @param worldDepth The depth of the 'world'. This is used to map uv coordinates' v component to scene dimensions.\r\n\t */\r\n\tconstructor(heightMap:Texture2DBase, worldWidth:number, worldHeight:number, worldDepth:number)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis.normalMap = heightMap;\r\n\t\tthis._worldXYRatio = worldWidth/worldHeight;\r\n\t\tthis._worldXZRatio = worldDepth/worldHeight;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic iInitConstants(shaderObject:ShaderObjectBase, methodVO:MethodVO)\r\n\t{\r\n\t\tvar index:number /*int*/ = methodVO.fragmentConstantsIndex;\r\n\t\tvar data:Array<number> = shaderObject.fragmentConstantData;\r\n\t\tdata[index] = 1/this.normalMap.width;\r\n\t\tdata[index + 1] = 1/this.normalMap.height;\r\n\t\tdata[index + 2] = 0;\r\n\t\tdata[index + 3] = 1;\r\n\t\tdata[index + 4] = this._worldXYRatio;\r\n\t\tdata[index + 5] = this._worldXZRatio;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic get tangentSpace():boolean\r\n\t{\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic copyFrom(method:ShadingMethodBase)\r\n\t{\r\n\t\tsuper.copyFrom(method);\r\n\r\n\t\tthis._worldXYRatio = (<NormalHeightMapMethod> method)._worldXYRatio;\r\n\t\tthis._worldXZRatio = (<NormalHeightMapMethod> method)._worldXZRatio;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic iGetFragmentCode(shaderObject:ShaderObjectBase, methodVO:MethodVO, targetReg:ShaderRegisterElement, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\r\n\t{\r\n\t\tvar temp:ShaderRegisterElement = registerCache.getFreeFragmentVectorTemp();\r\n\t\tvar dataReg:ShaderRegisterElement = registerCache.getFreeFragmentConstant();\r\n\t\tvar dataReg2:ShaderRegisterElement = registerCache.getFreeFragmentConstant();\r\n\t\tthis._pNormalTextureRegister = registerCache.getFreeTextureReg();\r\n\t\tmethodVO.texturesIndex = this._pNormalTextureRegister.index;\r\n\t\tmethodVO.fragmentConstantsIndex = dataReg.index*4;\r\n\r\n\t\treturn ShaderCompilerHelper.getTex2DSampleCode(targetReg, sharedRegisters, this._pNormalTextureRegister, this.normalMap, shaderObject.useSmoothTextures, shaderObject.repeatTextures, shaderObject.useMipmapping, sharedRegisters.uvVarying, \"clamp\") +\r\n\r\n\t\t\t\"add \" + temp + \", \" + sharedRegisters.uvVarying + \", \" + dataReg + \".xzzz\\n\" +\r\n\r\n\t\t\tShaderCompilerHelper.getTex2DSampleCode(temp, sharedRegisters, this._pNormalTextureRegister, this.normalMap, shaderObject.useSmoothTextures, shaderObject.repeatTextures, shaderObject.useMipmapping, temp, \"clamp\") +\r\n\r\n\t\t\t\"sub \" + targetReg + \".x, \" + targetReg + \".x, \" + temp + \".x\\n\" +\r\n\t\t\t\"add \" + temp + \", \" + sharedRegisters.uvVarying + \", \" + dataReg + \".zyzz\\n\" +\r\n\r\n\t\t\tShaderCompilerHelper.getTex2DSampleCode(temp, sharedRegisters, this._pNormalTextureRegister, this.normalMap, shaderObject.useSmoothTextures, shaderObject.repeatTextures, shaderObject.useMipmapping, temp, \"clamp\") +\r\n\r\n\t\t\t\"sub \" + targetReg + \".z, \" + targetReg + \".z, \" + temp + \".x\\n\" +\r\n\t\t\t\"mov \" + targetReg + \".y, \" + dataReg + \".w\\n\" +\r\n\t\t\t\"mul \" + targetReg + \".xz, \" + targetReg + \".xz, \" + dataReg2 + \".xy\\n\" +\r\n\t\t\t\"nrm \" + targetReg + \".xyz, \" + targetReg + \".xyz\\n\";\r\n\t}\r\n}\r\n\r\nexport = NormalHeightMapMethod;","import Texture2DBase\t\t\t\t\t= require(\"awayjs-core/lib/textures/Texture2DBase\");\r\n\r\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\r\n\r\nimport ShaderObjectBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderObjectBase\");\r\nimport ShaderRegisterCache\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterCache\");\r\nimport ShaderRegisterData\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterData\");\r\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterElement\");\r\nimport ShaderCompilerHelper\t\t\t\t= require(\"awayjs-renderergl/lib/utils/ShaderCompilerHelper\");\r\n\r\nimport MethodVO\t\t\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/data/MethodVO\");\r\nimport NormalBasicMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/NormalBasicMethod\");\r\n\r\n/**\r\n * NormalSimpleWaterMethod provides a basic normal map method to create water ripples by translating two wave normal maps.\r\n */\r\nclass NormalSimpleWaterMethod extends NormalBasicMethod\r\n{\r\n\tprivate _texture2:Texture2DBase;\r\n\tprivate _normalTextureRegister2:ShaderRegisterElement;\r\n\tprivate _useSecondNormalMap:boolean = false;\r\n\tprivate _water1OffsetX:number = 0;\r\n\tprivate _water1OffsetY:number = 0;\r\n\tprivate _water2OffsetX:number = 0;\r\n\tprivate _water2OffsetY:number = 0;\r\n\r\n\t/**\r\n\t * Creates a new NormalSimpleWaterMethod object.\r\n\t * @param waveMap1 A normal map containing one layer of a wave structure.\r\n\t * @param waveMap2 A normal map containing a second layer of a wave structure.\r\n\t */\r\n\tconstructor(waveMap1:Texture2DBase, waveMap2:Texture2DBase)\r\n\t{\r\n\t\tsuper();\r\n\t\tthis.normalMap = waveMap1;\r\n\t\tthis.secondaryNormalMap = waveMap2;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic iInitConstants(shaderObject:ShaderObjectBase, methodVO:MethodVO)\r\n\t{\r\n\t\tvar index:number = methodVO.fragmentConstantsIndex;\r\n\t\tvar data:Array<number> = shaderObject.fragmentConstantData;\r\n\t\tdata[index] = .5;\r\n\t\tdata[index + 1] = 0;\r\n\t\tdata[index + 2] = 0;\r\n\t\tdata[index + 3] = 1;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic iInitVO(shaderObject:ShaderObjectBase, methodVO:MethodVO)\r\n\t{\r\n\t\tsuper.iInitVO(shaderObject, methodVO);\r\n\r\n\t\tthis._useSecondNormalMap = this.normalMap != this.secondaryNormalMap;\r\n\t}\r\n\r\n\t/**\r\n\t * The translation of the first wave layer along the X-axis.\r\n\t */\r\n\tpublic get water1OffsetX():number\r\n\t{\r\n\t\treturn this._water1OffsetX;\r\n\t}\r\n\r\n\tpublic set water1OffsetX(value:number)\r\n\t{\r\n\t\tthis._water1OffsetX = value;\r\n\t}\r\n\r\n\t/**\r\n\t * The translation of the first wave layer along the Y-axis.\r\n\t */\r\n\tpublic get water1OffsetY():number\r\n\t{\r\n\t\treturn this._water1OffsetY;\r\n\t}\r\n\r\n\tpublic set water1OffsetY(value:number)\r\n\t{\r\n\t\tthis._water1OffsetY = value;\r\n\t}\r\n\r\n\t/**\r\n\t * The translation of the second wave layer along the X-axis.\r\n\t */\r\n\tpublic get water2OffsetX():number\r\n\t{\r\n\t\treturn this._water2OffsetX;\r\n\t}\r\n\r\n\tpublic set water2OffsetX(value:number)\r\n\t{\r\n\t\tthis._water2OffsetX = value;\r\n\t}\r\n\r\n\t/**\r\n\t * The translation of the second wave layer along the Y-axis.\r\n\t */\r\n\tpublic get water2OffsetY():number\r\n\t{\r\n\t\treturn this._water2OffsetY;\r\n\t}\r\n\r\n\tpublic set water2OffsetY(value:number)\r\n\t{\r\n\t\tthis._water2OffsetY = value;\r\n\t}\r\n\r\n\t/**\r\n\t * A second normal map that will be combined with the first to create a wave-like animation pattern.\r\n\t */\r\n\tpublic get secondaryNormalMap():Texture2DBase\r\n\t{\r\n\t\treturn this._texture2;\r\n\t}\r\n\r\n\tpublic set secondaryNormalMap(value:Texture2DBase)\r\n\t{\r\n\t\tthis._texture2 = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic iCleanCompilationData()\r\n\t{\r\n\t\tsuper.iCleanCompilationData();\r\n\t\tthis._normalTextureRegister2 = null;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tsuper.dispose();\r\n\t\tthis._texture2 = null;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic iActivate(shaderObject:ShaderObjectBase, methodVO:MethodVO, stage:Stage)\r\n\t{\r\n\t\tsuper.iActivate(shaderObject, methodVO, stage);\r\n\r\n\t\tvar data:Array<number> = shaderObject.fragmentConstantData;\r\n\t\tvar index:number = methodVO.fragmentConstantsIndex;\r\n\r\n\t\tdata[index + 4] = this._water1OffsetX;\r\n\t\tdata[index + 5] = this._water1OffsetY;\r\n\t\tdata[index + 6] = this._water2OffsetX;\r\n\t\tdata[index + 7] = this._water2OffsetY;\r\n\r\n\t\t//if (this._useSecondNormalMap >= 0)\r\n\t\tif (this._useSecondNormalMap)\r\n\t\t\tstage.activateTexture(methodVO.texturesIndex + 1, this._texture2, shaderObject.repeatTextures, shaderObject.useSmoothTextures, shaderObject.useMipmapping);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic iGetFragmentCode(shaderObject:ShaderObjectBase, methodVO:MethodVO, targetReg:ShaderRegisterElement, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\r\n\t{\r\n\t\tvar temp:ShaderRegisterElement = registerCache.getFreeFragmentVectorTemp();\r\n\t\tvar dataReg:ShaderRegisterElement = registerCache.getFreeFragmentConstant();\r\n\t\tvar dataReg2:ShaderRegisterElement = registerCache.getFreeFragmentConstant();\r\n\t\tthis._pNormalTextureRegister = registerCache.getFreeTextureReg();\r\n\t\tthis._normalTextureRegister2 = this._useSecondNormalMap? registerCache.getFreeTextureReg():this._pNormalTextureRegister;\r\n\t\tmethodVO.texturesIndex = this._pNormalTextureRegister.index;\r\n\r\n\t\tmethodVO.fragmentConstantsIndex = dataReg.index*4;\r\n\r\n\t\treturn \"add \" + temp + \", \" + sharedRegisters.uvVarying + \", \" + dataReg2 + \".xyxy\\n\" +\r\n\t\t\tShaderCompilerHelper.getTex2DSampleCode(targetReg, sharedRegisters, this._pNormalTextureRegister, this.normalMap, shaderObject.useSmoothTextures, shaderObject.repeatTextures, shaderObject.useMipmapping, temp) +\r\n\t\t\t\"add \" + temp + \", \" + sharedRegisters.uvVarying + \", \" + dataReg2 + \".zwzw\\n\" +\r\n\t\t\tShaderCompilerHelper.getTex2DSampleCode(temp, sharedRegisters, this._normalTextureRegister2, this._texture2, shaderObject.useSmoothTextures, shaderObject.repeatTextures, shaderObject.useMipmapping, temp) +\r\n\t\t\t\"add \" + targetReg + \", \" + targetReg + \", \" + temp + \"\t\t\\n\" +\r\n\t\t\t\"mul \" + targetReg + \", \" + targetReg + \", \" + dataReg + \".x\t\\n\" +\r\n\t\t\t\"sub \" + targetReg + \".xyz, \" + targetReg + \".xyz, \" + sharedRegisters.commons + \".xxx\t\\n\" +\r\n\t\t\t\"nrm \" + targetReg + \".xyz, \" + targetReg + \".xyz\t\t\t\t\t\t\t\\n\";\r\n\t}\r\n}\r\n\r\nexport = NormalSimpleWaterMethod;","import NamedAssetBase\t\t\t\t= require(\"awayjs-core/lib/library/NamedAssetBase\");\r\n\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\n\r\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\r\n\r\nimport RenderableBase\t\t\t\t= require(\"awayjs-renderergl/lib/pool/RenderableBase\");\r\nimport ShadingMethodEvent\t\t\t= require(\"awayjs-renderergl/lib/events/ShadingMethodEvent\");\r\nimport ShaderObjectBase\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderObjectBase\");\r\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterCache\");\r\nimport ShaderRegisterData\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterData\");\r\nimport ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterElement\");\r\n\r\nimport MethodVO\t\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/data/MethodVO\");\r\n\r\n\r\n/**\r\n * ShadingMethodBase provides an abstract base method for shading methods, used by compiled passes to compile\r\n * the final shading program.\r\n */\r\nclass ShadingMethodBase extends NamedAssetBase\r\n{\r\n\t/**\r\n\t * Create a new ShadingMethodBase object.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\tpublic iIsUsed(shaderObject:ShaderObjectBase):boolean\r\n\t{\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * Initializes the properties for a MethodVO, including register and texture indices.\r\n\t *\r\n\t * @param methodVO The MethodVO object linking this method with the pass currently being compiled.\r\n\t *\r\n\t * @internal\r\n\t */\r\n\tpublic iInitVO(shaderObject:ShaderObjectBase, methodVO:MethodVO)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Initializes unchanging shader constants using the data from a MethodVO.\r\n\t *\r\n\t * @param methodVO The MethodVO object linking this method with the pass currently being compiled.\r\n\t *\r\n\t * @internal\r\n\t */\r\n\tpublic iInitConstants(shaderObject:ShaderObjectBase, methodVO:MethodVO)\r\n\t{\r\n\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not this method expects normals in tangent space. Override for object-space normals.\r\n\t */\r\n\tpublic iUsesTangentSpace():boolean\r\n\t{\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * Cleans up any resources used by the current object.\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Resets the compilation state of the method.\r\n\t *\r\n\t * @internal\r\n\t */\r\n\tpublic iReset()\r\n\t{\r\n\t\tthis.iCleanCompilationData();\r\n\t}\r\n\r\n\t/**\r\n\t * Resets the method's state for compilation.\r\n\t *\r\n\t * @internal\r\n\t */\r\n\tpublic iCleanCompilationData()\r\n\t{\r\n\t}\r\n\r\n\t/**\r\n\t * Get the vertex shader code for this method.\r\n\t * @param vo The MethodVO object linking this method with the pass currently being compiled.\r\n\t * @param regCache The register cache used during the compilation.\r\n\t *\r\n\t * @internal\r\n\t */\r\n\tpublic iGetVertexCode(shaderObject:ShaderObjectBase, methodVO:MethodVO, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\r\n\t{\r\n\t\treturn \"\";\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic iGetFragmentCode(shaderObject:ShaderObjectBase, methodVO:MethodVO, targetReg:ShaderRegisterElement, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\r\n\t{\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the render state for this method.\r\n\t *\r\n\t * @param methodVO The MethodVO object linking this method with the pass currently being compiled.\r\n\t * @param stage The Stage object currently used for rendering.\r\n\t *\r\n\t * @internal\r\n\t */\r\n\tpublic iActivate(shaderObject:ShaderObjectBase, methodVO:MethodVO, stage:Stage)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the render state for a single renderable.\r\n\t *\r\n\t * @param vo The MethodVO object linking this method with the pass currently being compiled.\r\n\t * @param renderable The renderable currently being rendered.\r\n\t * @param stage The Stage object currently used for rendering.\r\n\t * @param camera The camera from which the scene is currently rendered.\r\n\t *\r\n\t * @internal\r\n\t */\r\n\tpublic iSetRenderState(shaderObject:ShaderObjectBase, methodVO:MethodVO, renderable:RenderableBase, stage:Stage, camera:Camera)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Clears the render state for this method.\r\n\t * @param vo The MethodVO object linking this method with the pass currently being compiled.\r\n\t * @param stage The Stage object currently used for rendering.\r\n\t *\r\n\t * @internal\r\n\t */\r\n\tpublic iDeactivate(shaderObject:ShaderObjectBase, methodVO:MethodVO, stage:Stage)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Marks the shader program as invalid, so it will be recompiled before the next render.\r\n\t *\r\n\t * @internal\r\n\t */\r\n\tpublic iInvalidateShaderProgram()\r\n\t{\r\n\t\tthis.dispatchEvent(new ShadingMethodEvent(ShadingMethodEvent.SHADER_INVALIDATED));\r\n\t}\r\n\r\n\t/**\r\n\t * Copies the state from a ShadingMethodBase object into the current object.\r\n\t */\r\n\tpublic copyFrom(method:ShadingMethodBase)\r\n\t{\r\n\t}\r\n}\r\n\r\nexport = ShadingMethodBase;","import Event\t\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\nimport Texture2DBase\t\t\t\t\t= require(\"awayjs-core/lib/textures/Texture2DBase\");\r\n\r\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport DirectionalLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\r\nimport CascadeShadowMapper\t\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/CascadeShadowMapper\");\r\n\r\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\r\n\r\nimport RenderableBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/pool/RenderableBase\");\r\nimport ShadingMethodEvent\t\t\t\t= require(\"awayjs-renderergl/lib/events/ShadingMethodEvent\");\r\nimport ShaderLightingObject\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderLightingObject\");\r\nimport ShaderObjectBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderObjectBase\");\r\nimport ShaderRegisterCache\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterCache\");\r\nimport ShaderRegisterData\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterData\");\r\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterElement\");\r\nimport ShaderCompilerHelper\t\t\t\t= require(\"awayjs-renderergl/lib/utils/ShaderCompilerHelper\");\r\n\r\nimport MethodVO\t\t\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/data/MethodVO\");\r\nimport ShadowMapMethodBase\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/ShadowMapMethodBase\");\r\nimport ShadowMethodBase\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/ShadowMethodBase\");\r\n\r\n/**\r\n * ShadowCascadeMethod is a shadow map method to apply cascade shadow mapping on materials.\r\n * Must be used with a DirectionalLight with a CascadeShadowMapper assigned to its shadowMapper property.\r\n *\r\n * @see away.lights.CascadeShadowMapper\r\n */\r\nclass ShadowCascadeMethod extends ShadowMapMethodBase\r\n{\r\n\tprivate _baseMethod:ShadowMethodBase;\r\n\tprivate _cascadeShadowMapper:CascadeShadowMapper;\r\n\tprivate _depthMapCoordVaryings:Array<ShaderRegisterElement>;\r\n\tprivate _cascadeProjections:Array<ShaderRegisterElement>;\r\n\r\n\t/**\r\n\t * Creates a new ShadowCascadeMethod object.\r\n\t *\r\n\t * @param shadowMethodBase The shadow map sampling method used to sample individual cascades (fe: ShadowHardMethod, ShadowSoftMethod)\r\n\t */\r\n\tconstructor(shadowMethodBase:ShadowMethodBase)\r\n\t{\r\n\t\tsuper(shadowMethodBase.castingLight);\r\n\r\n\t\tthis._baseMethod = shadowMethodBase;\r\n\t\tif (!(this._pCastingLight instanceof DirectionalLight))\r\n\t\t\tthrow new Error(\"ShadowCascadeMethod is only compatible with DirectionalLight\");\r\n\r\n\t\tthis._cascadeShadowMapper = <CascadeShadowMapper> this._pCastingLight.shadowMapper;\r\n\r\n\t\tif (!this._cascadeShadowMapper)\r\n\t\t\tthrow new Error(\"ShadowCascadeMethod requires a light that has a CascadeShadowMapper instance assigned to shadowMapper.\");\r\n\r\n\t\tthis._cascadeShadowMapper.addEventListener(Event.CHANGE, (event:Event) => this.onCascadeChange(event));\r\n\t\tthis._baseMethod.addEventListener(ShadingMethodEvent.SHADER_INVALIDATED, (event:ShadingMethodEvent) => this.onShaderInvalidated(event));\r\n\t}\r\n\r\n\t/**\r\n\t * The shadow map sampling method used to sample individual cascades. These are typically those used in conjunction\r\n\t * with a DirectionalShadowMapper.\r\n\t *\r\n\t * @see ShadowHardMethod\r\n\t * @see ShadowSoftMethod\r\n\t */\r\n\tpublic get baseMethod():ShadowMethodBase\r\n\t{\r\n\t\treturn this._baseMethod;\r\n\t}\r\n\r\n\tpublic set baseMethod(value:ShadowMethodBase)\r\n\t{\r\n\t\tif (this._baseMethod == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._baseMethod.removeEventListener(ShadingMethodEvent.SHADER_INVALIDATED, (event:ShadingMethodEvent) => this.onShaderInvalidated(event));\r\n\r\n\t\tthis._baseMethod = value;\r\n\r\n\t\tthis._baseMethod.addEventListener(ShadingMethodEvent.SHADER_INVALIDATED, (event:ShadingMethodEvent) => this.onShaderInvalidated(event));\r\n\r\n\t\tthis.iInvalidateShaderProgram();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic iInitVO(shaderObject:ShaderLightingObject, methodVO:MethodVO)\r\n\t{\r\n\t\tvar tempVO:MethodVO = new MethodVO(this._baseMethod);\r\n\t\tthis._baseMethod.iInitVO(shaderObject, tempVO);\r\n\r\n\t\tmethodVO.needsGlobalVertexPos = true;\r\n\t\tmethodVO.needsProjection = true;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic iInitConstants(shaderObject:ShaderObjectBase, methodVO:MethodVO)\r\n\t{\r\n\t\tvar fragmentData:Array<number> = shaderObject.fragmentConstantData;\r\n\t\tvar vertexData:Array<number> = shaderObject.vertexConstantData;\r\n\t\tvar index:number = methodVO.fragmentConstantsIndex;\r\n\t\tfragmentData[index] = 1.0;\r\n\t\tfragmentData[index + 1] = 1/255.0;\r\n\t\tfragmentData[index + 2] = 1/65025.0;\r\n\t\tfragmentData[index + 3] = 1/16581375.0;\r\n\r\n\t\tfragmentData[index + 6] = .5;\r\n\t\tfragmentData[index + 7] = -.5;\r\n\r\n\t\tindex = methodVO.vertexConstantsIndex;\r\n\t\tvertexData[index] = .5;\r\n\t\tvertexData[index + 1] = -.5;\r\n\t\tvertexData[index + 2] = 0;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic iCleanCompilationData()\r\n\t{\r\n\t\tsuper.iCleanCompilationData();\r\n\t\tthis._cascadeProjections = null;\r\n\t\tthis._depthMapCoordVaryings = null;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic iGetVertexCode(shaderObject:ShaderObjectBase, methodVO:MethodVO, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\r\n\t{\r\n\t\tvar code:string = \"\";\r\n\t\tvar dataReg:ShaderRegisterElement = registerCache.getFreeVertexConstant();\r\n\r\n\t\tthis.initProjectionsRegs(registerCache);\r\n\t\tmethodVO.vertexConstantsIndex = dataReg.index*4;\r\n\r\n\t\tvar temp:ShaderRegisterElement = registerCache.getFreeVertexVectorTemp();\r\n\r\n\t\tfor (var i:number = 0; i < this._cascadeShadowMapper.numCascades; ++i) {\r\n\t\t\tcode += \"m44 \" + temp + \", \" + sharedRegisters.globalPositionVertex + \", \" + this._cascadeProjections[i] + \"\\n\" +\r\n\t\t\t\t\"add \" + this._depthMapCoordVaryings[i] + \", \" + temp + \", \" + dataReg + \".zzwz\\n\";\r\n\t\t}\r\n\r\n\t\treturn code;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates the registers for the cascades' projection coordinates.\r\n\t */\r\n\tprivate initProjectionsRegs(registerCache:ShaderRegisterCache)\r\n\t{\r\n\t\tthis._cascadeProjections = new Array<ShaderRegisterElement>(this._cascadeShadowMapper.numCascades);\r\n\t\tthis._depthMapCoordVaryings = new Array<ShaderRegisterElement>(this._cascadeShadowMapper.numCascades);\r\n\r\n\t\tfor (var i:number = 0; i < this._cascadeShadowMapper.numCascades; ++i) {\r\n\t\t\tthis._depthMapCoordVaryings[i] = registerCache.getFreeVarying();\r\n\t\t\tthis._cascadeProjections[i] = registerCache.getFreeVertexConstant();\r\n\t\t\tregisterCache.getFreeVertexConstant();\r\n\t\t\tregisterCache.getFreeVertexConstant();\r\n\t\t\tregisterCache.getFreeVertexConstant();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic iGetFragmentCode(shaderObject:ShaderObjectBase, methodVO:MethodVO, targetReg:ShaderRegisterElement, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\r\n\t{\r\n\t\tvar numCascades:number = this._cascadeShadowMapper.numCascades;\r\n\t\tvar depthMapRegister:ShaderRegisterElement = registerCache.getFreeTextureReg();\r\n\t\tvar decReg:ShaderRegisterElement = registerCache.getFreeFragmentConstant();\r\n\t\tvar dataReg:ShaderRegisterElement = registerCache.getFreeFragmentConstant();\r\n\t\tvar planeDistanceReg:ShaderRegisterElement = registerCache.getFreeFragmentConstant();\r\n\t\tvar planeDistances:Array<string> = Array<string>( planeDistanceReg + \".x\", planeDistanceReg + \".y\", planeDistanceReg + \".z\", planeDistanceReg + \".w\" );\r\n\t\tvar code:string;\r\n\r\n\t\tmethodVO.fragmentConstantsIndex = decReg.index*4;\r\n\t\tmethodVO.texturesIndex = depthMapRegister.index;\r\n\r\n\t\tvar inQuad:ShaderRegisterElement = registerCache.getFreeFragmentVectorTemp();\r\n\t\tregisterCache.addFragmentTempUsages(inQuad, 1);\r\n\t\tvar uvCoord:ShaderRegisterElement = registerCache.getFreeFragmentVectorTemp();\r\n\t\tregisterCache.addFragmentTempUsages(uvCoord, 1);\r\n\r\n\t\t// assume lowest partition is selected, will be overwritten later otherwise\r\n\t\tcode = \"mov \" + uvCoord + \", \" + this._depthMapCoordVaryings[numCascades - 1] + \"\\n\";\r\n\r\n\t\tfor (var i:number = numCascades - 2; i >= 0; --i) {\r\n\t\t\tvar uvProjection:ShaderRegisterElement = this._depthMapCoordVaryings[i];\r\n\r\n\t\t\t// calculate if in texturemap (result == 0 or 1, only 1 for a single partition)\r\n\t\t\tcode += \"slt \" + inQuad + \".z, \" + sharedRegisters.projectionFragment + \".z, \" + planeDistances[i] + \"\\n\"; // z = x > minX, w = y > minY\r\n\r\n\t\t\tvar temp:ShaderRegisterElement = registerCache.getFreeFragmentVectorTemp();\r\n\r\n\t\t\t// linearly interpolate between old and new uv coords using predicate value == conditional toggle to new value if predicate == 1 (true)\r\n\t\t\tcode += \"sub \" + temp + \", \" + uvProjection + \", \" + uvCoord + \"\\n\" +\r\n\t\t\t\t\"mul \" + temp + \", \" + temp + \", \" + inQuad + \".z\\n\" +\r\n\t\t\t\t\"add \" + uvCoord + \", \" + uvCoord + \", \" + temp + \"\\n\";\r\n\t\t}\r\n\r\n\t\tregisterCache.removeFragmentTempUsage(inQuad);\r\n\r\n\t\tcode += \"div \" + uvCoord + \", \" + uvCoord + \", \" + uvCoord + \".w\\n\" +\r\n\t\t\t\"mul \" + uvCoord + \".xy, \" + uvCoord + \".xy, \" + dataReg + \".zw\\n\" +\r\n\t\t\t\"add \" + uvCoord + \".xy, \" + uvCoord + \".xy, \" + dataReg + \".zz\\n\";\r\n\r\n\t\tcode += this._baseMethod._iGetCascadeFragmentCode(shaderObject, methodVO, decReg, depthMapRegister, uvCoord, targetReg, registerCache, sharedRegisters) +\r\n\t\t\t\"add \" + targetReg + \".w, \" + targetReg + \".w, \" + dataReg + \".y\\n\";\r\n\r\n\t\tregisterCache.removeFragmentTempUsage(uvCoord);\r\n\r\n\t\treturn code;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic iActivate(shaderObject:ShaderObjectBase, methodVO:MethodVO, stage:Stage)\r\n\t{\r\n\t\tstage.activateTexture(methodVO.texturesIndex, <Texture2DBase> this._pCastingLight.shadowMapper.depthMap, shaderObject.repeatTextures, shaderObject.useSmoothTextures, shaderObject.useMipmapping);\r\n\r\n\t\tvar vertexData:Array<number> = shaderObject.vertexConstantData;\r\n\t\tvar vertexIndex:number = methodVO.vertexConstantsIndex;\r\n\r\n\t\tshaderObject.vertexConstantData[methodVO.vertexConstantsIndex + 3] = -1/(this._cascadeShadowMapper.depth*this._pEpsilon);\r\n\r\n\t\tvar numCascades:number = this._cascadeShadowMapper.numCascades;\r\n\t\tvertexIndex += 4;\r\n\t\tfor (var k:number = 0; k < numCascades; ++k) {\r\n\t\t\tthis._cascadeShadowMapper.getDepthProjections(k).copyRawDataTo(vertexData, vertexIndex, true);\r\n\t\t\tvertexIndex += 16;\r\n\t\t}\r\n\r\n\t\tvar fragmentData:Array<number> = shaderObject.fragmentConstantData;\r\n\t\tvar fragmentIndex:number = methodVO.fragmentConstantsIndex;\r\n\t\tfragmentData[fragmentIndex + 5] = 1 - this._pAlpha;\r\n\r\n\t\tvar nearPlaneDistances:Array<number> = this._cascadeShadowMapper._iNearPlaneDistances;\r\n\r\n\t\tfragmentIndex += 8;\r\n\t\tfor (var i:number = 0; i < numCascades; ++i)\r\n\t\t\tfragmentData[fragmentIndex + i] = nearPlaneDistances[i];\r\n\r\n\t\tthis._baseMethod.iActivateForCascade(shaderObject, methodVO, stage);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic iSetRenderState(shaderObject:ShaderObjectBase, methodVO:MethodVO, renderable:RenderableBase, stage:Stage, camera:Camera)\r\n\t{\r\n\t}\r\n\r\n\t/**\r\n\t * Called when the shadow mappers cascade configuration changes.\r\n\t */\r\n\tprivate onCascadeChange(event:Event)\r\n\t{\r\n\t\tthis.iInvalidateShaderProgram();\r\n\t}\r\n\r\n\t/**\r\n\t * Called when the base method's shader code is invalidated.\r\n\t */\r\n\tprivate onShaderInvalidated(event:ShadingMethodEvent)\r\n\t{\r\n\t\tthis.iInvalidateShaderProgram();\r\n\t}\r\n}\r\n\r\nexport = ShadowCascadeMethod;","import BitmapData\t\t\t\t\t\t= require(\"awayjs-core/lib/base/BitmapData\");\r\nimport BitmapTexture\t\t\t\t\t= require(\"awayjs-core/lib/textures/BitmapTexture\");\r\n\r\nimport DirectionalLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\r\n\r\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\r\n\r\nimport ShaderLightingObject\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderLightingObject\");\r\nimport ShaderObjectBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderObjectBase\");\r\nimport ShaderRegisterCache\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterCache\");\r\nimport ShaderRegisterData\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterData\");\r\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterElement\");\r\n\r\nimport MethodVO\t\t\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/data/MethodVO\");\r\nimport ShadowMethodBase\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/ShadowMethodBase\");\r\n\r\n/**\r\n * ShadowDitheredMethod provides a soft shadowing technique by randomly distributing sample points differently for each fragment.\r\n */\r\nclass ShadowDitheredMethod extends ShadowMethodBase\r\n{\r\n\tprivate static _grainTexture:BitmapTexture;\r\n\tprivate static _grainUsages:number /*int*/;\r\n\tprivate static _grainBitmapData:BitmapData;\r\n\tprivate _depthMapSize:number /*int*/;\r\n\tprivate _range:number;\r\n\tprivate _numSamples:number /*int*/;\r\n\r\n\t/**\r\n\t * Creates a new ShadowDitheredMethod object.\r\n\t * @param castingLight The light casting the shadows\r\n\t * @param numSamples The amount of samples to take for dithering. Minimum 1, maximum 24.\r\n\t */\r\n\tconstructor(castingLight:DirectionalLight, numSamples:number /*int*/ = 4, range:number = 1)\r\n\t{\r\n\t\tsuper(castingLight);\r\n\r\n\t\tthis._depthMapSize = this._pCastingLight.shadowMapper.depthMapSize;\r\n\r\n\t\tthis.numSamples = numSamples;\r\n\t\tthis.range = range;\r\n\r\n\t\t++ShadowDitheredMethod._grainUsages;\r\n\r\n\t\tif (!ShadowDitheredMethod._grainTexture)\r\n\t\t\tthis.initGrainTexture();\r\n\t}\r\n\r\n\t/**\r\n\t * The amount of samples to take for dithering. Minimum 1, maximum 24. The actual maximum may depend on the\r\n\t * complexity of the shader.\r\n\t */\r\n\tpublic get numSamples():number /*int*/\r\n\t{\r\n\t\treturn this._numSamples;\r\n\t}\r\n\r\n\tpublic set numSamples(value:number /*int*/)\r\n\t{\r\n\t\tthis._numSamples = value;\r\n\t\tif (this._numSamples < 1)\r\n\t\t\tthis._numSamples = 1; else if (this._numSamples > 24)\r\n\t\t\tthis._numSamples = 24;\r\n\t\tthis.iInvalidateShaderProgram();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic iInitVO(shaderObject:ShaderLightingObject, methodVO:MethodVO)\r\n\t{\r\n\t\tsuper.iInitVO(shaderObject, methodVO);\r\n\r\n\t\tmethodVO.needsProjection = true;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic iInitConstants(shaderObject:ShaderObjectBase, methodVO:MethodVO)\r\n\t{\r\n\t\tsuper.iInitConstants(shaderObject, methodVO);\r\n\r\n\t\tvar fragmentData:Array<number> = shaderObject.fragmentConstantData;\r\n\t\tvar index:number /*int*/ = methodVO.fragmentConstantsIndex;\r\n\t\tfragmentData[index + 8] = 1/this._numSamples;\r\n\t}\r\n\r\n\t/**\r\n\t * The range in the shadow map in which to distribute the samples.\r\n\t */\r\n\tpublic get range():number\r\n\t{\r\n\t\treturn this._range*2;\r\n\t}\r\n\r\n\tpublic set range(value:number)\r\n\t{\r\n\t\tthis._range = value/2;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a texture containing the dithering noise texture.\r\n\t */\r\n\tprivate initGrainTexture()\r\n\t{\r\n\t\tShadowDitheredMethod._grainBitmapData = new BitmapData(64, 64, false);\r\n\t\tvar vec:Array<number> /*uint*/ = new Array<number>();\r\n\t\tvar len:number /*uint*/ = 4096;\r\n\t\tvar step:number = 1/(this._depthMapSize*this._range);\r\n\t\tvar r:number, g:number;\r\n\r\n\t\tfor (var i:number /*uint*/ = 0; i < len; ++i) {\r\n\t\t\tr = 2*(Math.random() - .5);\r\n\t\t\tg = 2*(Math.random() - .5);\r\n\t\t\tif (r < 0)\r\n\t\t\t\tr -= step; else\r\n\t\t\t\tr += step;\r\n\t\t\tif (g < 0)\r\n\t\t\t\tg -= step; else\r\n\t\t\t\tg += step;\r\n\t\t\tif (r > 1)\r\n\t\t\t\tr = 1; else if (r < -1)\r\n\t\t\t\tr = -1;\r\n\t\t\tif (g > 1)\r\n\t\t\t\tg = 1; else if (g < -1)\r\n\t\t\t\tg = -1;\r\n\t\t\tvec[i] = (Math.floor((r*.5 + .5)*0xff) << 16) | (Math.floor((g*.5 + .5)*0xff) << 8);\r\n\t\t}\r\n\r\n\t\tShadowDitheredMethod._grainBitmapData.setArray(ShadowDitheredMethod._grainBitmapData.rect, vec);\r\n\t\tShadowDitheredMethod._grainTexture = new BitmapTexture(ShadowDitheredMethod._grainBitmapData);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tif (--ShadowDitheredMethod._grainUsages == 0) {\r\n\t\t\tShadowDitheredMethod._grainTexture.dispose();\r\n\t\t\tShadowDitheredMethod._grainBitmapData.dispose();\r\n\t\t\tShadowDitheredMethod._grainTexture = null;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic iActivate(shaderObject:ShaderObjectBase, methodVO:MethodVO, stage:Stage)\r\n\t{\r\n\t\tsuper.iActivate(shaderObject, methodVO, stage);\r\n\r\n\t\tvar data:Array<number> = shaderObject.fragmentConstantData;\r\n\t\tvar index:number /*uint*/ = methodVO.fragmentConstantsIndex;\r\n\t\tdata[index + 9] = (stage.width - 1)/63;\r\n\t\tdata[index + 10] = (stage.height - 1)/63;\r\n\t\tdata[index + 11] = 2*this._range/this._depthMapSize;\r\n\r\n\t\tstage.activateTexture(methodVO.texturesIndex + 1, ShadowDitheredMethod._grainTexture, shaderObject.repeatTextures, shaderObject.useSmoothTextures, shaderObject.useMipmapping);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pGetPlanarFragmentCode(methodVO:MethodVO, targetReg:ShaderRegisterElement, regCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\r\n\t{\r\n\t\tvar depthMapRegister:ShaderRegisterElement = regCache.getFreeTextureReg();\r\n\t\tvar decReg:ShaderRegisterElement = regCache.getFreeFragmentConstant();\r\n\t\tvar dataReg:ShaderRegisterElement = regCache.getFreeFragmentConstant();\r\n\t\tvar customDataReg:ShaderRegisterElement = regCache.getFreeFragmentConstant();\r\n\r\n\t\tmethodVO.fragmentConstantsIndex = decReg.index*4;\r\n\t\tmethodVO.texturesIndex = depthMapRegister.index;\r\n\r\n\t\treturn this.getSampleCode(customDataReg, depthMapRegister, decReg, targetReg, regCache, sharedRegisters);\r\n\t}\r\n\r\n\t/**\r\n\t * Get the actual shader code for shadow mapping\r\n\t * @param regCache The register cache managing the registers.\r\n\t * @param depthMapRegister The texture register containing the depth map.\r\n\t * @param decReg The register containing the depth map decoding data.\r\n\t * @param targetReg The target register to add the shadow coverage.\r\n\t */\r\n\tprivate getSampleCode(customDataReg:ShaderRegisterElement, depthMapRegister:ShaderRegisterElement, decReg:ShaderRegisterElement, targetReg:ShaderRegisterElement, regCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\r\n\t{\r\n\t\tvar code:string = \"\";\r\n\t\tvar grainRegister:ShaderRegisterElement = regCache.getFreeTextureReg();\r\n\t\tvar uvReg:ShaderRegisterElement = regCache.getFreeFragmentVectorTemp();\r\n\t\tvar numSamples:number /*int*/ = this._numSamples;\r\n\t\tregCache.addFragmentTempUsages(uvReg, 1);\r\n\r\n\t\tvar temp:ShaderRegisterElement = regCache.getFreeFragmentVectorTemp();\r\n\r\n\t\tvar projectionReg:ShaderRegisterElement = sharedRegisters.projectionFragment;\r\n\r\n\t\tcode += \"div \" + uvReg + \", \" + projectionReg + \", \" + projectionReg + \".w\\n\" + \"mul \" + uvReg + \".xy, \" + uvReg + \".xy, \" + customDataReg + \".yz\\n\";\r\n\r\n\t\twhile (numSamples > 0) {\r\n\t\t\tif (numSamples == this._numSamples)\r\n\t\t\t\tcode += \"tex \" + uvReg + \", \" + uvReg + \", \" + grainRegister + \" <2d,nearest,repeat,mipnone>\\n\";\r\n\t\t\telse\r\n\t\t\t\tcode += \"tex \" + uvReg + \", \" + uvReg + \".zwxy, \" + grainRegister + \" <2d,nearest,repeat,mipnone>\\n\";\r\n\r\n\t\t\t// keep grain in uvReg.zw\r\n\t\t\tcode += \"sub \" + uvReg + \".zw, \" + uvReg + \".xy, fc0.xx\\n\" + // uv-.5\r\n\t\t\t\t\"mul \" + uvReg + \".zw, \" + uvReg + \".zw, \" + customDataReg + \".w\\n\"; // (tex unpack scale and tex scale in one)\r\n\r\n\t\t\tif (numSamples == this._numSamples) {\r\n\t\t\t\t// first sample\r\n\t\t\t\tcode += \"add \" + uvReg + \".xy, \" + uvReg + \".zw, \" + this._pDepthMapCoordReg + \".xy\\n\" +\r\n\t\t\t\t\t\"tex \" + temp + \", \" + uvReg + \", \" + depthMapRegister + \" <2d,nearest,clamp,mipnone>\\n\" +\r\n\t\t\t\t\t\"dp4 \" + temp + \".z, \" + temp + \", \" + decReg + \"\\n\" +\r\n\t\t\t\t\t\"slt \" + targetReg + \".w, \" + this._pDepthMapCoordReg + \".z, \" + temp + \".z\\n\"; // 0 if in shadow\r\n\t\t\t} else {\r\n\t\t\t\tcode += this.addSample(uvReg, depthMapRegister, decReg, targetReg, regCache);\r\n\t\t\t}\r\n\r\n\t\t\tif (numSamples > 4)\r\n\t\t\t\tcode += \"add \" + uvReg + \".xy, \" + uvReg + \".xy, \" + uvReg + \".zw\\n\" + this.addSample(uvReg, depthMapRegister, decReg, targetReg, regCache);\r\n\r\n\t\t\tif (numSamples > 1)\r\n\t\t\t\tcode += \"sub \" + uvReg + \".xy, \" + this._pDepthMapCoordReg + \".xy, \" + uvReg + \".zw\\n\" + this.addSample(uvReg, depthMapRegister, decReg, targetReg, regCache);\r\n\r\n\t\t\tif (numSamples > 5)\r\n\t\t\t\tcode += \"sub \" + uvReg + \".xy, \" + uvReg + \".xy, \" + uvReg + \".zw\\n\" + this.addSample(uvReg, depthMapRegister, decReg, targetReg, regCache);\r\n\r\n\t\t\tif (numSamples > 2) {\r\n\t\t\t\tcode += \"neg \" + uvReg + \".w, \" + uvReg + \".w\\n\"; // will be rotated 90 degrees when being accessed as wz\r\n\t\t\t\tcode += \"add \" + uvReg + \".xy, \" + uvReg + \".wz, \" + this._pDepthMapCoordReg + \".xy\\n\" + this.addSample(uvReg, depthMapRegister, decReg, targetReg, regCache);\r\n\t\t\t}\r\n\r\n\t\t\tif (numSamples > 6)\r\n\t\t\t\tcode += \"add \" + uvReg + \".xy, \" + uvReg + \".xy, \" + uvReg + \".wz\\n\" + this.addSample(uvReg, depthMapRegister, decReg, targetReg, regCache);\r\n\r\n\t\t\tif (numSamples > 3)\r\n\t\t\t\tcode += \"sub \" + uvReg + \".xy, \" + this._pDepthMapCoordReg + \".xy, \" + uvReg + \".wz\\n\" + this.addSample(uvReg, depthMapRegister, decReg, targetReg, regCache);\r\n\r\n\t\t\tif (numSamples > 7)\r\n\t\t\t\tcode += \"sub \" + uvReg + \".xy, \" + uvReg + \".xy, \" + uvReg + \".wz\\n\" + this.addSample(uvReg, depthMapRegister, decReg, targetReg, regCache);\r\n\r\n\t\t\tnumSamples -= 8;\r\n\t\t}\r\n\r\n\t\tregCache.removeFragmentTempUsage(uvReg);\r\n\t\tcode += \"mul \" + targetReg + \".w, \" + targetReg + \".w, \" + customDataReg + \".x\\n\"; // average\r\n\t\treturn code;\r\n\t}\r\n\r\n\t/**\r\n\t * Adds the code for another tap to the shader code.\r\n\t * @param uvReg The uv register for the tap.\r\n\t * @param depthMapRegister The texture register containing the depth map.\r\n\t * @param decReg The register containing the depth map decoding data.\r\n\t * @param targetReg The target register to add the tap comparison result.\r\n\t * @param regCache The register cache managing the registers.\r\n\t * @return\r\n\t */\r\n\tprivate addSample(uvReg:ShaderRegisterElement, depthMapRegister:ShaderRegisterElement, decReg:ShaderRegisterElement, targetReg:ShaderRegisterElement, regCache:ShaderRegisterCache):string\r\n\t{\r\n\t\tvar temp:ShaderRegisterElement = regCache.getFreeFragmentVectorTemp();\r\n\r\n\t\treturn \"tex \" + temp + \", \" + uvReg + \", \" + depthMapRegister + \" <2d,nearest,clamp,mipnone>\\n\" +\r\n\t\t\t\"dp4 \" + temp + \".z, \" + temp + \", \" + decReg + \"\\n\" +\r\n\t\t\t\"slt \" + temp + \".z, \" + this._pDepthMapCoordReg + \".z, \" + temp + \".z\\n\" + // 0 if in shadow\r\n\t\t\t\"add \" + targetReg + \".w, \" + targetReg + \".w, \" + temp + \".z\\n\";\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic iActivateForCascade(shaderObject:ShaderObjectBase, methodVO:MethodVO, stage:Stage)\r\n\t{\r\n\t\tvar data:Array<number> = shaderObject.fragmentConstantData;\r\n\t\tvar index:number /*uint*/ = methodVO.secondaryFragmentConstantsIndex;\r\n\t\tdata[index] = 1/this._numSamples;\r\n\t\tdata[index + 1] = (stage.width - 1)/63;\r\n\t\tdata[index + 2] = (stage.height - 1)/63;\r\n\t\tdata[index + 3] = 2*this._range/this._depthMapSize;\r\n\r\n\t\tstage.activateTexture(methodVO.texturesIndex + 1, ShadowDitheredMethod._grainTexture, shaderObject.repeatTextures, shaderObject.useSmoothTextures, shaderObject.useMipmapping);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _iGetCascadeFragmentCode(shaderObject:ShaderObjectBase, methodVO:MethodVO, decodeRegister:ShaderRegisterElement, depthTexture:ShaderRegisterElement, depthProjection:ShaderRegisterElement, targetRegister:ShaderRegisterElement, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\r\n\t{\r\n\t\tthis._pDepthMapCoordReg = depthProjection;\r\n\r\n\t\tvar dataReg:ShaderRegisterElement = registerCache.getFreeFragmentConstant();\r\n\t\tmethodVO.secondaryFragmentConstantsIndex = dataReg.index*4;\r\n\r\n\t\treturn this.getSampleCode(dataReg, depthTexture, decodeRegister, targetRegister, registerCache, sharedRegisters);\r\n\t}\r\n}\r\n\r\nexport = ShadowDitheredMethod;","import DirectionalLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\r\n\r\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\r\n\r\nimport ShaderLightingObject\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderLightingObject\");\r\nimport ShaderObjectBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderObjectBase\");\r\nimport ShaderRegisterCache\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterCache\");\r\nimport ShaderRegisterData\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterData\");\r\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterElement\");\r\n\r\nimport MethodVO\t\t\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/data/MethodVO\");\r\nimport ShadowMethodBase\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/ShadowMethodBase\");\r\n\r\n/**\r\n * ShadowFilteredMethod provides a softened shadowing technique by bilinearly interpolating shadow comparison\r\n * results of neighbouring pixels.\r\n */\r\nclass ShadowFilteredMethod extends ShadowMethodBase\r\n{\r\n\t/**\r\n\t * Creates a new DiffuseBasicMethod object.\r\n\t *\r\n\t * @param castingLight The light casting the shadow\r\n\t */\r\n\tconstructor(castingLight:DirectionalLight)\r\n\t{\r\n\t\tsuper(castingLight);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic iInitConstants(shaderObject:ShaderLightingObject, methodVO:MethodVO)\r\n\t{\r\n\t\tsuper.iInitConstants(shaderObject, methodVO);\r\n\r\n\t\tvar fragmentData:Array<number> = shaderObject.fragmentConstantData;\r\n\t\tvar index:number /*int*/ = methodVO.fragmentConstantsIndex;\r\n\t\tfragmentData[index + 8] = .5;\r\n\t\tvar size:number /*int*/ = this.castingLight.shadowMapper.depthMapSize;\r\n\t\tfragmentData[index + 9] = size;\r\n\t\tfragmentData[index + 10] = 1/size;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pGetPlanarFragmentCode(methodVO:MethodVO, targetReg:ShaderRegisterElement, regCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\r\n\t{\r\n\t\tvar depthMapRegister:ShaderRegisterElement = regCache.getFreeTextureReg();\r\n\t\tvar decReg:ShaderRegisterElement = regCache.getFreeFragmentConstant();\r\n\t\tvar dataReg:ShaderRegisterElement = regCache.getFreeFragmentConstant();\r\n\t\t// TODO: not used\r\n\t\tdataReg = dataReg;\r\n\t\tvar customDataReg:ShaderRegisterElement = regCache.getFreeFragmentConstant();\r\n\t\tvar depthCol:ShaderRegisterElement = regCache.getFreeFragmentVectorTemp();\r\n\t\tvar uvReg:ShaderRegisterElement;\r\n\t\tvar code:string = \"\";\r\n\t\tmethodVO.fragmentConstantsIndex = decReg.index*4;\r\n\r\n\t\tregCache.addFragmentTempUsages(depthCol, 1);\r\n\r\n\t\tuvReg = regCache.getFreeFragmentVectorTemp();\r\n\t\tregCache.addFragmentTempUsages(uvReg, 1);\r\n\r\n\t\tcode += \"mov \" + uvReg + \", \" + this._pDepthMapCoordReg + \"\\n\" +\r\n\r\n\t\t\t\"tex \" + depthCol + \", \" + this._pDepthMapCoordReg + \", \" + depthMapRegister + \" <2d, nearest, clamp>\\n\" + \"dp4 \" + depthCol + \".z, \" + depthCol + \", \" + decReg + \"\\n\" + \"slt \" + uvReg + \".z, \" + this._pDepthMapCoordReg + \".z, \" + depthCol + \".z\\n\" +   // 0 if in shadow\r\n\r\n\t\t\t\"add \" + uvReg + \".x, \" + this._pDepthMapCoordReg + \".x, \" + customDataReg + \".z\\n\" + \t// (1, 0)\r\n\t\t\t\"tex \" + depthCol + \", \" + uvReg + \", \" + depthMapRegister + \" <2d, nearest, clamp>\\n\" + \"dp4 \" + depthCol + \".z, \" + depthCol + \", \" + decReg + \"\\n\" + \"slt \" + uvReg + \".w, \" + this._pDepthMapCoordReg + \".z, \" + depthCol + \".z\\n\" +   // 0 if in shadow\r\n\r\n\t\t\t\"mul \" + depthCol + \".x, \" + this._pDepthMapCoordReg + \".x, \" + customDataReg + \".y\\n\" + \"frc \" + depthCol + \".x, \" + depthCol + \".x\\n\" + \"sub \" + uvReg + \".w, \" + uvReg + \".w, \" + uvReg + \".z\\n\" + \"mul \" + uvReg + \".w, \" + uvReg + \".w, \" + depthCol + \".x\\n\" + \"add \" + targetReg + \".w, \" + uvReg + \".z, \" + uvReg + \".w\\n\" +\r\n\r\n\t\t\t\"mov \" + uvReg + \".x, \" + this._pDepthMapCoordReg + \".x\\n\" + \"add \" + uvReg + \".y, \" + this._pDepthMapCoordReg + \".y, \" + customDataReg + \".z\\n\" +\t// (0, 1)\r\n\t\t\t\"tex \" + depthCol + \", \" + uvReg + \", \" + depthMapRegister + \" <2d, nearest, clamp>\\n\" + \"dp4 \" + depthCol + \".z, \" + depthCol + \", \" + decReg + \"\\n\" + \"slt \" + uvReg + \".z, \" + this._pDepthMapCoordReg + \".z, \" + depthCol + \".z\\n\" +   // 0 if in shadow\r\n\r\n\t\t\t\"add \" + uvReg + \".x, \" + this._pDepthMapCoordReg + \".x, \" + customDataReg + \".z\\n\" +\t// (1, 1)\r\n\t\t\t\"tex \" + depthCol + \", \" + uvReg + \", \" + depthMapRegister + \" <2d, nearest, clamp>\\n\" + \"dp4 \" + depthCol + \".z, \" + depthCol + \", \" + decReg + \"\\n\" + \"slt \" + uvReg + \".w, \" + this._pDepthMapCoordReg + \".z, \" + depthCol + \".z\\n\" +   // 0 if in shadow\r\n\r\n\t\t\t// recalculate fraction, since we ran out of registers :(\r\n\t\t\t\"mul \" + depthCol + \".x, \" + this._pDepthMapCoordReg + \".x, \" + customDataReg + \".y\\n\" + \"frc \" + depthCol + \".x, \" + depthCol + \".x\\n\" + \"sub \" + uvReg + \".w, \" + uvReg + \".w, \" + uvReg + \".z\\n\" + \"mul \" + uvReg + \".w, \" + uvReg + \".w, \" + depthCol + \".x\\n\" + \"add \" + uvReg + \".w, \" + uvReg + \".z, \" + uvReg + \".w\\n\" +\r\n\r\n\t\t\t\"mul \" + depthCol + \".x, \" + this._pDepthMapCoordReg + \".y, \" + customDataReg + \".y\\n\" + \"frc \" + depthCol + \".x, \" + depthCol + \".x\\n\" + \"sub \" + uvReg + \".w, \" + uvReg + \".w, \" + targetReg + \".w\\n\" + \"mul \" + uvReg + \".w, \" + uvReg + \".w, \" + depthCol + \".x\\n\" + \"add \" + targetReg + \".w, \" + targetReg + \".w, \" + uvReg + \".w\\n\";\r\n\r\n\t\tregCache.removeFragmentTempUsage(depthCol);\r\n\t\tregCache.removeFragmentTempUsage(uvReg);\r\n\r\n\t\tmethodVO.texturesIndex = depthMapRegister.index;\r\n\r\n\t\treturn code;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic iActivateForCascade(shaderObject:ShaderObjectBase, methodVO:MethodVO, stage:Stage)\r\n\t{\r\n\t\tvar size:number /*int*/ = this.castingLight.shadowMapper.depthMapSize;\r\n\t\tvar index:number /*int*/ = methodVO.secondaryFragmentConstantsIndex;\r\n\t\tvar data:Array<number> = shaderObject.fragmentConstantData;\r\n\t\tdata[index] = size;\r\n\t\tdata[index + 1] = 1/size;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _iGetCascadeFragmentCode(shaderObject:ShaderObjectBase, methodVO:MethodVO, decodeRegister:ShaderRegisterElement, depthTexture:ShaderRegisterElement, depthProjection:ShaderRegisterElement, targetRegister:ShaderRegisterElement, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\r\n\t{\r\n\t\tvar code:string;\r\n\t\tvar dataReg:ShaderRegisterElement = registerCache.getFreeFragmentConstant();\r\n\t\tmethodVO.secondaryFragmentConstantsIndex = dataReg.index*4;\r\n\t\tvar temp:ShaderRegisterElement = registerCache.getFreeFragmentVectorTemp();\r\n\t\tregisterCache.addFragmentTempUsages(temp, 1);\r\n\t\tvar predicate:ShaderRegisterElement = registerCache.getFreeFragmentVectorTemp();\r\n\t\tregisterCache.addFragmentTempUsages(predicate, 1);\r\n\r\n\t\tcode = \"tex \" + temp + \", \" + depthProjection + \", \" + depthTexture + \" <2d, nearest, clamp>\\n\" + \"dp4 \" + temp + \".z, \" + temp + \", \" + decodeRegister + \"\\n\" + \"slt \" + predicate + \".x, \" + depthProjection + \".z, \" + temp + \".z\\n\" +\r\n\r\n\t\t\t\"add \" + depthProjection + \".x, \" + depthProjection + \".x, \" + dataReg + \".y\\n\" + \"tex \" + temp + \", \" + depthProjection + \", \" + depthTexture + \" <2d, nearest, clamp>\\n\" + \"dp4 \" + temp + \".z, \" + temp + \", \" + decodeRegister + \"\\n\" + \"slt \" + predicate + \".z, \" + depthProjection + \".z, \" + temp + \".z\\n\" +\r\n\r\n\t\t\t\"add \" + depthProjection + \".y, \" + depthProjection + \".y, \" + dataReg + \".y\\n\" + \"tex \" + temp + \", \" + depthProjection + \", \" + depthTexture + \" <2d, nearest, clamp>\\n\" + \"dp4 \" + temp + \".z, \" + temp + \", \" + decodeRegister + \"\\n\" + \"slt \" + predicate + \".w, \" + depthProjection + \".z, \" + temp + \".z\\n\" +\r\n\r\n\t\t\t\"sub \" + depthProjection + \".x, \" + depthProjection + \".x, \" + dataReg + \".y\\n\" + \"tex \" + temp + \", \" + depthProjection + \", \" + depthTexture + \" <2d, nearest, clamp>\\n\" + \"dp4 \" + temp + \".z, \" + temp + \", \" + decodeRegister + \"\\n\" + \"slt \" + predicate + \".y, \" + depthProjection + \".z, \" + temp + \".z\\n\" +\r\n\r\n\t\t\t\"mul \" + temp + \".xy, \" + depthProjection + \".xy, \" + dataReg + \".x\\n\" + \"frc \" + temp + \".xy, \" + temp + \".xy\\n\" +\r\n\r\n\t\t\t// some strange register juggling to prevent agal bugging out\r\n\t\t\t\"sub \" + depthProjection + \", \" + predicate + \".xyzw, \" + predicate + \".zwxy\\n\" + \"mul \" + depthProjection + \", \" + depthProjection + \", \" + temp + \".x\\n\" +\r\n\r\n\t\t\t\"add \" + predicate + \".xy, \" + predicate + \".xy, \" + depthProjection + \".zw\\n\" +\r\n\r\n\t\t\t\"sub \" + predicate + \".y, \" + predicate + \".y, \" + predicate + \".x\\n\" + \"mul \" + predicate + \".y, \" + predicate + \".y, \" + temp + \".y\\n\" + \"add \" + targetRegister + \".w, \" + predicate + \".x, \" + predicate + \".y\\n\";\r\n\r\n\t\tregisterCache.removeFragmentTempUsage(temp);\r\n\t\tregisterCache.removeFragmentTempUsage(predicate);\r\n\t\treturn code;\r\n\t}\r\n}\r\n\r\nexport = ShadowFilteredMethod;","import LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\r\n\r\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\r\n\r\nimport ShaderObjectBase\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderObjectBase\");\r\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterCache\");\r\nimport ShaderRegisterData\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterData\");\r\nimport ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterElement\");\r\n\r\nimport MethodVO\t\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/data/MethodVO\");\r\nimport ShadowMethodBase\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/ShadowMethodBase\");\r\n\r\n/**\r\n * ShadowHardMethod provides the cheapest shadow map method by using a single tap without any filtering.\r\n */\r\nclass ShadowHardMethod extends ShadowMethodBase\r\n{\r\n\t/**\r\n\t * Creates a new ShadowHardMethod object.\r\n\t */\r\n\tconstructor(castingLight:LightBase)\r\n\t{\r\n\t\tsuper(castingLight);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pGetPlanarFragmentCode(methodVO:MethodVO, targetReg:ShaderRegisterElement, regCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\r\n\t{\r\n\t\tvar depthMapRegister:ShaderRegisterElement = regCache.getFreeTextureReg();\r\n\t\tvar decReg:ShaderRegisterElement = regCache.getFreeFragmentConstant();\r\n\r\n\t\t// needs to be reserved anyway. DO NOT REMOVE\r\n\t\tvar dataReg:ShaderRegisterElement = regCache.getFreeFragmentConstant();\r\n\r\n\t\tvar depthCol:ShaderRegisterElement = regCache.getFreeFragmentVectorTemp();\r\n\t\tvar code:string = \"\";\r\n\r\n\t\tmethodVO.fragmentConstantsIndex = decReg.index*4;\r\n\t\tmethodVO.texturesIndex = depthMapRegister.index;\r\n\r\n\t\tcode += \"tex \" + depthCol + \", \" + this._pDepthMapCoordReg + \", \" + depthMapRegister + \" <2d, nearest, clamp>\\n\" +\r\n\t\t\t\"dp4 \" + depthCol + \".z, \" + depthCol + \", \" + decReg + \"\\n\" +\r\n\t\t\t\"slt \" + targetReg + \".w, \" + this._pDepthMapCoordReg + \".z, \" + depthCol + \".z\\n\"; // 0 if in shadow\r\n\r\n\t\treturn code;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pGetPointFragmentCode(methodVO:MethodVO, targetReg:ShaderRegisterElement, regCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\r\n\t{\r\n\t\tvar depthMapRegister:ShaderRegisterElement = regCache.getFreeTextureReg();\r\n\t\tvar decReg:ShaderRegisterElement = regCache.getFreeFragmentConstant();\r\n\t\tvar epsReg:ShaderRegisterElement = regCache.getFreeFragmentConstant();\r\n\t\tvar posReg:ShaderRegisterElement = regCache.getFreeFragmentConstant();\r\n\t\tvar depthSampleCol:ShaderRegisterElement = regCache.getFreeFragmentVectorTemp();\r\n\t\tregCache.addFragmentTempUsages(depthSampleCol, 1);\r\n\t\tvar lightDir:ShaderRegisterElement = regCache.getFreeFragmentVectorTemp();\r\n\t\tvar code:string = \"\";\r\n\r\n\t\tmethodVO.fragmentConstantsIndex = decReg.index*4;\r\n\t\tmethodVO.texturesIndex = depthMapRegister.index;\r\n\r\n\t\tcode += \"sub \" + lightDir + \", \" + sharedRegisters.globalPositionVarying + \", \" + posReg + \"\\n\" +\r\n\t\t\t\"dp3 \" + lightDir + \".w, \" + lightDir + \".xyz, \" + lightDir + \".xyz\\n\" +\r\n\t\t\t\"mul \" + lightDir + \".w, \" + lightDir + \".w, \" + posReg + \".w\\n\" +\r\n\t\t\t\"nrm \" + lightDir + \".xyz, \" + lightDir + \".xyz\\n\" +\r\n\r\n\t\t\t\"tex \" + depthSampleCol + \", \" + lightDir + \", \" + depthMapRegister + \" <cube, nearest, clamp>\\n\" +\r\n\t\t\t\"dp4 \" + depthSampleCol + \".z, \" + depthSampleCol + \", \" + decReg + \"\\n\" +\r\n\t\t\t\"add \" + targetReg + \".w, \" + lightDir + \".w, \" + epsReg + \".x\\n\" +    // offset by epsilon\r\n\r\n\t\t\t\"slt \" + targetReg + \".w, \" + targetReg + \".w, \" + depthSampleCol + \".z\\n\"; // 0 if in shadow\r\n\r\n\t\tregCache.removeFragmentTempUsage(depthSampleCol);\r\n\r\n\t\treturn code;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _iGetCascadeFragmentCode(shaderObject:ShaderObjectBase, methodVO:MethodVO, decodeRegister:ShaderRegisterElement, depthTexture:ShaderRegisterElement, depthProjection:ShaderRegisterElement, targetRegister:ShaderRegisterElement, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\r\n\t{\r\n\t\tvar temp:ShaderRegisterElement = registerCache.getFreeFragmentVectorTemp();\r\n\t\treturn \"tex \" + temp + \", \" + depthProjection + \", \" + depthTexture + \" <2d, nearest, clamp>\\n\" +\r\n\t\t\t\"dp4 \" + temp + \".z, \" + temp + \", \" + decodeRegister + \"\\n\" +\r\n\t\t\t\"slt \" + targetRegister + \".w, \" + depthProjection + \".z, \" + temp + \".z\\n\"; // 0 if in shadow\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic iActivateForCascade(shaderObject:ShaderObjectBase, methodVO:MethodVO, stage:Stage)\r\n\t{\r\n\t}\r\n}\r\n\r\nexport = ShadowHardMethod;","import AssetType\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetType\");\r\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\r\nimport ShadowMapperBase\t\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/ShadowMapperBase\");\r\n\r\nimport ShadingMethodBase\t\t\t= require(\"awayjs-methodmaterials/lib/methods/ShadingMethodBase\");\r\n\r\n/**\r\n * ShadowMapMethodBase provides an abstract base method for shadow map methods.\r\n */\r\nclass ShadowMapMethodBase extends ShadingMethodBase implements IAsset\r\n{\r\n\tpublic _pCastingLight:LightBase;\r\n\tpublic _pShadowMapper:ShadowMapperBase;\r\n\r\n\tpublic _pEpsilon:number = .02;\r\n\tpublic _pAlpha:number = 1;\r\n\r\n\t/**\r\n\t * Creates a new ShadowMapMethodBase object.\r\n\t * @param castingLight The light used to cast shadows.\r\n\t */\r\n\tconstructor(castingLight:LightBase)\r\n\t{\r\n\t\tsuper();\r\n\t\tthis._pCastingLight = castingLight;\r\n\t\tcastingLight.castsShadows = true;\r\n\t\tthis._pShadowMapper = castingLight.shadowMapper;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn AssetType.SHADOW_MAP_METHOD;\r\n\t}\r\n\r\n\t/**\r\n\t * The \"transparency\" of the shadows. This allows making shadows less strong.\r\n\t */\r\n\tpublic get alpha():number\r\n\t{\r\n\t\treturn this._pAlpha;\r\n\t}\r\n\r\n\tpublic set alpha(value:number)\r\n\t{\r\n\t\tthis._pAlpha = value;\r\n\t}\r\n\r\n\t/**\r\n\t * The light casting the shadows.\r\n\t */\r\n\tpublic get castingLight():LightBase\r\n\t{\r\n\t\treturn this._pCastingLight;\r\n\t}\r\n\r\n\t/**\r\n\t * A small value to counter floating point precision errors when comparing values in the shadow map with the\r\n\t * calculated depth value. Increase this if shadow banding occurs, decrease it if the shadow seems to be too detached.\r\n\t */\r\n\tpublic get epsilon():number\r\n\t{\r\n\t\treturn this._pEpsilon;\r\n\t}\r\n\r\n\tpublic set epsilon(value:number)\r\n\t{\r\n\t\tthis._pEpsilon = value;\r\n\t}\r\n}\r\n\r\nexport = ShadowMapMethodBase;","import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\nimport CubeTextureBase\t\t\t\t= require(\"awayjs-core/lib/textures/CubeTextureBase\");\r\nimport Texture2DBase\t\t\t\t= require(\"awayjs-core/lib/textures/Texture2DBase\");\r\n\r\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\r\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\r\nimport DirectionalShadowMapper\t\t= require(\"awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper\");\r\n\r\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\r\n\r\nimport RenderableBase\t\t\t\t= require(\"awayjs-renderergl/lib/pool/RenderableBase\");\r\nimport ShaderLightingObject\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderLightingObject\");\r\nimport ShaderObjectBase\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderObjectBase\");\r\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterCache\");\r\nimport ShaderRegisterData\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterData\");\r\nimport ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterElement\");\r\n\r\nimport MethodVO\t\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/data/MethodVO\");\r\nimport ShadowMapMethodBase\t\t\t= require(\"awayjs-methodmaterials/lib/methods/ShadowMapMethodBase\");\r\n\r\n/**\r\n * ShadowMethodBase provides an abstract method for simple (non-wrapping) shadow map methods.\r\n */\r\nclass ShadowMethodBase extends ShadowMapMethodBase\r\n{\r\n\tpublic _pDepthMapCoordReg:ShaderRegisterElement;\r\n\tpublic _pUsePoint:boolean;\r\n\r\n\t/**\r\n\t * Creates a new ShadowMethodBase object.\r\n\t * @param castingLight The light used to cast shadows.\r\n\t */\r\n\tconstructor(castingLight:LightBase)\r\n\t{\r\n\t\tthis._pUsePoint = (castingLight instanceof PointLight);\r\n\r\n\t\tsuper(castingLight);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic iInitVO(shaderObject:ShaderLightingObject, methodVO:MethodVO)\r\n\t{\r\n\t\tmethodVO.needsView = true;\r\n\t\tmethodVO.needsGlobalVertexPos = true;\r\n\t\tmethodVO.needsGlobalFragmentPos = this._pUsePoint;\r\n\t\tmethodVO.needsNormals = shaderObject.numLights > 0;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic iInitConstants(shaderObject:ShaderObjectBase, methodVO:MethodVO)\r\n\t{\r\n\t\tvar fragmentData:Array<number> = shaderObject.fragmentConstantData;\r\n\t\tvar vertexData:Array<number> = shaderObject.vertexConstantData;\r\n\t\tvar index:number /*int*/ = methodVO.fragmentConstantsIndex;\r\n\t\tfragmentData[index] = 1.0;\r\n\t\tfragmentData[index + 1] = 1/255.0;\r\n\t\tfragmentData[index + 2] = 1/65025.0;\r\n\t\tfragmentData[index + 3] = 1/16581375.0;\r\n\r\n\t\tfragmentData[index + 6] = 0;\r\n\t\tfragmentData[index + 7] = 1;\r\n\r\n\t\tif (this._pUsePoint) {\r\n\t\t\tfragmentData[index + 8] = 0;\r\n\t\t\tfragmentData[index + 9] = 0;\r\n\t\t\tfragmentData[index + 10] = 0;\r\n\t\t\tfragmentData[index + 11] = 1;\r\n\t\t}\r\n\r\n\t\tindex = methodVO.vertexConstantsIndex;\r\n\t\tif (index != -1) {\r\n\t\t\tvertexData[index] = .5;\r\n\t\t\tvertexData[index + 1] = .5;\r\n\t\t\tvertexData[index + 2] = 0.0;\r\n\t\t\tvertexData[index + 3] = 1.0;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Wrappers that override the vertex shader need to set this explicitly\r\n\t */\r\n\tpublic get _iDepthMapCoordReg():ShaderRegisterElement\r\n\t{\r\n\t\treturn this._pDepthMapCoordReg;\r\n\t}\r\n\r\n\tpublic set _iDepthMapCoordReg(value:ShaderRegisterElement)\r\n\t{\r\n\t\tthis._pDepthMapCoordReg = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic iCleanCompilationData()\r\n\t{\r\n\t\tsuper.iCleanCompilationData();\r\n\r\n\t\tthis._pDepthMapCoordReg = null;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic iGetVertexCode(shaderObject:ShaderObjectBase, methodVO:MethodVO, regCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\r\n\t{\r\n\t\treturn this._pUsePoint? this._pGetPointVertexCode(methodVO, regCache, sharedRegisters):this.pGetPlanarVertexCode(methodVO, regCache, sharedRegisters);\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the vertex code for shadow mapping with a point light.\r\n\t *\r\n\t * @param methodVO The MethodVO object linking this method with the pass currently being compiled.\r\n\t * @param regCache The register cache used during the compilation.\r\n\t */\r\n\tpublic _pGetPointVertexCode(methodVO:MethodVO, regCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\r\n\t{\r\n\t\tmethodVO.vertexConstantsIndex = -1;\r\n\t\treturn \"\";\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the vertex code for shadow mapping with a planar shadow map (fe: directional lights).\r\n\t *\r\n\t * @param methodVO The MethodVO object linking this method with the pass currently being compiled.\r\n\t * @param regCache The register cache used during the compilation.\r\n\t */\r\n\tpublic pGetPlanarVertexCode(methodVO:MethodVO, regCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\r\n\t{\r\n\t\tvar code:string = \"\";\r\n\t\tvar temp:ShaderRegisterElement = regCache.getFreeVertexVectorTemp();\r\n\t\tvar dataReg:ShaderRegisterElement = regCache.getFreeVertexConstant();\r\n\t\tvar depthMapProj:ShaderRegisterElement = regCache.getFreeVertexConstant();\r\n\t\tregCache.getFreeVertexConstant();\r\n\t\tregCache.getFreeVertexConstant();\r\n\t\tregCache.getFreeVertexConstant();\r\n\t\tthis._pDepthMapCoordReg = regCache.getFreeVarying();\r\n\t\tmethodVO.vertexConstantsIndex = dataReg.index*4;\r\n\r\n\t\t// todo: can epsilon be applied here instead of fragment shader?\r\n\r\n\t\tcode += \"m44 \" + temp + \", \" + sharedRegisters.globalPositionVertex + \", \" + depthMapProj + \"\\n\" + \"div \" + temp + \", \" + temp + \", \" + temp + \".w\\n\" + \"mul \" + temp + \".xy, \" + temp + \".xy, \" + dataReg + \".xy\\n\" + \"add \" + this._pDepthMapCoordReg + \", \" + temp + \", \" + dataReg + \".xxwz\\n\";\r\n\t\t//\"sub \" + this._pDepthMapCoordReg + \".z, \" + this._pDepthMapCoordReg + \".z, \" + this._pDepthMapCoordReg + \".w\\n\";\r\n\r\n\t\treturn code;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic iGetFragmentCode(shaderObject:ShaderObjectBase, methodVO:MethodVO, targetReg:ShaderRegisterElement, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\r\n\t{\r\n\t\tvar code:string = this._pUsePoint? this._pGetPointFragmentCode(methodVO, targetReg, registerCache, sharedRegisters):this._pGetPlanarFragmentCode(methodVO, targetReg, registerCache, sharedRegisters);\r\n\t\tcode += \"add \" + targetReg + \".w, \" + targetReg + \".w, fc\" + (methodVO.fragmentConstantsIndex/4 + 1) + \".y\\n\" + \"sat \" + targetReg + \".w, \" + targetReg + \".w\\n\";\r\n\t\treturn code;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the fragment code for shadow mapping with a planar shadow map.\r\n\t * @param methodVO The MethodVO object linking this method with the pass currently being compiled.\r\n\t * @param regCache The register cache used during the compilation.\r\n\t * @param targetReg The register to contain the shadow coverage\r\n\t * @return\r\n\t */\r\n\tpublic _pGetPlanarFragmentCode(methodVO:MethodVO, targetReg:ShaderRegisterElement, regCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t\treturn \"\";\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the fragment code for shadow mapping with a point light.\r\n\t * @param methodVO The MethodVO object linking this method with the pass currently being compiled.\r\n\t * @param regCache The register cache used during the compilation.\r\n\t * @param targetReg The register to contain the shadow coverage\r\n\t * @return\r\n\t */\r\n\tpublic _pGetPointFragmentCode(methodVO:MethodVO, targetReg:ShaderRegisterElement, regCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t\treturn \"\";\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic iSetRenderState(shaderObject:ShaderObjectBase, methodVO:MethodVO, renderable:RenderableBase, stage:Stage, camera:Camera)\r\n\t{\r\n\t\tif (!this._pUsePoint)\r\n\t\t\t(<DirectionalShadowMapper> this._pShadowMapper).iDepthProjection.copyRawDataTo(shaderObject.vertexConstantData, methodVO.vertexConstantsIndex + 4, true);\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the fragment code for combining this method with a cascaded shadow map method.\r\n\t * @param methodVO The MethodVO object linking this method with the pass currently being compiled.\r\n\t * @param regCache The register cache used during the compilation.\r\n\t * @param decodeRegister The register containing the data to decode the shadow map depth value.\r\n\t * @param depthTexture The texture containing the shadow map.\r\n\t * @param depthProjection The projection of the fragment relative to the light.\r\n\t * @param targetRegister The register to contain the shadow coverage\r\n\t * @return\r\n\t */\r\n\tpublic _iGetCascadeFragmentCode(shaderObject:ShaderObjectBase, methodVO:MethodVO, decodeRegister:ShaderRegisterElement, depthTexture:ShaderRegisterElement, depthProjection:ShaderRegisterElement, targetRegister:ShaderRegisterElement, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\r\n\t{\r\n\t\tthrow new Error(\"This shadow method is incompatible with cascade shadows\");\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic iActivate(shaderObject:ShaderObjectBase, methodVO:MethodVO, stage:Stage)\r\n\t{\r\n\t\tvar fragmentData:Array<number> = shaderObject.fragmentConstantData;\r\n\t\tvar index:number /*int*/ = methodVO.fragmentConstantsIndex;\r\n\r\n\t\tif (this._pUsePoint)\r\n\t\t\tfragmentData[index + 4] = -Math.pow(1/((<PointLight> this._pCastingLight).fallOff*this._pEpsilon), 2);\r\n\t\telse\r\n\t\t\tshaderObject.vertexConstantData[methodVO.vertexConstantsIndex + 3] = -1/((<DirectionalShadowMapper> this._pShadowMapper).depth*this._pEpsilon);\r\n\r\n\t\tfragmentData[index + 5] = 1 - this._pAlpha;\r\n\r\n\t\tif (this._pUsePoint) {\r\n\t\t\tvar pos:Vector3D = this._pCastingLight.scenePosition;\r\n\t\t\tfragmentData[index + 8] = pos.x;\r\n\t\t\tfragmentData[index + 9] = pos.y;\r\n\t\t\tfragmentData[index + 10] = pos.z;\r\n\t\t\t// used to decompress distance\r\n\t\t\tvar f:number = (<PointLight> this._pCastingLight).fallOff;\r\n\t\t\tfragmentData[index + 11] = 1/(2*f*f);\r\n\t\t}\r\n\r\n\t\tif (!this._pUsePoint)\r\n\t\t\tstage.activateRenderTexture(methodVO.texturesIndex, <Texture2DBase> this._pCastingLight.shadowMapper.depthMap);\r\n\t\t//else\r\n\t\t//\tstage.activateCubeRenderTexture(methodVO.texturesIndex, <CubeTextureBase> this._pCastingLight.shadowMapper.depthMap);\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the method state for cascade shadow mapping.\r\n\t */\r\n\tpublic iActivateForCascade(shaderObject:ShaderObjectBase, methodVO:MethodVO, stage:Stage)\r\n\t{\r\n\t\tthrow new Error(\"This shadow method is incompatible with cascade shadows\");\r\n\t}\r\n}\r\n\r\nexport = ShadowMethodBase;","import NearDirectionalShadowMapper\t\t= require(\"awayjs-display/lib/materials/shadowmappers/NearDirectionalShadowMapper\");\r\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\n\r\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\r\n\r\nimport RenderableBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/pool/RenderableBase\");\r\nimport ShadingMethodEvent\t\t\t\t= require(\"awayjs-renderergl/lib/events/ShadingMethodEvent\");\r\nimport ShaderLightingObject\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderLightingObject\");\r\nimport ShaderObjectBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderObjectBase\");\r\nimport ShaderRegisterCache\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterCache\");\r\nimport ShaderRegisterData\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterData\");\r\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterElement\");\r\n\r\nimport MethodVO\t\t\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/data/MethodVO\");\r\nimport ShadowMethodBase\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/ShadowMethodBase\");\r\n\r\n// TODO: shadow mappers references in materials should be an interface so that this class should NOT extend ShadowMapMethodBase just for some delegation work\r\n/**\r\n * ShadowNearMethod provides a shadow map method that restricts the shadowed area near the camera to optimize\r\n * shadow map usage. This method needs to be used in conjunction with a NearDirectionalShadowMapper.\r\n *\r\n * @see away.lights.NearDirectionalShadowMapper\r\n */\r\nclass ShadowNearMethod extends ShadowMethodBase\r\n{\r\n\tprivate _baseMethod:ShadowMethodBase;\r\n\r\n\tprivate _fadeRatio:number;\r\n\tprivate _nearShadowMapper:NearDirectionalShadowMapper;\r\n\r\n\tprivate _onShaderInvalidatedDelegate:Function;\r\n\r\n\t/**\r\n\t * Creates a new ShadowNearMethod object.\r\n\t * @param baseMethod The shadow map sampling method used to sample individual cascades (fe: ShadowHardMethod, ShadowSoftMethod)\r\n\t * @param fadeRatio The amount of shadow fading to the outer shadow area. A value of 1 would mean the shadows start fading from the camera's near plane.\r\n\t */\r\n\tconstructor(baseMethod:ShadowMethodBase, fadeRatio:number = .1)\r\n\t{\r\n\t\tsuper(baseMethod.castingLight);\r\n\r\n\t\tthis._onShaderInvalidatedDelegate = (event:ShadingMethodEvent) => this.onShaderInvalidated(event);\r\n\r\n\t\tthis._baseMethod = baseMethod;\r\n\t\tthis._fadeRatio = fadeRatio;\r\n\t\tthis._nearShadowMapper = <NearDirectionalShadowMapper> this._pCastingLight.shadowMapper;\r\n\t\tif (!this._nearShadowMapper)\r\n\t\t\tthrow new Error(\"ShadowNearMethod requires a light that has a NearDirectionalShadowMapper instance assigned to shadowMapper.\");\r\n\t\tthis._baseMethod.addEventListener(ShadingMethodEvent.SHADER_INVALIDATED, this._onShaderInvalidatedDelegate);\r\n\t}\r\n\r\n\t/**\r\n\t * The base shadow map method on which this method's shading is based.\r\n\t */\r\n\tpublic get baseMethod():ShadowMethodBase\r\n\t{\r\n\t\treturn this._baseMethod;\r\n\t}\r\n\r\n\tpublic set baseMethod(value:ShadowMethodBase)\r\n\t{\r\n\t\tif (this._baseMethod == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._baseMethod.removeEventListener(ShadingMethodEvent.SHADER_INVALIDATED, this._onShaderInvalidatedDelegate);\r\n\r\n\t\tthis._baseMethod = value;\r\n\r\n\t\tthis._baseMethod.addEventListener(ShadingMethodEvent.SHADER_INVALIDATED, this._onShaderInvalidatedDelegate);\r\n\r\n\t\tthis.iInvalidateShaderProgram();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic iInitConstants(shaderObject:ShaderObjectBase, methodVO:MethodVO)\r\n\t{\r\n\t\tsuper.iInitConstants(shaderObject, methodVO);\r\n\t\tthis._baseMethod.iInitConstants(shaderObject, methodVO);\r\n\r\n\t\tvar fragmentData:Array<number> = shaderObject.fragmentConstantData;\r\n\t\tvar index:number /*int*/ = methodVO.secondaryFragmentConstantsIndex;\r\n\t\tfragmentData[index + 2] = 0;\r\n\t\tfragmentData[index + 3] = 1;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic iInitVO(shaderObject:ShaderLightingObject, methodVO:MethodVO)\r\n\t{\r\n\t\tthis._baseMethod.iInitVO(shaderObject, methodVO);\r\n\r\n\t\tmethodVO.needsProjection = true;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tthis._baseMethod.removeEventListener(ShadingMethodEvent.SHADER_INVALIDATED, this._onShaderInvalidatedDelegate);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic get alpha():number\r\n\t{\r\n\t\treturn this._baseMethod.alpha;\r\n\t}\r\n\r\n\tpublic set alpha(value:number)\r\n\t{\r\n\t\tthis._baseMethod.alpha = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic get epsilon():number\r\n\t{\r\n\t\treturn this._baseMethod.epsilon;\r\n\t}\r\n\r\n\tpublic set epsilon(value:number)\r\n\t{\r\n\t\tthis._baseMethod.epsilon = value;\r\n\t}\r\n\r\n\t/**\r\n\t * The amount of shadow fading to the outer shadow area. A value of 1 would mean the shadows start fading from the camera's near plane.\r\n\t */\r\n\tpublic get fadeRatio():number\r\n\t{\r\n\t\treturn this._fadeRatio;\r\n\t}\r\n\r\n\tpublic set fadeRatio(value:number)\r\n\t{\r\n\t\tthis._fadeRatio = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic iGetFragmentCode(shaderObject:ShaderObjectBase, methodVO:MethodVO, targetReg:ShaderRegisterElement, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\r\n\t{\r\n\t\tvar code:string = this._baseMethod.iGetFragmentCode(shaderObject, methodVO, targetReg, registerCache, sharedRegisters);\r\n\r\n\t\tvar dataReg:ShaderRegisterElement = registerCache.getFreeFragmentConstant();\r\n\t\tvar temp:ShaderRegisterElement = registerCache.getFreeFragmentSingleTemp();\r\n\t\tmethodVO.secondaryFragmentConstantsIndex = dataReg.index*4;\r\n\r\n\t\tcode += \"abs \" + temp + \", \" + sharedRegisters.projectionFragment + \".w\\n\" +\r\n\t\t\t\"sub \" + temp + \", \" + temp + \", \" + dataReg + \".x\\n\" +\r\n\t\t\t\"mul \" + temp + \", \" + temp + \", \" + dataReg + \".y\\n\" +\r\n\t\t\t\"sat \" + temp + \", \" + temp + \"\\n\" +\r\n\t\t\t\"sub \" + temp + \", \" + dataReg + \".w,\" + temp + \"\\n\" +\r\n\t\t\t\"sub \" + targetReg + \".w, \" + dataReg + \".w,\" + targetReg + \".w\\n\" +\r\n\t\t\t\"mul \" + targetReg + \".w, \" + targetReg + \".w, \" + temp + \"\\n\" +\r\n\t\t\t\"sub \" + targetReg + \".w, \" + dataReg + \".w,\" + targetReg + \".w\\n\";\r\n\r\n\t\treturn code;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic iActivate(shaderObject:ShaderObjectBase, methodVO:MethodVO, stage:Stage)\r\n\t{\r\n\t\tthis._baseMethod.iActivate(shaderObject, methodVO, stage);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic iDeactivate(shaderObject:ShaderObjectBase, methodVO:MethodVO, stage:Stage)\r\n\t{\r\n\t\tthis._baseMethod.iDeactivate(shaderObject, methodVO, stage);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic iSetRenderState(shaderObject:ShaderObjectBase, methodVO:MethodVO, renderable:RenderableBase, stage:Stage, camera:Camera)\r\n\t{\r\n\t\t// todo: move this to activate (needs camera)\r\n\t\tvar near:number = camera.projection.near;\r\n\t\tvar d:number = camera.projection.far - near;\r\n\t\tvar maxDistance:number = this._nearShadowMapper.coverageRatio;\r\n\t\tvar minDistance:number = maxDistance*(1 - this._fadeRatio);\r\n\r\n\t\tmaxDistance = near + maxDistance*d;\r\n\t\tminDistance = near + minDistance*d;\r\n\r\n\t\tvar fragmentData:Array<number> = shaderObject.fragmentConstantData;\r\n\t\tvar index:number /*int*/ = methodVO.secondaryFragmentConstantsIndex;\r\n\t\tfragmentData[index] = minDistance;\r\n\t\tfragmentData[index + 1] = 1/(maxDistance - minDistance);\r\n\r\n\t\tthis._baseMethod.iSetRenderState(shaderObject, methodVO, renderable, stage, camera);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic iGetVertexCode(shaderObject:ShaderObjectBase, methodVO:MethodVO, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\r\n\t{\r\n\t\treturn this._baseMethod.iGetVertexCode(shaderObject, methodVO, registerCache, sharedRegisters);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic iReset()\r\n\t{\r\n\t\tthis._baseMethod.iReset();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic iCleanCompilationData()\r\n\t{\r\n\t\tsuper.iCleanCompilationData();\r\n\t\tthis._baseMethod.iCleanCompilationData();\r\n\t}\r\n\r\n\t/**\r\n\t * Called when the base method's shader code is invalidated.\r\n\t */\r\n\tprivate onShaderInvalidated(event:ShadingMethodEvent)\r\n\t{\r\n\t\tthis.iInvalidateShaderProgram();\r\n\t}\r\n}\r\n\r\nexport = ShadowNearMethod;","import PoissonLookup\t\t\t\t\t= require(\"awayjs-core/lib/geom/PoissonLookup\");\r\n\r\nimport DirectionalLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\r\n\r\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\r\n\r\nimport ShaderObjectBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderObjectBase\");\r\nimport ShaderRegisterCache\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterCache\");\r\nimport ShaderRegisterData\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterData\");\r\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterElement\");\r\n\r\nimport MethodVO\t\t\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/data/MethodVO\");\r\nimport ShadowMethodBase\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/ShadowMethodBase\");\r\n\r\n/**\r\n * ShadowSoftMethod provides a soft shadowing technique by randomly distributing sample points.\r\n */\r\nclass ShadowSoftMethod extends ShadowMethodBase\r\n{\r\n\tprivate _range:number = 1;\r\n\tprivate _numSamples:number /*int*/;\r\n\tprivate _offsets:Array<number>;\r\n\r\n\t/**\r\n\t * Creates a new DiffuseBasicMethod object.\r\n\t *\r\n\t * @param castingLight The light casting the shadows\r\n\t * @param numSamples The amount of samples to take for dithering. Minimum 1, maximum 32.\r\n\t */\r\n\tconstructor(castingLight:DirectionalLight, numSamples:number /*int*/ = 5, range:number = 1)\r\n\t{\r\n\t\tsuper(castingLight);\r\n\r\n\t\tthis.numSamples = numSamples;\r\n\t\tthis.range = range;\r\n\t}\r\n\r\n\t/**\r\n\t * The amount of samples to take for dithering. Minimum 1, maximum 32. The actual maximum may depend on the\r\n\t * complexity of the shader.\r\n\t */\r\n\tpublic get numSamples():number /*int*/\r\n\t{\r\n\t\treturn this._numSamples;\r\n\t}\r\n\r\n\tpublic set numSamples(value:number /*int*/)\r\n\t{\r\n\t\tthis._numSamples = value;\r\n\t\t\r\n\t\tif (this._numSamples < 1)\r\n\t\t\tthis._numSamples = 1;\r\n\t\telse if (this._numSamples > 32)\r\n\t\t\tthis._numSamples = 32;\r\n\r\n\t\tthis._offsets = PoissonLookup.getDistribution(this._numSamples);\r\n\t\t\r\n\t\tthis.iInvalidateShaderProgram();\r\n\t}\r\n\r\n\t/**\r\n\t * The range in the shadow map in which to distribute the samples.\r\n\t */\r\n\tpublic get range():number\r\n\t{\r\n\t\treturn this._range;\r\n\t}\r\n\r\n\tpublic set range(value:number)\r\n\t{\r\n\t\tthis._range = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic iInitConstants(shaderObject:ShaderObjectBase, methodVO:MethodVO)\r\n\t{\r\n\t\tsuper.iInitConstants(shaderObject, methodVO);\r\n\r\n\t\tshaderObject.fragmentConstantData[methodVO.fragmentConstantsIndex + 8] = 1/this._numSamples;\r\n\t\tshaderObject.fragmentConstantData[methodVO.fragmentConstantsIndex + 9] = 0;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic iActivate(shaderObject:ShaderObjectBase, methodVO:MethodVO, stage:Stage)\r\n\t{\r\n\t\tsuper.iActivate(shaderObject, methodVO, stage);\r\n\r\n\t\tvar texRange:number = .5*this._range/this._pCastingLight.shadowMapper.depthMapSize;\r\n\t\tvar data:Array<number> = shaderObject.fragmentConstantData;\r\n\t\tvar index:number /*uint*/ = methodVO.fragmentConstantsIndex + 10;\r\n\t\tvar len:number /*uint*/ = this._numSamples << 1;\r\n\r\n\t\tfor (var i:number /*int*/ = 0; i < len; ++i)\r\n\t\t\tdata[index + i] = this._offsets[i]*texRange;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pGetPlanarFragmentCode(methodVO:MethodVO, targetReg:ShaderRegisterElement, regCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\r\n\t{\r\n\t\t// todo: move some things to super\r\n\t\tvar depthMapRegister:ShaderRegisterElement = regCache.getFreeTextureReg();\r\n\t\tvar decReg:ShaderRegisterElement = regCache.getFreeFragmentConstant();\r\n\t\tvar dataReg:ShaderRegisterElement = regCache.getFreeFragmentConstant();\r\n\t\tvar customDataReg:ShaderRegisterElement = regCache.getFreeFragmentConstant();\r\n\r\n\t\tmethodVO.fragmentConstantsIndex = decReg.index*4;\r\n\t\tmethodVO.texturesIndex = depthMapRegister.index;\r\n\r\n\t\treturn this.getSampleCode(regCache, depthMapRegister, decReg, targetReg, customDataReg);\r\n\t}\r\n\r\n\t/**\r\n\t * Adds the code for another tap to the shader code.\r\n\t * @param uv The uv register for the tap.\r\n\t * @param texture The texture register containing the depth map.\r\n\t * @param decode The register containing the depth map decoding data.\r\n\t * @param target The target register to add the tap comparison result.\r\n\t * @param regCache The register cache managing the registers.\r\n\t * @return\r\n\t */\r\n\tprivate addSample(uv:ShaderRegisterElement, texture:ShaderRegisterElement, decode:ShaderRegisterElement, target:ShaderRegisterElement, regCache:ShaderRegisterCache):string\r\n\t{\r\n\t\tvar temp:ShaderRegisterElement = regCache.getFreeFragmentVectorTemp();\r\n\t\treturn \"tex \" + temp + \", \" + uv + \", \" + texture + \" <2d,nearest,clamp>\\n\" +\r\n\t\t\t\"dp4 \" + temp + \".z, \" + temp + \", \" + decode + \"\\n\" +\r\n\t\t\t\"slt \" + uv + \".w, \" + this._pDepthMapCoordReg + \".z, \" + temp + \".z\\n\" + // 0 if in shadow\r\n\t\t\t\"add \" + target + \".w, \" + target + \".w, \" + uv + \".w\\n\";\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic iActivateForCascade(shaderObject:ShaderObjectBase, methodVO:MethodVO, stage:Stage)\r\n\t{\r\n\t\tsuper.iActivate(shaderObject, methodVO, stage);\r\n\r\n\t\tvar texRange:number = this._range/this._pCastingLight.shadowMapper.depthMapSize;\r\n\t\tvar data:Array<number> = shaderObject.fragmentConstantData;\r\n\t\tvar index:number /*uint*/ = methodVO.secondaryFragmentConstantsIndex;\r\n\t\tvar len:number /*uint*/ = this._numSamples << 1;\r\n\t\tdata[index] = 1/this._numSamples;\r\n\t\tdata[index + 1] = 0;\r\n\t\tindex += 2;\r\n\r\n\t\tfor (var i:number /*int*/ = 0; i < len; ++i)\r\n\t\t\tdata[index + i] = this._offsets[i]*texRange;\r\n\r\n\t\tif (len%4 == 0) {\r\n\t\t\tdata[index + len] = 0;\r\n\t\t\tdata[index + len + 1] = 0;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _iGetCascadeFragmentCode(shaderObject:ShaderObjectBase, methodVO:MethodVO, decodeRegister:ShaderRegisterElement, depthTexture:ShaderRegisterElement, depthProjection:ShaderRegisterElement, targetRegister:ShaderRegisterElement, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\r\n\t{\r\n\t\tthis._pDepthMapCoordReg = depthProjection;\r\n\r\n\t\tvar dataReg:ShaderRegisterElement = registerCache.getFreeFragmentConstant();\r\n\t\tmethodVO.secondaryFragmentConstantsIndex = dataReg.index*4;\r\n\r\n\t\treturn this.getSampleCode(registerCache, depthTexture, decodeRegister, targetRegister, dataReg);\r\n\t}\r\n\r\n\t/**\r\n\t * Get the actual shader code for shadow mapping\r\n\t * @param regCache The register cache managing the registers.\r\n\t * @param depthTexture The texture register containing the depth map.\r\n\t * @param decodeRegister The register containing the depth map decoding data.\r\n\t * @param targetReg The target register to add the shadow coverage.\r\n\t * @param dataReg The register containing additional data.\r\n\t */\r\n\tprivate getSampleCode(regCache:ShaderRegisterCache, depthTexture:ShaderRegisterElement, decodeRegister:ShaderRegisterElement, targetRegister:ShaderRegisterElement, dataReg:ShaderRegisterElement):string\r\n\t{\r\n\t\tvar uvReg:ShaderRegisterElement;\r\n\t\tvar code:string;\r\n\t\tvar offsets:Array<string> = new Array<string>(dataReg + \".zw\");\r\n\t\tuvReg = regCache.getFreeFragmentVectorTemp();\r\n\t\tregCache.addFragmentTempUsages(uvReg, 1);\r\n\r\n\t\tvar temp:ShaderRegisterElement = regCache.getFreeFragmentVectorTemp();\r\n\r\n\t\tvar numRegs:number /*int*/ = this._numSamples >> 1;\r\n\t\tfor (var i:number /*int*/ = 0; i < numRegs; ++i) {\r\n\t\t\tvar reg:ShaderRegisterElement = regCache.getFreeFragmentConstant();\r\n\t\t\toffsets.push(reg + \".xy\");\r\n\t\t\toffsets.push(reg + \".zw\");\r\n\t\t}\r\n\r\n\t\tfor (i = 0; i < this._numSamples; ++i) {\r\n\t\t\tif (i == 0) {\r\n\t\t\t\tcode = \"add \" + uvReg + \", \" + this._pDepthMapCoordReg + \", \" + dataReg + \".zwyy\\n\" +\r\n\t\t\t\t\t\"tex \" + temp + \", \" + uvReg + \", \" + depthTexture + \" <2d,nearest,clamp>\\n\" +\r\n\t\t\t\t\t\"dp4 \" + temp + \".z, \" + temp + \", \" + decodeRegister + \"\\n\" +\r\n\t\t\t\t\t\"slt \" + targetRegister + \".w, \" + this._pDepthMapCoordReg + \".z, \" + temp + \".z\\n\"; // 0 if in shadow;\r\n\t\t\t} else {\r\n\t\t\t\tcode += \"add \" + uvReg + \".xy, \" + this._pDepthMapCoordReg + \".xy, \" + offsets[i] + \"\\n\" +\r\n\t\t\t\t\tthis.addSample(uvReg, depthTexture, decodeRegister, targetRegister, regCache);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tregCache.removeFragmentTempUsage(uvReg);\r\n\r\n\t\tcode += \"mul \" + targetRegister + \".w, \" + targetRegister + \".w, \" + dataReg + \".x\\n\"; // average\r\n\r\n\t\treturn code;\r\n\t}\r\n}\r\n\r\nexport = ShadowSoftMethod;","import ShaderLightingObject\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderLightingObject\");\r\nimport ShaderRegisterCache\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterCache\");\r\nimport ShaderRegisterData\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterData\");\r\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterElement\");\r\n\r\nimport MethodVO\t\t\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/data/MethodVO\");\r\nimport SpecularBasicMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/SpecularBasicMethod\");\r\n\r\n/**\r\n * SpecularAnisotropicMethod provides a specular method resulting in anisotropic highlights. These are typical for\r\n * surfaces with microfacet details such as tiny grooves. In particular, this uses the Heidrich-Seidel distrubution.\r\n * The tangent vectors are used as the surface groove directions.\r\n */\r\nclass SpecularAnisotropicMethod extends SpecularBasicMethod\r\n{\r\n\t/**\r\n\t * Creates a new SpecularAnisotropicMethod object.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic iInitVO(shaderObject:ShaderLightingObject, methodVO:MethodVO)\r\n\t{\r\n\t\tmethodVO.needsTangents = true;\r\n\t\tmethodVO.needsView = true;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic iGetFragmentCodePerLight(shaderObject:ShaderLightingObject, methodVO:MethodVO, lightDirReg:ShaderRegisterElement, lightColReg:ShaderRegisterElement, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\r\n\t{\r\n\t\tvar code:string = \"\";\r\n\t\tvar t:ShaderRegisterElement;\r\n\r\n\t\tif (this._pIsFirstLight)\r\n\t\t\tt = this._pTotalLightColorReg;\r\n\t\telse {\r\n\t\t\tt = registerCache.getFreeFragmentVectorTemp();\r\n\t\t\tregisterCache.addFragmentTempUsages(t, 1);\r\n\t\t}\r\n\r\n\t\t// (sin(l,t) * sin(v,t) - cos(l,t)*cos(v,t)) ^ k\r\n\r\n\t\tcode += \"nrm \" + t + \".xyz, \" + sharedRegisters.tangentVarying + \".xyz\\n\" +\r\n\t\t\t\"dp3 \" + t + \".w, \" + t + \".xyz, \" + lightDirReg + \".xyz\\n\" +\r\n\t\t\t\"dp3 \" + t + \".z, \" + t + \".xyz, \" + sharedRegisters.viewDirFragment + \".xyz\\n\";\r\n\r\n\t\t// (sin(t.w) * sin(t.z) - cos(t.w)*cos(t.z)) ^ k\r\n\t\tcode += \"sin \" + t + \".x, \" + t + \".w\\n\" +\r\n\t\t\t\"sin \" + t + \".y, \" + t + \".z\\n\" +\r\n\t\t\t// (t.x * t.y - cos(t.w)*cos(t.z)) ^ k\r\n\t\t\t\"mul \" + t + \".x, \" + t + \".x, \" + t + \".y\\n\" +\r\n\t\t\t// (t.x - cos(t.w)*cos(t.z)) ^ k\r\n\t\t\t\"cos \" + t + \".z, \" + t + \".z\\n\" +\r\n\t\t\t\"cos \" + t + \".w, \" + t + \".w\\n\" +\r\n\t\t\t// (t.x - t.w*t.z) ^ k\r\n\t\t\t\"mul \" + t + \".w, \" + t + \".w, \" + t + \".z\\n\" +\r\n\t\t\t// (t.x - t.w) ^ k\r\n\t\t\t\"sub \" + t + \".w, \" + t + \".x, \" + t + \".w\\n\";\r\n\r\n\t\tif (this._pUseTexture) {\r\n\t\t\t// apply gloss modulation from texture\r\n\t\t\tcode += \"mul \" + this._pSpecularTexData + \".w, \" + this._pSpecularTexData + \".y, \" + this._pSpecularDataRegister + \".w\\n\" +\r\n\t\t\t\t\"pow \" + t + \".w, \" + t + \".w, \" + this._pSpecularTexData + \".w\\n\";\r\n\t\t} else\r\n\t\t\tcode += \"pow \" + t + \".w, \" + t + \".w, \" + this._pSpecularDataRegister + \".w\\n\";\r\n\r\n\t\t// attenuate\r\n\t\tcode += \"mul \" + t + \".w, \" + t + \".w, \" + lightDirReg + \".w\\n\";\r\n\r\n\t\tif (this._iModulateMethod != null)\r\n\t\t\tcode += this._iModulateMethod(shaderObject, methodVO, t, registerCache, sharedRegisters);\r\n\r\n\t\tcode += \"mul \" + t + \".xyz, \" + lightColReg + \".xyz, \" + t + \".w\\n\";\r\n\r\n\t\tif (!this._pIsFirstLight) {\r\n\t\t\tcode += \"add \" + this._pTotalLightColorReg + \".xyz, \" + this._pTotalLightColorReg + \".xyz, \" + t + \".xyz\\n\";\r\n\t\t\tregisterCache.removeFragmentTempUsage(t);\r\n\t\t}\r\n\r\n\t\tthis._pIsFirstLight = false;\r\n\r\n\t\treturn code;\r\n\t}\r\n}\r\n\r\nexport = SpecularAnisotropicMethod;","import Texture2DBase\t\t\t\t= require(\"awayjs-core/lib/textures/Texture2DBase\");\r\n\r\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\r\n\r\nimport ShaderLightingObject\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderLightingObject\");\r\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterCache\");\r\nimport ShaderRegisterData\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterData\");\r\nimport ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterElement\");\r\nimport ShaderCompilerHelper\t\t\t= require(\"awayjs-renderergl/lib/utils/ShaderCompilerHelper\");\r\n\r\nimport MethodVO\t\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/data/MethodVO\");\r\nimport LightingMethodBase\t\t\t= require(\"awayjs-methodmaterials/lib/methods/LightingMethodBase\");\r\nimport ShadingMethodBase\t\t\t= require(\"awayjs-methodmaterials/lib/methods/ShadingMethodBase\");\r\n\r\n/**\r\n * SpecularBasicMethod provides the default shading method for Blinn-Phong specular highlights (an optimized but approximated\r\n * version of Phong specularity).\r\n */\r\nclass SpecularBasicMethod extends LightingMethodBase\r\n{\r\n\tpublic _pUseTexture:boolean;\r\n\tpublic _pTotalLightColorReg:ShaderRegisterElement;\r\n\tpublic _pSpecularTextureRegister:ShaderRegisterElement;\r\n\tpublic _pSpecularTexData:ShaderRegisterElement;\r\n\tpublic _pSpecularDataRegister:ShaderRegisterElement;\r\n\r\n\tprivate _texture:Texture2DBase;\r\n\r\n\tprivate _gloss:number = 50;\r\n\tprivate _specular:number = 1;\r\n\tprivate _specularColor:number = 0xffffff;\r\n\tpublic _iSpecularR:number = 1;\r\n\tpublic _iSpecularG:number = 1;\r\n\tpublic _iSpecularB:number = 1;\r\n\tpublic _pIsFirstLight:boolean;\r\n\r\n\t/**\r\n\t * Creates a new SpecularBasicMethod object.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\tpublic iIsUsed(shaderObject:ShaderLightingObject):boolean\r\n\t{\r\n\t\tif (!shaderObject.numLights)\r\n\t\t\treturn false;\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic iInitVO(shaderObject:ShaderLightingObject, methodVO:MethodVO)\r\n\t{\r\n\t\tmethodVO.needsUV = this._pUseTexture;\r\n\t\tmethodVO.needsNormals = shaderObject.numLights > 0;\r\n\t\tmethodVO.needsView = shaderObject.numLights > 0;\r\n\t}\r\n\r\n\t/**\r\n\t * The sharpness of the specular highlight.\r\n\t */\r\n\tpublic get gloss():number\r\n\t{\r\n\t\treturn this._gloss;\r\n\t}\r\n\r\n\tpublic set gloss(value:number)\r\n\t{\r\n\t\tthis._gloss = value;\r\n\t}\r\n\r\n\t/**\r\n\t * The overall strength of the specular highlights.\r\n\t */\r\n\tpublic get specular():number\r\n\t{\r\n\t\treturn this._specular;\r\n\t}\r\n\r\n\tpublic set specular(value:number)\r\n\t{\r\n\t\tif (value == this._specular)\r\n\t\t\treturn;\r\n\r\n\t\tthis._specular = value;\r\n\t\tthis.updateSpecular();\r\n\t}\r\n\r\n\t/**\r\n\t * The colour of the specular reflection of the surface.\r\n\t */\r\n\tpublic get specularColor():number\r\n\t{\r\n\t\treturn this._specularColor;\r\n\t}\r\n\r\n\tpublic set specularColor(value:number)\r\n\t{\r\n\t\tif (this._specularColor == value)\r\n\t\t\treturn;\r\n\r\n\t\t// specular is now either enabled or disabled\r\n\t\tif (this._specularColor == 0 || value == 0)\r\n\t\t\tthis.iInvalidateShaderProgram();\r\n\r\n\t\tthis._specularColor = value;\r\n\t\tthis.updateSpecular();\r\n\t}\r\n\r\n\t/**\r\n\t * The bitmapData that encodes the specular highlight strength per texel in the red channel, and the sharpness\r\n\t * in the green channel. You can use SpecularBitmapTexture if you want to easily set specular and gloss maps\r\n\t * from grayscale images, but prepared images are preferred.\r\n\t */\r\n\tpublic get texture():Texture2DBase\r\n\t{\r\n\t\treturn this._texture;\r\n\t}\r\n\r\n\tpublic set texture(value:Texture2DBase)\r\n\t{\r\n\t\tvar b:boolean = ( value != null );\r\n\r\n\t\tif (b != this._pUseTexture || (value && this._texture && (value.format != this._texture.format)))\r\n\t\t\tthis.iInvalidateShaderProgram();\r\n\r\n\t\tthis._pUseTexture = b;\r\n\t\tthis._texture = value;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic copyFrom(method:ShadingMethodBase)\r\n\t{\r\n\r\n\t\tvar m:any = method;\r\n\t\tvar bsm:SpecularBasicMethod = <SpecularBasicMethod> method;\r\n\r\n\t\tvar spec:SpecularBasicMethod = bsm;//SpecularBasicMethod(method);\r\n\t\tthis.texture = spec.texture;\r\n\t\tthis.specular = spec.specular;\r\n\t\tthis.specularColor = spec.specularColor;\r\n\t\tthis.gloss = spec.gloss;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic iCleanCompilationData()\r\n\t{\r\n\t\tsuper.iCleanCompilationData();\r\n\t\tthis._pTotalLightColorReg = null;\r\n\t\tthis._pSpecularTextureRegister = null;\r\n\t\tthis._pSpecularTexData = null;\r\n\t\tthis._pSpecularDataRegister = null;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic iGetFragmentPreLightingCode(shaderObject:ShaderLightingObject, methodVO:MethodVO, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\r\n\t{\r\n\t\tvar code:string = \"\";\r\n\r\n\t\tthis._pIsFirstLight = true;\r\n\r\n\t\tthis._pSpecularDataRegister = registerCache.getFreeFragmentConstant();\r\n\t\tmethodVO.fragmentConstantsIndex = this._pSpecularDataRegister.index*4;\r\n\r\n\t\tif (this._pUseTexture) {\r\n\r\n\t\t\tthis._pSpecularTexData = registerCache.getFreeFragmentVectorTemp();\r\n\t\t\tregisterCache.addFragmentTempUsages(this._pSpecularTexData, 1);\r\n\t\t\tthis._pSpecularTextureRegister = registerCache.getFreeTextureReg();\r\n\t\t\tmethodVO.texturesIndex = this._pSpecularTextureRegister.index;\r\n\t\t\tcode = ShaderCompilerHelper.getTex2DSampleCode(this._pSpecularTexData, sharedRegisters, this._pSpecularTextureRegister, this._texture, shaderObject.useSmoothTextures, shaderObject.repeatTextures, shaderObject.useMipmapping);\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis._pSpecularTextureRegister = null;\r\n\t\t}\r\n\r\n\t\tthis._pTotalLightColorReg = registerCache.getFreeFragmentVectorTemp();\r\n\t\tregisterCache.addFragmentTempUsages(this._pTotalLightColorReg, 1);\r\n\r\n\t\treturn code;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic iGetFragmentCodePerLight(shaderObject:ShaderLightingObject, methodVO:MethodVO, lightDirReg:ShaderRegisterElement, lightColReg:ShaderRegisterElement, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\r\n\t{\r\n\t\tvar code:string = \"\";\r\n\t\tvar t:ShaderRegisterElement;\r\n\r\n\t\tif (this._pIsFirstLight) {\r\n\t\t\tt = this._pTotalLightColorReg;\r\n\t\t} else {\r\n\t\t\tt = registerCache.getFreeFragmentVectorTemp();\r\n\t\t\tregisterCache.addFragmentTempUsages(t, 1);\r\n\t\t}\r\n\r\n\t\tvar viewDirReg:ShaderRegisterElement = sharedRegisters.viewDirFragment;\r\n\t\tvar normalReg:ShaderRegisterElement = sharedRegisters.normalFragment;\r\n\r\n\t\t// blinn-phong half vector model\r\n\t\tcode += \"add \" + t + \", \" + lightDirReg + \", \" + viewDirReg + \"\\n\" +\r\n\t\t\t\t\"nrm \" + t + \".xyz, \" + t + \"\\n\" +\r\n\t\t\t\t\"dp3 \" + t + \".w, \" + normalReg + \", \" + t + \"\\n\" +\r\n\t\t\t\t\"sat \" + t + \".w, \" + t + \".w\\n\";\r\n\r\n\t\tif (this._pUseTexture) {\r\n\t\t\t// apply gloss modulation from texture\r\n\t\t\tcode += \"mul \" + this._pSpecularTexData + \".w, \" + this._pSpecularTexData + \".y, \" + this._pSpecularDataRegister + \".w\\n\" +\r\n\t\t\t\t\t\"pow \" + t + \".w, \" + t + \".w, \" + this._pSpecularTexData + \".w\\n\";\r\n\t\t} else {\r\n\t\t\tcode += \"pow \" + t + \".w, \" + t + \".w, \" + this._pSpecularDataRegister + \".w\\n\";\r\n\t\t}\r\n\r\n\t\t// attenuate\r\n\t\tif (shaderObject.usesLightFallOff)\r\n\t\t\tcode += \"mul \" + t + \".w, \" + t + \".w, \" + lightDirReg + \".w\\n\";\r\n\r\n\t\tif (this._iModulateMethod != null)\r\n\t\t\tcode += this._iModulateMethod(shaderObject, methodVO, t, registerCache, sharedRegisters);\r\n\r\n\t\tcode += \"mul \" + t + \".xyz, \" + lightColReg + \", \" + t + \".w\\n\";\r\n\r\n\t\tif (!this._pIsFirstLight) {\r\n\t\t\tcode += \"add \" + this._pTotalLightColorReg + \".xyz, \" + this._pTotalLightColorReg + \", \" + t + \"\\n\";\r\n\t\t\tregisterCache.removeFragmentTempUsage(t);\r\n\t\t}\r\n\r\n\t\tthis._pIsFirstLight = false;\r\n\r\n\t\treturn code;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic iGetFragmentCodePerProbe(shaderObject:ShaderLightingObject, methodVO:MethodVO, cubeMapReg:ShaderRegisterElement, weightRegister:string, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\r\n\t{\r\n\t\tvar code:string = \"\";\r\n\t\tvar t:ShaderRegisterElement;\r\n\r\n\t\t// write in temporary if not first light, so we can add to total diffuse colour\r\n\t\tif (this._pIsFirstLight) {\r\n\t\t\tt = this._pTotalLightColorReg;\r\n\t\t} else {\r\n\t\t\tt = registerCache.getFreeFragmentVectorTemp();\r\n\t\t\tregisterCache.addFragmentTempUsages(t, 1);\r\n\t\t}\r\n\r\n\t\tvar normalReg:ShaderRegisterElement = sharedRegisters.normalFragment;\r\n\t\tvar viewDirReg:ShaderRegisterElement = sharedRegisters.viewDirFragment;\r\n\r\n\t\tcode += \"dp3 \" + t + \".w, \" + normalReg + \", \" + viewDirReg + \"\\n\" +\r\n\t\t\t\t\"add \" + t + \".w, \" + t + \".w, \" + t + \".w\\n\" +\r\n\t\t\t\t\"mul \" + t + \", \" + t + \".w, \" + normalReg + \"\\n\" +\r\n\t\t\t\t\"sub \" + t + \", \" + t + \", \" + viewDirReg + \"\\n\" +\r\n\t\t\t\t\"tex \" + t + \", \" + t + \", \" + cubeMapReg + \" <cube,\" + (shaderObject.useSmoothTextures? \"linear\":\"nearest\") + \",miplinear>\\n\" +\r\n\t\t\t\t\"mul \" + t + \".xyz, \" + t + \", \" + weightRegister + \"\\n\";\r\n\r\n\t\tif (this._iModulateMethod != null)\r\n\t\t\tcode += this._iModulateMethod(shaderObject, methodVO, t, registerCache, sharedRegisters);\r\n\r\n\t\tif (!this._pIsFirstLight) {\r\n\t\t\tcode += \"add \" + this._pTotalLightColorReg + \".xyz, \" + this._pTotalLightColorReg + \", \" + t + \"\\n\";\r\n\t\t\tregisterCache.removeFragmentTempUsage(t);\r\n\t\t}\r\n\r\n\t\tthis._pIsFirstLight = false;\r\n\r\n\t\treturn code;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic iGetFragmentPostLightingCode(shaderObject:ShaderLightingObject, methodVO:MethodVO, targetReg:ShaderRegisterElement, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\r\n\t{\r\n\t\tvar code:string = \"\";\r\n\r\n\t\tif (sharedRegisters.shadowTarget)\r\n\t\t\tcode += \"mul \" + this._pTotalLightColorReg + \".xyz, \" + this._pTotalLightColorReg + \", \" + sharedRegisters.shadowTarget + \".w\\n\";\r\n\r\n\t\tif (this._pUseTexture) {\r\n\t\t\t// apply strength modulation from texture\r\n\t\t\tcode += \"mul \" + this._pTotalLightColorReg + \".xyz, \" + this._pTotalLightColorReg + \", \" + this._pSpecularTexData + \".x\\n\";\r\n\t\t\tregisterCache.removeFragmentTempUsage(this._pSpecularTexData);\r\n\t\t}\r\n\r\n\t\t// apply material's specular reflection\r\n\t\tcode += \"mul \" + this._pTotalLightColorReg + \".xyz, \" + this._pTotalLightColorReg + \", \" + this._pSpecularDataRegister + \"\\n\" +\r\n\t\t\t\"add \" + targetReg + \".xyz, \" + targetReg + \", \" + this._pTotalLightColorReg + \"\\n\";\r\n\t\tregisterCache.removeFragmentTempUsage(this._pTotalLightColorReg);\r\n\r\n\t\treturn code;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic iActivate(shaderObject:ShaderLightingObject, methodVO:MethodVO, stage:Stage)\r\n\t{\r\n\t\tif (methodVO.texturesIndex >= 0)\r\n\t\t\tstage.activateTexture(methodVO.texturesIndex, this._texture, shaderObject.repeatTextures, shaderObject.useSmoothTextures, shaderObject.useMipmapping);\r\n\r\n\t\tvar index:number = methodVO.fragmentConstantsIndex;\r\n\t\tvar data:Array<number> = shaderObject.fragmentConstantData;\r\n\t\tdata[index] = this._iSpecularR;\r\n\t\tdata[index + 1] = this._iSpecularG;\r\n\t\tdata[index + 2] = this._iSpecularB;\r\n\t\tdata[index + 3] = this._gloss;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the specular color data used by the render state.\r\n\t */\r\n\tprivate updateSpecular()\r\n\t{\r\n\t\tthis._iSpecularR = (( this._specularColor >> 16) & 0xff)/0xff*this._specular;\r\n\t\tthis._iSpecularG = (( this._specularColor >> 8) & 0xff)/0xff*this._specular;\r\n\t\tthis._iSpecularB = ( this._specularColor & 0xff)/0xff*this._specular;\r\n\t}\r\n}\r\n\r\nexport = SpecularBasicMethod;","import Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\r\n\r\nimport ShaderLightingObject\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderLightingObject\");\r\nimport ShaderObjectBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderObjectBase\");\r\nimport ShaderRegisterCache\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterCache\");\r\nimport ShaderRegisterData\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterData\");\r\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterElement\");\r\n\r\nimport MethodVO\t\t\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/data/MethodVO\");\r\nimport SpecularBasicMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/SpecularBasicMethod\");\r\nimport SpecularCompositeMethod\t\t\t= require(\"awayjs-methodmaterials/lib/methods/SpecularCompositeMethod\");\r\n\r\n/**\r\n * SpecularCelMethod provides a shading method to add specular cel (cartoon) shading.\r\n */\r\nclass SpecularCelMethod extends SpecularCompositeMethod\r\n{\r\n\tprivate _dataReg:ShaderRegisterElement;\r\n\tprivate _smoothness:number = .1;\r\n\tprivate _specularCutOff:number = .1;\r\n\r\n\t/**\r\n\t * Creates a new SpecularCelMethod object.\r\n\t * @param specularCutOff The threshold at which the specular highlight should be shown.\r\n\t * @param baseMethod An optional specular method on which the cartoon shading is based. If ommitted, SpecularBasicMethod is used.\r\n\t */\r\n\tconstructor(specularCutOff:number = .5, baseMethod:SpecularBasicMethod = null)\r\n\t{\r\n\t\tsuper(null, baseMethod);\r\n\r\n\t\tthis.baseMethod._iModulateMethod = (shaderObject:ShaderObjectBase, methodVO:MethodVO, targetReg:ShaderRegisterElement, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData) => this.clampSpecular(shaderObject, methodVO, targetReg, registerCache, sharedRegisters);\r\n\r\n\t\tthis._specularCutOff = specularCutOff;\r\n\t}\r\n\r\n\t/**\r\n\t * The smoothness of the highlight edge.\r\n\t */\r\n\tpublic get smoothness():number\r\n\t{\r\n\t\treturn this._smoothness;\r\n\t}\r\n\r\n\tpublic set smoothness(value:number)\r\n\t{\r\n\t\tthis._smoothness = value;\r\n\t}\r\n\r\n\t/**\r\n\t * The threshold at which the specular highlight should be shown.\r\n\t */\r\n\tpublic get specularCutOff():number\r\n\t{\r\n\t\treturn this._specularCutOff;\r\n\t}\r\n\r\n\tpublic set specularCutOff(value:number)\r\n\t{\r\n\t\tthis._specularCutOff = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic iActivate(shaderObject:ShaderLightingObject, methodVO:MethodVO, stage:Stage)\r\n\t{\r\n\t\tsuper.iActivate(shaderObject, methodVO, stage);\r\n\r\n\t\tvar index:number /*int*/ = methodVO.secondaryFragmentConstantsIndex;\r\n\t\tvar data:Array<number> = shaderObject.fragmentConstantData;\r\n\t\tdata[index] = this._smoothness;\r\n\t\tdata[index + 1] = this._specularCutOff;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic iCleanCompilationData()\r\n\t{\r\n\t\tsuper.iCleanCompilationData();\r\n\t\tthis._dataReg = null;\r\n\t}\r\n\r\n\t/**\r\n\t * Snaps the specular shading strength of the wrapped method to zero or one, depending on whether or not it exceeds the specularCutOff\r\n\t * @param vo The MethodVO used to compile the current shader.\r\n\t * @param t The register containing the specular strength in the \"w\" component, and either the half-vector or the reflection vector in \"xyz\".\r\n\t * @param regCache The register cache used for the shader compilation.\r\n\t * @param sharedRegisters The shared register data for this shader.\r\n\t * @return The AGAL fragment code for the method.\r\n\t */\r\n\tprivate clampSpecular(shaderObject:ShaderObjectBase, methodVO:MethodVO, targetReg:ShaderRegisterElement, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\r\n\t{\r\n\t\treturn \"sub \" + targetReg + \".y, \" + targetReg + \".w, \" + this._dataReg + \".y\\n\" + // x - cutoff\r\n\t\t\t\"div \" + targetReg + \".y, \" + targetReg + \".y, \" + this._dataReg + \".x\\n\" + // (x - cutoff)/epsilon\r\n\t\t\t\"sat \" + targetReg + \".y, \" + targetReg + \".y\\n\" +\r\n\t\t\t\"sge \" + targetReg + \".w, \" + targetReg + \".w, \" + this._dataReg + \".y\\n\" +\r\n\t\t\t\"mul \" + targetReg + \".w, \" + targetReg + \".w, \" + targetReg + \".y\\n\";\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic iGetFragmentPreLightingCode(shaderObject:ShaderLightingObject, methodVO:MethodVO, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\r\n\t{\r\n\t\tthis._dataReg = registerCache.getFreeFragmentConstant();\r\n\t\tmethodVO.secondaryFragmentConstantsIndex = this._dataReg.index*4;\r\n\r\n\t\treturn super.iGetFragmentPreLightingCode(shaderObject, methodVO, registerCache, sharedRegisters);\r\n\t}\r\n}\r\n\r\nexport = SpecularCelMethod;","import Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\n\r\nimport Texture2DBase\t\t\t\t\t= require(\"awayjs-core/lib/textures/Texture2DBase\");\r\n\r\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\r\n\r\nimport RenderableBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/pool/RenderableBase\");\r\nimport ShadingMethodEvent\t\t\t\t= require(\"awayjs-renderergl/lib/events/ShadingMethodEvent\");\r\nimport ShaderLightingObject\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderLightingObject\");\r\nimport ShaderObjectBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderObjectBase\");\r\nimport ShaderRegisterCache\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterCache\");\r\nimport ShaderRegisterData\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterData\");\r\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterElement\");\r\n\r\nimport MethodVO\t\t\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/data/MethodVO\");\r\nimport SpecularBasicMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/SpecularBasicMethod\");\r\n\r\n/**\r\n * SpecularCompositeMethod provides a base class for specular methods that wrap a specular method to alter the\r\n * calculated specular reflection strength.\r\n */\r\nclass SpecularCompositeMethod extends SpecularBasicMethod\r\n{\r\n\tprivate _baseMethod:SpecularBasicMethod;\r\n\r\n\tprivate _onShaderInvalidatedDelegate:Function;\r\n\r\n\t/**\r\n\t * Creates a new <code>SpecularCompositeMethod</code> object.\r\n\t *\r\n\t * @param modulateMethod The method which will add the code to alter the base method's strength. It needs to have the signature modSpecular(t:ShaderRegisterElement, regCache:ShaderRegisterCache):string, in which t.w will contain the specular strength and t.xyz will contain the half-vector or the reflection vector.\r\n\t * @param baseMethod The base specular method on which this method's shading is based.\r\n\t */\r\n\tconstructor(modulateMethod:(shaderObject:ShaderObjectBase, methodVO:MethodVO, targetReg:ShaderRegisterElement, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData) => string, baseMethod:SpecularBasicMethod = null)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._onShaderInvalidatedDelegate = (event:ShadingMethodEvent) => this.onShaderInvalidated(event);\r\n\r\n\t\tthis._baseMethod = baseMethod || new SpecularBasicMethod();\r\n\t\tthis._baseMethod._iModulateMethod = modulateMethod;\r\n\t\tthis._baseMethod.addEventListener(ShadingMethodEvent.SHADER_INVALIDATED, this._onShaderInvalidatedDelegate);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic iInitVO(shaderObject:ShaderLightingObject, methodVO:MethodVO)\r\n\t{\r\n\t\tthis._baseMethod.iInitVO(shaderObject, methodVO);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic iInitConstants(shaderObject:ShaderObjectBase, methodVO:MethodVO)\r\n\t{\r\n\t\tthis._baseMethod.iInitConstants(shaderObject, methodVO);\r\n\t}\r\n\r\n\t/**\r\n\t * The base specular method on which this method's shading is based.\r\n\t */\r\n\tpublic get baseMethod():SpecularBasicMethod\r\n\t{\r\n\t\treturn this._baseMethod;\r\n\t}\r\n\r\n\tpublic set baseMethod(value:SpecularBasicMethod)\r\n\t{\r\n\t\tif (this._baseMethod == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._baseMethod.removeEventListener(ShadingMethodEvent.SHADER_INVALIDATED, this._onShaderInvalidatedDelegate);\r\n\r\n\t\tthis._baseMethod = value;\r\n\r\n\t\tthis._baseMethod.addEventListener(ShadingMethodEvent.SHADER_INVALIDATED, this._onShaderInvalidatedDelegate);\r\n\r\n\t\tthis.iInvalidateShaderProgram();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic get gloss():number\r\n\t{\r\n\t\treturn this._baseMethod.gloss;\r\n\t}\r\n\r\n\tpublic set gloss(value:number)\r\n\t{\r\n\t\tthis._baseMethod.gloss = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic get specular():number\r\n\t{\r\n\t\treturn this._baseMethod.specular;\r\n\t}\r\n\r\n\tpublic set specular(value:number)\r\n\t{\r\n\t\tthis._baseMethod.specular = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tthis._baseMethod.removeEventListener(ShadingMethodEvent.SHADER_INVALIDATED, this._onShaderInvalidatedDelegate);\r\n\t\tthis._baseMethod.dispose();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic get texture():Texture2DBase\r\n\t{\r\n\t\treturn this._baseMethod.texture;\r\n\t}\r\n\r\n\tpublic set texture(value:Texture2DBase)\r\n\t{\r\n\t\tthis._baseMethod.texture = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic iActivate(shaderObject:ShaderLightingObject, methodVO:MethodVO, stage:Stage)\r\n\t{\r\n\t\tthis._baseMethod.iActivate(shaderObject, methodVO, stage);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic iSetRenderState(shaderObject:ShaderLightingObject, methodVO:MethodVO, renderable:RenderableBase, stage:Stage, camera:Camera)\r\n\t{\r\n\t\tthis._baseMethod.iSetRenderState(shaderObject, methodVO, renderable, stage, camera);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic iDeactivate(shaderObject:ShaderObjectBase, methodVO:MethodVO, stage:Stage)\r\n\t{\r\n\t\tthis._baseMethod.iDeactivate(shaderObject, methodVO, stage);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic iGetVertexCode(shaderObject:ShaderObjectBase, methodVO:MethodVO, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\r\n\t{\r\n\t\treturn this._baseMethod.iGetVertexCode(shaderObject, methodVO, registerCache, sharedRegisters);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic iGetFragmentPreLightingCode(shaderObject:ShaderLightingObject, methodVO:MethodVO, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\r\n\t{\r\n\t\treturn this._baseMethod.iGetFragmentPreLightingCode(shaderObject, methodVO, registerCache, sharedRegisters);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic iGetFragmentCodePerLight(shaderObject:ShaderLightingObject, methodVO:MethodVO, lightDirReg:ShaderRegisterElement, lightColReg:ShaderRegisterElement, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\r\n\t{\r\n\t\treturn this._baseMethod.iGetFragmentCodePerLight(shaderObject, methodVO, lightDirReg, lightColReg, registerCache, sharedRegisters);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t * @return\r\n\t */\r\n\tpublic iGetFragmentCodePerProbe(shaderObject:ShaderLightingObject, methodVO:MethodVO, cubeMapReg:ShaderRegisterElement, weightRegister:string, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\r\n\t{\r\n\t\treturn this._baseMethod.iGetFragmentCodePerProbe(shaderObject, methodVO, cubeMapReg, weightRegister, registerCache, sharedRegisters);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic iGetFragmentPostLightingCode(shaderObject:ShaderLightingObject, methodVO:MethodVO, targetReg:ShaderRegisterElement, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\r\n\t{\r\n\t\treturn this._baseMethod.iGetFragmentPostLightingCode(shaderObject, methodVO, targetReg, registerCache, sharedRegisters);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic iReset()\r\n\t{\r\n\t\tthis._baseMethod.iReset();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic iCleanCompilationData()\r\n\t{\r\n\t\tsuper.iCleanCompilationData();\r\n\t\tthis._baseMethod.iCleanCompilationData();\r\n\t}\r\n\r\n\t/**\r\n\t * Called when the base method's shader code is invalidated.\r\n\t */\r\n\tprivate onShaderInvalidated(event:ShadingMethodEvent)\r\n\t{\r\n\t\tthis.iInvalidateShaderProgram();\r\n\t}\r\n}\r\n\r\nexport = SpecularCompositeMethod;","import Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\n\r\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\r\n\r\nimport ShaderLightingObject\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderLightingObject\");\r\nimport ShaderObjectBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderObjectBase\");\r\nimport ShaderRegisterCache\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterCache\");\r\nimport ShaderRegisterData\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterData\");\r\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterElement\");\r\n\r\nimport MethodVO\t\t\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/data/MethodVO\");\r\nimport SpecularBasicMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/SpecularBasicMethod\");\r\nimport SpecularCompositeMethod\t\t\t= require(\"awayjs-methodmaterials/lib/methods/SpecularCompositeMethod\");\r\n\r\n/**\r\n * SpecularFresnelMethod provides a specular shading method that causes stronger highlights on grazing view angles.\r\n */\r\nclass SpecularFresnelMethod extends SpecularCompositeMethod\r\n{\r\n\tprivate _dataReg:ShaderRegisterElement;\r\n\tprivate _incidentLight:boolean;\r\n\tprivate _fresnelPower:number = 5;\r\n\tprivate _normalReflectance:number = .028; // default value for skin\r\n\r\n\t/**\r\n\t * Creates a new SpecularFresnelMethod object.\r\n\t * @param basedOnSurface Defines whether the fresnel effect should be based on the view angle on the surface (if true), or on the angle between the light and the view.\r\n\t * @param baseMethod The specular method to which the fresnel equation. Defaults to SpecularBasicMethod.\r\n\t */\r\n\tconstructor(basedOnSurface:boolean = true, baseMethod:SpecularBasicMethod = null)\r\n\t{\r\n\t\t// may want to offer diff speculars\r\n\t\tsuper(null, baseMethod);\r\n\r\n\t\tthis.baseMethod._iModulateMethod = (shaderObject:ShaderObjectBase, methodVO:MethodVO, targetReg:ShaderRegisterElement, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData) => this.modulateSpecular(shaderObject, methodVO, targetReg, registerCache, sharedRegisters);\r\n\r\n\t\tthis._incidentLight = !basedOnSurface;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic iInitConstants(shaderObject:ShaderObjectBase, methodVO:MethodVO)\r\n\t{\r\n\r\n\t\tvar index:number = methodVO.secondaryFragmentConstantsIndex;\r\n\t\tshaderObject.fragmentConstantData[index + 2] = 1;\r\n\t\tshaderObject.fragmentConstantData[index + 3] = 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether the fresnel effect should be based on the view angle on the surface (if true), or on the angle between the light and the view.\r\n\t */\r\n\tpublic get basedOnSurface():boolean\r\n\t{\r\n\t\treturn !this._incidentLight;\r\n\t}\r\n\r\n\tpublic set basedOnSurface(value:boolean)\r\n\t{\r\n\t\tif (this._incidentLight != value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._incidentLight = !value;\r\n\r\n\t\tthis.iInvalidateShaderProgram();\r\n\t}\r\n\r\n\t/**\r\n\t * The power used in the Fresnel equation. Higher values make the fresnel effect more pronounced. Defaults to 5.\r\n\t */\r\n\tpublic get fresnelPower():number\r\n\t{\r\n\t\treturn this._fresnelPower;\r\n\t}\r\n\r\n\tpublic set fresnelPower(value:number)\r\n\t{\r\n\t\tthis._fresnelPower = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic iCleanCompilationData()\r\n\t{\r\n\t\tsuper.iCleanCompilationData();\r\n\t\tthis._dataReg = null;\r\n\t}\r\n\r\n\t/**\r\n\t * The minimum amount of reflectance, ie the reflectance when the view direction is normal to the surface or light direction.\r\n\t */\r\n\tpublic get normalReflectance():number\r\n\t{\r\n\t\treturn this._normalReflectance;\r\n\t}\r\n\r\n\tpublic set normalReflectance(value:number)\r\n\t{\r\n\t\tthis._normalReflectance = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic iActivate(shaderObject:ShaderLightingObject, methodVO:MethodVO, stage:Stage)\r\n\t{\r\n\t\tsuper.iActivate(shaderObject, methodVO, stage);\r\n\r\n\t\tvar fragmentData:Array<number> = shaderObject.fragmentConstantData;\r\n\r\n\t\tvar index:number = methodVO.secondaryFragmentConstantsIndex;\r\n\t\tfragmentData[index] = this._normalReflectance;\r\n\t\tfragmentData[index + 1] = this._fresnelPower;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic iGetFragmentPreLightingCode(shaderObject:ShaderLightingObject, methodVO:MethodVO, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\r\n\t{\r\n\t\tthis._dataReg = registerCache.getFreeFragmentConstant();\r\n\r\n\t\tmethodVO.secondaryFragmentConstantsIndex = this._dataReg.index*4;\r\n\r\n\t\treturn super.iGetFragmentPreLightingCode(shaderObject, methodVO, registerCache, sharedRegisters);\r\n\t}\r\n\r\n\t/**\r\n\t * Applies the fresnel effect to the specular strength.\r\n\t *\r\n\t * @param vo The MethodVO object containing the method data for the currently compiled material pass.\r\n\t * @param target The register containing the specular strength in the \"w\" component, and the half-vector/reflection vector in \"xyz\".\r\n\t * @param regCache The register cache used for the shader compilation.\r\n\t * @param sharedRegisters The shared registers created by the compiler.\r\n\t * @return The AGAL fragment code for the method.\r\n\t */\r\n\tprivate modulateSpecular(shaderObject:ShaderObjectBase, methodVO:MethodVO, targetReg:ShaderRegisterElement, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\r\n\t{\r\n\t\tvar code:string;\r\n\r\n\t\tcode = \"dp3 \" + targetReg + \".y, \" + sharedRegisters.viewDirFragment + \".xyz, \" + (this._incidentLight? targetReg : sharedRegisters.normalFragment) + \".xyz\\n\" +   // dot(V, H)\r\n\t\t\t\"sub \" + targetReg + \".y, \" + this._dataReg + \".z, \" + targetReg + \".y\\n\" +             // base = 1-dot(V, H)\r\n\t\t\t\"pow \" + targetReg + \".x, \" + targetReg + \".y, \" + this._dataReg + \".y\\n\" +             // exp = pow(base, 5)\r\n\t\t\t\"sub \" + targetReg + \".y, \" + this._dataReg + \".z, \" + targetReg + \".y\\n\" +             // 1 - exp\r\n\t\t\t\"mul \" + targetReg + \".y, \" + this._dataReg + \".x, \" + targetReg + \".y\\n\" +             // f0*(1 - exp)\r\n\t\t\t\"add \" + targetReg + \".y, \" + targetReg + \".x, \" + targetReg + \".y\\n\" +          // exp + f0*(1 - exp)\r\n\t\t\t\"mul \" + targetReg + \".w, \" + targetReg + \".w, \" + targetReg + \".y\\n\";\r\n\r\n\t\treturn code;\r\n\t}\r\n\r\n}\r\n\r\nexport = SpecularFresnelMethod;","import ShaderLightingObject\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderLightingObject\");\r\nimport ShaderRegisterCache\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterCache\");\r\nimport ShaderRegisterData\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterData\");\r\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterElement\");\r\n\r\nimport MethodVO\t\t\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/data/MethodVO\");\r\nimport SpecularBasicMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/SpecularBasicMethod\");\r\n\r\n/**\r\n * SpecularPhongMethod provides a specular method that provides Phong highlights.\r\n */\r\nclass SpecularPhongMethod extends SpecularBasicMethod\r\n{\r\n\t/**\r\n\t * Creates a new SpecularPhongMethod object.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic iGetFragmentCodePerLight(shaderObject:ShaderLightingObject, methodVO:MethodVO, lightDirReg:ShaderRegisterElement, lightColReg:ShaderRegisterElement, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\r\n\t{\r\n\t\tvar code:string = \"\";\r\n\t\tvar t:ShaderRegisterElement;\r\n\r\n\t\tif (this._pIsFirstLight) {\r\n\t\t\tt = this._pTotalLightColorReg;\r\n\t\t} else {\r\n\t\t\tt = registerCache.getFreeFragmentVectorTemp();\r\n\t\t\tregisterCache.addFragmentTempUsages(t, 1);\r\n\t\t}\r\n\r\n\t\tvar viewDirReg:ShaderRegisterElement =sharedRegisters.viewDirFragment;\r\n\t\tvar normalReg:ShaderRegisterElement =sharedRegisters.normalFragment;\r\n\r\n\t\t// phong model\r\n\t\tcode += \"dp3 \" + t + \".w, \" + lightDirReg + \", \" + normalReg + \"\\n\" + // sca1 = light.normal\r\n\r\n\t\t\t//find the reflected light vector R\r\n\t\t\t\"add \" + t + \".w, \" + t + \".w, \" + t + \".w\\n\" + // sca1 = sca1*2\r\n\t\t\t\"mul \" + t + \".xyz, \" + normalReg + \", \" + t + \".w\\n\" + // vec1 = normal*sca1\r\n\t\t\t\"sub \" + t + \".xyz, \" + t + \", \" + lightDirReg + \"\\n\" + // vec1 = vec1 - light (light vector is negative)\r\n\r\n\t\t\t//smooth the edge as incidence angle approaches 90\r\n\t\t\t\"add \" + t + \".w, \" + t + \".w, \" +sharedRegisters.commons + \".w\\n\" + // sca1 = sca1 + smoothtep;\r\n\t\t\t\"sat \" + t + \".w, \" + t + \".w\\n\" + // sca1 range 0 - 1\r\n\t\t\t\"mul \" + t + \".xyz, \" + t + \", \" + t + \".w\\n\" + // vec1 = vec1*sca1\r\n\r\n\t\t\t//find the dot product between R and V\r\n\t\t\t\"dp3 \" + t + \".w, \" + t + \", \" + viewDirReg + \"\\n\" + // sca1 = vec1.view\r\n\t\t\t\"sat \" + t + \".w, \" + t + \".w\\n\";\r\n\r\n\t\tif (this._pUseTexture) {\r\n\t\t\t// apply gloss modulation from texture\r\n\t\t\tcode += \"mul \" + this._pSpecularTexData + \".w, \" + this._pSpecularTexData + \".y, \" + this._pSpecularDataRegister + \".w\\n\" + \"pow \" + t + \".w, \" + t + \".w, \" + this._pSpecularTexData + \".w\\n\";\r\n\t\t} else\r\n\t\t\tcode += \"pow \" + t + \".w, \" + t + \".w, \" + this._pSpecularDataRegister + \".w\\n\";\r\n\r\n\t\t// attenuate\r\n\t\tif (shaderObject.usesLightFallOff)\r\n\t\t\tcode += \"mul \" + t + \".w, \" + t + \".w, \" + lightDirReg + \".w\\n\";\r\n\r\n\t\tif (this._iModulateMethod != null)\r\n\t\t\tcode += this._iModulateMethod(shaderObject, methodVO, t, registerCache, sharedRegisters);\r\n\r\n\t\tcode += \"mul \" + t + \".xyz, \" + lightColReg + \".xyz, \" + t + \".w\\n\";\r\n\r\n\t\tif (!this._pIsFirstLight) {\r\n\t\t\tcode += \"add \" + this._pTotalLightColorReg + \".xyz, \" + this._pTotalLightColorReg + \".xyz, \" + t + \".xyz\\n\";\r\n\t\t\tregisterCache.removeFragmentTempUsage(t);\r\n\t\t}\r\n\r\n\t\tthis._pIsFirstLight = false;\r\n\r\n\t\treturn code;\r\n\t}\r\n}\r\n\r\nexport = SpecularPhongMethod;","class PassMode\r\n{\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static EFFECTS:number = 0x01;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static LIGHTING:number = 0x02;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static SUPER_SHADER:number = 0x03;\r\n}\r\n\r\nexport = PassMode;","import ColorTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\r\nimport Matrix\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\r\nimport Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Matrix3DUtils\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\r\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport AbstractMethodError\t\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\nimport Event\t\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\nimport MaterialBase\t\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\nimport TriangleSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport IRenderObjectOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderObjectOwner\");\r\nimport LightPickerBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/LightPickerBase\");\r\nimport LightSources\t\t\t\t\t\t= require(\"awayjs-display/lib/materials/LightSources\");\r\n\r\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\r\n\r\nimport RendererBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/base/RendererBase\");\r\nimport ShaderLightingObject\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderLightingObject\");\r\nimport ShadingMethodEvent\t\t\t\t= require(\"awayjs-renderergl/lib/events/ShadingMethodEvent\");\r\nimport ShaderObjectBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderObjectBase\");\r\nimport ShaderRegisterCache\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterCache\");\r\nimport ShaderRegisterData\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterData\");\r\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterElement\");\r\nimport RenderableBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/pool/RenderableBase\");\r\nimport RenderPassBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/passes/RenderPassBase\");\r\nimport IRenderLightingPass\t\t\t\t= require(\"awayjs-renderergl/lib/passes/IRenderLightingPass\");\r\nimport IRenderableClass\t\t\t\t\t= require(\"awayjs-renderergl/lib/pool/IRenderableClass\");\r\n\r\nimport MethodVO\t\t\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/data/MethodVO\");\r\nimport RenderMethodMaterialObject\t\t= require(\"awayjs-methodmaterials/lib/compilation/RenderMethodMaterialObject\");\r\nimport AmbientBasicMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/AmbientBasicMethod\");\r\nimport DiffuseBasicMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/DiffuseBasicMethod\");\r\nimport EffectColorTransformMethod\t\t= require(\"awayjs-methodmaterials/lib/methods/EffectColorTransformMethod\");\r\nimport EffectMethodBase\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/EffectMethodBase\");\r\nimport LightingMethodBase\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/LightingMethodBase\");\r\nimport NormalBasicMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/NormalBasicMethod\");\r\nimport ShadowMapMethodBase\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/ShadowMapMethodBase\");\r\nimport SpecularBasicMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/SpecularBasicMethod\");\r\nimport MethodPassMode\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/passes/MethodPassMode\");\r\n\r\n/**\r\n * CompiledPass forms an abstract base class for the default compiled pass materials provided by Away3D,\r\n * using material methods to define their appearance.\r\n */\r\nclass MethodPass extends RenderPassBase implements IRenderLightingPass\r\n{\r\n\tprivate _maxLights:number = 3;\r\n\r\n\tprivate _mode:number = 0x03;\r\n\tprivate _material:MaterialBase;\r\n\tprivate _lightPicker:LightPickerBase;\r\n\r\n\tprivate _includeCasters:boolean = true;\r\n\r\n\tpublic _iColorTransformMethodVO:MethodVO;\r\n\tpublic _iNormalMethodVO:MethodVO;\r\n\tpublic _iAmbientMethodVO:MethodVO;\r\n\tpublic _iShadowMethodVO:MethodVO;\r\n\tpublic _iDiffuseMethodVO:MethodVO;\r\n\tpublic _iSpecularMethodVO:MethodVO;\r\n\tpublic _iMethodVOs:Array<MethodVO> = new Array<MethodVO>();\r\n\r\n\tpublic _numEffectDependencies:number = 0;\r\n\r\n\tprivate _onLightsChangeDelegate:(event:Event) => void;\r\n\tprivate _onMethodInvalidatedDelegate:(event:ShadingMethodEvent) => void;\r\n\r\n\tpublic numDirectionalLights:number = 0;\r\n\r\n\tpublic numPointLights:number = 0;\r\n\r\n\tpublic numLightProbes:number = 0;\r\n\r\n\tpublic pointLightsOffset:number = 0;\r\n\t\r\n\tpublic directionalLightsOffset:number= 0;\r\n\t\r\n\tpublic lightProbesOffset:number = 0;\r\n\t\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get mode():number\r\n\t{\r\n\t\treturn this._mode;\r\n\t}\r\n\r\n\tpublic set mode(value:number)\r\n\t{\r\n\t\tif (this._mode == value)\r\n\t\t\treturn;\r\n\t\t\r\n\t\tthis._mode = value;\r\n\r\n\t\tthis._updateLights();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not shadow casting lights need to be included.\r\n\t */\r\n\tpublic get includeCasters():boolean\r\n\t{\r\n\t\treturn this._includeCasters;\r\n\t}\r\n\r\n\tpublic set includeCasters(value:boolean)\r\n\t{\r\n\t\tif (this._includeCasters == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._includeCasters = value;\r\n\r\n\t\tthis._updateLights();\r\n\t}\r\n\r\n\t/**\r\n\t * \r\n\t * @returns {LightPickerBase}\r\n\t */\r\n\tpublic get lightPicker():LightPickerBase\r\n\t{\r\n\t\treturn this._lightPicker;\r\n\t}\r\n\r\n\tpublic set lightPicker(value:LightPickerBase)\r\n\t{\r\n\t\t//if (this._lightPicker == value)\r\n\t\t//\treturn;\r\n\r\n\t\tif (this._lightPicker)\r\n\t\t\tthis._lightPicker.removeEventListener(Event.CHANGE, this._onLightsChangeDelegate);\r\n\r\n\t\tthis._lightPicker = value;\r\n\r\n\t\tif (this._lightPicker)\r\n\t\t\tthis._lightPicker.addEventListener(Event.CHANGE, this._onLightsChangeDelegate);\r\n\r\n\t\tthis._updateLights();\r\n\t}\r\n\t\r\n\t/**\r\n\t * Whether or not to use fallOff and radius properties for lights. This can be used to improve performance and\r\n\t * compatibility for constrained mode.\r\n\t */\r\n\tpublic get enableLightFallOff():boolean\r\n\t{\r\n\t\treturn this._material.enableLightFallOff;\r\n\t}\r\n\r\n\t/**\r\n\t * Define which light source types to use for diffuse reflections. This allows choosing between regular lights\r\n\t * and/or light probes for diffuse reflections.\r\n\t *\r\n\t * @see away3d.materials.LightSources\r\n\t */\r\n\tpublic get diffuseLightSources():number\r\n\t{\r\n\t\treturn this._material.diffuseLightSources;\r\n\t}\r\n\r\n\t/**\r\n\t * Define which light source types to use for specular reflections. This allows choosing between regular lights\r\n\t * and/or light probes for specular reflections.\r\n\t *\r\n\t * @see away3d.materials.LightSources\r\n\t */\r\n\tpublic get specularLightSources():number\r\n\t{\r\n\t\treturn this._material.specularLightSources;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new CompiledPass object.\r\n\t *\r\n\t * @param material The material to which this pass belongs.\r\n\t */\r\n\tconstructor(mode:number, renderObject:RenderMethodMaterialObject, renderObjectOwner:MaterialBase, renderableClass:IRenderableClass, stage:Stage)\r\n\t{\r\n\t\tsuper(renderObject, renderObjectOwner, renderableClass, stage);\r\n\r\n\t\tthis._mode = mode;\r\n\r\n\t\tthis._material = renderObjectOwner;\r\n\r\n\t\tthis._onLightsChangeDelegate = (event:Event) => this.onLightsChange(event);\r\n\t\t\r\n\t\tthis._onMethodInvalidatedDelegate = (event:ShadingMethodEvent) => this.onMethodInvalidated(event);\r\n\r\n\t\tthis.lightPicker = renderObjectOwner.lightPicker;\r\n\r\n\t\tif (this._shader == null)\r\n\t\t\tthis._updateShader();\r\n\t}\r\n\r\n\tprivate _updateShader()\r\n\t{\r\n\t\tif ((this.numDirectionalLights || this.numPointLights || this.numLightProbes) && !(this._shader instanceof ShaderLightingObject)) {\r\n\t\t\tif (this._shader != null)\r\n\t\t\t\tthis._shader.dispose();\r\n\r\n\t\t\tthis._shader = new ShaderLightingObject(this._renderableClass, this, this._stage);\r\n\t\t} else if (!(this._shader instanceof ShaderObjectBase)) {\r\n\t\t\tif (this._shader != null)\r\n\t\t\t\tthis._shader.dispose();\r\n\r\n\t\t\tthis._shader = new ShaderObjectBase(this._renderableClass, this, this._stage);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Initializes the unchanging constant data for this material.\r\n\t */\r\n\tpublic _iInitConstantData(shaderObject:ShaderObjectBase)\r\n\t{\r\n\t\tsuper._iInitConstantData(shaderObject);\r\n\r\n\t\t//Updates method constants if they have changed.\r\n\t\tvar len:number = this._iMethodVOs.length;\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tthis._iMethodVOs[i].method.iInitConstants(shaderObject, this._iMethodVOs[i]);\r\n\t}\r\n\r\n\t/**\r\n\t * The ColorTransform object to transform the colour of the material with. Defaults to null.\r\n\t */\r\n\tpublic get colorTransform():ColorTransform\r\n\t{\r\n\t\treturn this.colorTransformMethod? this.colorTransformMethod.colorTransform : null;\r\n\t}\r\n\r\n\tpublic set colorTransform(value:ColorTransform)\r\n\t{\r\n\t\tif (value) {\r\n\t\t\tif (this.colorTransformMethod == null)\r\n\t\t\t\tthis.colorTransformMethod = new EffectColorTransformMethod();\r\n\r\n\t\t\tthis.colorTransformMethod.colorTransform = value;\r\n\r\n\t\t} else if (!value) {\r\n\t\t\tif (this.colorTransformMethod)\r\n\t\t\t\tthis.colorTransformMethod = null;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * The EffectColorTransformMethod object to transform the colour of the material with. Defaults to null.\r\n\t */\r\n\tpublic get colorTransformMethod():EffectColorTransformMethod\r\n\t{\r\n\t\treturn this._iColorTransformMethodVO? <EffectColorTransformMethod> this._iColorTransformMethodVO.method : null;\r\n\t}\r\n\r\n\tpublic set colorTransformMethod(value:EffectColorTransformMethod)\r\n\t{\r\n\t\tif (this._iColorTransformMethodVO && this._iColorTransformMethodVO.method == value)\r\n\t\t\treturn;\r\n\r\n\t\tif (this._iColorTransformMethodVO) {\r\n\t\t\tthis._removeDependency(this._iColorTransformMethodVO);\r\n\t\t\tthis._iColorTransformMethodVO = null;\r\n\t\t}\r\n\r\n\t\tif (value) {\r\n\t\t\tthis._iColorTransformMethodVO = new MethodVO(value);\r\n\t\t\tthis._addDependency(this._iColorTransformMethodVO);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _removeDependency(methodVO:MethodVO, effectsDependency:boolean = false)\r\n\t{\r\n\t\tvar index:number = this._iMethodVOs.indexOf(methodVO);\r\n\r\n\t\tif (!effectsDependency)\r\n\t\t\tthis._numEffectDependencies--;\r\n\r\n\t\tmethodVO.method.removeEventListener(ShadingMethodEvent.SHADER_INVALIDATED, this._onMethodInvalidatedDelegate);\r\n\t\tthis._iMethodVOs.splice(index, 1);\r\n\r\n\t\tthis.invalidatePass();\r\n\t}\r\n\r\n\tprivate _addDependency(methodVO:MethodVO, effectsDependency:boolean = false, index:number = -1)\r\n\t{\r\n\t\tmethodVO.method.addEventListener(ShadingMethodEvent.SHADER_INVALIDATED, this._onMethodInvalidatedDelegate);\r\n\r\n\t\tif (effectsDependency) {\r\n\t\t\tif (index != -1)\r\n\t\t\t\tthis._iMethodVOs.splice(index + this._iMethodVOs.length - this._numEffectDependencies, 0, methodVO);\r\n\t\t\telse\r\n\t\t\t\tthis._iMethodVOs.push(methodVO);\r\n\t\t\tthis._numEffectDependencies++;\r\n\t\t} else {\r\n\t\t\tthis._iMethodVOs.splice(this._iMethodVOs.length - this._numEffectDependencies, 0, methodVO);\r\n\t\t}\r\n\r\n\t\tthis.invalidatePass();\r\n\t}\r\n\r\n\t/**\r\n\t * Appends an \"effect\" shading method to the shader. Effect methods are those that do not influence the lighting\r\n\t * but modulate the shaded colour, used for fog, outlines, etc. The method will be applied to the result of the\r\n\t * methods added prior.\r\n\t */\r\n\tpublic addEffectMethod(method:EffectMethodBase)\r\n\t{\r\n\t\tthis._addDependency(new MethodVO(method), true);\r\n\t}\r\n\r\n\t/**\r\n\t * The number of \"effect\" methods added to the material.\r\n\t */\r\n\tpublic get numEffectMethods():number\r\n\t{\r\n\t\treturn this._numEffectDependencies;\r\n\t}\r\n\r\n\t/**\r\n\t * Queries whether a given effects method was added to the material.\r\n\t *\r\n\t * @param method The method to be queried.\r\n\t * @return true if the method was added to the material, false otherwise.\r\n\t */\r\n\tpublic hasEffectMethod(method:EffectMethodBase):boolean\r\n\t{\r\n\t\treturn this.getDependencyForMethod(method) != null;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the method added at the given index.\r\n\t * @param index The index of the method to retrieve.\r\n\t * @return The method at the given index.\r\n\t */\r\n\tpublic getEffectMethodAt(index:number):EffectMethodBase\r\n\t{\r\n\t\tif (index < 0 || index > this._numEffectDependencies - 1)\r\n\t\t\treturn null;\r\n\r\n\t\treturn <EffectMethodBase> this._iMethodVOs[index + this._iMethodVOs.length - this._numEffectDependencies].method;\r\n\t}\r\n\r\n\t/**\r\n\t * Adds an effect method at the specified index amongst the methods already added to the material. Effect\r\n\t * methods are those that do not influence the lighting but modulate the shaded colour, used for fog, outlines,\r\n\t * etc. The method will be applied to the result of the methods with a lower index.\r\n\t */\r\n\tpublic addEffectMethodAt(method:EffectMethodBase, index:number)\r\n\t{\r\n\t\tthis._addDependency(new MethodVO(method), true, index);\r\n\t}\r\n\r\n\t/**\r\n\t * Removes an effect method from the material.\r\n\t * @param method The method to be removed.\r\n\t */\r\n\tpublic removeEffectMethod(method:EffectMethodBase)\r\n\t{\r\n\t\tvar methodVO:MethodVO = this.getDependencyForMethod(method);\r\n\r\n\t\tif (methodVO != null)\r\n\t\t\tthis._removeDependency(methodVO, true);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * remove an effect method at the specified index from the material.\r\n\t */\r\n\tpublic removeEffectMethodAt(index:number)\r\n\t{\r\n\t\tif (index < 0 || index > this._numEffectDependencies - 1)\r\n\t\t\treturn;\r\n\r\n\t\tvar methodVO:MethodVO = this._iMethodVOs[index + this._iMethodVOs.length - this._numEffectDependencies];\r\n\r\n\t\tif (methodVO != null)\r\n\t\t\tthis._removeDependency(methodVO, true);\r\n\t}\r\n\r\n\r\n\tprivate getDependencyForMethod(method:EffectMethodBase):MethodVO\r\n\t{\r\n\t\tvar len:number = this._iMethodVOs.length;\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tif (this._iMethodVOs[i].method == method)\r\n\t\t\t\treturn this._iMethodVOs[i];\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * The method used to generate the per-pixel normals. Defaults to NormalBasicMethod.\r\n\t */\r\n\tpublic get normalMethod():NormalBasicMethod\r\n\t{\r\n\t\treturn this._iNormalMethodVO? <NormalBasicMethod> this._iNormalMethodVO.method : null;\r\n\t}\r\n\r\n\tpublic set normalMethod(value:NormalBasicMethod)\r\n\t{\r\n\t\tif (this._iNormalMethodVO && this._iNormalMethodVO.method == value)\r\n\t\t\treturn;\r\n\r\n\t\tif (this._iNormalMethodVO) {\r\n\t\t\tthis._removeDependency(this._iNormalMethodVO);\r\n\t\t\tthis._iNormalMethodVO = null;\r\n\t\t}\r\n\r\n\t\tif (value) {\r\n\t\t\tthis._iNormalMethodVO = new MethodVO(value);\r\n\t\t\tthis._addDependency(this._iNormalMethodVO);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * The method that provides the ambient lighting contribution. Defaults to AmbientBasicMethod.\r\n\t */\r\n\tpublic get ambientMethod():AmbientBasicMethod\r\n\t{\r\n\t\treturn this._iAmbientMethodVO? <AmbientBasicMethod> this._iAmbientMethodVO.method : null;\r\n\t}\r\n\r\n\tpublic set ambientMethod(value:AmbientBasicMethod)\r\n\t{\r\n\t\tif (this._iAmbientMethodVO && this._iAmbientMethodVO.method == value)\r\n\t\t\treturn;\r\n\r\n\t\tif (this._iAmbientMethodVO) {\r\n\t\t\tthis._removeDependency(this._iAmbientMethodVO);\r\n\t\t\tthis._iAmbientMethodVO = null;\r\n\t\t}\r\n\r\n\t\tif (value) {\r\n\t\t\tthis._iAmbientMethodVO = new MethodVO(value);\r\n\t\t\tthis._addDependency(this._iAmbientMethodVO);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * The method used to render shadows cast on this surface, or null if no shadows are to be rendered. Defaults to null.\r\n\t */\r\n\tpublic get shadowMethod():ShadowMapMethodBase\r\n\t{\r\n\t\treturn this._iShadowMethodVO? <ShadowMapMethodBase> this._iShadowMethodVO.method : null;\r\n\t}\r\n\r\n\tpublic set shadowMethod(value:ShadowMapMethodBase)\r\n\t{\r\n\t\tif (this._iShadowMethodVO && this._iShadowMethodVO.method == value)\r\n\t\t\treturn;\r\n\r\n\t\tif (this._iShadowMethodVO) {\r\n\t\t\tthis._removeDependency(this._iShadowMethodVO);\r\n\t\t\tthis._iShadowMethodVO = null;\r\n\t\t}\r\n\r\n\t\tif (value) {\r\n\t\t\tthis._iShadowMethodVO = new MethodVO(value);\r\n\t\t\tthis._addDependency(this._iShadowMethodVO);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * The method that provides the diffuse lighting contribution. Defaults to DiffuseBasicMethod.\r\n\t */\r\n\tpublic get diffuseMethod():DiffuseBasicMethod\r\n\t{\r\n\t\treturn this._iDiffuseMethodVO? <DiffuseBasicMethod> this._iDiffuseMethodVO.method : null;\r\n\t}\r\n\r\n\tpublic set diffuseMethod(value:DiffuseBasicMethod)\r\n\t{\r\n\t\tif (this._iDiffuseMethodVO && this._iDiffuseMethodVO.method == value)\r\n\t\t\treturn;\r\n\r\n\t\tif (this._iDiffuseMethodVO) {\r\n\t\t\tthis._removeDependency(this._iDiffuseMethodVO);\r\n\t\t\tthis._iDiffuseMethodVO = null;\r\n\t\t}\r\n\r\n\t\tif (value) {\r\n\t\t\tthis._iDiffuseMethodVO = new MethodVO(value);\r\n\t\t\tthis._addDependency(this._iDiffuseMethodVO);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * The method that provides the specular lighting contribution. Defaults to SpecularBasicMethod.\r\n\t */\r\n\tpublic get specularMethod():SpecularBasicMethod\r\n\t{\r\n\t\treturn this._iSpecularMethodVO? <SpecularBasicMethod> this._iSpecularMethodVO.method : null;\r\n\t}\r\n\r\n\tpublic set specularMethod(value:SpecularBasicMethod)\r\n\t{\r\n\t\tif (this._iSpecularMethodVO && this._iSpecularMethodVO.method == value)\r\n\t\t\treturn;\r\n\r\n\t\tif (this._iSpecularMethodVO) {\r\n\t\t\tthis._removeDependency(this._iSpecularMethodVO);\r\n\t\t\tthis._iSpecularMethodVO = null;\r\n\t\t}\r\n\r\n\t\tif (value) {\r\n\t\t\tthis._iSpecularMethodVO = new MethodVO(value);\r\n\t\t\tthis._addDependency(this._iSpecularMethodVO);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tsuper.dispose();\r\n\r\n\t\tif (this._lightPicker)\r\n\t\t\tthis._lightPicker.removeEventListener(Event.CHANGE, this._onLightsChangeDelegate);\r\n\t\t\r\n\t\twhile (this._iMethodVOs.length)\r\n\t\t\tthis._removeDependency(this._iMethodVOs[0]);\r\n\r\n\t\tthis._iMethodVOs = null;\r\n\t}\r\n\r\n\t/**\r\n\t * Called when any method's shader code is invalidated.\r\n\t */\r\n\tprivate onMethodInvalidated(event:ShadingMethodEvent)\r\n\t{\r\n\t\tthis.invalidatePass();\r\n\t}\r\n\r\n\t// RENDER LOOP\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _iActivate(camera:Camera)\r\n\t{\r\n\t\tsuper._iActivate(camera);\r\n\r\n\t\tvar methodVO:MethodVO;\r\n\t\tvar len:number = this._iMethodVOs.length;\r\n\t\tfor (var i:number = 0; i < len; ++i) {\r\n\t\t\tmethodVO = this._iMethodVOs[i];\r\n\t\t\tif (methodVO.useMethod)\r\n\t\t\t\tmethodVO.method.iActivate(this._shader, methodVO, this._stage);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t *\r\n\t * @param renderable\r\n\t * @param stage\r\n\t * @param camera\r\n\t */\r\n\tpublic _iRender(renderable:RenderableBase, camera:Camera, viewProjection:Matrix3D)\r\n\t{\r\n\t\tsuper._iRender(renderable, camera, viewProjection);\r\n\r\n\t\tvar methodVO:MethodVO;\r\n\t\tvar len:number = this._iMethodVOs.length;\r\n\t\tfor (var i:number = 0; i < len; ++i) {\r\n\t\t\tmethodVO = this._iMethodVOs[i];\r\n\t\t\tif (methodVO.useMethod)\r\n\t\t\t\tmethodVO.method.iSetRenderState(this._shader, methodVO, renderable, this._stage, camera);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _iDeactivate()\r\n\t{\r\n\t\tsuper._iDeactivate();\r\n\r\n\t\tvar methodVO:MethodVO;\r\n\t\tvar len:number = this._iMethodVOs.length;\r\n\t\tfor (var i:number = 0; i < len; ++i) {\r\n\t\t\tmethodVO = this._iMethodVOs[i];\r\n\t\t\tif (methodVO.useMethod)\r\n\t\t\t\tmethodVO.method.iDeactivate(this._shader, methodVO, this._stage);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic _iIncludeDependencies(shaderObject:ShaderLightingObject)\r\n\t{\r\n\t\tsuper._iIncludeDependencies(shaderObject);\r\n\r\n\t\t//TODO: fragment animtion should be compatible with lighting pass\r\n\t\tshaderObject.usesFragmentAnimation = Boolean(this._mode == MethodPassMode.SUPER_SHADER);\r\n\r\n\t\tif (!shaderObject.usesTangentSpace && this.numPointLights > 0 && shaderObject.usesLights) {\r\n\t\t\tshaderObject.globalPosDependencies++;\r\n\r\n\t\t\tif (Boolean(this._mode & MethodPassMode.EFFECTS))\r\n\t\t\t\tshaderObject.usesGlobalPosFragment = true;\r\n\t\t}\r\n\r\n\t\tvar i:number;\r\n\t\tvar len:number = this._iMethodVOs.length;\r\n\t\tfor (i = 0; i < len; ++i)\r\n\t\t\tthis.setupAndCountDependencies(shaderObject, this._iMethodVOs[i]);\r\n\r\n\t\tfor (i = 0; i < len; ++i)\r\n\t\t\tthis._iMethodVOs[i].useMethod = this._iMethodVOs[i].method.iIsUsed(shaderObject);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Counts the dependencies for a given method.\r\n\t * @param method The method to count the dependencies for.\r\n\t * @param methodVO The method's data for this material.\r\n\t */\r\n\tprivate setupAndCountDependencies(shaderObject:ShaderObjectBase, methodVO:MethodVO)\r\n\t{\r\n\t\tmethodVO.reset();\r\n\r\n\t\tmethodVO.method.iInitVO(shaderObject, methodVO);\r\n\r\n\t\tif (methodVO.needsProjection)\r\n\t\t\tshaderObject.projectionDependencies++;\r\n\r\n\t\tif (methodVO.needsGlobalVertexPos) {\r\n\r\n\t\t\tshaderObject.globalPosDependencies++;\r\n\r\n\t\t\tif (methodVO.needsGlobalFragmentPos)\r\n\t\t\t\tshaderObject.usesGlobalPosFragment = true;\r\n\r\n\t\t} else if (methodVO.needsGlobalFragmentPos) {\r\n\t\t\tshaderObject.globalPosDependencies++;\r\n\t\t\tshaderObject.usesGlobalPosFragment = true;\r\n\t\t}\r\n\r\n\t\tif (methodVO.needsNormals)\r\n\t\t\tshaderObject.normalDependencies++;\r\n\r\n\t\tif (methodVO.needsTangents)\r\n\t\t\tshaderObject.tangentDependencies++;\r\n\r\n\t\tif (methodVO.needsView)\r\n\t\t\tshaderObject.viewDirDependencies++;\r\n\r\n\t\tif (methodVO.needsUV)\r\n\t\t\tshaderObject.uvDependencies++;\r\n\r\n\t\tif (methodVO.needsSecondaryUV)\r\n\t\t\tshaderObject.secondaryUVDependencies++;\r\n\t}\r\n\r\n\tpublic _iGetPreLightingVertexCode(shaderObject:ShaderObjectBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\r\n\t{\r\n\t\tvar code:string = \"\";\r\n\r\n\t\tif (this._iAmbientMethodVO && this._iAmbientMethodVO.useMethod)\r\n\t\t\tcode += this._iAmbientMethodVO.method.iGetVertexCode(shaderObject, this._iAmbientMethodVO, registerCache, sharedRegisters);\r\n\r\n\t\tif (this._iDiffuseMethodVO && this._iDiffuseMethodVO.useMethod)\r\n\t\t\tcode += this._iDiffuseMethodVO.method.iGetVertexCode(shaderObject, this._iDiffuseMethodVO, registerCache, sharedRegisters);\r\n\r\n\t\tif (this._iSpecularMethodVO && this._iSpecularMethodVO.useMethod)\r\n\t\t\tcode += this._iSpecularMethodVO.method.iGetVertexCode(shaderObject, this._iSpecularMethodVO, registerCache, sharedRegisters);\r\n\r\n\t\treturn code;\r\n\t}\r\n\r\n\tpublic _iGetPreLightingFragmentCode(shaderObject:ShaderObjectBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\r\n\t{\r\n\t\tvar code:string = \"\";\r\n\r\n\t\tif (this._iAmbientMethodVO && this._iAmbientMethodVO.useMethod) {\r\n\t\t\tcode += this._iAmbientMethodVO.method.iGetFragmentCode(shaderObject, this._iAmbientMethodVO, sharedRegisters.shadedTarget, registerCache, sharedRegisters);\r\n\r\n\t\t\tif (this._iAmbientMethodVO.needsNormals)\r\n\t\t\t\tregisterCache.removeFragmentTempUsage(sharedRegisters.normalFragment);\r\n\r\n\t\t\tif (this._iAmbientMethodVO.needsView)\r\n\t\t\t\tregisterCache.removeFragmentTempUsage(sharedRegisters.viewDirFragment);\r\n\t\t}\r\n\r\n\t\tif (this._iDiffuseMethodVO && this._iDiffuseMethodVO.useMethod)\r\n\t\t\tcode += (<LightingMethodBase> this._iDiffuseMethodVO.method).iGetFragmentPreLightingCode(<ShaderLightingObject> shaderObject, this._iDiffuseMethodVO, registerCache, sharedRegisters);\r\n\r\n\t\tif (this._iSpecularMethodVO && this._iSpecularMethodVO.useMethod)\r\n\t\t\tcode += (<LightingMethodBase> this._iSpecularMethodVO.method).iGetFragmentPreLightingCode(<ShaderLightingObject> shaderObject, this._iSpecularMethodVO, registerCache, sharedRegisters);\r\n\r\n\t\treturn code;\r\n\t}\r\n\r\n\tpublic _iGetPerLightDiffuseFragmentCode(shaderObject:ShaderLightingObject, lightDirReg:ShaderRegisterElement, diffuseColorReg:ShaderRegisterElement, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\r\n\t{\r\n\t\treturn (<LightingMethodBase> this._iDiffuseMethodVO.method).iGetFragmentCodePerLight(shaderObject, this._iDiffuseMethodVO, lightDirReg, diffuseColorReg, registerCache, sharedRegisters);\r\n\t}\r\n\r\n\tpublic _iGetPerLightSpecularFragmentCode(shaderObject:ShaderLightingObject, lightDirReg:ShaderRegisterElement, specularColorReg:ShaderRegisterElement, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\r\n\t{\r\n\t\treturn (<LightingMethodBase> this._iSpecularMethodVO.method).iGetFragmentCodePerLight(shaderObject, this._iSpecularMethodVO, lightDirReg, specularColorReg, registerCache, sharedRegisters);\r\n\t}\r\n\r\n\tpublic _iGetPerProbeDiffuseFragmentCode(shaderObject:ShaderLightingObject, texReg:ShaderRegisterElement, weightReg:string, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\r\n\t{\r\n\t\treturn (<LightingMethodBase> this._iDiffuseMethodVO.method).iGetFragmentCodePerProbe(shaderObject, this._iDiffuseMethodVO, texReg, weightReg, registerCache, sharedRegisters);\r\n\t}\r\n\r\n\tpublic _iGetPerProbeSpecularFragmentCode(shaderObject:ShaderLightingObject, texReg:ShaderRegisterElement, weightReg:string, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\r\n\t{\r\n\t\treturn (<LightingMethodBase> this._iSpecularMethodVO.method).iGetFragmentCodePerProbe(shaderObject, this._iSpecularMethodVO, texReg, weightReg, registerCache, sharedRegisters);\r\n\t}\r\n\r\n\tpublic _iGetPostLightingVertexCode(shaderObject:ShaderLightingObject, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\r\n\t{\r\n\t\tvar code:string = \"\";\r\n\r\n\t\tif (this._iShadowMethodVO)\r\n\t\t\tcode += this._iShadowMethodVO.method.iGetVertexCode(shaderObject, this._iShadowMethodVO, registerCache, sharedRegisters);\r\n\r\n\t\treturn code;\r\n\t}\r\n\r\n\tpublic _iGetPostLightingFragmentCode(shaderObject:ShaderLightingObject, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\r\n\t{\r\n\t\tvar code:string = \"\";\r\n\r\n\t\tif (shaderObject.useAlphaPremultiplied && this._pEnableBlending) {\r\n\t\t\tcode += \"add \" + sharedRegisters.shadedTarget + \".w, \" + sharedRegisters.shadedTarget + \".w, \" + sharedRegisters.commons + \".z\\n\" +\r\n\t\t\t\"div \" + sharedRegisters.shadedTarget + \".xyz, \" + sharedRegisters.shadedTarget + \", \" + sharedRegisters.shadedTarget + \".w\\n\" +\r\n\t\t\t\"sub \" + sharedRegisters.shadedTarget + \".w, \" + sharedRegisters.shadedTarget + \".w, \" + sharedRegisters.commons + \".z\\n\" +\r\n\t\t\t\"sat \" + sharedRegisters.shadedTarget + \".xyz, \" + sharedRegisters.shadedTarget + \"\\n\";\r\n\t\t}\r\n\r\n\t\tif (this._iShadowMethodVO)\r\n\t\t\tcode += this._iShadowMethodVO.method.iGetFragmentCode(shaderObject, this._iShadowMethodVO, sharedRegisters.shadowTarget, registerCache, sharedRegisters);\r\n\r\n\t\tif (this._iDiffuseMethodVO && this._iDiffuseMethodVO.useMethod) {\r\n\t\t\tcode += (<LightingMethodBase> this._iDiffuseMethodVO.method).iGetFragmentPostLightingCode(shaderObject, this._iDiffuseMethodVO, sharedRegisters.shadedTarget, registerCache, sharedRegisters);\r\n\r\n\t\t\t// resolve other dependencies as well?\r\n\t\t\tif (this._iDiffuseMethodVO.needsNormals)\r\n\t\t\t\tregisterCache.removeFragmentTempUsage(sharedRegisters.normalFragment);\r\n\r\n\t\t\tif (this._iDiffuseMethodVO.needsView)\r\n\t\t\t\tregisterCache.removeFragmentTempUsage(sharedRegisters.viewDirFragment);\r\n\t\t}\r\n\r\n\t\tif (this._iSpecularMethodVO && this._iSpecularMethodVO.useMethod) {\r\n\t\t\tcode += (<LightingMethodBase> this._iSpecularMethodVO.method).iGetFragmentPostLightingCode(shaderObject, this._iSpecularMethodVO, sharedRegisters.shadedTarget, registerCache, sharedRegisters);\r\n\t\t\tif (this._iSpecularMethodVO.needsNormals)\r\n\t\t\t\tregisterCache.removeFragmentTempUsage(sharedRegisters.normalFragment);\r\n\t\t\tif (this._iSpecularMethodVO.needsView)\r\n\t\t\t\tregisterCache.removeFragmentTempUsage(sharedRegisters.viewDirFragment);\r\n\t\t}\r\n\r\n\t\tif (this._iShadowMethodVO)\r\n\t\t\tregisterCache.removeFragmentTempUsage(sharedRegisters.shadowTarget);\r\n\r\n\t\treturn code;\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not normals are allowed in tangent space. This is only the case if no object-space\r\n\t * dependencies exist.\r\n\t */\r\n\tpublic _pUsesTangentSpace(shaderObject:ShaderLightingObject):boolean\r\n\t{\r\n\t\tif (shaderObject.usesProbes)\r\n\t\t\treturn false;\r\n\r\n\t\tvar methodVO:MethodVO;\r\n\t\tvar len:number = this._iMethodVOs.length;\r\n\t\tfor (var i:number = 0; i < len; ++i) {\r\n\t\t\tmethodVO = this._iMethodVOs[i];\r\n\t\t\tif (methodVO.useMethod && !methodVO.method.iUsesTangentSpace())\r\n\t\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not normals are output in tangent space.\r\n\t */\r\n\tpublic _pOutputsTangentNormals(shaderObject:ShaderObjectBase):boolean\r\n\t{\r\n\t\treturn (<NormalBasicMethod> this._iNormalMethodVO.method).iOutputsTangentNormals();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not normals are output by the pass.\r\n\t */\r\n\tpublic _pOutputsNormals(shaderObject:ShaderObjectBase):boolean\r\n\t{\r\n\t\treturn this._iNormalMethodVO && this._iNormalMethodVO.useMethod;\r\n\t}\r\n\r\n\r\n\tpublic _iGetNormalVertexCode(shaderObject:ShaderObjectBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\r\n\t{\r\n\t\treturn this._iNormalMethodVO.method.iGetVertexCode(shaderObject, this._iNormalMethodVO, registerCache, sharedRegisters);\r\n\t}\r\n\r\n\tpublic _iGetNormalFragmentCode(shaderObject:ShaderObjectBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\r\n\t{\r\n\t\tvar code:string = this._iNormalMethodVO.method.iGetFragmentCode(shaderObject, this._iNormalMethodVO, sharedRegisters.normalFragment, registerCache, sharedRegisters);\r\n\r\n\t\tif (this._iNormalMethodVO.needsView)\r\n\t\t\tregisterCache.removeFragmentTempUsage(sharedRegisters.viewDirFragment);\r\n\r\n\t\tif (this._iNormalMethodVO.needsGlobalFragmentPos || this._iNormalMethodVO.needsGlobalVertexPos)\r\n\t\t\tregisterCache.removeVertexTempUsage(sharedRegisters.globalPositionVertex);\r\n\r\n\t\treturn code;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _iGetVertexCode(shaderObject:ShaderObjectBase, regCache:ShaderRegisterCache, sharedReg:ShaderRegisterData):string\r\n\t{\r\n\t\tvar code:string = \"\";\r\n\t\tvar methodVO:MethodVO;\r\n\t\tvar len:number = this._iMethodVOs.length;\r\n\t\tfor (var i:number = len - this._numEffectDependencies; i < len; i++) {\r\n\t\t\tmethodVO = this._iMethodVOs[i];\r\n\t\t\tif (methodVO.useMethod) {\r\n\t\t\t\tcode += methodVO.method.iGetVertexCode(shaderObject, methodVO, regCache, sharedReg);\r\n\r\n\t\t\t\tif (methodVO.needsGlobalVertexPos || methodVO.needsGlobalFragmentPos)\r\n\t\t\t\t\tregCache.removeVertexTempUsage(sharedReg.globalPositionVertex);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this._iColorTransformMethodVO && this._iColorTransformMethodVO.useMethod)\r\n\t\t\tcode += this._iColorTransformMethodVO.method.iGetVertexCode(shaderObject, this._iColorTransformMethodVO, regCache, sharedReg);\r\n\r\n\t\treturn code;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _iGetFragmentCode(shaderObject:ShaderObjectBase, regCache:ShaderRegisterCache, sharedReg:ShaderRegisterData):string\r\n\t{\r\n\t\tvar code:string = \"\";\r\n\t\tvar alphaReg:ShaderRegisterElement;\r\n\r\n\t\tif (this.preserveAlpha && this._numEffectDependencies > 0) {\r\n\t\t\talphaReg = regCache.getFreeFragmentSingleTemp();\r\n\t\t\tregCache.addFragmentTempUsages(alphaReg, 1);\r\n\t\t\tcode += \"mov \" + alphaReg + \", \" + sharedReg.shadedTarget + \".w\\n\";\r\n\t\t}\r\n\r\n\t\tvar methodVO:MethodVO;\r\n\t\tvar len:number = this._iMethodVOs.length;\r\n\t\tfor (var i:number = len - this._numEffectDependencies; i < len; i++) {\r\n\t\t\tmethodVO = this._iMethodVOs[i];\r\n\t\t\tif (methodVO.useMethod) {\r\n\t\t\t\tcode += methodVO.method.iGetFragmentCode(shaderObject, methodVO, sharedReg.shadedTarget, regCache, sharedReg);\r\n\r\n\t\t\t\tif (methodVO.needsNormals)\r\n\t\t\t\t\tregCache.removeFragmentTempUsage(sharedReg.normalFragment);\r\n\r\n\t\t\t\tif (methodVO.needsView)\r\n\t\t\t\t\tregCache.removeFragmentTempUsage(sharedReg.viewDirFragment);\r\n\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this.preserveAlpha && this._numEffectDependencies > 0) {\r\n\t\t\tcode += \"mov \" + sharedReg.shadedTarget + \".w, \" + alphaReg + \"\\n\";\r\n\t\t\tregCache.removeFragmentTempUsage(alphaReg);\r\n\t\t}\r\n\r\n\t\tif (this._iColorTransformMethodVO && this._iColorTransformMethodVO.useMethod)\r\n\t\t\tcode += this._iColorTransformMethodVO.method.iGetFragmentCode(shaderObject, this._iColorTransformMethodVO, sharedReg.shadedTarget, regCache, sharedReg);\r\n\r\n\t\treturn code;\r\n\t}\r\n\t/**\r\n\t * Indicates whether the shader uses any shadows.\r\n\t */\r\n\tpublic _iUsesShadows(shaderObject:ShaderObjectBase):boolean\r\n\t{\r\n\t\treturn Boolean(this._iShadowMethodVO && (this._lightPicker.castingDirectionalLights.length > 0 || this._lightPicker.castingPointLights.length > 0));\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether the shader uses any specular component.\r\n\t */\r\n\tpublic _iUsesSpecular(shaderObject:ShaderObjectBase):boolean\r\n\t{\r\n\t\treturn Boolean(this._iSpecularMethodVO);\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether the shader uses any specular component.\r\n\t */\r\n\tpublic _iUsesDiffuse(shaderObject:ShaderObjectBase):boolean\r\n\t{\r\n\t\treturn Boolean(this._iDiffuseMethodVO);\r\n\t}\r\n\r\n\r\n\tprivate onLightsChange(event:Event)\r\n\t{\r\n\t\tthis._updateLights();\r\n\t}\r\n\r\n\tprivate _updateLights()\r\n\t{\r\n\t\tvar numDirectionalLightsOld:number = this.numDirectionalLights;\r\n\t\tvar numPointLightsOld:number = this.numPointLights;\r\n\t\tvar numLightProbesOld:number = this.numLightProbes;\r\n\r\n\t\tif (this._lightPicker && (this._mode & MethodPassMode.LIGHTING)) {\r\n\t\t\tthis.numDirectionalLights = this.calculateNumDirectionalLights(this._lightPicker.numDirectionalLights);\r\n\t\t\tthis.numPointLights = this.calculateNumPointLights(this._lightPicker.numPointLights);\r\n\t\t\tthis.numLightProbes = this.calculateNumProbes(this._lightPicker.numLightProbes);\r\n\r\n\t\t\tif (this._includeCasters) {\r\n\t\t\t\tthis.numDirectionalLights += this._lightPicker.numCastingDirectionalLights;\r\n\t\t\t\tthis.numPointLights += this._lightPicker.numCastingPointLights;\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\t\t\tthis.numDirectionalLights = 0;\r\n\t\t\tthis.numPointLights = 0;\r\n\t\t\tthis.numLightProbes = 0;\r\n\t\t}\r\n\r\n\t\tif (numDirectionalLightsOld != this.numDirectionalLights || numPointLightsOld != this.numPointLights || numLightProbesOld != this.numLightProbes) {\r\n\t\t\tthis._updateShader();\r\n\r\n\t\t\tthis.invalidatePass();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Calculates the amount of directional lights this material will support.\r\n\t * @param numDirectionalLights The maximum amount of directional lights to support.\r\n\t * @return The amount of directional lights this material will support, bounded by the amount necessary.\r\n\t */\r\n\tprivate calculateNumDirectionalLights(numDirectionalLights:number):number\r\n\t{\r\n\t\treturn Math.min(numDirectionalLights - this.directionalLightsOffset, this._maxLights);\r\n\t}\r\n\r\n\t/**\r\n\t * Calculates the amount of point lights this material will support.\r\n\t * @param numDirectionalLights The maximum amount of point lights to support.\r\n\t * @return The amount of point lights this material will support, bounded by the amount necessary.\r\n\t */\r\n\tprivate calculateNumPointLights(numPointLights:number):number\r\n\t{\r\n\t\tvar numFree:number = this._maxLights - this.numDirectionalLights;\r\n\t\treturn Math.min(numPointLights - this.pointLightsOffset, numFree);\r\n\t}\r\n\r\n\t/**\r\n\t * Calculates the amount of light probes this material will support.\r\n\t * @param numDirectionalLights The maximum amount of light probes to support.\r\n\t * @return The amount of light probes this material will support, bounded by the amount necessary.\r\n\t */\r\n\tprivate calculateNumProbes(numLightProbes:number):number\r\n\t{\r\n\t\tvar numChannels:number = 0;\r\n\r\n\t\tif ((this.specularLightSources & LightSources.PROBES) != 0)\r\n\t\t\t++numChannels;\r\n\r\n\t\tif ((this.diffuseLightSources & LightSources.PROBES) != 0)\r\n\t\t\t++numChannels;\r\n\r\n\t\t// 4 channels available\r\n\t\treturn Math.min(numLightProbes - this.lightProbesOffset, (4/numChannels) | 0);\r\n\t}\r\n}\r\n\r\nexport = MethodPass;","import Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport RenderTexture\t\t\t\t\t= require(\"awayjs-core/lib/textures/RenderTexture\");\r\n\r\nimport LightBase\t\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\r\nimport TriangleSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport MaterialBase\t\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\nimport IRenderObjectOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderObjectOwner\");\r\n\r\nimport ContextGLProgramType\t\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLProgramType\");\r\nimport IContextGL\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/IContextGL\");\r\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\r\n\r\nimport RendererBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/base/RendererBase\");\r\nimport RenderObjectBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/RenderObjectBase\");\r\nimport RenderableBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/pool/RenderableBase\");\r\nimport ShaderObjectBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderObjectBase\");\r\nimport ShaderRegisterCache\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterCache\");\r\nimport ShaderRegisterData\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterData\");\r\nimport IRenderableClass\t\t\t\t\t= require(\"awayjs-renderergl/lib/pool/IRenderableClass\");\r\nimport RenderPassBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/passes/RenderPassBase\");\r\n\r\n/**\r\n * The SingleObjectDepthPass provides a material pass that renders a single object to a depth map from the point\r\n * of view from a light.\r\n */\r\nclass SingleObjectDepthPass extends RenderPassBase\r\n{\r\n\tprivate _textures:Object;\r\n\tprivate _projections:Object;\r\n\tprivate _textureSize:number /*uint*/ = 512;\r\n\tprivate _polyOffset:Array<number> = Array<number>(15, 0, 0, 0);\r\n\tprivate _enc:Array<number>;\r\n\tprivate _projectionTexturesInvalid:Boolean = true;\r\n\r\n\t/**\r\n\t * The size of the depth map texture to render to.\r\n\t */\r\n\tpublic get textureSize():number\r\n\t{\r\n\t\treturn this._textureSize;\r\n\t}\r\n\r\n\tpublic set textureSize(value:number)\r\n\t{\r\n\t\tthis._textureSize = value;\r\n\t}\r\n\r\n\t/**\r\n\t * The amount by which the rendered object will be inflated, to prevent depth map rounding errors.\r\n\t */\r\n\tpublic get polyOffset():number\r\n\t{\r\n\t\treturn this._polyOffset[0];\r\n\t}\r\n\r\n\tpublic set polyOffset(value:number)\r\n\t{\r\n\t\tthis._polyOffset[0] = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new SingleObjectDepthPass object.\r\n\t */\r\n\tconstructor(renderObject:RenderObjectBase, renderObjectOwner:IRenderObjectOwner, renderableClass:IRenderableClass, stage:Stage)\r\n\t{\r\n\t\tsuper(renderObject, renderObjectOwner, renderableClass, stage);\r\n\r\n\t\t//this._pNumUsedStreams = 2;\r\n\t\t//this._pNumUsedVertexConstants = 7;\r\n\t\t//this._enc = Array<number>(1.0, 255.0, 65025.0, 16581375.0, 1.0/255.0, 1.0/255.0, 1.0/255.0, 0.0);\r\n\t\t//\r\n\t\t//this._pAnimatableAttributes = Array<string>(\"va0\", \"va1\");\r\n\t\t//this._pAnimationTargetRegisters = Array<string>(\"vt0\", \"vt1\");\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tif (this._textures) {\r\n\t\t\tfor (var key in this._textures) {\r\n\t\t\t\tvar texture:RenderTexture = this._textures[key];\r\n\t\t\t\ttexture.dispose();\r\n\t\t\t}\r\n\t\t\tthis._textures = null;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the projection textures used to contain the depth renders.\r\n\t */\r\n\tprivate updateProjectionTextures()\r\n\t{\r\n\t\tif (this._textures) {\r\n\t\t\tfor (var key in this._textures) {\r\n\t\t\t\tvar texture:RenderTexture = this._textures[key];\r\n\t\t\t\ttexture.dispose();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis._textures = new Object();\r\n\t\tthis._projections = new Object();\r\n\t\tthis._projectionTexturesInvalid = false;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _iGetVertexCode():string\r\n\t{\r\n\t\tvar code:string;\r\n\t\t// offset\r\n\t\tcode = \"mul vt7, vt1, vc4.x\t\\n\" +\r\n\t\t\t\t\"add vt7, vt7, vt0\\n\" +\r\n\t\t\t\t\"mov vt7.w, vt0.w\\n\";\r\n\t\t// project\r\n\t\tcode += \"m44 vt2, vt7, vc0\\n\" +\r\n\t\t\t\t\"mov op, vt2\\n\";\r\n\r\n\t\t// perspective divide\r\n\t\tcode += \"div v0, vt2, vt2.w\\n\";\r\n\r\n\t\treturn code;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _iGetFragmentCode(shaderObject:ShaderObjectBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\r\n\t{\r\n\t\tvar code:string = \"\";\r\n\r\n\t\t// encode float -> rgba\r\n\t\tcode += \"mul ft0, fc0, v0.z\\n\" +\r\n\t\t\t\t\"frc ft0, ft0\\n\" +\r\n\t\t\t\t\"mul ft1, ft0.yzww, fc1\\n\" +\r\n\t\t\t\t\"sub ft0, ft0, ft1\\n\" +\r\n\t\t\t\t\"mov oc, ft0\\n\";\r\n\r\n\t\treturn code;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the depth maps rendered for this object from all lights.\r\n\t * @param renderable The renderable for which to retrieve the depth maps.\r\n\t * @param stage3DProxy The Stage3DProxy object currently used for rendering.\r\n\t * @return A list of depth map textures for all supported lights.\r\n\t */\r\n\tpublic _iGetDepthMap(renderable:RenderableBase):RenderTexture\r\n\t{\r\n\t\treturn this._textures[renderable.renderableOwner.id];\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieves the depth map projection maps for all lights.\r\n\t * @param renderable The renderable for which to retrieve the projection maps.\r\n\t * @return A list of projection maps for all supported lights.\r\n\t */\r\n\tpublic _iGetProjection(renderable:RenderableBase):Matrix3D\r\n\t{\r\n\t\treturn this._projections[renderable.renderableOwner.id];\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _iRender(renderable:RenderableBase, camera:Camera, viewProjection:Matrix3D)\r\n\t{\r\n\t\tvar matrix:Matrix3D;\r\n\t\tvar context:IContextGL = this._stage.context;\r\n\t\tvar len:number /*uint*/;\r\n\t\tvar light:LightBase;\r\n\t\tvar lights:Array<LightBase> = this._renderObjectOwner.lightPicker.allPickedLights;\r\n\t\tvar rId:number = renderable.renderableOwner.id;\r\n\r\n\t\tif (!this._textures[rId])\r\n\t\t\tthis._textures[rId] = new RenderTexture(this._textureSize, this._textureSize);\r\n\r\n\t\tif (!this._projections[rId])\r\n\t\t\tthis._projections[rId] = new Matrix3D();\r\n\r\n\t\tlen = lights.length;\r\n\r\n\t\t// local position = enough\r\n\t\tlight = lights[0];\r\n\r\n\t\tmatrix = light.iGetObjectProjectionMatrix(renderable.sourceEntity, camera, this._projections[rId]);\r\n\r\n\t\tthis._stage.setRenderTarget(this._textures[rId], true);\r\n\t\tcontext.clear(1.0, 1.0, 1.0);\r\n\t\tcontext.setProgramConstantsFromMatrix(ContextGLProgramType.VERTEX, 0, matrix, true);\r\n\t\tcontext.setProgramConstantsFromArray(ContextGLProgramType.FRAGMENT, 0, this._enc, 2);\r\n\r\n\t\tthis._stage.activateBuffer(0, renderable.getVertexData(TriangleSubGeometry.POSITION_DATA), renderable.getVertexOffset(TriangleSubGeometry.POSITION_DATA), TriangleSubGeometry.POSITION_FORMAT);\r\n\t\tthis._stage.activateBuffer(1, renderable.getVertexData(TriangleSubGeometry.NORMAL_DATA), renderable.getVertexOffset(TriangleSubGeometry.NORMAL_DATA), TriangleSubGeometry.NORMAL_FORMAT);\r\n\t\tcontext.drawTriangles(this._stage.getIndexBuffer(renderable.getIndexData()), 0, renderable.numTriangles);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _iActivate(camera:Camera)\r\n\t{\r\n\t\tif (this._projectionTexturesInvalid)\r\n\t\t\tthis.updateProjectionTextures();\r\n\r\n\t\t// never scale\r\n\t\tsuper._iActivate(camera);\r\n\r\n\t\tthis._stage.context.setProgramConstantsFromArray(ContextGLProgramType.VERTEX, 4, this._polyOffset, 1);\r\n\t}\r\n}\r\n\r\nexport = SingleObjectDepthPass;","import IRenderObjectOwner\t\t\t= require(\"awayjs-display/lib/base/IRenderObjectOwner\");\r\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\nimport IRenderablePool\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderablePool\");\r\nimport IRenderObject\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderObject\");\r\n\r\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\r\n\r\nimport RendererBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/base/RendererBase\");\r\nimport RenderableBase\t\t\t\t= require(\"awayjs-renderergl/lib/pool/RenderableBase\");\r\nimport RenderablePoolBase\t\t\t= require(\"awayjs-renderergl/lib/pool/RenderablePoolBase\");\r\nimport IRenderableClass\t\t\t\t= require(\"awayjs-renderergl/lib/pool/IRenderableClass\");\r\nimport RenderObjectPool\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/RenderObjectPool\");\r\nimport SkyboxRenderObject\t\t\t= require(\"awayjs-renderergl/lib/compilation/SkyboxRenderObject\");\r\nimport DepthRenderObject\t\t\t= require(\"awayjs-renderergl/lib/compilation/DepthRenderObject\");\r\nimport DistanceRenderObject\t\t\t= require(\"awayjs-renderergl/lib/compilation/DistanceRenderObject\");\r\nimport RenderObjectBase\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/RenderObjectBase\");\r\nimport RenderMethodMaterialObject\t= require(\"awayjs-methodmaterials/lib/compilation/RenderMethodMaterialObject\");\r\n\r\n/**\r\n * @class away.pool.MethodRenderablePool\r\n */\r\nclass MethodRenderablePool extends RenderablePoolBase\r\n{\r\n\tprivate _methodMaterialRenderObjectPool:RenderObjectPool;\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param renderableClass\r\n\t */\r\n\tconstructor(renderableClass:IRenderableClass, stage:Stage)\r\n\t{\r\n\t\tsuper(renderableClass, stage);\r\n\r\n\t\tthis._methodMaterialRenderObjectPool = new RenderObjectPool(RenderMethodMaterialObject, this._renderableClass, this._stage);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param material\r\n\t * @param renderable\r\n\t */\r\n\tpublic getMethodRenderObject(renderObjectOwner:IRenderObjectOwner):RenderObjectBase\r\n\t{\r\n\t\treturn this._methodMaterialRenderObjectPool.getItem(renderObjectOwner);\r\n\t}\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param renderableClass\r\n\t * @returns MethodRenderablePool\r\n\t */\r\n\tpublic static getPool(renderableClass:IRenderableClass, stage:Stage):MethodRenderablePool\r\n\t{\r\n\t\tvar pools:Object = (RenderablePoolBase._pools[stage.stageIndex] || (RenderablePoolBase._pools[stage.stageIndex] = new Object()));\r\n\r\n\t\treturn (pools[renderableClass.id] || (pools[renderableClass.id] = new MethodRenderablePool(renderableClass, stage)));\r\n\t}\r\n}\r\n\r\nexport = MethodRenderablePool;","import BillboardRenderable\t\t\t= require(\"awayjs-renderergl/lib/pool/BillboardRenderable\");\r\nimport LineSegmentRenderable\t\t= require(\"awayjs-renderergl/lib/pool/LineSegmentRenderable\");\r\nimport LineSubMeshRenderable\t\t= require(\"awayjs-renderergl/lib/pool/LineSubMeshRenderable\");\r\nimport TriangleSubMeshRenderable\t= require(\"awayjs-renderergl/lib/pool/TriangleSubMeshRenderable\");\r\nimport RendererPoolBase\t\t\t\t= require(\"awayjs-renderergl/lib/pool/RendererPoolBase\");\r\nimport RendererBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/base/RendererBase\");\r\n\r\nimport MethodRenderablePool\t\t\t= require(\"awayjs-methodmaterials/lib/pool/MethodRenderablePool\");\r\n\r\n/**\r\n * MethodRendererPool forms an abstract base class for classes that are used in the rendering pipeline to render the\r\n * contents of a partition\r\n *\r\n * @class away.render.MethodRendererPool\r\n */\r\nclass MethodRendererPool extends RendererPoolBase\r\n{\r\n\t/**\r\n\t * Creates a new MethodRendererPool object.\r\n\t */\r\n\tconstructor(renderer:RendererBase)\r\n\t{\r\n\t\tsuper(renderer);\r\n\t}\r\n\r\n\tpublic _pUpdatePool()\r\n\t{\r\n\t\tthis._billboardRenderablePool = MethodRenderablePool.getPool(BillboardRenderable, this._pStage);\r\n\t\tthis._lineSegmentRenderablePool = MethodRenderablePool.getPool(LineSegmentRenderable, this._pStage);\r\n\t\tthis._triangleSubMeshRenderablePool = MethodRenderablePool.getPool(TriangleSubMeshRenderable, this._pStage);\r\n\t\tthis._lineSubMeshRenderablePool = MethodRenderablePool.getPool(LineSubMeshRenderable, this._pStage);\r\n\t}\r\n}\r\n\r\nexport = MethodRendererPool;"],"sourceRoot":"./"}