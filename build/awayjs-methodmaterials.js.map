{
  "version": 3,
  "sources": [
    "node_modules/browserify/node_modules/browser-pack/_prelude.js",
    "awayjs-methodmaterials/lib/MethodMaterialMode.ts",
    "awayjs-methodmaterials/lib/MethodMaterial.ts",
    "awayjs-methodmaterials/lib/compilation/RenderMethodMaterialObject.ts",
    "awayjs-methodmaterials/lib/data/MethodVO.ts",
    "awayjs-methodmaterials/lib/methods/AmbientBasicMethod.ts",
    "awayjs-methodmaterials/lib/methods/AmbientEnvMapMethod.ts",
    "awayjs-methodmaterials/lib/methods/DiffuseBasicMethod.ts",
    "awayjs-methodmaterials/lib/methods/DiffuseCelMethod.ts",
    "awayjs-methodmaterials/lib/methods/DiffuseCompositeMethod.ts",
    "awayjs-methodmaterials/lib/methods/DiffuseDepthMethod.ts",
    "awayjs-methodmaterials/lib/methods/DiffuseGradientMethod.ts",
    "awayjs-methodmaterials/lib/methods/DiffuseLightMapMethod.ts",
    "awayjs-methodmaterials/lib/methods/DiffuseSubSurfaceMethod.ts",
    "awayjs-methodmaterials/lib/methods/DiffuseWrapMethod.ts",
    "awayjs-methodmaterials/lib/methods/EffectAlphaMaskMethod.ts",
    "awayjs-methodmaterials/lib/methods/EffectColorMatrixMethod.ts",
    "awayjs-methodmaterials/lib/methods/EffectColorTransformMethod.ts",
    "awayjs-methodmaterials/lib/methods/EffectEnvMapMethod.ts",
    "awayjs-methodmaterials/lib/methods/EffectFogMethod.ts",
    "awayjs-methodmaterials/lib/methods/EffectFresnelEnvMapMethod.ts",
    "awayjs-methodmaterials/lib/methods/EffectLightMapMethod.ts",
    "awayjs-methodmaterials/lib/methods/EffectMethodBase.ts",
    "awayjs-methodmaterials/lib/methods/EffectRefractionEnvMapMethod.ts",
    "awayjs-methodmaterials/lib/methods/EffectRimLightMethod.ts",
    "awayjs-methodmaterials/lib/methods/LightingMethodBase.ts",
    "awayjs-methodmaterials/lib/methods/NormalBasicMethod.ts",
    "awayjs-methodmaterials/lib/methods/NormalHeightMapMethod.ts",
    "awayjs-methodmaterials/lib/methods/NormalSimpleWaterMethod.ts",
    "awayjs-methodmaterials/lib/methods/ShadingMethodBase.ts",
    "awayjs-methodmaterials/lib/methods/ShadowCascadeMethod.ts",
    "awayjs-methodmaterials/lib/methods/ShadowDitheredMethod.ts",
    "awayjs-methodmaterials/lib/methods/ShadowFilteredMethod.ts",
    "awayjs-methodmaterials/lib/methods/ShadowHardMethod.ts",
    "awayjs-methodmaterials/lib/methods/ShadowMapMethodBase.ts",
    "awayjs-methodmaterials/lib/methods/ShadowMethodBase.ts",
    "awayjs-methodmaterials/lib/methods/ShadowNearMethod.ts",
    "awayjs-methodmaterials/lib/methods/ShadowSoftMethod.ts",
    "awayjs-methodmaterials/lib/methods/SpecularAnisotropicMethod.ts",
    "awayjs-methodmaterials/lib/methods/SpecularBasicMethod.ts",
    "awayjs-methodmaterials/lib/methods/SpecularCelMethod.ts",
    "awayjs-methodmaterials/lib/methods/SpecularCompositeMethod.ts",
    "awayjs-methodmaterials/lib/methods/SpecularFresnelMethod.ts",
    "awayjs-methodmaterials/lib/methods/SpecularPhongMethod.ts",
    "awayjs-methodmaterials/lib/passes/MethodPassMode.ts",
    "awayjs-methodmaterials/lib/passes/MethodPass.ts",
    "awayjs-methodmaterials/lib/passes/SingleObjectDepthPass.ts",
    "awayjs-methodmaterials/lib/pool/MethodRenderablePool.ts",
    "awayjs-methodmaterials/lib/pool/MethodRendererPool.ts"
  ],
  "names": [],
  "mappings": "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",
  "file": "generated.js",
  "sourceRoot": "",
  "sourcesContent": [
    "(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})",
    "class MethodMaterialMode\n{\n\t/**\n\t *\n\t */\n\tpublic static SINGLE_PASS:string = \"singlePass\";\n\n\t/**\n\t *\n\t */\n\tpublic static MULTI_PASS:string = \"multiPass\";\n}\n\nexport = MethodMaterialMode;",
    "﻿import BlendMode\t\t\t\t\t= require(\"awayjs-core/lib/data/BlendMode\");\nimport Texture2DBase\t\t\t\t= require(\"awayjs-core/lib/textures/Texture2DBase\");\n\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport StaticLightPicker\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/StaticLightPicker\");\nimport IRenderObjectOwner\t\t\t= require(\"awayjs-display/lib/base/IRenderObjectOwner\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport IRenderObject\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderObject\");\n\nimport ContextGLCompareMode\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLCompareMode\");\n\nimport AmbientBasicMethod\t\t\t= require(\"awayjs-methodmaterials/lib/methods/AmbientBasicMethod\");\nimport DiffuseBasicMethod\t\t\t= require(\"awayjs-methodmaterials/lib/methods/DiffuseBasicMethod\");\nimport EffectMethodBase\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/EffectMethodBase\");\nimport NormalBasicMethod\t\t\t= require(\"awayjs-methodmaterials/lib/methods/NormalBasicMethod\");\nimport ShadowMapMethodBase\t\t\t= require(\"awayjs-methodmaterials/lib/methods/ShadowMapMethodBase\");\nimport SpecularBasicMethod\t\t\t= require(\"awayjs-methodmaterials/lib/methods/SpecularBasicMethod\");\nimport MethodMaterialMode\t\t\t= require(\"awayjs-methodmaterials/lib/MethodMaterialMode\");\n\nimport MethodRenderablePool\t\t\t= require(\"awayjs-methodmaterials/lib/pool/MethodRenderablePool\");\n\n/**\n * MethodMaterial forms an abstract base class for the default shaded materials provided by Stage,\n * using material methods to define their appearance.\n */\nclass MethodMaterial extends MaterialBase\n{\n\tprivate _effectMethods:Array<EffectMethodBase> = new Array<EffectMethodBase>();\n\tprivate _mode:string;\n\n\tprivate _ambientMethod:AmbientBasicMethod = new AmbientBasicMethod();\n\tprivate _shadowMethod:ShadowMapMethodBase;\n\tprivate _diffuseMethod:DiffuseBasicMethod = new DiffuseBasicMethod();\n\tprivate _normalMethod:NormalBasicMethod = new NormalBasicMethod();\n\tprivate _specularMethod:SpecularBasicMethod = new SpecularBasicMethod();\n\n\n\tprivate _depthCompareMode:string = ContextGLCompareMode.LESS_EQUAL;\n\n\t/**\n\t * Creates a new MethodMaterial object.\n\t *\n\t * @param texture The texture used for the material's albedo color.\n\t * @param smooth Indicates whether the texture should be filtered when sampled. Defaults to true.\n\t * @param repeat Indicates whether the texture should be tiled when sampled. Defaults to false.\n\t * @param mipmap Indicates whether or not any used textures should use mipmapping. Defaults to false.\n\t */\n\tconstructor(texture?:Texture2DBase, smooth?:boolean, repeat?:boolean, mipmap?:boolean);\n\tconstructor(color?:number, alpha?:number);\n\tconstructor(textureColor:any = null, smoothAlpha:any = null, repeat:boolean = false, mipmap:boolean = true)\n\t{\n\t\tsuper();\n\n\t\tthis._mode = MethodMaterialMode.SINGLE_PASS;\n\n\t\tif (textureColor instanceof Texture2DBase) {\n\t\t\tthis.texture = <Texture2DBase> textureColor;\n\n\t\t\tthis.smooth = (smoothAlpha == null)? true : false;\n\t\t\tthis.repeat = repeat;\n\t\t\tthis.mipmap = mipmap;\n\t\t} else {\n\t\t\tthis.color = (textureColor == null)? 0xFFFFFF : Number(textureColor);\n\t\t\tthis.alpha = (smoothAlpha == null)? 1 : Number(smoothAlpha);\n\t\t}\n\t}\n\n\n\tpublic get mode():string\n\t{\n\t\treturn this._mode;\n\t}\n\n\tpublic set mode(value:string)\n\t{\n\t\tif (this._mode == value)\n\t\t\treturn;\n\n\t\tthis._mode = value;\n\n\t\tthis._pInvalidateRenderObject();\n\t}\n\n\t/**\n\t * The depth compare mode used to render the renderables using this material.\n\t *\n\t * @see away.stagegl.ContextGLCompareMode\n\t */\n\n\tpublic get depthCompareMode():string\n\t{\n\t\treturn this._depthCompareMode;\n\t}\n\n\tpublic set depthCompareMode(value:string)\n\t{\n\t\tif (this._depthCompareMode == value)\n\t\t\treturn;\n\n\t\tthis._depthCompareMode = value;\n\n\t\tthis._pInvalidateRenderObject();\n\t}\n\n\t/**\n\t * The texture object to use for the ambient colour.\n\t */\n\tpublic get diffuseTexture():Texture2DBase\n\t{\n\t\treturn this._diffuseMethod.texture;\n\t}\n\n\tpublic set diffuseTexture(value:Texture2DBase)\n\t{\n\t\tthis._diffuseMethod.texture = value;\n\t}\n\n\t/**\n\t * The method that provides the ambient lighting contribution. Defaults to AmbientBasicMethod.\n\t */\n\tpublic get ambientMethod():AmbientBasicMethod\n\t{\n\t\treturn this._ambientMethod;\n\t}\n\n\tpublic set ambientMethod(value:AmbientBasicMethod)\n\t{\n\t\tif (this._ambientMethod == value)\n\t\t\treturn;\n\n\t\tif (value && this._ambientMethod)\n\t\t\tvalue.copyFrom(this._ambientMethod);\n\n\t\tthis._ambientMethod = value;\n\n\t\tthis._pInvalidateRenderObject();\n\t}\n\n\t/**\n\t * The method used to render shadows cast on this surface, or null if no shadows are to be rendered. Defaults to null.\n\t */\n\tpublic get shadowMethod():ShadowMapMethodBase\n\t{\n\t\treturn this._shadowMethod;\n\t}\n\n\tpublic set shadowMethod(value:ShadowMapMethodBase)\n\t{\n\t\tif (this._shadowMethod == value)\n\t\t\treturn;\n\n\t\tif (value && this._shadowMethod)\n\t\t\tvalue.copyFrom(this._shadowMethod);\n\n\t\tthis._shadowMethod = value;\n\n\t\tthis._pInvalidateRenderObject();\n\t}\n\n\t/**\n\t * The method that provides the diffuse lighting contribution. Defaults to DiffuseBasicMethod.\n\t */\n\tpublic get diffuseMethod():DiffuseBasicMethod\n\t{\n\t\treturn this._diffuseMethod;\n\t}\n\n\tpublic set diffuseMethod(value:DiffuseBasicMethod)\n\t{\n\t\tif (this._diffuseMethod == value)\n\t\t\treturn;\n\n\t\tif (value && this._diffuseMethod)\n\t\t\tvalue.copyFrom(this._diffuseMethod);\n\n\t\tthis._diffuseMethod = value;\n\n\t\tthis._pInvalidateRenderObject();\n\t}\n\n\t/**\n\t * The method that provides the specular lighting contribution. Defaults to SpecularBasicMethod.\n\t */\n\tpublic get specularMethod():SpecularBasicMethod\n\t{\n\t\treturn this._specularMethod;\n\t}\n\n\tpublic set specularMethod(value:SpecularBasicMethod)\n\t{\n\t\tif (this._specularMethod == value)\n\t\t\treturn;\n\n\t\tif (value && this._specularMethod)\n\t\t\tvalue.copyFrom(this._specularMethod);\n\n\t\tthis._specularMethod = value;\n\n\t\tthis._pInvalidateRenderObject();\n\t}\n\n\t/**\n\t * The method used to generate the per-pixel normals. Defaults to NormalBasicMethod.\n\t */\n\tpublic get normalMethod():NormalBasicMethod\n\t{\n\t\treturn this._normalMethod;\n\t}\n\n\tpublic set normalMethod(value:NormalBasicMethod)\n\t{\n\t\tif (this._normalMethod == value)\n\t\t\treturn;\n\n\t\tif (value && this._normalMethod)\n\t\t\tvalue.copyFrom(this._normalMethod);\n\n\t\tthis._normalMethod = value;\n\n\t\tthis._pInvalidateRenderObject();\n\t}\n\n\tpublic get numEffectMethods():number\n\t{\n\t\treturn this._effectMethods.length;\n\t}\n\n\t/**\n\t * Appends an \"effect\" shading method to the shader. Effect methods are those that do not influence the lighting\n\t * but modulate the shaded colour, used for fog, outlines, etc. The method will be applied to the result of the\n\t * methods added prior.\n\t */\n\tpublic addEffectMethod(method:EffectMethodBase)\n\t{\n\t\tthis._effectMethods.push(method);\n\n\t\tthis._pInvalidateRenderObject();\n\t}\n\n\t/**\n\t * Returns the method added at the given index.\n\t * @param index The index of the method to retrieve.\n\t * @return The method at the given index.\n\t */\n\tpublic getEffectMethodAt(index:number):EffectMethodBase\n\t{\n\t\treturn this._effectMethods[index];\n\t}\n\n\t/**\n\t * Adds an effect method at the specified index amongst the methods already added to the material. Effect\n\t * methods are those that do not influence the lighting but modulate the shaded colour, used for fog, outlines,\n\t * etc. The method will be applied to the result of the methods with a lower index.\n\t */\n\tpublic addEffectMethodAt(method:EffectMethodBase, index:number)\n\t{\n\t\tthis._effectMethods.splice(index, 0, method);\n\n\t\tthis._pInvalidateRenderObject();\n\t}\n\n\t/**\n\t * Removes an effect method from the material.\n\t * @param method The method to be removed.\n\t */\n\tpublic removeEffectMethod(method:EffectMethodBase)\n\t{\n\t\tthis._effectMethods.splice(this._effectMethods.indexOf(method), 1);\n\n\t\tthis._pInvalidateRenderObject();\n\t}\n\n\t/**\n\t * The normal map to modulate the direction of the surface for each texel. The default normal method expects\n\t * tangent-space normal maps, but others could expect object-space maps.\n\t */\n\tpublic get normalMap():Texture2DBase\n\t{\n\t\treturn this._normalMethod.normalMap;\n\t}\n\n\tpublic set normalMap(value:Texture2DBase)\n\t{\n\t\tthis._normalMethod.normalMap = value;\n\t}\n\n\t/**\n\t * A specular map that defines the strength of specular reflections for each texel in the red channel,\n\t * and the gloss factor in the green channel. You can use SpecularBitmapTexture if you want to easily set\n\t * specular and gloss maps from grayscale images, but correctly authored images are preferred.\n\t */\n\tpublic get specularMap():Texture2DBase\n\t{\n\t\treturn this._specularMethod.texture;\n\t}\n\n\tpublic set specularMap(value:Texture2DBase)\n\t{\n\t\tthis._specularMethod.texture = value;\n\t}\n\n\t/**\n\t * The glossiness of the material (sharpness of the specular highlight).\n\t */\n\tpublic get gloss():number\n\t{\n\t\treturn this._specularMethod.gloss;\n\t}\n\n\tpublic set gloss(value:number)\n\t{\n\t\tthis._specularMethod.gloss = value;\n\t}\n\n\t/**\n\t * The strength of the ambient reflection.\n\t */\n\tpublic get ambient():number\n\t{\n\t\treturn this._ambientMethod.ambient;\n\t}\n\n\tpublic set ambient(value:number)\n\t{\n\t\tthis._ambientMethod.ambient = value;\n\t}\n\n\t/**\n\t * The overall strength of the specular reflection.\n\t */\n\tpublic get specular():number\n\t{\n\t\treturn this._specularMethod.specular;\n\t}\n\n\tpublic set specular(value:number)\n\t{\n\t\tthis._specularMethod.specular = value;\n\t}\n\n\t/**\n\t * The colour of the ambient reflection.\n\t */\n\tpublic get ambientColor():number\n\t{\n\t\treturn this._diffuseMethod.ambientColor;\n\t}\n\n\tpublic set ambientColor(value:number)\n\t{\n\t\tthis._diffuseMethod.ambientColor = value;\n\t}\n\n\t/**\n\t * The colour of the diffuse reflection.\n\t */\n\tpublic get diffuseColor():number\n\t{\n\t\treturn this._diffuseMethod.diffuseColor;\n\t}\n\n\tpublic set diffuseColor(value:number)\n\t{\n\t\tthis._diffuseMethod.diffuseColor = value;\n\t}\n\n\t/**\n\t * The colour of the specular reflection.\n\t */\n\tpublic get specularColor():number\n\t{\n\t\treturn this._specularMethod.specularColor;\n\t}\n\n\tpublic set specularColor(value:number)\n\t{\n\t\tthis._specularMethod.specularColor = value;\n\t}\n\n\t/**\n\t *\n\t * @param renderer\n\t *\n\t * @internal\n\t */\n\tpublic getRenderObject(renderablePool:MethodRenderablePool):IRenderObject\n\t{\n\t\treturn renderablePool.getMethodRenderObject(this);\n\t}\n}\n\nexport = MethodMaterial;",
    "import BlendMode\t\t\t\t\t\t= require(\"awayjs-core/lib/data/BlendMode\");\nimport TriangleSubGeometry\t\t\t\t= require(\"awayjs-core/lib/data/TriangleSubGeometry\");\nimport ColorTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Matrix\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\nimport Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Matrix3DUtils\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport AbstractMethodError\t\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport Texture2DBase\t\t\t\t\t= require(\"awayjs-core/lib/textures/Texture2DBase\");\n\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport IRenderObjectOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderObjectOwner\");\nimport StaticLightPicker\t\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/StaticLightPicker\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport ContextGLCompareMode\t\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLCompareMode\");\n\nimport RendererBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/base/RendererBase\");\nimport RenderObjectPool\t\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/RenderObjectPool\");\nimport ShadingMethodEvent\t\t\t\t= require(\"awayjs-renderergl/lib/events/ShadingMethodEvent\");\nimport ShaderObjectBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderObjectBase\");\nimport RenderObjectBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/RenderObjectBase\");\nimport RenderableBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/pool/RenderableBase\");\nimport IRenderableClass\t\t\t\t\t= require(\"awayjs-renderergl/lib/pool/IRenderableClass\");\n\nimport MethodMaterial\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/MethodMaterial\");\nimport MethodPassMode\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/passes/MethodPassMode\");\nimport MethodPass\t\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/passes/MethodPass\");\nimport AmbientBasicMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/AmbientBasicMethod\");\nimport DiffuseBasicMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/DiffuseBasicMethod\");\nimport EffectColorTransformMethod\t\t= require(\"awayjs-methodmaterials/lib/methods/EffectColorTransformMethod\");\nimport EffectMethodBase\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/EffectMethodBase\");\nimport LightingMethodBase\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/LightingMethodBase\");\nimport NormalBasicMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/NormalBasicMethod\");\nimport ShadowMapMethodBase\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/ShadowMapMethodBase\");\nimport SpecularBasicMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/SpecularBasicMethod\");\nimport MethodMaterialMode\t\t\t\t= require(\"awayjs-methodmaterials/lib/MethodMaterialMode\");\n\n/**\n * CompiledPass forms an abstract base class for the default compiled pass materials provided by Away3D,\n * using material methods to define their appearance.\n */\nclass RenderMethodMaterialObject extends RenderObjectBase\n{\n\t/**\n\t *\n\t */\n\tpublic static id:string = \"method\";\n\n\tprivate _material:MethodMaterial;\n\tprivate _screenPass:MethodPass;\n\tprivate _casterLightPass:MethodPass;\n\tprivate _nonCasterLightPasses:Array<MethodPass>;\n\t\n\t/**\n\t * The maximum total number of lights provided by the light picker.\n\t */\n\tprivate get numLights():number\n\t{\n\t\treturn this._material.lightPicker? this._material.lightPicker.numLightProbes + this._material.lightPicker.numDirectionalLights + this._material.lightPicker.numPointLights + this._material.lightPicker.numCastingDirectionalLights + this._material.lightPicker.numCastingPointLights : 0;\n\t}\n\n\t/**\n\t * The amount of lights that don't cast shadows.\n\t */\n\tprivate get numNonCasters():number\n\t{\n\t\treturn this._material.lightPicker? this._material.lightPicker.numLightProbes + this._material.lightPicker.numDirectionalLights + this._material.lightPicker.numPointLights : 0;\n\t}\n\n\t/**\n\t * Creates a new CompiledPass object.\n\t *\n\t * @param material The material to which this pass belongs.\n\t */\n\tconstructor(pool:RenderObjectPool, material:MethodMaterial, renderableClass:IRenderableClass, stage:Stage)\n\t{\n\t\tsuper(pool, material, renderableClass, stage);\n\n\t\tthis._material = material;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdateRenderObject()\n\t{\n\t\tsuper._pUpdateRenderObject();\n\n\t\tthis.initPasses();\n\n\t\tthis.setBlendAndCompareModes();\n\n\t\tthis._pClearScreenPasses();\n\n\t\tif (this._material.mode == MethodMaterialMode.MULTI_PASS) {\n\t\t\tif (this._casterLightPass)\n\t\t\t\tthis._pAddScreenPass(this._casterLightPass);\n\n\t\t\tif (this._nonCasterLightPasses)\n\t\t\t\tfor (var i:number = 0; i < this._nonCasterLightPasses.length; ++i)\n\t\t\t\t\tthis._pAddScreenPass(this._nonCasterLightPasses[i]);\n\t\t}\n\n\t\tif (this._screenPass)\n\t\t\tthis._pAddScreenPass(this._screenPass);\n\t}\n\n\t/**\n\t * Initializes all the passes and their dependent passes.\n\t */\n\tprivate initPasses()\n\t{\n\t\t// let the effects pass handle everything if there are no lights, when there are effect methods applied\n\t\t// after shading, or when the material mode is single pass.\n\t\tif (this.numLights == 0 || this._material.numEffectMethods > 0 || this._material.mode == MethodMaterialMode.SINGLE_PASS)\n\t\t\tthis.initEffectPass();\n\t\telse if (this._screenPass)\n\t\t\tthis.removeEffectPass();\n\n\t\t// only use a caster light pass if shadows need to be rendered\n\t\tif (this._material.shadowMethod && this._material.mode == MethodMaterialMode.MULTI_PASS)\n\t\t\tthis.initCasterLightPass();\n\t\telse if (this._casterLightPass)\n\t\t\tthis.removeCasterLightPass();\n\n\t\t// only use non caster light passes if there are lights that don't cast\n\t\tif (this.numNonCasters > 0 && this._material.mode == MethodMaterialMode.MULTI_PASS)\n\t\t\tthis.initNonCasterLightPasses();\n\t\telse if (this._nonCasterLightPasses)\n\t\t\tthis.removeNonCasterLightPasses();\n\t}\n\n\t/**\n\t * Sets up the various blending modes for all screen passes, based on whether or not there are previous passes.\n\t */\n\tprivate setBlendAndCompareModes()\n\t{\n\t\tvar forceSeparateMVP:boolean = Boolean(this._casterLightPass || this._screenPass);\n\n\t\t// caster light pass is always first if it exists, hence it uses normal blending\n\t\tif (this._casterLightPass) {\n\t\t\tthis._casterLightPass.forceSeparateMVP = forceSeparateMVP;\n\t\t\tthis._casterLightPass.setBlendMode(BlendMode.NORMAL);\n\t\t\tthis._casterLightPass.depthCompareMode = this._material.depthCompareMode;\n\t\t}\n\n\t\tif (this._nonCasterLightPasses) {\n\t\t\tvar firstAdditiveIndex:number = 0;\n\n\t\t\t// if there's no caster light pass, the first non caster light pass will be the first\n\t\t\t// and should use normal blending\n\t\t\tif (!this._casterLightPass) {\n\t\t\t\tthis._nonCasterLightPasses[0].forceSeparateMVP = forceSeparateMVP;\n\t\t\t\tthis._nonCasterLightPasses[0].setBlendMode(BlendMode.NORMAL);\n\t\t\t\tthis._nonCasterLightPasses[0].depthCompareMode = this._material.depthCompareMode;\n\t\t\t\tfirstAdditiveIndex = 1;\n\t\t\t}\n\n\t\t\t// all lighting passes following the first light pass should use additive blending\n\t\t\tfor (var i:number = firstAdditiveIndex; i < this._nonCasterLightPasses.length; ++i) {\n\t\t\t\tthis._nonCasterLightPasses[i].forceSeparateMVP = forceSeparateMVP;\n\t\t\t\tthis._nonCasterLightPasses[i].setBlendMode(BlendMode.ADD);\n\t\t\t\tthis._nonCasterLightPasses[i].depthCompareMode = ContextGLCompareMode.LESS_EQUAL;\n\t\t\t}\n\t\t}\n\n\t\tif (this._casterLightPass || this._nonCasterLightPasses) {\n\t\t\t//cannot be blended by blendmode property if multipass enabled\n\t\t\tthis._pRequiresBlending = false;\n\n\t\t\t// there are light passes, so this should be blended in\n\t\t\tif (this._screenPass) {\n\t\t\t\tthis._screenPass.mode = MethodPassMode.EFFECTS;\n\t\t\t\tthis._screenPass.depthCompareMode = ContextGLCompareMode.LESS_EQUAL;\n\t\t\t\tthis._screenPass.setBlendMode(BlendMode.LAYER);\n\t\t\t\tthis._screenPass.forceSeparateMVP = forceSeparateMVP;\n\t\t\t}\n\n\t\t} else if (this._screenPass) {\n\t\t\tthis._pRequiresBlending = (this._material.blendMode != BlendMode.NORMAL || this._material.alphaBlending || (this._material.colorTransform && this._material.colorTransform.alphaMultiplier < 1));\n\t\t\t// effects pass is the only pass, so it should just blend normally\n\t\t\tthis._screenPass.mode = MethodPassMode.SUPER_SHADER;\n\t\t\tthis._screenPass.depthCompareMode = this._material.depthCompareMode;\n\t\t\tthis._screenPass.preserveAlpha = this._pRequiresBlending;\n\t\t\tthis._screenPass.colorTransform = this._material.colorTransform;\n\t\t\tthis._screenPass.setBlendMode((this._material.blendMode == BlendMode.NORMAL && this._pRequiresBlending)? BlendMode.LAYER : this._material.blendMode);\n\t\t\tthis._screenPass.forceSeparateMVP = false;\n\t\t}\n\t}\n\n\tprivate initCasterLightPass()\n\t{\n\n\t\tif (this._casterLightPass == null)\n\t\t\tthis._casterLightPass = new MethodPass(MethodPassMode.LIGHTING, this, this._material, this._renderableClass, this._stage);\n\n\t\tthis._casterLightPass.lightPicker = new StaticLightPicker([this._material.shadowMethod.castingLight]);\n\t\tthis._casterLightPass.shadowMethod = this._material.shadowMethod;\n\t\tthis._casterLightPass.diffuseMethod = this._material.diffuseMethod;\n\t\tthis._casterLightPass.ambientMethod = this._material.ambientMethod;\n\t\tthis._casterLightPass.normalMethod = this._material.normalMethod;\n\t\tthis._casterLightPass.specularMethod = this._material.specularMethod;\n\t}\n\n\tprivate removeCasterLightPass()\n\t{\n\t\tthis._casterLightPass.dispose();\n\t\tthis._pRemoveScreenPass(this._casterLightPass);\n\t\tthis._casterLightPass = null;\n\t}\n\n\tprivate initNonCasterLightPasses()\n\t{\n\t\tthis.removeNonCasterLightPasses();\n\t\tvar pass:MethodPass;\n\t\tvar numDirLights:number = this._material.lightPicker.numDirectionalLights;\n\t\tvar numPointLights:number = this._material.lightPicker.numPointLights;\n\t\tvar numLightProbes:number = this._material.lightPicker.numLightProbes;\n\t\tvar dirLightOffset:number = 0;\n\t\tvar pointLightOffset:number = 0;\n\t\tvar probeOffset:number = 0;\n\n\t\tif (!this._casterLightPass) {\n\t\t\tnumDirLights += this._material.lightPicker.numCastingDirectionalLights;\n\t\t\tnumPointLights += this._material.lightPicker.numCastingPointLights;\n\t\t}\n\n\t\tthis._nonCasterLightPasses = new Array<MethodPass>();\n\n\t\twhile (dirLightOffset < numDirLights || pointLightOffset < numPointLights || probeOffset < numLightProbes) {\n\t\t\tpass = new MethodPass(MethodPassMode.LIGHTING, this, this._material, this._renderableClass, this._stage);\n\t\t\tpass.includeCasters = this._material.shadowMethod == null;\n\t\t\tpass.directionalLightsOffset = dirLightOffset;\n\t\t\tpass.pointLightsOffset = pointLightOffset;\n\t\t\tpass.lightProbesOffset = probeOffset;\n\t\t\tpass.lightPicker = this._material.lightPicker;\n\t\t\tpass.diffuseMethod = this._material.diffuseMethod;\n\t\t\tpass.ambientMethod = this._material.ambientMethod;\n\t\t\tpass.normalMethod = this._material.normalMethod;\n\t\t\tpass.specularMethod = this._material.specularMethod;\n\t\t\tthis._nonCasterLightPasses.push(pass);\n\n\t\t\tdirLightOffset += pass.numDirectionalLights;\n\t\t\tpointLightOffset += pass.numPointLights;\n\t\t\tprobeOffset += pass.numLightProbes;\n\t\t}\n\t}\n\n\tprivate removeNonCasterLightPasses()\n\t{\n\t\tif (!this._nonCasterLightPasses)\n\t\t\treturn;\n\n\t\tfor (var i:number = 0; i < this._nonCasterLightPasses.length; ++i)\n\t\t\tthis._pRemoveScreenPass(this._nonCasterLightPasses[i]);\n\n\t\tthis._nonCasterLightPasses = null;\n\t}\n\n\tprivate removeEffectPass()\n\t{\n\t\tif (this._screenPass.ambientMethod != this._material.ambientMethod)\n\t\t\tthis._screenPass.ambientMethod.dispose();\n\n\t\tif (this._screenPass.diffuseMethod != this._material.diffuseMethod)\n\t\t\tthis._screenPass.diffuseMethod.dispose();\n\n\t\tif (this._screenPass.specularMethod != this._material.specularMethod)\n\t\t\tthis._screenPass.specularMethod.dispose();\n\n\t\tif (this._screenPass.normalMethod != this._material.normalMethod)\n\t\t\tthis._screenPass.normalMethod.dispose();\n\n\t\tthis._pRemoveScreenPass(this._screenPass);\n\t\tthis._screenPass = null;\n\t}\n\n\tprivate initEffectPass()\n\t{\n\t\tif (this._screenPass == null)\n\t\t\tthis._screenPass = new MethodPass(MethodPassMode.SUPER_SHADER, this, this._material, this._renderableClass, this._stage);\n\n\t\tif (this._material.mode == MethodMaterialMode.SINGLE_PASS) {\n\t\t\tthis._screenPass.ambientMethod = this._material.ambientMethod;\n\t\t\tthis._screenPass.diffuseMethod = this._material.diffuseMethod;\n\t\t\tthis._screenPass.specularMethod = this._material.specularMethod;\n\t\t\tthis._screenPass.normalMethod = this._material.normalMethod;\n\t\t\tthis._screenPass.shadowMethod = this._material.shadowMethod;\n\t\t} else if (this._material.mode == MethodMaterialMode.MULTI_PASS) {\n\t\t\tif (this.numLights == 0) {\n\t\t\t\tthis._screenPass.ambientMethod = this._material.ambientMethod;\n\t\t\t} else {\n\t\t\t\tthis._screenPass.ambientMethod = null;\n\t\t\t}\n\n\t\t\tthis._screenPass.preserveAlpha = false;\n\t\t\tthis._screenPass.normalMethod = this._material.normalMethod;\n\t\t}\n\n\t\t//update effect methods\n\t\tvar i:number = 0;\n\t\tvar effectMethod:EffectMethodBase;\n\t\tvar len:number = Math.max(this._material.numEffectMethods, this._screenPass.numEffectMethods);\n\n\t\twhile (i < len) {\n\t\t\teffectMethod = this._material.getEffectMethodAt(i);\n\t\t\tif (effectMethod != this._screenPass.getEffectMethodAt(i)) {\n\t\t\t\tthis._screenPass.removeEffectMethodAt(i);\n\n\t\t\t\tif (effectMethod != null) {\n\t\t\t\t\tif (i < this._screenPass.numEffectMethods)\n\t\t\t\t\t\tthis._screenPass.addEffectMethodAt(effectMethod, i);\n\t\t\t\t\telse\n\t\t\t\t\t\tthis._screenPass.addEffectMethod(effectMethod);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ti++;\n\t\t}\n\t}\n\t\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\n\t\t//TODO\n\t}\n}\n\nexport = RenderMethodMaterialObject;",
    "import ShadingMethodBase\t\t\t= require(\"awayjs-methodmaterials/lib/methods/ShadingMethodBase\");\n\n/**\n * MethodVO contains data for a given shader object for the use within a single material.\n * This allows shader methods to be shared across materials while their non-public state differs.\n */\nclass MethodVO\n{\n\tpublic useMethod:boolean = true;\n\n\tpublic method:ShadingMethodBase;\n\n\t// public register indices\n\tpublic texturesIndex:number;\n\tpublic secondaryTexturesIndex:number; // sometimes needed for composites\n\tpublic vertexConstantsIndex:number;\n\tpublic secondaryVertexConstantsIndex:number; // sometimes needed for composites\n\tpublic fragmentConstantsIndex:number;\n\tpublic secondaryFragmentConstantsIndex:number; // sometimes needed for composites\n\n\t// internal stuff for the material to know before assembling code\n\tpublic needsProjection:boolean;\n\tpublic needsView:boolean;\n\tpublic needsNormals:boolean;\n\tpublic needsTangents:boolean;\n\tpublic needsUV:boolean;\n\tpublic needsSecondaryUV:boolean;\n\tpublic needsGlobalVertexPos:boolean;\n\tpublic needsGlobalFragmentPos:boolean;\n\n\tpublic usesTexture:boolean;\n\n\t/**\n\t * Creates a new MethodVO object.\n\t */\n\tconstructor(method:ShadingMethodBase)\n\t{\n\t\tthis.method = method;\n\t}\n\n\t/**\n\t * Resets the values of the value object to their \"unused\" state.\n\t */\n\tpublic reset()\n\t{\n\t\tthis.method.iReset();\n\n\t\tthis.texturesIndex = -1;\n\t\tthis.vertexConstantsIndex = -1;\n\t\tthis.fragmentConstantsIndex = -1;\n\n\t\tthis.needsProjection = false;\n\t\tthis.needsView = false;\n\t\tthis.needsNormals = false;\n\t\tthis.needsTangents = false;\n\t\tthis.needsUV = false;\n\t\tthis.needsSecondaryUV = false;\n\t\tthis.needsGlobalVertexPos = false;\n\t\tthis.needsGlobalFragmentPos = false;\n\t}\n}\n\nexport = MethodVO;\n",
    "import Texture2DBase\t\t\t\t= require(\"awayjs-core/lib/textures/Texture2DBase\");\n\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport ShaderObjectBase\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderObjectBase\");\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterData\");\nimport ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterElement\");\nimport ShaderCompilerHelper\t\t\t= require(\"awayjs-renderergl/lib/utils/ShaderCompilerHelper\");\n\nimport MethodVO\t\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/data/MethodVO\");\nimport ShadingMethodBase\t\t\t= require(\"awayjs-methodmaterials/lib/methods/ShadingMethodBase\");\n\n/**\n * AmbientBasicMethod provides the default shading method for uniform ambient lighting.\n */\nclass AmbientBasicMethod extends ShadingMethodBase\n{\n\tprivate _color:number = 0xffffff;\n\tprivate _alpha:number = 1;\n\n\tprivate _colorR:number = 1;\n\tprivate _colorG:number = 1;\n\tprivate _colorB:number = 1;\n\n\tprivate _ambient:number = 1;\n\n\t/**\n\t * Creates a new AmbientBasicMethod object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iInitVO(shaderObject:ShaderObjectBase, methodVO:MethodVO)\n\t{\n\t\tmethodVO.needsUV = Boolean(shaderObject.texture != null);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iInitConstants(shaderObject:ShaderObjectBase, methodVO:MethodVO)\n\t{\n\t\tif (!methodVO.needsUV) {\n\t\t\tthis._color = shaderObject.color;\n\t\t\tthis.updateColor();\n\t\t}\n\t}\n\n\t/**\n\t * The strength of the ambient reflection of the surface.\n\t */\n\tpublic get ambient():number\n\t{\n\t\treturn this._ambient;\n\t}\n\n\tpublic set ambient(value:number)\n\t{\n\t\tif (this._ambient == value)\n\t\t\treturn;\n\n\t\tthis._ambient = value;\n\n\t\tthis.updateColor();\n\t}\n\n\t/**\n\t * The alpha component of the surface.\n\t */\n\tpublic get alpha():number\n\t{\n\t\treturn this._alpha;\n\t}\n\n\tpublic set alpha(value:number)\n\t{\n\t\tif (this._alpha == value)\n\t\t\treturn;\n\n\t\tthis._alpha = value;\n\n\t\tthis.updateColor();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic copyFrom(method:ShadingMethodBase)\n\t{\n\t\tvar m:any = method;\n\t\tvar b:AmbientBasicMethod = <AmbientBasicMethod> m;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iGetFragmentCode(shaderObject:ShaderObjectBase, methodVO:MethodVO, targetReg:ShaderRegisterElement, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tvar code:string = \"\";\n\t\tvar ambientInputRegister:ShaderRegisterElement;\n\n\t\tif (methodVO.needsUV) {\n\t\t\tambientInputRegister = registerCache.getFreeTextureReg();\n\n\t\t\tmethodVO.texturesIndex = ambientInputRegister.index;\n\n\t\t\tcode += ShaderCompilerHelper.getTex2DSampleCode(targetReg, sharedRegisters, ambientInputRegister, shaderObject.texture, shaderObject.useSmoothTextures, shaderObject.repeatTextures, false);\n\n\t\t\tif (shaderObject.alphaThreshold > 0) {\n\t\t\t\tvar cutOffReg:ShaderRegisterElement = registerCache.getFreeFragmentConstant();\n\t\t\t\tmethodVO.fragmentConstantsIndex = cutOffReg.index*4;\n\n\t\t\t\tcode += \"sub \" + targetReg + \".w, \" + targetReg + \".w, \" + cutOffReg + \".x\\n\" +\n\t\t\t\t\t\"kil \" + targetReg + \".w\\n\" +\n\t\t\t\t\t\"add \" + targetReg + \".w, \" + targetReg + \".w, \" + cutOffReg + \".x\\n\";\n\t\t\t}\n\n\t\t} else {\n\t\t\tambientInputRegister = registerCache.getFreeFragmentConstant();\n\t\t\tmethodVO.fragmentConstantsIndex = ambientInputRegister.index*4;\n\n\t\t\tcode += \"mov \" + targetReg + \", \" + ambientInputRegister + \"\\n\";\n\t\t}\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iActivate(shaderObject:ShaderObjectBase, methodVO:MethodVO, stage:Stage)\n\t{\n\t\tif (methodVO.needsUV) {\n\t\t\tstage.activateTexture(methodVO.texturesIndex, shaderObject.texture, shaderObject.repeatTextures, shaderObject.useSmoothTextures, shaderObject.useMipmapping);\n\n\t\t\tif (shaderObject.alphaThreshold > 0)\n\t\t\t\tshaderObject.fragmentConstantData[methodVO.fragmentConstantsIndex] = shaderObject.alphaThreshold;\n\t\t} else {\n\t\t\tvar index:number = methodVO.fragmentConstantsIndex;\n\t\t\tvar data:Array<number> = shaderObject.fragmentConstantData;\n\t\t\tdata[index] = this._colorR;\n\t\t\tdata[index + 1] = this._colorG;\n\t\t\tdata[index + 2] = this._colorB;\n\t\t\tdata[index + 3] = this._alpha;\n\t\t}\n\t}\n\n\t/**\n\t * Updates the ambient color data used by the render state.\n\t */\n\tprivate updateColor()\n\t{\n\t\tthis._colorR = ((this._color >> 16) & 0xff)/0xff*this._ambient;\n\t\tthis._colorG = ((this._color >> 8) & 0xff)/0xff*this._ambient;\n\t\tthis._colorB = (this._color & 0xff)/0xff*this._ambient;\n\t}\n}\n\nexport = AmbientBasicMethod;",
    "import CubeTextureBase\t\t\t\t\t= require(\"awayjs-core/lib/textures/CubeTextureBase\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport ShaderObjectBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderObjectBase\");\nimport ShaderRegisterCache\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterData\");\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterElement\");\nimport ShaderCompilerHelper\t\t\t\t= require(\"awayjs-renderergl/lib/utils/ShaderCompilerHelper\");\n\nimport MethodVO\t\t\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/data/MethodVO\");\nimport AmbientBasicMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/AmbientBasicMethod\");\n\n/**\n * AmbientEnvMapMethod provides a diffuse shading method that uses a diffuse irradiance environment map to\n * approximate global lighting rather than lights.\n */\nclass AmbientEnvMapMethod extends AmbientBasicMethod\n{\n\tprivate _cubeTexture:CubeTextureBase;\n\t\n\t/**\n\t * Creates a new <code>AmbientEnvMapMethod</code> object.\n\t *\n\t * @param envMap The cube environment map to use for the ambient lighting.\n\t */\n\tconstructor(envMap:CubeTextureBase)\n\t{\n\t\tsuper();\n\t\tthis._cubeTexture = envMap;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iInitVO(shaderObject:ShaderObjectBase, methodVO:MethodVO)\n\t{\n\t\tsuper.iInitVO(shaderObject, methodVO);\n\n\t\tmethodVO.needsNormals = true;\n\t}\n\t\n\t/**\n\t * The cube environment map to use for the diffuse lighting.\n\t */\n\tpublic get envMap():CubeTextureBase\n\t{\n\t\treturn this._cubeTexture;\n\t}\n\t\n\tpublic set envMap(value:CubeTextureBase)\n\t{\n\t\tthis._cubeTexture = value;\n\t}\n\t\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iActivate(shaderObject:ShaderObjectBase, methodVO:MethodVO, stage:Stage)\n\t{\n\t\tsuper.iActivate(shaderObject, methodVO, stage);\n\n\t\tstage.activateCubeTexture(methodVO.texturesIndex, this._cubeTexture, shaderObject.useSmoothTextures, shaderObject.useMipmapping);\n\t}\n\t\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iGetFragmentCode(shaderObject:ShaderObjectBase, methodVO:MethodVO, targetReg:ShaderRegisterElement, regCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tvar code:string = \"\";\n\t\tvar ambientInputRegister:ShaderRegisterElement;\n\t\tvar cubeMapReg:ShaderRegisterElement = regCache.getFreeTextureReg();\n\t\tmethodVO.texturesIndex = cubeMapReg.index;\n\t\t\n\t\tcode += ShaderCompilerHelper.getTexCubeSampleCode(targetReg, cubeMapReg, this._cubeTexture, shaderObject.useSmoothTextures, shaderObject.useMipmapping, sharedRegisters.normalFragment);\n\n\t\tambientInputRegister = regCache.getFreeFragmentConstant();\n\t\tmethodVO.fragmentConstantsIndex = ambientInputRegister.index;\n\t\t\n\t\tcode += \"add \" + targetReg + \".xyz, \" + targetReg + \".xyz, \" + ambientInputRegister + \".xyz\\n\";\n\t\t\n\t\treturn code;\n\t}\n}\n\nexport = AmbientEnvMapMethod;",
    "import Texture2DBase\t\t\t\t= require(\"awayjs-core/lib/textures/Texture2DBase\");\n\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\n\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport ShaderLightingObject\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderLightingObject\");\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterData\");\nimport ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterElement\");\nimport ShaderCompilerHelper\t\t\t= require(\"awayjs-renderergl/lib/utils/ShaderCompilerHelper\");\nimport RenderableBase\t\t\t\t= require(\"awayjs-renderergl/lib/pool/RenderableBase\");\n\nimport MethodVO\t\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/data/MethodVO\");\nimport ShadingMethodBase\t\t\t= require(\"awayjs-methodmaterials/lib/methods/ShadingMethodBase\");\nimport LightingMethodBase\t\t\t= require(\"awayjs-methodmaterials/lib/methods/LightingMethodBase\");\n\n/**\n * DiffuseBasicMethod provides the default shading method for Lambert (dot3) diffuse lighting.\n */\nclass DiffuseBasicMethod extends LightingMethodBase\n{\n\tprivate _multiply:boolean = true;\n\n\tpublic _pUseTexture:boolean;\n\tpublic _pTotalLightColorReg:ShaderRegisterElement;\n\tpublic _pDiffuseInputRegister:ShaderRegisterElement;\n\n\tprivate _texture:Texture2DBase;\n\tprivate _diffuseColor:number = 0xffffff;\n\tprivate _ambientColor:number = 0xffffff;\n\tprivate _diffuseR:number = 1;\n\tprivate _diffuseG:number = 1;\n\tprivate _diffuseB:number = 1;\n\tprivate _ambientR:number = 1;\n\tprivate _ambientG:number = 1;\n\tprivate _ambientB:number = 1;\n\n\tpublic _pIsFirstLight:boolean;\n\n\t/**\n\t * Creates a new DiffuseBasicMethod object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\tpublic iIsUsed(shaderObject:ShaderLightingObject):boolean\n\t{\n\t\tif (!shaderObject.numLights)\n\t\t\treturn false;\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Set internally if diffuse color component multiplies or replaces the ambient color\n\t */\n\tpublic get multiply():boolean\n\t{\n\t\treturn this._multiply;\n\t}\n\n\tpublic set multiply(value:boolean)\n\t{\n\t\tif (this._multiply == value)\n\t\t\treturn;\n\n\t\tthis._multiply = value;\n\n\t\tthis.iInvalidateShaderProgram();\n\t}\n\n\tpublic iInitVO(shaderObject:ShaderLightingObject, methodVO:MethodVO)\n\t{\n\t\tmethodVO.needsUV = this._pUseTexture;\n\t\tmethodVO.needsNormals = shaderObject.numLights > 0;\n\t}\n\n\t/**\n\t * Forces the creation of the texture's mipmaps.\n\t * @param stage The Stage used by the renderer\n\t */\n\tpublic generateMip(stage:Stage)\n\t{\n\t\tif (this._pUseTexture)\n\t\t\tstage.activateTexture(0, this._texture, true, true, true);\n\t}\n\n\t/**\n\t * The color of the diffuse reflection when not using a texture.\n\t */\n\tpublic get diffuseColor():number\n\t{\n\t\treturn this._diffuseColor;\n\t}\n\n\tpublic set diffuseColor(value:number)\n\t{\n\t\tif (this._diffuseColor == value)\n\t\t\treturn;\n\n\t\tthis._diffuseColor = value;\n\n\t\tthis.updateDiffuse();\n\t}\n\n\t/**\n\t * The color of the ambient reflection\n\t */\n\tpublic get ambientColor():number\n\t{\n\t\treturn this._ambientColor;\n\t}\n\n\tpublic set ambientColor(value:number)\n\t{\n\t\tif (this._ambientColor == value)\n\t\t\treturn;\n\n\t\tthis._ambientColor = value;\n\n\t\tthis.updateAmbient();\n\t}\n\n\n\t/**\n\t * The bitmapData to use to define the diffuse reflection color per texel.\n\t */\n\tpublic get texture():Texture2DBase\n\t{\n\t\treturn this._texture;\n\t}\n\n\tpublic set texture(value:Texture2DBase)\n\t{\n\t\tvar b:boolean = (value != null);\n\n\t\tif (b != this._pUseTexture || (value && this._texture && (value.format != this._texture.format)))\n\t\t\tthis.iInvalidateShaderProgram();\n\n\t\tthis._pUseTexture = b;\n\t\tthis._texture = value;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic dispose()\n\t{\n\t\tthis._texture = null;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic copyFrom(method:ShadingMethodBase)\n\t{\n\t\tvar diff:DiffuseBasicMethod = <DiffuseBasicMethod> method;\n\n\t\tthis.texture = diff.texture;\n\t\tthis.multiply = diff.multiply;\n\t\tthis.diffuseColor = diff.diffuseColor;\n\t\tthis.ambientColor = diff.ambientColor;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iCleanCompilationData()\n\t{\n\t\tsuper.iCleanCompilationData();\n\n\t\tthis._pTotalLightColorReg = null;\n\t\tthis._pDiffuseInputRegister = null;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iGetFragmentPreLightingCode(shaderObject:ShaderLightingObject, methodVO:MethodVO, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tvar code:string = \"\";\n\n\t\tthis._pIsFirstLight = true;\n\n\t\tthis._pTotalLightColorReg = registerCache.getFreeFragmentVectorTemp();\n\t\tregisterCache.addFragmentTempUsages(this._pTotalLightColorReg, 1);\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iGetFragmentCodePerLight(shaderObject:ShaderLightingObject, methodVO:MethodVO, lightDirReg:ShaderRegisterElement, lightColReg:ShaderRegisterElement, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tvar code:string = \"\";\n\t\tvar t:ShaderRegisterElement;\n\n\t\t// write in temporary if not first light, so we can add to total diffuse colour\n\t\tif (this._pIsFirstLight) {\n\t\t\tt = this._pTotalLightColorReg;\n\t\t} else {\n\t\t\tt = registerCache.getFreeFragmentVectorTemp();\n\t\t\tregisterCache.addFragmentTempUsages(t, 1);\n\t\t}\n\n\t\tcode += \"dp3 \" + t + \".x, \" + lightDirReg + \", \" + sharedRegisters.normalFragment + \"\\n\" +\n\t\t\t\t\"max \" + t + \".w, \" + t + \".x, \" + sharedRegisters.commons + \".y\\n\";\n\n\t\tif (shaderObject.usesLightFallOff)\n\t\t\tcode += \"mul \" + t + \".w, \" + t + \".w, \" + lightDirReg + \".w\\n\";\n\n\t\tif (this._iModulateMethod != null)\n\t\t\tcode += this._iModulateMethod(shaderObject, methodVO, t, registerCache, sharedRegisters);\n\n\t\tcode += \"mul \" + t + \", \" + t + \".w, \" + lightColReg + \"\\n\";\n\n\t\tif (!this._pIsFirstLight) {\n\t\t\tcode += \"add \" + this._pTotalLightColorReg + \".xyz, \" + this._pTotalLightColorReg + \", \" + t + \"\\n\";\n\t\t\tregisterCache.removeFragmentTempUsage(t);\n\t\t}\n\n\t\tthis._pIsFirstLight = false;\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iGetFragmentCodePerProbe(shaderObject:ShaderLightingObject, methodVO:MethodVO, cubeMapReg:ShaderRegisterElement, weightRegister:string, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tvar code:string = \"\";\n\t\tvar t:ShaderRegisterElement;\n\n\t\t// write in temporary if not first light, so we can add to total diffuse colour\n\t\tif (this._pIsFirstLight) {\n\t\t\tt = this._pTotalLightColorReg;\n\t\t} else {\n\t\t\tt = registerCache.getFreeFragmentVectorTemp();\n\t\t\tregisterCache.addFragmentTempUsages(t, 1);\n\t\t}\n\n\t\tcode += \"tex \" + t + \", \" + sharedRegisters.normalFragment + \", \" + cubeMapReg + \" <cube,linear,miplinear>\\n\" +\n\t\t\t\t\"mul \" + t + \".xyz, \" + t + \".xyz, \" + weightRegister + \"\\n\";\n\n\t\tif (this._iModulateMethod != null)\n\t\t\tcode += this._iModulateMethod(shaderObject, methodVO, t, registerCache, sharedRegisters);\n\n\t\tif (!this._pIsFirstLight) {\n\t\t\tcode += \"add \" + this._pTotalLightColorReg + \".xyz, \" + this._pTotalLightColorReg + \", \" + t + \"\\n\";\n\t\t\tregisterCache.removeFragmentTempUsage(t);\n\t\t}\n\n\t\tthis._pIsFirstLight = false;\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iGetFragmentPostLightingCode(shaderObject:ShaderLightingObject, methodVO:MethodVO, targetReg:ShaderRegisterElement, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tvar code:string = \"\";\n\n\t\tvar albedo:ShaderRegisterElement;\n\t\tvar cutOffReg:ShaderRegisterElement;\n\n\t\t// incorporate input from ambient\n\t\tif (sharedRegisters.shadowTarget)\n\t\t\tcode += this.pApplyShadow(shaderObject, methodVO, registerCache, sharedRegisters);\n\n\t\talbedo = registerCache.getFreeFragmentVectorTemp();\n\t\tregisterCache.addFragmentTempUsages(albedo, 1);\n\n\t\tvar ambientColorRegister:ShaderRegisterElement = registerCache.getFreeFragmentConstant();\n\t\tmethodVO.fragmentConstantsIndex = ambientColorRegister.index*4;\n\n\t\tif (this._pUseTexture) {\n\t\t\tthis._pDiffuseInputRegister = registerCache.getFreeTextureReg();\n\n\t\t\tmethodVO.texturesIndex = this._pDiffuseInputRegister.index;\n\n\t\t\tcode += ShaderCompilerHelper.getTex2DSampleCode(albedo, sharedRegisters, this._pDiffuseInputRegister, this._texture, shaderObject.useSmoothTextures, shaderObject.repeatTextures, shaderObject.useMipmapping);\n\n\t\t} else {\n\t\t\tthis._pDiffuseInputRegister = registerCache.getFreeFragmentConstant();\n\n\t\t\tcode += \"mov \" + albedo + \", \" + this._pDiffuseInputRegister + \"\\n\";\n\t\t}\n\n\t\tcode += \"sat \" + this._pTotalLightColorReg + \", \" + this._pTotalLightColorReg + \"\\n\" +\n\t\t\t\"mul \" + albedo + \".xyz, \" + albedo + \", \" + this._pTotalLightColorReg + \"\\n\";\n\n\t\tif (this._multiply) {\n\t\t\tcode += \"add \" + albedo + \".xyz, \" + albedo + \", \" + ambientColorRegister + \"\\n\" +\n\t\t\t\t\"mul \" + targetReg + \".xyz, \" + targetReg + \", \" + albedo + \"\\n\";\n\t\t} else {\n\t\t\tcode += \"mul \" + targetReg + \".xyz, \" + targetReg + \", \" + ambientColorRegister + \"\\n\" +\n\t\t\t\t\"mul \" + this._pTotalLightColorReg + \".xyz, \" + targetReg + \", \" + this._pTotalLightColorReg + \"\\n\" +\n\t\t\t\t\"sub \" + targetReg + \".xyz, \" + targetReg + \", \" + this._pTotalLightColorReg + \"\\n\" +\n\t\t\t\t\"add \" + targetReg + \".xyz, \" + targetReg + \", \" + albedo + \"\\n\";\n\t\t}\n\n\t\tregisterCache.removeFragmentTempUsage(this._pTotalLightColorReg);\n\t\tregisterCache.removeFragmentTempUsage(albedo);\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * Generate the code that applies the calculated shadow to the diffuse light\n\t * @param methodVO The MethodVO object for which the compilation is currently happening.\n\t * @param regCache The register cache the compiler is currently using for the register management.\n\t */\n\tpublic pApplyShadow(shaderObject:ShaderLightingObject, methodVO:MethodVO, regCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"mul \" + this._pTotalLightColorReg + \".xyz, \" + this._pTotalLightColorReg + \", \" + sharedRegisters.shadowTarget + \".w\\n\";\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iActivate(shaderObject:ShaderLightingObject, methodVO:MethodVO, stage:Stage)\n\t{\n\t\tif (this._pUseTexture) {\n\t\t\tstage.activateTexture(methodVO.texturesIndex, this._texture, shaderObject.repeatTextures, shaderObject.useSmoothTextures, shaderObject.useMipmapping);\n\t\t} else {\n\t\t\tvar index:number = methodVO.fragmentConstantsIndex;\n\t\t\tvar data:Array<number> = shaderObject.fragmentConstantData;\n\t\t\tdata[index + 4] = this._diffuseR;\n\t\t\tdata[index + 5] = this._diffuseG;\n\t\t\tdata[index + 6] = this._diffuseB;\n\t\t\tdata[index + 7] = 1;\n\t\t}\n\t}\n\n\t/**\n\t * Updates the diffuse color data used by the render state.\n\t */\n\tprivate updateDiffuse()\n\t{\n\t\tthis._diffuseR = ((this._diffuseColor >> 16) & 0xff)/0xff;\n\t\tthis._diffuseG = ((this._diffuseColor >> 8) & 0xff)/0xff;\n\t\tthis._diffuseB = (this._diffuseColor & 0xff)/0xff;\n\t}\n\n\t/**\n\t * Updates the ambient color data used by the render state.\n\t */\n\tprivate updateAmbient()\n\t{\n\t\tthis._ambientR = ((this._ambientColor >> 16) & 0xff)/0xff;\n\t\tthis._ambientG = ((this._ambientColor >> 8) & 0xff)/0xff;\n\t\tthis._ambientB = (this._ambientColor & 0xff)/0xff;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iSetRenderState(shaderObject:ShaderLightingObject, methodVO:MethodVO, renderable:RenderableBase, stage:Stage, camera:Camera)\n\t{\n\t\t//TODO move this to Activate (ambientR/G/B currently calc'd in render state)\n\t\tif (shaderObject.numLights > 0) {\n\t\t\tvar index:number = methodVO.fragmentConstantsIndex;\n\t\t\tvar data:Array<number> = shaderObject.fragmentConstantData;\n\t\t\tdata[index] = shaderObject.ambientR*this._ambientR;\n\t\t\tdata[index + 1] = shaderObject.ambientG*this._ambientG;\n\t\t\tdata[index + 2] = shaderObject.ambientB*this._ambientB;\n\t\t\tdata[index + 3] = 1;\n\t\t}\n\t}\n}\n\nexport = DiffuseBasicMethod;",
    "import Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport ShaderLightingObject\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderLightingObject\");\nimport ShaderObjectBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderObjectBase\");\nimport ShaderRegisterCache\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterData\");\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterElement\");\nimport ShaderCompilerHelper\t\t\t\t= require(\"awayjs-renderergl/lib/utils/ShaderCompilerHelper\");\n\nimport MethodVO\t\t\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/data/MethodVO\");\nimport DiffuseBasicMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/DiffuseBasicMethod\");\nimport DiffuseCompositeMethod\t\t\t= require(\"awayjs-methodmaterials/lib/methods/DiffuseCompositeMethod\");\n\n/**\n * DiffuseCelMethod provides a shading method to add diffuse cel (cartoon) shading.\n */\nclass DiffuseCelMethod extends DiffuseCompositeMethod\n{\n\tprivate _levels:number /*uint*/;\n\tprivate _dataReg:ShaderRegisterElement;\n\tprivate _smoothness:number = .1;\n\n\t/**\n\t * Creates a new DiffuseCelMethod object.\n\t * @param levels The amount of shadow gradations.\n\t * @param baseMethod An optional diffuse method on which the cartoon shading is based. If omitted, DiffuseBasicMethod is used.\n\t */\n\tconstructor(levels:number /*uint*/ = 3, baseMethod:DiffuseBasicMethod = null)\n\t{\n\t\tsuper(null, baseMethod);\n\n\t\tthis.baseMethod._iModulateMethod = (shaderObject:ShaderObjectBase, methodVO:MethodVO, targetReg:ShaderRegisterElement, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData) => this.clampDiffuse(shaderObject, methodVO, targetReg, registerCache, sharedRegisters);\n\n\t\tthis._levels = levels;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iInitConstants(shaderObject:ShaderLightingObject, methodVO:MethodVO)\n\t{\n\t\tvar data:Array<number> = shaderObject.fragmentConstantData;\n\t\tvar index:number /*int*/ = methodVO.secondaryFragmentConstantsIndex;\n\t\tsuper.iInitConstants(shaderObject, methodVO);\n\t\tdata[index + 1] = 1;\n\t\tdata[index + 2] = 0;\n\t}\n\n\t/**\n\t * The amount of shadow gradations.\n\t */\n\tpublic get levels():number /*uint*/\n\t{\n\t\treturn this._levels;\n\t}\n\n\tpublic set levels(value:number /*uint*/)\n\t{\n\t\tthis._levels = value;\n\t}\n\n\t/**\n\t * The smoothness of the edge between 2 shading levels.\n\t */\n\tpublic get smoothness():number\n\t{\n\t\treturn this._smoothness;\n\t}\n\n\tpublic set smoothness(value:number)\n\t{\n\t\tthis._smoothness = value;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iCleanCompilationData()\n\t{\n\t\tsuper.iCleanCompilationData();\n\t\tthis._dataReg = null;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iGetFragmentPreLightingCode(shaderObject:ShaderLightingObject, methodVO:MethodVO, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tthis._dataReg = registerCache.getFreeFragmentConstant();\n\t\tmethodVO.secondaryFragmentConstantsIndex = this._dataReg.index*4;\n\n\t\treturn super.iGetFragmentPreLightingCode(shaderObject, methodVO, registerCache, sharedRegisters);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iActivate(shaderObject:ShaderLightingObject, methodVO:MethodVO, stage:Stage)\n\t{\n\t\tsuper.iActivate(shaderObject, methodVO, stage);\n\t\tvar data:Array<number> = shaderObject.fragmentConstantData;\n\t\tvar index:number /*int*/ = methodVO.secondaryFragmentConstantsIndex;\n\t\tdata[index] = this._levels;\n\t\tdata[index + 3] = this._smoothness;\n\t}\n\n\t/**\n\t * Snaps the diffuse shading of the wrapped method to one of the levels.\n\t * @param vo The MethodVO used to compile the current shader.\n\t * @param t The register containing the diffuse strength in the \"w\" component.\n\t * @param regCache The register cache used for the shader compilation.\n\t * @param sharedRegisters The shared register data for this shader.\n\t * @return The AGAL fragment code for the method.\n\t */\n\tprivate clampDiffuse(shaderObject:ShaderObjectBase, methodVO:MethodVO, targetReg:ShaderRegisterElement, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"mul \" + targetReg + \".w, \" + targetReg + \".w, \" + this._dataReg + \".x\\n\" +\n\t\t\t\"frc \" + targetReg + \".z, \" + targetReg + \".w\\n\" +\n\t\t\t\"sub \" + targetReg + \".y, \" + targetReg + \".w, \" + targetReg + \".z\\n\" +\n\t\t\t\"mov \" + targetReg + \".x, \" + this._dataReg + \".x\\n\" +\n\t\t\t\"sub \" + targetReg + \".x, \" + targetReg + \".x, \" + this._dataReg + \".y\\n\" +\n\t\t\t\"rcp \" + targetReg + \".x,\" + targetReg + \".x\\n\" +\n\t\t\t\"mul \" + targetReg + \".w, \" + targetReg + \".y, \" + targetReg + \".x\\n\" +\n\n\t\t\t// previous clamped strength\n\t\t\t\"sub \" + targetReg + \".y, \" + targetReg + \".w, \" + targetReg + \".x\\n\" +\n\n\t\t\t// fract/epsilon (so 0 - epsilon will become 0 - 1)\n\t\t\t\"div \" + targetReg + \".z, \" + targetReg + \".z, \" + this._dataReg + \".w\\n\" +\n\t\t\t\"sat \" + targetReg + \".z, \" + targetReg + \".z\\n\" +\n\n\t\t\t\"mul \" + targetReg + \".w, \" + targetReg + \".w, \" + targetReg + \".z\\n\" +\n\t\t\t// 1-z\n\t\t\t\"sub \" + targetReg + \".z, \" + this._dataReg + \".y, \" + targetReg + \".z\\n\" +\n\t\t\t\"mul \" + targetReg + \".y, \" + targetReg + \".y, \" + targetReg + \".z\\n\" +\n\t\t\t\"add \" + targetReg + \".w, \" + targetReg + \".w, \" + targetReg + \".y\\n\" +\n\t\t\t\"sat \" + targetReg + \".w, \" + targetReg + \".w\\n\";\n\t}\n}\n\nexport = DiffuseCelMethod;",
    "import Texture2DBase\t\t\t\t\t= require(\"awayjs-core/lib/textures/Texture2DBase\");\n\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport ShaderLightingObject\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderLightingObject\");\nimport ShaderObjectBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderObjectBase\");\nimport ShaderRegisterCache\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterData\");\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterElement\");\nimport ShadingMethodEvent\t\t\t\t= require(\"awayjs-renderergl/lib/events/ShadingMethodEvent\");\nimport RenderableBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/pool/RenderableBase\");\n\nimport MethodVO\t\t\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/data/MethodVO\");\nimport DiffuseBasicMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/DiffuseBasicMethod\");\n\n/**\n * DiffuseCompositeMethod provides a base class for diffuse methods that wrap a diffuse method to alter the\n * calculated diffuse reflection strength.\n */\nclass DiffuseCompositeMethod extends DiffuseBasicMethod\n{\n\tpublic pBaseMethod:DiffuseBasicMethod;\n\n\tprivate _onShaderInvalidatedDelegate:Function;\n\n\t/**\n\t * Creates a new <code>DiffuseCompositeMethod</code> object.\n\t *\n\t * @param modulateMethod The method which will add the code to alter the base method's strength. It needs to have the signature clampDiffuse(t:ShaderRegisterElement, regCache:ShaderRegisterCache):string, in which t.w will contain the diffuse strength.\n\t * @param baseMethod The base diffuse method on which this method's shading is based.\n\t */\n\tconstructor(modulateMethod:(shaderObject:ShaderObjectBase, methodVO:MethodVO, targetReg:ShaderRegisterElement, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData) => string, baseMethod:DiffuseBasicMethod = null)\n\t{\n\t\tsuper();\n\n\t\tthis._onShaderInvalidatedDelegate = (event:ShadingMethodEvent) => this.onShaderInvalidated(event);\n\n\t\tthis.pBaseMethod = baseMethod || new DiffuseBasicMethod();\n\t\tthis.pBaseMethod._iModulateMethod = modulateMethod;\n\t\tthis.pBaseMethod.addEventListener(ShadingMethodEvent.SHADER_INVALIDATED, this._onShaderInvalidatedDelegate);\n\t}\n\n\t/**\n\t * The base diffuse method on which this method's shading is based.\n\t */\n\tpublic get baseMethod():DiffuseBasicMethod\n\t{\n\t\treturn this.pBaseMethod;\n\t}\n\n\tpublic set baseMethod(value:DiffuseBasicMethod)\n\t{\n\t\tif (this.pBaseMethod == value)\n\t\t\treturn;\n\n\t\tthis.pBaseMethod.removeEventListener(ShadingMethodEvent.SHADER_INVALIDATED, this._onShaderInvalidatedDelegate);\n\t\tthis.pBaseMethod = value;\n\t\tthis.pBaseMethod.addEventListener(ShadingMethodEvent.SHADER_INVALIDATED, this._onShaderInvalidatedDelegate);\n\t\tthis.iInvalidateShaderProgram();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iInitVO(shaderObject:ShaderLightingObject, methodVO:MethodVO)\n\t{\n\t\tthis.pBaseMethod.iInitVO(shaderObject, methodVO);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iInitConstants(shaderObject:ShaderLightingObject, methodVO:MethodVO)\n\t{\n\t\tthis.pBaseMethod.iInitConstants(shaderObject, methodVO);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic dispose()\n\t{\n\t\tthis.pBaseMethod.removeEventListener(ShadingMethodEvent.SHADER_INVALIDATED, this._onShaderInvalidatedDelegate);\n\t\tthis.pBaseMethod.dispose();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get texture():Texture2DBase\n\t{\n\t\treturn this.pBaseMethod.texture;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic set texture(value:Texture2DBase)\n\t{\n\t\tthis.pBaseMethod.texture = value;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get diffuseColor():number\n\t{\n\t\treturn this.pBaseMethod.diffuseColor;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic set diffuseColor(value:number)\n\t{\n\t\tthis.pBaseMethod.diffuseColor = value;\n\t}\n\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get ambientColor():number\n\t{\n\t\treturn this.pBaseMethod.ambientColor;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic set ambientColor(value:number)\n\t{\n\t\tthis.pBaseMethod.ambientColor = value;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iGetFragmentPreLightingCode(shaderObject:ShaderLightingObject, methodVO:MethodVO, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn this.pBaseMethod.iGetFragmentPreLightingCode(shaderObject, methodVO, registerCache, sharedRegisters);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iGetFragmentCodePerLight(shaderObject:ShaderLightingObject, methodVO:MethodVO, lightDirReg:ShaderRegisterElement, lightColReg:ShaderRegisterElement, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tvar code:string = this.pBaseMethod.iGetFragmentCodePerLight(shaderObject, methodVO, lightDirReg, lightColReg, registerCache, sharedRegisters);\n\t\tthis._pTotalLightColorReg = this.pBaseMethod._pTotalLightColorReg;\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iGetFragmentCodePerProbe(shaderObject:ShaderLightingObject, methodVO:MethodVO, cubeMapReg:ShaderRegisterElement, weightRegister:string, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tvar code:string = this.pBaseMethod.iGetFragmentCodePerProbe(shaderObject, methodVO, cubeMapReg, weightRegister, registerCache, sharedRegisters);\n\t\tthis._pTotalLightColorReg = this.pBaseMethod._pTotalLightColorReg;\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iActivate(shaderObject:ShaderLightingObject, methodVO:MethodVO, stage:Stage)\n\t{\n\t\tthis.pBaseMethod.iActivate(shaderObject, methodVO, stage);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iSetRenderState(shaderObject:ShaderLightingObject, methodVO:MethodVO, renderable:RenderableBase, stage:Stage, camera:Camera)\n\t{\n\t\tthis.pBaseMethod.iSetRenderState(shaderObject, methodVO, renderable, stage, camera);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iDeactivate(shaderObject:ShaderLightingObject, methodVO:MethodVO, stage:Stage)\n\t{\n\t\tthis.pBaseMethod.iDeactivate(shaderObject, methodVO, stage);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iGetVertexCode(shaderObject:ShaderObjectBase, methodVO:MethodVO, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn this.pBaseMethod.iGetVertexCode(shaderObject, methodVO, registerCache, sharedRegisters);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iGetFragmentPostLightingCode(shaderObject:ShaderLightingObject, methodVO:MethodVO, targetReg:ShaderRegisterElement, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn this.pBaseMethod.iGetFragmentPostLightingCode(shaderObject, methodVO, targetReg, registerCache, sharedRegisters);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iReset()\n\t{\n\t\tthis.pBaseMethod.iReset();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iCleanCompilationData()\n\t{\n\t\tsuper.iCleanCompilationData();\n\t\tthis.pBaseMethod.iCleanCompilationData();\n\t}\n\n\t/**\n\t * Called when the base method's shader code is invalidated.\n\t */\n\tprivate onShaderInvalidated(event:ShadingMethodEvent)\n\t{\n\t\tthis.iInvalidateShaderProgram();\n\t}\n}\n\nexport = DiffuseCompositeMethod;",
    "import ShaderLightingObject\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderLightingObject\");\nimport ShaderObjectBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderObjectBase\");\nimport ShaderRegisterCache\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterData\");\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterElement\");\nimport ShaderCompilerHelper\t\t\t\t= require(\"awayjs-renderergl/lib/utils/ShaderCompilerHelper\");\n\nimport MethodVO\t\t\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/data/MethodVO\");\nimport DiffuseBasicMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/DiffuseBasicMethod\");\n\n/**\n * DiffuseDepthMethod provides a debug method to visualise depth maps\n */\nclass DiffuseDepthMethod extends DiffuseBasicMethod\n{\n\t/**\n\t * Creates a new DiffuseBasicMethod object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iInitConstants(shaderObject:ShaderObjectBase, methodVO:MethodVO)\n\t{\n\t\tvar data:Array<number> = shaderObject.fragmentConstantData;\n\t\tvar index:number /*int*/ = methodVO.fragmentConstantsIndex;\n\t\tdata[index] = 1.0;\n\t\tdata[index + 1] = 1/255.0;\n\t\tdata[index + 2] = 1/65025.0;\n\t\tdata[index + 3] = 1/16581375.0;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iGetFragmentPostLightingCode(shaderObject:ShaderLightingObject, methodVO:MethodVO, targetReg:ShaderRegisterElement, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tvar code:string = \"\";\n\t\tvar temp:ShaderRegisterElement;\n\t\tvar decReg:ShaderRegisterElement;\n\n\t\tif (!this._pUseTexture)\n\t\t\tthrow new Error(\"DiffuseDepthMethod requires texture!\");\n\n\t\t// incorporate input from ambient\n\t\tif (shaderObject.numLights > 0) {\n\t\t\tif (sharedRegisters.shadowTarget)\n\t\t\t\tcode += \"mul \" + this._pTotalLightColorReg + \".xyz, \" + this._pTotalLightColorReg + \".xyz, \" + sharedRegisters.shadowTarget + \".w\\n\";\n\t\t\tcode += \"add \" + targetReg + \".xyz, \" + this._pTotalLightColorReg + \".xyz, \" + targetReg + \".xyz\\n\" +\n\t\t\t\t\"sat \" + targetReg + \".xyz, \" + targetReg + \".xyz\\n\";\n\t\t\tregisterCache.removeFragmentTempUsage(this._pTotalLightColorReg);\n\t\t}\n\n\t\ttemp = shaderObject.numLights > 0? registerCache.getFreeFragmentVectorTemp():targetReg;\n\n\t\tthis._pDiffuseInputRegister = registerCache.getFreeTextureReg();\n\t\tmethodVO.texturesIndex = this._pDiffuseInputRegister.index;\n\t\tdecReg = registerCache.getFreeFragmentConstant();\n\t\tmethodVO.fragmentConstantsIndex = decReg.index*4;\n\t\tcode += ShaderCompilerHelper.getTex2DSampleCode(temp, sharedRegisters, this._pDiffuseInputRegister, this.texture, shaderObject.useSmoothTextures, shaderObject.repeatTextures, shaderObject.useMipmapping) +\n\t\t\t\"dp4 \" + temp + \".x, \" + temp + \", \" + decReg + \"\\n\" +\n\t\t\t\"mov \" + temp + \".yz, \" + temp + \".xx\t\t\t\\n\" +\n\t\t\t\"mov \" + temp + \".w, \" + decReg + \".x\\n\" +\n\t\t\t\"sub \" + temp + \".xyz, \" + decReg + \".xxx, \" + temp + \".xyz\\n\";\n\n\t\tif (shaderObject.numLights == 0)\n\t\t\treturn code;\n\n\t\tcode += \"mul \" + targetReg + \".xyz, \" + temp + \".xyz, \" + targetReg + \".xyz\\n\" +\n\t\t\t\"mov \" + targetReg + \".w, \" + temp + \".w\\n\";\n\n\t\treturn code;\n\t}\n}\n\nexport = DiffuseDepthMethod;",
    "import Texture2DBase\t\t\t\t\t= require(\"awayjs-core/lib/textures/Texture2DBase\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport ShaderLightingObject\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderLightingObject\");\nimport ShaderRegisterCache\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterData\");\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterElement\");\nimport ShaderCompilerHelper\t\t\t\t= require(\"awayjs-renderergl/lib/utils/ShaderCompilerHelper\");\n\nimport MethodVO\t\t\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/data/MethodVO\");\nimport DiffuseBasicMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/DiffuseBasicMethod\");\n\n/**\n * DiffuseGradientMethod is an alternative to DiffuseBasicMethod in which the shading can be modulated with a gradient\n * to introduce color-tinted shading as opposed to the single-channel diffuse strength. This can be used as a crude\n * approximation to subsurface scattering (for instance, the mid-range shading for skin can be tinted red to similate\n * scattered light within the skin attributing to the final colour)\n */\nclass DiffuseGradientMethod extends DiffuseBasicMethod\n{\n\tprivate _gradientTextureRegister:ShaderRegisterElement;\n\tprivate _gradient:Texture2DBase;\n\n\t/**\n\t * Creates a new DiffuseGradientMethod object.\n\t * @param gradient A texture that contains the light colour based on the angle. This can be used to change\n\t * the light colour due to subsurface scattering when the surface faces away from the light.\n\t */\n\tconstructor(gradient:Texture2DBase)\n\t{\n\t\tsuper();\n\n\t\tthis._gradient = gradient;\n\t}\n\n\t/**\n\t * A texture that contains the light colour based on the angle. This can be used to change the light colour\n\t * due to subsurface scattering when the surface faces away from the light.\n\t */\n\tpublic get gradient():Texture2DBase\n\t{\n\t\treturn this._gradient;\n\t}\n\n\tpublic set gradient(value:Texture2DBase)\n\t{\n\t\tif (value.format != this._gradient.format)\n\t\t\tthis.iInvalidateShaderProgram();\n\t\tthis._gradient = value;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iCleanCompilationData()\n\t{\n\t\tsuper.iCleanCompilationData();\n\t\tthis._gradientTextureRegister = null;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iGetFragmentPreLightingCode(shaderObject:ShaderLightingObject, methodVO:MethodVO, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tvar code:string = super.iGetFragmentPreLightingCode(shaderObject, methodVO, registerCache, sharedRegisters);\n\t\tthis._pIsFirstLight = true;\n\n\t\tif (shaderObject.numLights > 0) {\n\t\t\tthis._gradientTextureRegister = registerCache.getFreeTextureReg();\n\t\t\tmethodVO.secondaryTexturesIndex = this._gradientTextureRegister.index;\n\t\t}\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iGetFragmentCodePerLight(shaderObject:ShaderLightingObject, methodVO:MethodVO, lightDirReg:ShaderRegisterElement, lightColReg:ShaderRegisterElement, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tvar code:string = \"\";\n\t\tvar t:ShaderRegisterElement;\n\n\t\t// write in temporary if not first light, so we can add to total diffuse colour\n\t\tif (this._pIsFirstLight)\n\t\t\tt = this._pTotalLightColorReg;\n\t\telse {\n\t\t\tt = registerCache.getFreeFragmentVectorTemp();\n\t\t\tregisterCache.addFragmentTempUsages(t, 1);\n\t\t}\n\n\t\tcode += \"dp3 \" + t + \".w, \" + lightDirReg + \".xyz, \" + sharedRegisters.normalFragment + \".xyz\\n\" +\n\t\t\t\"mul \" + t + \".w, \" + t + \".w, \" + sharedRegisters.commons + \".x\\n\" +\n\t\t\t\"add \" + t + \".w, \" + t + \".w, \" + sharedRegisters.commons + \".x\\n\" +\n\t\t\t\"mul \" + t + \".xyz, \" + t + \".w, \" + lightDirReg + \".w\\n\";\n\n\t\tif (this._iModulateMethod != null)\n\t\t\tcode += this._iModulateMethod(shaderObject, methodVO, t, registerCache, sharedRegisters);\n\n\t\tcode += ShaderCompilerHelper.getTex2DSampleCode(t, sharedRegisters, this._gradientTextureRegister, this._gradient, shaderObject.useSmoothTextures, shaderObject.repeatTextures, shaderObject.useMipmapping, t, \"clamp\") +\n\t\t\t//\t\t\t\t\t\"mul \" + t + \".xyz, \" + t + \".xyz, \" + t + \".w\\n\" +\n\t\t\t\"mul \" + t + \".xyz, \" + t + \".xyz, \" + lightColReg + \".xyz\\n\";\n\n\t\tif (!this._pIsFirstLight) {\n\t\t\tcode += \"add \" + this._pTotalLightColorReg + \".xyz, \" + this._pTotalLightColorReg + \".xyz, \" + t + \".xyz\\n\";\n\t\t\tregisterCache.removeFragmentTempUsage(t);\n\t\t}\n\n\t\tthis._pIsFirstLight = false;\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic pApplyShadow(shaderObject:ShaderLightingObject, methodVO:MethodVO, regCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tvar t:ShaderRegisterElement = regCache.getFreeFragmentVectorTemp();\n\n\t\treturn \"mov \" + t + \", \" + sharedRegisters.shadowTarget + \".wwww\\n\" +\n\t\t\tShaderCompilerHelper.getTex2DSampleCode(t, sharedRegisters, this._gradientTextureRegister, this._gradient, shaderObject.useSmoothTextures, shaderObject.repeatTextures, shaderObject.useMipmapping, t, \"clamp\") +\n\t\t\t\"mul \" + this._pTotalLightColorReg + \".xyz, \" + this._pTotalLightColorReg + \", \" + t + \"\\n\";\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iActivate(shaderObject:ShaderLightingObject, methodVO:MethodVO, stage:Stage)\n\t{\n\t\tsuper.iActivate(shaderObject, methodVO, stage);\n\n\t\tstage.activateTexture(methodVO.secondaryTexturesIndex, this._gradient, shaderObject.repeatTextures, shaderObject.useSmoothTextures, shaderObject.useMipmapping);\n\t}\n}\n\nexport = DiffuseGradientMethod;",
    "import Texture2DBase\t\t\t\t\t= require(\"awayjs-core/lib/textures/Texture2DBase\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport ShaderLightingObject\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderLightingObject\");\nimport ShaderRegisterCache\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterData\");\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterElement\");\nimport ShaderCompilerHelper\t\t\t\t= require(\"awayjs-renderergl/lib/utils/ShaderCompilerHelper\");\n\nimport MethodVO\t\t\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/data/MethodVO\");\nimport DiffuseBasicMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/DiffuseBasicMethod\");\nimport DiffuseCompositeMethod\t\t\t= require(\"awayjs-methodmaterials/lib/methods/DiffuseCompositeMethod\");\n\n/**\n * DiffuseLightMapMethod provides a diffuse shading method that uses a light map to modulate the calculated diffuse\n * lighting. It is different from EffectLightMapMethod in that the latter modulates the entire calculated pixel color, rather\n * than only the diffuse lighting value.\n */\nclass DiffuseLightMapMethod extends DiffuseCompositeMethod\n{\n\t/**\n\t * Indicates the light map should be multiplied with the calculated shading result.\n\t * This can be used to add pre-calculated shadows or occlusion.\n\t */\n\tpublic static MULTIPLY:string = \"multiply\";\n\n\t/**\n\t * Indicates the light map should be added into the calculated shading result.\n\t * This can be used to add pre-calculated lighting or global illumination.\n\t */\n\tpublic static ADD:string = \"add\";\n\n\tprivate _lightMapTexture:Texture2DBase;\n\tprivate _blendMode:string;\n\tprivate _useSecondaryUV:boolean;\n\n\t/**\n\t * Creates a new DiffuseLightMapMethod method.\n\t *\n\t * @param lightMap The texture containing the light map.\n\t * @param blendMode The blend mode with which the light map should be applied to the lighting result.\n\t * @param useSecondaryUV Indicates whether the secondary UV set should be used to map the light map.\n\t * @param baseMethod The diffuse method used to calculate the regular diffuse-based lighting.\n\t */\n\tconstructor(lightMap:Texture2DBase, blendMode:string = \"multiply\", useSecondaryUV:boolean = false, baseMethod:DiffuseBasicMethod = null)\n\t{\n\t\tsuper(null, baseMethod);\n\n\t\tthis._useSecondaryUV = useSecondaryUV;\n\t\tthis._lightMapTexture = lightMap;\n\t\tthis.blendMode = blendMode;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iInitVO(shaderObject:ShaderLightingObject, methodVO:MethodVO)\n\t{\n\t\tmethodVO.needsSecondaryUV = this._useSecondaryUV;\n\t\tmethodVO.needsUV = !this._useSecondaryUV;\n\t}\n\n\t/**\n\t * The blend mode with which the light map should be applied to the lighting result.\n\t *\n\t * @see DiffuseLightMapMethod.ADD\n\t * @see DiffuseLightMapMethod.MULTIPLY\n\t */\n\tpublic get blendMode():string\n\t{\n\t\treturn this._blendMode;\n\t}\n\n\tpublic set blendMode(value:string)\n\t{\n\t\tif (value != DiffuseLightMapMethod.ADD && value != DiffuseLightMapMethod.MULTIPLY)\n\t\t\tthrow new Error(\"Unknown blendmode!\");\n\n\t\tif (this._blendMode == value)\n\t\t\treturn;\n\n\t\tthis._blendMode = value;\n\n\t\tthis.iInvalidateShaderProgram();\n\t}\n\n\t/**\n\t * The texture containing the light map data.\n\t */\n\tpublic get lightMapTexture():Texture2DBase\n\t{\n\t\treturn this._lightMapTexture;\n\t}\n\n\tpublic set lightMapTexture(value:Texture2DBase)\n\t{\n\t\tthis._lightMapTexture = value;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iActivate(shaderObject:ShaderLightingObject, methodVO:MethodVO, stage:Stage)\n\t{\n\t\tstage.activateTexture(methodVO.secondaryTexturesIndex, this._lightMapTexture, shaderObject.repeatTextures, shaderObject.useSmoothTextures, shaderObject.useMipmapping);\n\n\t\tsuper.iActivate(shaderObject, methodVO, stage);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iGetFragmentPostLightingCode(shaderObject:ShaderLightingObject, methodVO:MethodVO, targetReg:ShaderRegisterElement, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tvar code:string;\n\t\tvar lightMapReg:ShaderRegisterElement = registerCache.getFreeTextureReg();\n\t\tvar temp:ShaderRegisterElement = registerCache.getFreeFragmentVectorTemp();\n\t\tmethodVO.secondaryTexturesIndex = lightMapReg.index;\n\n\t\tcode = ShaderCompilerHelper.getTex2DSampleCode(temp, sharedRegisters, lightMapReg, this._lightMapTexture, shaderObject.useSmoothTextures, shaderObject.repeatTextures, shaderObject.useMipmapping, sharedRegisters.secondaryUVVarying);\n\n\t\tswitch (this._blendMode) {\n\t\t\tcase DiffuseLightMapMethod.MULTIPLY:\n\t\t\t\tcode += \"mul \" + this._pTotalLightColorReg + \", \" + this._pTotalLightColorReg + \", \" + temp + \"\\n\";\n\t\t\t\tbreak;\n\t\t\tcase DiffuseLightMapMethod.ADD:\n\t\t\t\tcode += \"add \" + this._pTotalLightColorReg + \", \" + this._pTotalLightColorReg + \", \" + temp + \"\\n\";\n\t\t\t\tbreak;\n\t\t}\n\n\t\tcode += super.iGetFragmentPostLightingCode(shaderObject, methodVO, targetReg, registerCache, sharedRegisters);\n\n\t\treturn code;\n\t}\n}\n\nexport = DiffuseLightMapMethod;",
    "import Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport ShaderLightingObject\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderLightingObject\");\nimport ShaderObjectBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderObjectBase\");\nimport ShaderRegisterCache\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterData\");\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterElement\");\nimport RenderableBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/pool/RenderableBase\");\n\nimport MethodVO\t\t\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/data/MethodVO\");\nimport DiffuseBasicMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/DiffuseBasicMethod\");\nimport DiffuseCompositeMethod\t\t\t= require(\"awayjs-methodmaterials/lib/methods/DiffuseCompositeMethod\");\nimport SingleObjectDepthPass\t\t\t= require(\"awayjs-methodmaterials/lib/passes/SingleObjectDepthPass\");\n\n/**\n * DiffuseSubSurfaceMethod provides a depth map-based diffuse shading method that mimics the scattering of\n * light inside translucent surfaces. It allows light to shine through an object and to soften the diffuse shading.\n * It can be used for candle wax, ice, skin, ...\n */\nclass DiffuseSubSurfaceMethod extends DiffuseCompositeMethod\n{\n\tprivate _depthPass:SingleObjectDepthPass;\n\tprivate _lightProjVarying:ShaderRegisterElement;\n\tprivate _propReg:ShaderRegisterElement;\n\tprivate _scattering:number;\n\tprivate _translucency:number = 1;\n\tprivate _lightColorReg:ShaderRegisterElement;\n\tprivate _scatterColor:number /*uint*/ = 0xffffff;\n\tprivate _colorReg:ShaderRegisterElement;\n\tprivate _decReg:ShaderRegisterElement;\n\tprivate _scatterR:number = 1.0;\n\tprivate _scatterG:number = 1.0;\n\tprivate _scatterB:number = 1.0;\n\tprivate _targetReg:ShaderRegisterElement;\n\t\n\t/**\n\t * Creates a new <code>DiffuseSubSurfaceMethod</code> object.\n\t *\n\t * @param depthMapSize The size of the depth map used.\n\t * @param depthMapOffset The amount by which the rendered object will be inflated, to prevent depth map rounding errors.\n\t * @param baseMethod The diffuse method used to calculate the regular diffuse-based lighting.\n\t */\n\tconstructor(depthMapSize:number /*int*/ = 512, depthMapOffset:number = 15, baseMethod:DiffuseBasicMethod = null)\n\t{\n\t\tsuper(null, baseMethod);\n\n\t\tthis.pBaseMethod._iModulateMethod = (shaderObject:ShaderObjectBase, methodVO:MethodVO, targetReg:ShaderRegisterElement, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData) => this.scatterLight(shaderObject, methodVO, targetReg, registerCache, sharedRegisters);\n\n\t\t//this._passes = new Array<MaterialPassGLBase>();\n\t\t//this._depthPass = new SingleObjectDepthPass();\n\t\t//this._depthPass.textureSize = depthMapSize;\n\t\t//this._depthPass.polyOffset = depthMapOffset;\n\t\t//this._passes.push(this._depthPass);\n\t\tthis._scattering = 0.2;\n\t\tthis._translucency = 1;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iInitConstants(shaderObject:ShaderLightingObject, methodVO:MethodVO)\n\t{\n\t\tsuper.iInitConstants(shaderObject, methodVO);\n\n\t\tvar data:Array<number> = shaderObject.vertexConstantData;\n\t\tvar index:number /*int*/ = methodVO.secondaryVertexConstantsIndex;\n\t\tdata[index] = .5;\n\t\tdata[index + 1] = -.5;\n\t\tdata[index + 2] = 0;\n\t\tdata[index + 3] = 1;\n\t\t\n\t\tdata = shaderObject.fragmentConstantData;\n\t\tindex = methodVO.secondaryFragmentConstantsIndex;\n\t\tdata[index + 3] = 1.0;\n\t\tdata[index + 4] = 1.0;\n\t\tdata[index + 5] = 1/255;\n\t\tdata[index + 6] = 1/65025;\n\t\tdata[index + 7] = 1/16581375;\n\t\tdata[index + 10] = .5;\n\t\tdata[index + 11] = -.1;\n\t}\n\t\n\tpublic iCleanCompilationData()\n\t{\n\t\tsuper.iCleanCompilationData();\n\n\t\tthis._lightProjVarying = null;\n\t\tthis._propReg = null;\n\t\tthis._lightColorReg = null;\n\t\tthis._colorReg = null;\n\t\tthis._decReg = null;\n\t\tthis._targetReg = null;\n\t}\n\t\n\t/**\n\t * The amount by which the light scatters. It can be used to set the translucent surface's thickness. Use low\n\t * values for skin.\n\t */\n\tpublic get scattering():number\n\t{\n\t\treturn this._scattering;\n\t}\n\t\n\tpublic set scattering(value:number)\n\t{\n\t\tthis._scattering = value;\n\t}\n\t\n\t/**\n\t * The translucency of the object.\n\t */\n\tpublic get translucency():number\n\t{\n\t\treturn this._translucency;\n\t}\n\t\n\tpublic set translucency(value:number)\n\t{\n\t\tthis._translucency = value;\n\t}\n\t\n\t/**\n\t * The colour of the \"insides\" of the object, ie: the colour the light becomes after leaving the object.\n\t */\n\tpublic get scatterColor():number /*uint*/\n\t{\n\t\treturn this._scatterColor;\n\t}\n\t\n\tpublic set scatterColor(scatterColor:number /*uint*/)\n\t{\n\t\tthis._scatterColor = scatterColor;\n\t\tthis._scatterR = ((scatterColor >> 16) & 0xff)/0xff;\n\t\tthis._scatterG = ((scatterColor >> 8) & 0xff)/0xff;\n\t\tthis._scatterB = (scatterColor & 0xff)/0xff;\n\t}\n\t\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iGetVertexCode(shaderObject:ShaderObjectBase, methodVO:MethodVO, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tvar code:string = super.iGetVertexCode(shaderObject, methodVO, registerCache, sharedRegisters);\n\t\tvar lightProjection:ShaderRegisterElement;\n\t\tvar toTexRegister:ShaderRegisterElement;\n\t\tvar temp:ShaderRegisterElement = registerCache.getFreeVertexVectorTemp();\n\t\t\n\t\ttoTexRegister = registerCache.getFreeVertexConstant();\n\t\tmethodVO.secondaryVertexConstantsIndex = toTexRegister.index*4;\n\n\t\tthis._lightProjVarying = registerCache.getFreeVarying();\n\t\tlightProjection = registerCache.getFreeVertexConstant();\n\t\tregisterCache.getFreeVertexConstant();\n\t\tregisterCache.getFreeVertexConstant();\n\t\tregisterCache.getFreeVertexConstant();\n\t\t\n\t\tcode += \"m44 \" + temp + \", vt0, \" + lightProjection + \"\\n\" +\n\t\t\t\"div \" + temp + \".xyz, \" + temp + \".xyz, \" + temp + \".w\\n\" +\n\t\t\t\"mul \" + temp + \".xy, \" + temp + \".xy, \" + toTexRegister + \".xy\\n\" +\n\t\t\t\"add \" + temp + \".xy, \" + temp + \".xy, \" + toTexRegister + \".xx\\n\" +\n\t\t\t\"mov \" + this._lightProjVarying + \".xyz, \" + temp + \".xyz\\n\" +\n\t\t\t\"mov \" + this._lightProjVarying + \".w, va0.w\\n\";\n\t\t\n\t\treturn code;\n\t}\n\t\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iGetFragmentPreLightingCode(shaderObject:ShaderLightingObject, methodVO:MethodVO, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tthis._colorReg = registerCache.getFreeFragmentConstant();\n\t\tthis._decReg = registerCache.getFreeFragmentConstant();\n\t\tthis._propReg = registerCache.getFreeFragmentConstant();\n\t\tmethodVO.secondaryFragmentConstantsIndex = this._colorReg.index*4;\n\t\t\n\t\treturn super.iGetFragmentPreLightingCode(shaderObject, methodVO, registerCache, sharedRegisters);\n\t}\n\t\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iGetFragmentCodePerLight(shaderObject:ShaderLightingObject, methodVO:MethodVO, lightDirReg:ShaderRegisterElement, lightColReg:ShaderRegisterElement, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tthis._pIsFirstLight = true;\n\t\tthis._lightColorReg = lightColReg;\n\t\treturn super.iGetFragmentCodePerLight(shaderObject, methodVO, lightDirReg, lightColReg, registerCache, sharedRegisters);\n\t}\n\t\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iGetFragmentPostLightingCode(shaderObject:ShaderLightingObject, methodVO:MethodVO, targetReg:ShaderRegisterElement, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tvar code:string = super.iGetFragmentPostLightingCode(shaderObject, methodVO, targetReg, registerCache, sharedRegisters);\n\t\tvar temp:ShaderRegisterElement = registerCache.getFreeFragmentVectorTemp();\n\t\t\n\t\tcode += \"mul \" + temp + \".xyz, \" + this._lightColorReg + \".xyz, \" + this._targetReg + \".w\\n\" +\n\t\t\t\"mul \" + temp + \".xyz, \" + temp + \".xyz, \" + this._colorReg + \".xyz\\n\" +\n\t\t\t\"add \" + targetReg + \".xyz, \" + targetReg + \".xyz, \" + temp + \".xyz\\n\";\n\t\t\n\t\tif (this._targetReg != sharedRegisters.viewDirFragment)\n\t\t\tregisterCache.removeFragmentTempUsage(targetReg);\n\t\t\n\t\treturn code;\n\t}\n\t\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iActivate(shaderObject:ShaderLightingObject, methodVO:MethodVO, stage:Stage)\n\t{\n\t\tsuper.iActivate(shaderObject, methodVO, stage);\n\t\t\n\t\tvar index:number /*int*/ = methodVO.secondaryFragmentConstantsIndex;\n\t\tvar data:Array<number> = shaderObject.fragmentConstantData;\n\t\tdata[index] = this._scatterR;\n\t\tdata[index + 1] = this._scatterG;\n\t\tdata[index + 2] = this._scatterB;\n\t\tdata[index + 8] = this._scattering;\n\t\tdata[index + 9] = this._translucency;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iSetRenderState(shaderObject:ShaderObjectBase, methodVO:MethodVO, renderable:RenderableBase, stage:Stage, camera:Camera)\n\t{\n\t\tstage.activateTexture(methodVO.secondaryTexturesIndex, this._depthPass._iGetDepthMap(renderable), shaderObject.repeatTextures, shaderObject.useSmoothTextures, shaderObject.useMipmapping);\n\n\t\tthis._depthPass._iGetProjection(renderable).copyRawDataTo(shaderObject.vertexConstantData, methodVO.secondaryVertexConstantsIndex + 4, true);\n\t}\n\t\n\t/**\n\t * Generates the code for this method\n\t */\n\tprivate scatterLight(shaderObject:ShaderObjectBase, methodVO:MethodVO, targetReg:ShaderRegisterElement, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\t// only scatter first light\n\t\tif (!this._pIsFirstLight)\n\t\t\treturn \"\";\n\n\t\tthis._pIsFirstLight = false;\n\n\t\tvar code:string = \"\";\n\t\tvar depthReg:ShaderRegisterElement = registerCache.getFreeTextureReg();\n\n\t\tif (sharedRegisters.viewDirFragment) {\n\t\t\tthis._targetReg = sharedRegisters.viewDirFragment;\n\t\t} else {\n\t\t\tthis._targetReg = registerCache.getFreeFragmentVectorTemp();\n\t\t\tregisterCache.addFragmentTempUsages(this._targetReg, 1);\n\t\t}\n\n\t\tmethodVO.secondaryTexturesIndex = depthReg.index;\n\t\t\n\t\tvar temp:ShaderRegisterElement = registerCache.getFreeFragmentVectorTemp();\n\t\tcode += \"tex \" + temp + \", \" + this._lightProjVarying + \", \" + depthReg + \" <2d,nearest,clamp>\\n\" +\n\t\t\t// reencode RGBA\n\t\t\t\"dp4 \" + targetReg + \".z, \" + temp + \", \" + this._decReg + \"\\n\";\n\t\t// currentDistanceToLight - closestDistanceToLight\n\t\tcode += \"sub \" + targetReg + \".z, \" + this._lightProjVarying + \".z, \" + targetReg + \".z\\n\" +\n\t\t\t\n\t\t\t\"sub \" + targetReg + \".z, \" + this._propReg + \".x, \" + targetReg + \".z\\n\" +\n\t\t\t\"mul \" + targetReg + \".z, \" + this._propReg + \".y, \" + targetReg + \".z\\n\" +\n\t\t\t\"sat \" + targetReg + \".z, \" + targetReg + \".z\\n\" +\n\t\t\t\n\t\t\t// targetReg.x contains dot(lightDir, normal)\n\t\t\t// modulate according to incident light angle (scatter = scatter*(-.5*dot(light, normal) + .5)\n\t\t\t\"neg \" + targetReg + \".y, \" + targetReg + \".x\\n\" +\n\t\t\t\"mul \" + targetReg + \".y, \" + targetReg + \".y, \" + this._propReg + \".z\\n\" +\n\t\t\t\"add \" + targetReg + \".y, \" + targetReg + \".y, \" + this._propReg + \".z\\n\" +\n\t\t\t\"mul \" + this._targetReg + \".w, \" + targetReg + \".z, \" + targetReg + \".y\\n\" +\n\t\t\t\n\t\t\t// blend diffuse: d' = (1-s)*d + s*1\n\t\t\t\"sub \" + targetReg + \".y, \" + this._colorReg + \".w, \" + this._targetReg + \".w\\n\" +\n\t\t\t\"mul \" + targetReg + \".w, \" + targetReg + \".w, \" + targetReg + \".y\\n\";\n\t\t\n\t\treturn code;\n\t}\n}\n\nexport = DiffuseSubSurfaceMethod;",
    "import Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport ShaderLightingObject\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderLightingObject\");\nimport ShaderRegisterCache\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterData\");\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterElement\");\n\nimport MethodVO\t\t\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/data/MethodVO\");\nimport DiffuseBasicMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/DiffuseBasicMethod\");\n\n/**\n * DiffuseWrapMethod is an alternative to DiffuseBasicMethod in which the light is allowed to be \"wrapped around\" the normally dark area, to some extent.\n * It can be used as a crude approximation to Oren-Nayar or simple subsurface scattering.\n */\nclass DiffuseWrapMethod extends DiffuseBasicMethod\n{\n\tprivate _wrapDataRegister:ShaderRegisterElement;\n\tprivate _wrapFactor:number;\n\n\t/**\n\t * Creates a new DiffuseWrapMethod object.\n\t * @param wrapFactor A factor to indicate the amount by which the light is allowed to wrap\n\t */\n\tconstructor(wrapFactor:number = .5)\n\t{\n\t\tsuper();\n\n\t\tthis.wrapFactor = wrapFactor;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iCleanCompilationData()\n\t{\n\t\tsuper.iCleanCompilationData();\n\n\t\tthis._wrapDataRegister = null;\n\t}\n\n\t/**\n\t * A factor to indicate the amount by which the light is allowed to wrap.\n\t */\n\tpublic get wrapFactor():number\n\t{\n\t\treturn this._wrapFactor;\n\t}\n\n\tpublic set wrapFactor(value:number)\n\t{\n\t\tthis._wrapFactor = value;\n\t\tthis._wrapFactor = 1/(value + 1);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iGetFragmentPreLightingCode(shaderObject:ShaderLightingObject, methodVO:MethodVO, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tvar code:string = super.iGetFragmentPreLightingCode(shaderObject, methodVO, registerCache, sharedRegisters);\n\t\tthis._pIsFirstLight = true;\n\t\tthis._wrapDataRegister = registerCache.getFreeFragmentConstant();\n\t\tmethodVO.secondaryFragmentConstantsIndex = this._wrapDataRegister.index*4;\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iGetFragmentCodePerLight(shaderObject:ShaderLightingObject, methodVO:MethodVO, lightDirReg:ShaderRegisterElement, lightColReg:ShaderRegisterElement, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tvar code:string = \"\";\n\t\tvar t:ShaderRegisterElement;\n\n\t\t// write in temporary if not first light, so we can add to total diffuse colour\n\t\tif (this._pIsFirstLight) {\n\t\t\tt = this._pTotalLightColorReg;\n\t\t} else {\n\t\t\tt = registerCache.getFreeFragmentVectorTemp();\n\t\t\tregisterCache.addFragmentTempUsages(t, 1);\n\t\t}\n\n\t\tcode += \"dp3 \" + t + \".x, \" + lightDirReg + \".xyz, \" + sharedRegisters.normalFragment + \".xyz\\n\" +\n\t\t\t\"add \" + t + \".y, \" + t + \".x, \" + this._wrapDataRegister + \".x\\n\" +\n\t\t\t\"mul \" + t + \".y, \" + t + \".y, \" + this._wrapDataRegister + \".y\\n\" +\n\t\t\t\"sat \" + t + \".w, \" + t + \".y\\n\" +\n\t\t\t\"mul \" + t + \".xz, \" + t + \".w, \" + lightDirReg + \".wz\\n\";\n\n\t\tif (this._iModulateMethod != null)\n\t\t\tcode += this._iModulateMethod(shaderObject, methodVO, lightDirReg, registerCache, sharedRegisters);\n\n\t\tcode += \"mul \" + t + \", \" + t + \".x, \" + lightColReg + \"\\n\";\n\n\t\tif (!this._pIsFirstLight) {\n\t\t\tcode += \"add \" + this._pTotalLightColorReg + \".xyz, \" + this._pTotalLightColorReg + \".xyz, \" + t + \".xyz\\n\";\n\t\t\tregisterCache.removeFragmentTempUsage(t);\n\t\t}\n\n\t\tthis._pIsFirstLight = false;\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iActivate(shaderObject:ShaderLightingObject, methodVO:MethodVO, stage:Stage)\n\t{\n\t\tsuper.iActivate(shaderObject, methodVO, stage);\n\n\t\tvar index:number /*int*/ = methodVO.secondaryFragmentConstantsIndex;\n\t\tvar data:Array<number> = shaderObject.fragmentConstantData;\n\t\tdata[index] = this._wrapFactor;\n\t\tdata[index + 1] = 1/(this._wrapFactor + 1);\n\t}\n}\n\nexport = DiffuseWrapMethod;",
    "import Texture2DBase\t\t\t\t\t= require(\"awayjs-core/lib/textures/Texture2DBase\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport ShaderLightingObject\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderLightingObject\");\nimport ShaderObjectBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderObjectBase\");\nimport ShaderRegisterCache\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterData\");\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterElement\");\nimport ShaderCompilerHelper\t\t\t\t= require(\"awayjs-renderergl/lib/utils/ShaderCompilerHelper\");\n\nimport MethodVO\t\t\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/data/MethodVO\");\nimport EffectMethodBase\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/EffectMethodBase\");\n\n/**\n * EffectAlphaMaskMethod allows the use of an additional texture to specify the alpha value of the material. When used\n * with the secondary uv set, it allows for a tiled main texture with independently varying alpha (useful for water\n * etc).\n */\nclass EffectAlphaMaskMethod extends EffectMethodBase\n{\n\tprivate _texture:Texture2DBase;\n\tprivate _useSecondaryUV:boolean;\n\n\t/**\n\t * Creates a new EffectAlphaMaskMethod object.\n\t *\n\t * @param texture The texture to use as the alpha mask.\n\t * @param useSecondaryUV Indicated whether or not the secondary uv set for the mask. This allows mapping alpha independently.\n\t */\n\tconstructor(texture:Texture2DBase, useSecondaryUV:boolean = false)\n\t{\n\t\tsuper();\n\n\t\tthis._texture = texture;\n\t\tthis._useSecondaryUV = useSecondaryUV;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iInitVO(shaderObject:ShaderObjectBase, methodVO:MethodVO)\n\t{\n\t\tmethodVO.needsSecondaryUV = this._useSecondaryUV;\n\t\tmethodVO.needsUV = !this._useSecondaryUV;\n\t}\n\n\t/**\n\t * Indicated whether or not the secondary uv set for the mask. This allows mapping alpha independently, for\n\t * instance to tile the main texture and normal map while providing untiled alpha, for example to define the\n\t * transparency over a tiled water surface.\n\t */\n\tpublic get useSecondaryUV():boolean\n\t{\n\t\treturn this._useSecondaryUV;\n\t}\n\n\tpublic set useSecondaryUV(value:boolean)\n\t{\n\t\tif (this._useSecondaryUV == value)\n\t\t\treturn;\n\t\tthis._useSecondaryUV = value;\n\t\tthis.iInvalidateShaderProgram();\n\t}\n\n\t/**\n\t * The texture to use as the alpha mask.\n\t */\n\tpublic get texture():Texture2DBase\n\t{\n\t\treturn this._texture;\n\t}\n\n\tpublic set texture(value:Texture2DBase)\n\t{\n\t\tthis._texture = value;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iActivate(shaderObject:ShaderLightingObject, methodVO:MethodVO, stage:Stage)\n\t{\n\t\tstage.activateTexture(methodVO.texturesIndex, this._texture, shaderObject.repeatTextures, shaderObject.useSmoothTextures, shaderObject.useMipmapping);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iGetFragmentCode(shaderObject:ShaderObjectBase, methodVO:MethodVO, targetReg:ShaderRegisterElement, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tvar textureReg:ShaderRegisterElement = registerCache.getFreeTextureReg();\n\t\tvar temp:ShaderRegisterElement = registerCache.getFreeFragmentVectorTemp();\n\t\tvar uvReg:ShaderRegisterElement = this._useSecondaryUV? sharedRegisters.secondaryUVVarying : sharedRegisters.uvVarying;\n\t\tmethodVO.texturesIndex = textureReg.index;\n\n\t\treturn ShaderCompilerHelper.getTex2DSampleCode(temp, sharedRegisters, textureReg, this._texture, shaderObject.useSmoothTextures, shaderObject.repeatTextures, shaderObject.useMipmapping, uvReg) +\n\t\t\t\"mul \" + targetReg + \", \" + targetReg + \", \" + temp + \".x\\n\";\n\t}\n}\n\nexport = EffectAlphaMaskMethod;",
    "import Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport ShaderObjectBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderObjectBase\");\nimport ShaderRegisterCache\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterData\");\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterElement\");\n\nimport MethodVO\t\t\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/data/MethodVO\");\nimport EffectMethodBase\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/EffectMethodBase\");\n\n/**\n * EffectColorMatrixMethod provides a shading method that changes the colour of a material analogous to a ColorMatrixFilter.\n */\nclass EffectColorMatrixMethod extends EffectMethodBase\n{\n\tprivate _matrix:Array<number>;\n\n\t/**\n\t * Creates a new EffectColorTransformMethod.\n\t *\n\t * @param matrix An array of 20 items for 4 x 5 color transform.\n\t */\n\tconstructor(matrix:Array<number>)\n\t{\n\t\tsuper();\n\n\t\tif (matrix.length != 20)\n\t\t\tthrow new Error(\"Matrix length must be 20!\");\n\n\t\tthis._matrix = matrix;\n\t}\n\n\t/**\n\t * The 4 x 5 matrix to transform the color of the material.\n\t */\n\tpublic get colorMatrix():Array<number>\n\t{\n\t\treturn this._matrix;\n\t}\n\n\tpublic set colorMatrix(value:Array<number>)\n\t{\n\t\tthis._matrix = value;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iGetFragmentCode(shaderObject:ShaderObjectBase, methodVO:MethodVO, targetReg:ShaderRegisterElement, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tvar code:string = \"\";\n\t\tvar colorMultReg:ShaderRegisterElement = registerCache.getFreeFragmentConstant();\n\t\tregisterCache.getFreeFragmentConstant();\n\t\tregisterCache.getFreeFragmentConstant();\n\t\tregisterCache.getFreeFragmentConstant();\n\n\t\tvar colorOffsetReg:ShaderRegisterElement = registerCache.getFreeFragmentConstant();\n\n\t\tmethodVO.fragmentConstantsIndex = colorMultReg.index*4;\n\n\t\tvar temp:ShaderRegisterElement = registerCache.getFreeFragmentVectorTemp();\n\n\t\tcode += \"m44 \" + temp + \", \" + targetReg + \", \" + colorMultReg + \"\\n\" +\n\t\t\t\t\"add \" + targetReg + \", \" + temp + \", \" + colorOffsetReg + \"\\n\";\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iActivate(shaderObject:ShaderObjectBase, methodVO:MethodVO, stage:Stage)\n\t{\n\t\tvar matrix:Array<number> = this._matrix;\n\t\tvar index:number /*int*/ = methodVO.fragmentConstantsIndex;\n\t\tvar data:Array<number> = shaderObject.fragmentConstantData;\n\n\t\t// r\n\t\tdata[index] = matrix[0];\n\t\tdata[index + 1] = matrix[1];\n\t\tdata[index + 2] = matrix[2];\n\t\tdata[index + 3] = matrix[3];\n\n\t\t// g\n\t\tdata[index + 4] = matrix[5];\n\t\tdata[index + 5] = matrix[6];\n\t\tdata[index + 6] = matrix[7];\n\t\tdata[index + 7] = matrix[8];\n\n\t\t// b\n\t\tdata[index + 8] = matrix[10];\n\t\tdata[index + 9] = matrix[11];\n\t\tdata[index + 10] = matrix[12];\n\t\tdata[index + 11] = matrix[13];\n\n\t\t// a\n\t\tdata[index + 12] = matrix[15];\n\t\tdata[index + 13] = matrix[16];\n\t\tdata[index + 14] = matrix[17];\n\t\tdata[index + 15] = matrix[18];\n\n\t\t// rgba offset\n\t\tdata[index + 16] = matrix[4];\n\t\tdata[index + 17] = matrix[9];\n\t\tdata[index + 18] = matrix[14];\n\t\tdata[index + 19] = matrix[19];\n\t}\n}\n\nexport = EffectColorMatrixMethod;",
    "import ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\n\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport ShaderObjectBase\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderObjectBase\");\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterData\");\nimport ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterElement\");\n\nimport MethodVO\t\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/data/MethodVO\");\nimport EffectMethodBase\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/EffectMethodBase\");\n\n/**\n * EffectColorTransformMethod provides a shading method that changes the colour of a material analogous to a\n * ColorTransform object.\n */\nclass EffectColorTransformMethod extends EffectMethodBase\n{\n\tprivate _colorTransform:ColorTransform;\n\n\t/**\n\t * Creates a new EffectColorTransformMethod.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t * The ColorTransform object to transform the colour of the material with.\n\t */\n\tpublic get colorTransform():ColorTransform\n\t{\n\t\treturn this._colorTransform;\n\t}\n\n\tpublic set colorTransform(value:ColorTransform)\n\t{\n\t\tthis._colorTransform = value;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iGetFragmentCode(shaderObject:ShaderObjectBase, methodVO:MethodVO, targetReg:ShaderRegisterElement, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tvar code:string = \"\";\n\t\tvar colorMultReg:ShaderRegisterElement = registerCache.getFreeFragmentConstant();\n\t\tvar colorOffsReg:ShaderRegisterElement = registerCache.getFreeFragmentConstant();\n\n\t\tmethodVO.fragmentConstantsIndex = colorMultReg.index*4;\n\n\t\t//TODO: AGAL <> GLSL\n\n\t\tcode += \"mul \" + targetReg + \", \" + targetReg + \", \" + colorMultReg + \"\\n\" + \"add \" + targetReg + \", \" + targetReg + \", \" + colorOffsReg + \"\\n\";\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iActivate(shaderObject:ShaderObjectBase, methodVO:MethodVO, stage:Stage)\n\t{\n\t\tvar inv:number = 1/0xff;\n\t\tvar index:number = methodVO.fragmentConstantsIndex;\n\t\tvar data:Array<number> = shaderObject.fragmentConstantData;\n\n\t\tdata[index] = this._colorTransform.redMultiplier;\n\t\tdata[index + 1] = this._colorTransform.greenMultiplier;\n\t\tdata[index + 2] = this._colorTransform.blueMultiplier;\n\t\tdata[index + 3] = this._colorTransform.alphaMultiplier;\n\t\tdata[index + 4] = this._colorTransform.redOffset*inv;\n\t\tdata[index + 5] = this._colorTransform.greenOffset*inv;\n\t\tdata[index + 6] = this._colorTransform.blueOffset*inv;\n\t\tdata[index + 7] = this._colorTransform.alphaOffset*inv;\n\n\t}\n}\n\nexport = EffectColorTransformMethod;",
    "import CubeTextureBase\t\t\t\t\t= require(\"awayjs-core/lib/textures/CubeTextureBase\");\nimport Texture2DBase\t\t\t\t\t= require(\"awayjs-core/lib/textures/Texture2DBase\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport ShaderObjectBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderObjectBase\");\nimport ShaderRegisterCache\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterData\");\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterElement\");\nimport ShaderCompilerHelper\t\t\t\t= require(\"awayjs-renderergl/lib/utils/ShaderCompilerHelper\");\n\nimport MethodVO\t\t\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/data/MethodVO\");\nimport EffectMethodBase\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/EffectMethodBase\");\n\n/**\n * EffectEnvMapMethod provides a material method to perform reflection mapping using cube maps.\n */\nclass EffectEnvMapMethod extends EffectMethodBase\n{\n\tprivate _cubeTexture:CubeTextureBase;\n\tprivate _alpha:number;\n\tprivate _mask:Texture2DBase;\n\n\t/**\n\t * Creates an EffectEnvMapMethod object.\n\t * @param envMap The environment map containing the reflected scene.\n\t * @param alpha The reflectivity of the surface.\n\t */\n\tconstructor(envMap:CubeTextureBase, alpha:number = 1)\n\t{\n\t\tsuper();\n\t\tthis._cubeTexture = envMap;\n\t\tthis._alpha = alpha;\n\n\t}\n\n\t/**\n\t * An optional texture to modulate the reflectivity of the surface.\n\t */\n\tpublic get mask():Texture2DBase\n\t{\n\t\treturn this._mask;\n\t}\n\n\tpublic set mask(value:Texture2DBase)\n\t{\n\t\tif (value != this._mask || (value && this._mask && (value.format != this._mask.format)))\n\t\t\tthis.iInvalidateShaderProgram();\n\n\t\tthis._mask = value;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iInitVO(shaderObject:ShaderObjectBase, methodVO:MethodVO)\n\t{\n\t\tmethodVO.needsNormals = true;\n\t\tmethodVO.needsView = true;\n\t\tmethodVO.needsUV = this._mask != null;\n\t}\n\n\t/**\n\t * The cubic environment map containing the reflected scene.\n\t */\n\tpublic get envMap():CubeTextureBase\n\t{\n\t\treturn this._cubeTexture;\n\t}\n\n\tpublic set envMap(value:CubeTextureBase)\n\t{\n\t\tthis._cubeTexture = value;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic dispose()\n\t{\n\t}\n\n\t/**\n\t * The reflectivity of the surface.\n\t */\n\tpublic get alpha():number\n\t{\n\t\treturn this._alpha;\n\t}\n\n\tpublic set alpha(value:number)\n\t{\n\t\tthis._alpha = value;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iActivate(shaderObject:ShaderObjectBase, methodVO:MethodVO, stage:Stage)\n\t{\n\t\tshaderObject.fragmentConstantData[methodVO.fragmentConstantsIndex] = this._alpha;\n\n\t\tstage.activateCubeTexture(methodVO.texturesIndex, this._cubeTexture, shaderObject.useSmoothTextures,shaderObject.useMipmapping);\n\n\t\tif (this._mask)\n\t\t\tstage.activateTexture(methodVO.texturesIndex + 1, this._mask,  shaderObject.repeatTextures, shaderObject.useSmoothTextures,shaderObject.useMipmapping);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iGetFragmentCode(shaderObject:ShaderObjectBase, methodVO:MethodVO, targetReg:ShaderRegisterElement, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tvar dataRegister:ShaderRegisterElement = registerCache.getFreeFragmentConstant();\n\t\tvar temp:ShaderRegisterElement = registerCache.getFreeFragmentVectorTemp();\n\t\tvar code:string = \"\";\n\t\tvar cubeMapReg:ShaderRegisterElement = registerCache.getFreeTextureReg();\n\n\t\tmethodVO.texturesIndex = cubeMapReg.index;\n\t\tmethodVO.fragmentConstantsIndex = dataRegister.index*4;\n\n\t\tregisterCache.addFragmentTempUsages(temp, 1);\n\t\tvar temp2:ShaderRegisterElement = registerCache.getFreeFragmentVectorTemp();\n\n\t\t// r = I - 2(I.N)*N\n\t\tcode += \"dp3 \" + temp + \".w, \" + sharedRegisters.viewDirFragment + \".xyz, \" + sharedRegisters.normalFragment + \".xyz\\n\" +\n\t\t\t\t\"add \" + temp + \".w, \" + temp + \".w, \" + temp + \".w\\n\" +\n\t\t\t\t\"mul \" + temp + \".xyz, \" + sharedRegisters.normalFragment + \".xyz, \" + temp + \".w\\n\" +\n\t\t\t\t\"sub \" + temp + \".xyz, \" + temp + \".xyz, \" + sharedRegisters.viewDirFragment + \".xyz\\n\" +\n\t\t\tShaderCompilerHelper.getTexCubeSampleCode(temp, cubeMapReg, this._cubeTexture, shaderObject.useSmoothTextures, shaderObject.useMipmapping, temp) +\n\t\t\t\t\"sub \" + temp2 + \".w, \" + temp + \".w, fc0.x\\n\" + // -.5\n\t\t\t\t\"kil \" + temp2 + \".w\\n\" +\t// used for real time reflection mapping - if alpha is not 1 (mock texture) kil output\n\t\t\t\t\"sub \" + temp + \", \" + temp + \", \" + targetReg + \"\\n\";\n\n\t\tif (this._mask)\n\t\t\tcode += ShaderCompilerHelper.getTex2DSampleCode(temp2, sharedRegisters, registerCache.getFreeTextureReg(), this._mask, shaderObject.useSmoothTextures, shaderObject.repeatTextures, shaderObject.useMipmapping) +\n\t\t\t\t\"mul \" + temp + \", \" + temp2 + \", \" + temp + \"\\n\";\n\n\t\tcode += \"mul \" + temp + \", \" + temp + \", \" + dataRegister + \".x\\n\" +\n\t\t\t\t\"add \" + targetReg + \", \" + targetReg + \", \" + temp + \"\\n\";\n\n\t\tregisterCache.removeFragmentTempUsage(temp);\n\n\t\treturn code;\n\t}\n}\n\nexport = EffectEnvMapMethod;",
    "import Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport ShaderLightingObject\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderLightingObject\");\nimport ShaderObjectBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderObjectBase\");\nimport ShaderRegisterCache\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterData\");\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterElement\");\n\nimport MethodVO\t\t\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/data/MethodVO\");\nimport EffectMethodBase\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/EffectMethodBase\");\n\n/**\n * EffectFogMethod provides a method to add distance-based fog to a material.\n */\nclass EffectFogMethod extends EffectMethodBase\n{\n\tprivate _minDistance:number = 0;\n\tprivate _maxDistance:number = 1000;\n\tprivate _fogColor:number /*uint*/;\n\tprivate _fogR:number;\n\tprivate _fogG:number;\n\tprivate _fogB:number;\n\n\t/**\n\t * Creates a new EffectFogMethod object.\n\t * @param minDistance The distance from which the fog starts appearing.\n\t * @param maxDistance The distance at which the fog is densest.\n\t * @param fogColor The colour of the fog.\n\t */\n\tconstructor(minDistance:number, maxDistance:number, fogColor:number /*uint*/ = 0x808080)\n\t{\n\t\tsuper();\n\t\tthis.minDistance = minDistance;\n\t\tthis.maxDistance = maxDistance;\n\t\tthis.fogColor = fogColor;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iInitVO(shaderObject:ShaderLightingObject, methodVO:MethodVO)\n\t{\n\t\tmethodVO.needsProjection = true;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iInitConstants(shaderObject:ShaderObjectBase, methodVO:MethodVO)\n\t{\n\t\tvar data:Array<number> = shaderObject.fragmentConstantData;\n\t\tvar index:number /*int*/ = methodVO.fragmentConstantsIndex;\n\t\tdata[index + 3] = 1;\n\t\tdata[index + 6] = 0;\n\t\tdata[index + 7] = 0;\n\t}\n\n\t/**\n\t * The distance from which the fog starts appearing.\n\t */\n\tpublic get minDistance():number\n\t{\n\t\treturn this._minDistance;\n\t}\n\n\tpublic set minDistance(value:number)\n\t{\n\t\tthis._minDistance = value;\n\t}\n\n\t/**\n\t * The distance at which the fog is densest.\n\t */\n\tpublic get maxDistance():number\n\t{\n\t\treturn this._maxDistance;\n\t}\n\n\tpublic set maxDistance(value:number)\n\t{\n\t\tthis._maxDistance = value;\n\t}\n\n\t/**\n\t * The colour of the fog.\n\t */\n\tpublic get fogColor():number /*uint*/\n\t{\n\t\treturn this._fogColor;\n\t}\n\n\tpublic set fogColor(value:number/*uint*/)\n\t{\n\t\tthis._fogColor = value;\n\t\tthis._fogR = ((value >> 16) & 0xff)/0xff;\n\t\tthis._fogG = ((value >> 8) & 0xff)/0xff;\n\t\tthis._fogB = (value & 0xff)/0xff;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iActivate(shaderObject:ShaderObjectBase, methodVO:MethodVO, stage:Stage)\n\t{\n\t\tvar data:Array<number> = shaderObject.fragmentConstantData;\n\t\tvar index:number /*int*/ = methodVO.fragmentConstantsIndex;\n\t\tdata[index] = this._fogR;\n\t\tdata[index + 1] = this._fogG;\n\t\tdata[index + 2] = this._fogB;\n\t\tdata[index + 4] = this._minDistance;\n\t\tdata[index + 5] = 1/(this._maxDistance - this._minDistance);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iGetFragmentCode(shaderObject:ShaderObjectBase, methodVO:MethodVO, targetReg:ShaderRegisterElement, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tvar fogColor:ShaderRegisterElement = registerCache.getFreeFragmentConstant();\n\t\tvar fogData:ShaderRegisterElement = registerCache.getFreeFragmentConstant();\n\t\tvar temp:ShaderRegisterElement = registerCache.getFreeFragmentVectorTemp();\n\t\tregisterCache.addFragmentTempUsages(temp, 1);\n\t\tvar temp2:ShaderRegisterElement = registerCache.getFreeFragmentVectorTemp();\n\t\tvar code:string = \"\";\n\t\tmethodVO.fragmentConstantsIndex = fogColor.index*4;\n\n\t\tcode += \"sub \" + temp2 + \".w, \" + sharedRegisters.projectionFragment + \".z, \" + fogData + \".x\\n\" +\n\t\t\t\t\"mul \" + temp2 + \".w, \" + temp2 + \".w, \" + fogData + \".y\\n\" +\n\t\t\t\t\"sat \" + temp2 + \".w, \" + temp2 + \".w\\n\" +\n\t\t\t\t\"sub \" + temp + \", \" + fogColor + \", \" + targetReg + \"\\n\" + // (fogColor- col)\n\t\t\t\t\"mul \" + temp + \", \" + temp + \", \" + temp2 + \".w\\n\" + // (fogColor- col)*fogRatio\n\t\t\t\t\"add \" + targetReg + \", \" + targetReg + \", \" + temp + \"\\n\"; // fogRatio*(fogColor- col) + col\n\n\t\tregisterCache.removeFragmentTempUsage(temp);\n\n\t\treturn code;\n\t}\n}\n\nexport = EffectFogMethod;",
    "import CubeTextureBase\t\t\t\t\t= require(\"awayjs-core/lib/textures/CubeTextureBase\");\nimport Texture2DBase\t\t\t\t\t= require(\"awayjs-core/lib/textures/Texture2DBase\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport ShaderObjectBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderObjectBase\");\nimport ShaderRegisterCache\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterData\");\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterElement\");\nimport ShaderCompilerHelper\t\t\t\t= require(\"awayjs-renderergl/lib/utils/ShaderCompilerHelper\");\n\nimport MethodVO\t\t\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/data/MethodVO\");\nimport EffectMethodBase\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/EffectMethodBase\");\n\n/**\n * EffectFresnelEnvMapMethod provides a method to add fresnel-based reflectivity to an object using cube maps, which gets\n * stronger as the viewing angle becomes more grazing.\n */\nclass EffectFresnelEnvMapMethod extends EffectMethodBase\n{\n\tprivate _cubeTexture:CubeTextureBase;\n\tprivate _fresnelPower:number = 5;\n\tprivate _normalReflectance:number = 0;\n\tprivate _alpha:number;\n\tprivate _mask:Texture2DBase;\n\n\t/**\n\t * Creates a new <code>EffectFresnelEnvMapMethod</code> object.\n\t *\n\t * @param envMap The environment map containing the reflected scene.\n\t * @param alpha The reflectivity of the material.\n\t */\n\tconstructor(envMap:CubeTextureBase, alpha:number = 1)\n\t{\n\t\tsuper();\n\n\t\tthis._cubeTexture = envMap;\n\t\tthis._alpha = alpha;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iInitVO(shaderObject:ShaderObjectBase, methodVO:MethodVO)\n\t{\n\t\tmethodVO.needsNormals = true;\n\t\tmethodVO.needsView = true;\n\t\tmethodVO.needsUV = this._mask != null;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iInitConstants(shaderObject:ShaderObjectBase, methodVO:MethodVO)\n\t{\n\t\tshaderObject.fragmentConstantData[methodVO.fragmentConstantsIndex + 3] = 1;\n\t}\n\n\t/**\n\t * An optional texture to modulate the reflectivity of the surface.\n\t */\n\tpublic get mask():Texture2DBase\n\t{\n\t\treturn this._mask;\n\t}\n\n\tpublic set mask(value:Texture2DBase)\n\t{\n\t\tif (Boolean(value) != Boolean(this._mask) ||\n\t\t\t(value && this._mask && (value.format != this._mask.format))) {\n\t\t\tthis.iInvalidateShaderProgram();\n\t\t}\n\t\tthis._mask = value;\n\t}\n\n\t/**\n\t * The power used in the Fresnel equation. Higher values make the fresnel effect more pronounced. Defaults to 5.\n\t */\n\tpublic get fresnelPower():number\n\t{\n\t\treturn this._fresnelPower;\n\t}\n\n\tpublic set fresnelPower(value:number)\n\t{\n\t\tthis._fresnelPower = value;\n\t}\n\n\t/**\n\t * The cubic environment map containing the reflected scene.\n\t */\n\tpublic get envMap():CubeTextureBase\n\t{\n\t\treturn this._cubeTexture;\n\t}\n\n\tpublic set envMap(value:CubeTextureBase)\n\t{\n\t\tthis._cubeTexture = value;\n\t}\n\n\t/**\n\t * The reflectivity of the surface.\n\t */\n\tpublic get alpha():number\n\t{\n\t\treturn this._alpha;\n\t}\n\n\tpublic set alpha(value:number)\n\t{\n\t\tthis._alpha = value;\n\t}\n\n\t/**\n\t * The minimum amount of reflectance, ie the reflectance when the view direction is normal to the surface or light direction.\n\t */\n\tpublic get normalReflectance():number\n\t{\n\t\treturn this._normalReflectance;\n\t}\n\n\tpublic set normalReflectance(value:number)\n\t{\n\t\tthis._normalReflectance = value;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iActivate(shaderObject:ShaderObjectBase, methodVO:MethodVO, stage:Stage)\n\t{\n\t\tvar data:Array<number> = shaderObject.fragmentConstantData;\n\t\tvar index:number /*int*/ = methodVO.fragmentConstantsIndex;\n\t\tdata[index] = this._alpha;\n\t\tdata[index + 1] = this._normalReflectance;\n\t\tdata[index + 2] = this._fresnelPower;\n\n\t\tstage.activateCubeTexture(methodVO.texturesIndex, this._cubeTexture, shaderObject.useSmoothTextures, shaderObject.useMipmapping);\n\n\t\tif (this._mask)\n\t\t\tstage.activateTexture(methodVO.texturesIndex + 1, this._mask, shaderObject.repeatTextures, shaderObject.useSmoothTextures, shaderObject.useMipmapping);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iGetFragmentCode(shaderObject:ShaderObjectBase, methodVO:MethodVO, targetReg:ShaderRegisterElement, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tvar dataRegister:ShaderRegisterElement = registerCache.getFreeFragmentConstant();\n\t\tvar temp:ShaderRegisterElement = registerCache.getFreeFragmentVectorTemp();\n\t\tvar code:string = \"\";\n\t\tvar cubeMapReg:ShaderRegisterElement = registerCache.getFreeTextureReg();\n\t\tvar viewDirReg:ShaderRegisterElement = sharedRegisters.viewDirFragment;\n\t\tvar normalReg:ShaderRegisterElement = sharedRegisters.normalFragment;\n\n\t\tmethodVO.texturesIndex = cubeMapReg.index;\n\t\tmethodVO.fragmentConstantsIndex = dataRegister.index*4;\n\n\t\tregisterCache.addFragmentTempUsages(temp, 1);\n\t\tvar temp2:ShaderRegisterElement = registerCache.getFreeFragmentVectorTemp();\n\n\t\t// r = V - 2(V.N)*N\n\t\tcode += \"dp3 \" + temp + \".w, \" + viewDirReg + \".xyz, \" + normalReg + \".xyz\\n\" +\n\t\t\t\t\"add \" + temp + \".w, \" + temp + \".w, \" + temp + \".w\\n\" +\n\t\t\t\t\"mul \" + temp + \".xyz, \" + normalReg + \".xyz, \" + temp + \".w\\n\" +\n\t\t\t\t\"sub \" + temp + \".xyz, \" + temp + \".xyz, \" + viewDirReg + \".xyz\\n\" +\n\t\t\tShaderCompilerHelper.getTexCubeSampleCode(temp, cubeMapReg, this._cubeTexture, shaderObject.useSmoothTextures, shaderObject.useMipmapping, temp) +\n\t\t\t\t\"sub \" + temp2 + \".w, \" + temp + \".w, fc0.x\\n\" +               \t// -.5\n\t\t\t\t\"kil \" + temp2 + \".w\\n\" +\t// used for real time reflection mapping - if alpha is not 1 (mock texture) kil output\n\t\t\t\t\"sub \" + temp + \", \" + temp + \", \" + targetReg + \"\\n\";\n\n\t\t// calculate fresnel term\n\t\tcode += \"dp3 \" + viewDirReg + \".w, \" + viewDirReg + \".xyz, \" + normalReg + \".xyz\\n\" +  // dot(V, H)\n\t\t\t\t\"sub \" + viewDirReg + \".w, \" + dataRegister + \".w, \" + viewDirReg + \".w\\n\" +       // base = 1-dot(V, H)\n\t\t\t\t\"pow \" + viewDirReg + \".w, \" + viewDirReg + \".w, \" + dataRegister + \".z\\n\" +       // exp = pow(base, 5)\n\t\t\t\t\"sub \" + normalReg + \".w, \" + dataRegister + \".w, \" + viewDirReg + \".w\\n\" +        // 1 - exp\n\t\t\t\t\"mul \" + normalReg + \".w, \" + dataRegister + \".y, \" + normalReg + \".w\\n\" +         // f0*(1 - exp)\n\t\t\t\t\"add \" + viewDirReg + \".w, \" + viewDirReg + \".w, \" + normalReg + \".w\\n\" +          // exp + f0*(1 - exp)\n\n\t\t\t\t// total alpha\n\t\t\t\t\"mul \" + viewDirReg + \".w, \" + dataRegister + \".x, \" + viewDirReg + \".w\\n\";\n\n\t\tif (this._mask) {\n\t\t\tvar maskReg:ShaderRegisterElement = registerCache.getFreeTextureReg();\n\t\t\tcode += ShaderCompilerHelper.getTex2DSampleCode(temp2, sharedRegisters, maskReg, this._mask, shaderObject.useSmoothTextures, shaderObject.repeatTextures, shaderObject.useMipmapping) +\n\t\t\t\t\"mul \" + viewDirReg + \".w, \" + temp2 + \".x, \" + viewDirReg + \".w\\n\";\n\t\t}\n\n\t\t// blend\n\t\tcode += \"mul \" + temp + \", \" + temp + \", \" + viewDirReg + \".w\\n\" +\n\t\t\t\t\"add \" + targetReg + \", \" + targetReg + \", \" + temp + \"\\n\";\n\n\t\tregisterCache.removeFragmentTempUsage(temp);\n\n\t\treturn code;\n\t}\n}\n\nexport = EffectFresnelEnvMapMethod;",
    "import Texture2DBase\t\t\t\t\t= require(\"awayjs-core/lib/textures/Texture2DBase\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport ShaderObjectBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderObjectBase\");\nimport ShaderRegisterCache\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterData\");\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterElement\");\nimport ShaderCompilerHelper\t\t\t\t= require(\"awayjs-renderergl/lib/utils/ShaderCompilerHelper\");\n\nimport MethodVO\t\t\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/data/MethodVO\");\nimport EffectMethodBase\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/EffectMethodBase\");\n\n/**\n * EffectLightMapMethod provides a method that allows applying a light map texture to the calculated pixel colour.\n * It is different from DiffuseLightMapMethod in that the latter only modulates the diffuse shading value rather\n * than the whole pixel colour.\n */\nclass EffectLightMapMethod extends EffectMethodBase\n{\n\t/**\n\t * Indicates the light map should be multiplied with the calculated shading result.\n\t */\n\tpublic static MULTIPLY:string = \"multiply\";\n\n\t/**\n\t * Indicates the light map should be added into the calculated shading result.\n\t */\n\tpublic static ADD:string = \"add\";\n\n\tprivate _texture:Texture2DBase;\n\n\tprivate _blendMode:string;\n\tprivate _useSecondaryUV:boolean;\n\n\t/**\n\t * Creates a new EffectLightMapMethod object.\n\t *\n\t * @param texture The texture containing the light map.\n\t * @param blendMode The blend mode with which the light map should be applied to the lighting result.\n\t * @param useSecondaryUV Indicates whether the secondary UV set should be used to map the light map.\n\t */\n\tconstructor(texture:Texture2DBase, blendMode:string = \"multiply\", useSecondaryUV:boolean = false)\n\t{\n\t\tsuper();\n\n\t\tthis._useSecondaryUV = useSecondaryUV;\n\t\tthis._texture = texture;\n\t\tthis.blendMode = blendMode;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iInitVO(shaderObject:ShaderObjectBase, methodVO:MethodVO)\n\t{\n\t\tmethodVO.needsUV = !this._useSecondaryUV;\n\t\tmethodVO.needsSecondaryUV = this._useSecondaryUV;\n\t}\n\n\t/**\n\t * The blend mode with which the light map should be applied to the lighting result.\n\t *\n\t * @see EffectLightMapMethod.ADD\n\t * @see EffectLightMapMethod.MULTIPLY\n\t */\n\tpublic get blendMode():string\n\t{\n\t\treturn this._blendMode;\n\t}\n\n\tpublic set blendMode(value:string)\n\t{\n\t\tif (value != EffectLightMapMethod.ADD && value != EffectLightMapMethod.MULTIPLY)\n\t\t\tthrow new Error(\"Unknown blendmode!\");\n\t\tif (this._blendMode == value)\n\t\t\treturn;\n\n\t\tthis._blendMode = value;\n\n\t\tthis.iInvalidateShaderProgram();\n\t}\n\n\t/**\n\t * The texture containing the light map.\n\t */\n\tpublic get texture():Texture2DBase\n\t{\n\t\treturn this._texture;\n\t}\n\n\tpublic set texture(value:Texture2DBase)\n\t{\n\t\tif (value.format != this._texture.format)\n\t\t\tthis.iInvalidateShaderProgram();\n\n\t\tthis._texture = value;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iActivate(shaderObject:ShaderObjectBase, methodVO:MethodVO, stage:Stage)\n\t{\n\t\tstage.activateTexture(methodVO.texturesIndex, this._texture, shaderObject.repeatTextures, shaderObject.useSmoothTextures, shaderObject.useMipmapping);\n\n\t\tsuper.iActivate(shaderObject, methodVO, stage);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iGetFragmentCode(shaderObject:ShaderObjectBase, methodVO:MethodVO, targetReg:ShaderRegisterElement, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tvar code:string;\n\t\tvar lightMapReg:ShaderRegisterElement = registerCache.getFreeTextureReg();\n\t\tvar temp:ShaderRegisterElement = registerCache.getFreeFragmentVectorTemp();\n\t\tmethodVO.texturesIndex = lightMapReg.index;\n\n\t\tcode = ShaderCompilerHelper.getTex2DSampleCode(temp, sharedRegisters, lightMapReg, this._texture, shaderObject.useSmoothTextures, shaderObject.repeatTextures, shaderObject.useMipmapping, this._useSecondaryUV? sharedRegisters.secondaryUVVarying : sharedRegisters.uvVarying);\n\n\t\tswitch (this._blendMode) {\n\t\t\tcase EffectLightMapMethod.MULTIPLY:\n\t\t\t\tcode += \"mul \" + targetReg + \", \" + targetReg + \", \" + temp + \"\\n\";\n\t\t\t\tbreak;\n\t\t\tcase EffectLightMapMethod.ADD:\n\t\t\t\tcode += \"add \" + targetReg + \", \" + targetReg + \", \" + temp + \"\\n\";\n\t\t\t\tbreak;\n\t\t}\n\n\t\treturn code;\n\t}\n}\n\nexport = EffectLightMapMethod;",
    "import IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport ShaderObjectBase\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderObjectBase\");\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterData\");\nimport ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterElement\");\n\nimport MethodVO\t\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/data/MethodVO\");\nimport ShadingMethodBase\t\t\t= require(\"awayjs-methodmaterials/lib/methods/ShadingMethodBase\");\n\n/**\n * EffectMethodBase forms an abstract base class for shader methods that are not dependent on light sources,\n * and are in essence post-process effects on the materials.\n */\nclass EffectMethodBase extends ShadingMethodBase implements IAsset\n{\n\tpublic static assetType:string = \"[asset EffectMethod]\";\n\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn EffectMethodBase.assetType;\n\t}\n\n\t/**\n\t * Get the fragment shader code that should be added after all per-light code. Usually composits everything to the target register.\n\t * @param methodVO The MethodVO object containing the method data for the currently compiled material pass.\n\t * @param regCache The register cache used during the compilation.\n\t * @param targetReg The register that will be containing the method's output.\n\t * @private\n\t */\n\tpublic iGetFragmentCode(shaderObject:ShaderObjectBase, methodVO:MethodVO, targetReg:ShaderRegisterElement, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tthrow new AbstractMethodError();\n\t\treturn \"\";\n\t}\n}\n\nexport = EffectMethodBase;",
    "import CubeTextureBase\t\t\t\t\t= require(\"awayjs-core/lib/textures/CubeTextureBase\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport ShaderObjectBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderObjectBase\");\nimport ShaderRegisterCache\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterData\");\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterElement\");\nimport ShaderCompilerHelper\t\t\t\t= require(\"awayjs-renderergl/lib/utils/ShaderCompilerHelper\");\n\nimport MethodVO\t\t\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/data/MethodVO\");\nimport EffectMethodBase\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/EffectMethodBase\");\n\n/**\n * EffectRefractionEnvMapMethod provides a method to add refracted transparency based on cube maps.\n */\nclass EffectRefractionEnvMapMethod extends EffectMethodBase\n{\n\tprivate _envMap:CubeTextureBase;\n\n\tprivate _dispersionR:number = 0;\n\tprivate _dispersionG:number = 0;\n\tprivate _dispersionB:number = 0;\n\tprivate _useDispersion:boolean;\n\tprivate _refractionIndex:number;\n\tprivate _alpha:number = 1;\n\n\t/**\n\t * Creates a new EffectRefractionEnvMapMethod object. Example values for dispersion are: dispersionR: -0.03, dispersionG: -0.01, dispersionB: = .0015\n\t *\n\t * @param envMap The environment map containing the refracted scene.\n\t * @param refractionIndex The refractive index of the material.\n\t * @param dispersionR The amount of chromatic dispersion of the red channel. Defaults to 0 (none).\n\t * @param dispersionG The amount of chromatic dispersion of the green channel. Defaults to 0 (none).\n\t * @param dispersionB The amount of chromatic dispersion of the blue channel. Defaults to 0 (none).\n\t */\n\tconstructor(envMap:CubeTextureBase, refractionIndex:number = .1, dispersionR:number = 0, dispersionG:number = 0, dispersionB:number = 0)\n\t{\n\t\tsuper();\n\t\tthis._envMap = envMap;\n\t\tthis._dispersionR = dispersionR;\n\t\tthis._dispersionG = dispersionG;\n\t\tthis._dispersionB = dispersionB;\n\t\tthis._useDispersion = !(this._dispersionR == this._dispersionB && this._dispersionR == this._dispersionG);\n\t\tthis._refractionIndex = refractionIndex;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iInitConstants(shaderObject:ShaderObjectBase, methodVO:MethodVO)\n\t{\n\t\tvar index:number /*int*/ = methodVO.fragmentConstantsIndex;\n\t\tvar data:Array<number> = shaderObject.fragmentConstantData;\n\t\tdata[index + 4] = 1;\n\t\tdata[index + 5] = 0;\n\t\tdata[index + 7] = 1;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iInitVO(shaderObject:ShaderObjectBase, methodVO:MethodVO)\n\t{\n\t\tmethodVO.needsNormals = true;\n\t\tmethodVO.needsView = true;\n\t}\n\n\t/**\n\t * The cube environment map to use for the refraction.\n\t */\n\tpublic get envMap():CubeTextureBase\n\t{\n\t\treturn this._envMap;\n\t}\n\n\tpublic set envMap(value:CubeTextureBase)\n\t{\n\t\tthis._envMap = value;\n\t}\n\n\t/**\n\t * The refractive index of the material.\n\t */\n\tpublic get refractionIndex():number\n\t{\n\t\treturn this._refractionIndex;\n\t}\n\n\tpublic set refractionIndex(value:number)\n\t{\n\t\tthis._refractionIndex = value;\n\t}\n\n\t/**\n\t * The amount of chromatic dispersion of the red channel. Defaults to 0 (none).\n\t */\n\tpublic get dispersionR():number\n\t{\n\t\treturn this._dispersionR;\n\t}\n\n\tpublic set dispersionR(value:number)\n\t{\n\t\tthis._dispersionR = value;\n\n\t\tvar useDispersion:boolean = !(this._dispersionR == this._dispersionB && this._dispersionR == this._dispersionG);\n\t\tif (this._useDispersion != useDispersion) {\n\t\t\tthis.iInvalidateShaderProgram();\n\t\t\tthis._useDispersion = useDispersion;\n\t\t}\n\t}\n\n\t/**\n\t * The amount of chromatic dispersion of the green channel. Defaults to 0 (none).\n\t */\n\tpublic get dispersionG():number\n\t{\n\t\treturn this._dispersionG;\n\t}\n\n\tpublic set dispersionG(value:number)\n\t{\n\t\tthis._dispersionG = value;\n\n\t\tvar useDispersion:boolean = !(this._dispersionR == this._dispersionB && this._dispersionR == this._dispersionG);\n\t\tif (this._useDispersion != useDispersion) {\n\t\t\tthis.iInvalidateShaderProgram();\n\t\t\tthis._useDispersion = useDispersion;\n\t\t}\n\t}\n\n\t/**\n\t * The amount of chromatic dispersion of the blue channel. Defaults to 0 (none).\n\t */\n\tpublic get dispersionB():number\n\t{\n\t\treturn this._dispersionB;\n\t}\n\n\tpublic set dispersionB(value:number)\n\t{\n\t\tthis._dispersionB = value;\n\n\t\tvar useDispersion:boolean = !(this._dispersionR == this._dispersionB && this._dispersionR == this._dispersionG);\n\t\tif (this._useDispersion != useDispersion) {\n\t\t\tthis.iInvalidateShaderProgram();\n\t\t\tthis._useDispersion = useDispersion;\n\t\t}\n\t}\n\n\t/**\n\t * The amount of transparency of the object. Warning: the alpha applies to the refracted color, not the actual\n\t * material. A value of 1 will make it appear fully transparent.\n\t */\n\tpublic get alpha():number\n\t{\n\t\treturn this._alpha;\n\t}\n\n\tpublic set alpha(value:number)\n\t{\n\t\tthis._alpha = value;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iActivate(shaderObject:ShaderObjectBase, methodVO:MethodVO, stage:Stage)\n\t{\n\t\tvar index:number /*int*/ = methodVO.fragmentConstantsIndex;\n\t\tvar data:Array<number> = shaderObject.fragmentConstantData;\n\n\t\tdata[index] = this._dispersionR + this._refractionIndex;\n\n\t\tif (this._useDispersion) {\n\t\t\tdata[index + 1] = this._dispersionG + this._refractionIndex;\n\t\t\tdata[index + 2] = this._dispersionB + this._refractionIndex;\n\t\t}\n\t\tdata[index + 3] = this._alpha;\n\n\t\tstage.activateCubeTexture(methodVO.texturesIndex, this._envMap, shaderObject.useSmoothTextures, shaderObject.useMipmapping);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iGetFragmentCode(shaderObject:ShaderObjectBase, methodVO:MethodVO, targetReg:ShaderRegisterElement, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\t// todo: data2.x could use common reg, so only 1 reg is used\n\t\tvar data:ShaderRegisterElement = registerCache.getFreeFragmentConstant();\n\t\tvar data2:ShaderRegisterElement = registerCache.getFreeFragmentConstant();\n\t\tvar code:string = \"\";\n\t\tvar cubeMapReg:ShaderRegisterElement = registerCache.getFreeTextureReg();\n\t\tvar refractionDir:ShaderRegisterElement;\n\t\tvar refractionColor:ShaderRegisterElement;\n\t\tvar temp:ShaderRegisterElement;\n\n\t\tmethodVO.texturesIndex = cubeMapReg.index;\n\t\tmethodVO.fragmentConstantsIndex = data.index*4;\n\n\t\trefractionDir = registerCache.getFreeFragmentVectorTemp();\n\t\tregisterCache.addFragmentTempUsages(refractionDir, 1);\n\t\trefractionColor = registerCache.getFreeFragmentVectorTemp();\n\t\tregisterCache.addFragmentTempUsages(refractionColor, 1);\n\n\t\ttemp = registerCache.getFreeFragmentVectorTemp();\n\n\t\tvar viewDirReg:ShaderRegisterElement = sharedRegisters.viewDirFragment;\n\t\tvar normalReg:ShaderRegisterElement = sharedRegisters.normalFragment;\n\n\t\tcode += \"neg \" + viewDirReg + \".xyz, \" + viewDirReg + \".xyz\\n\";\n\n\t\tcode += \"dp3 \" + temp + \".x, \" + viewDirReg + \".xyz, \" + normalReg + \".xyz\\n\" +\n\t\t\t\"mul \" + temp + \".w, \" + temp + \".x, \" + temp + \".x\\n\" +\n\t\t\t\"sub \" + temp + \".w, \" + data2 + \".x, \" + temp + \".w\\n\" +\n\t\t\t\"mul \" + temp + \".w, \" + data + \".x, \" + temp + \".w\\n\" +\n\t\t\t\"mul \" + temp + \".w, \" + data + \".x, \" + temp + \".w\\n\" +\n\t\t\t\"sub \" + temp + \".w, \" + data2 + \".x, \" + temp + \".w\\n\" +\n\t\t\t\"sqt \" + temp + \".y, \" + temp + \".w\\n\" +\n\n\t\t\t\"mul \" + temp + \".x, \" + data + \".x, \" + temp + \".x\\n\" +\n\t\t\t\"add \" + temp + \".x, \" + temp + \".x, \" + temp + \".y\\n\" +\n\t\t\t\"mul \" + temp + \".xyz, \" + temp + \".x, \" + normalReg + \".xyz\\n\" +\n\n\t\t\t\"mul \" + refractionDir + \", \" + data + \".x, \" + viewDirReg + \"\\n\" +\n\t\t\t\"sub \" + refractionDir + \".xyz, \" + refractionDir + \".xyz, \" + temp + \".xyz\\n\" +\n\t\t\t\"nrm \" + refractionDir + \".xyz, \" + refractionDir + \".xyz\\n\";\n\t\tcode += ShaderCompilerHelper.getTexCubeSampleCode(refractionColor, cubeMapReg, this._envMap, shaderObject.useSmoothTextures, shaderObject.useMipmapping, refractionDir) +\n\t\t\t\"sub \" + refractionColor + \".w, \" + refractionColor + \".w, fc0.x\t\\n\" +\n\t\t\t\"kil \" + refractionColor + \".w\\n\";\n\n\t\tif (this._useDispersion) {\n\t\t\t// GREEN\n\t\t\tcode += \"dp3 \" + temp + \".x, \" + viewDirReg + \".xyz, \" + normalReg + \".xyz\\n\" +\n\t\t\t\t\"mul \" + temp + \".w, \" + temp + \".x, \" + temp + \".x\\n\" +\n\t\t\t\t\"sub \" + temp + \".w, \" + data2 + \".x, \" + temp + \".w\\n\" +\n\t\t\t\t\"mul \" + temp + \".w, \" + data + \".y, \" + temp + \".w\\n\" +\n\t\t\t\t\"mul \" + temp + \".w, \" + data + \".y, \" + temp + \".w\\n\" +\n\t\t\t\t\"sub \" + temp + \".w, \" + data2 + \".x, \" + temp + \".w\\n\" +\n\t\t\t\t\"sqt \" + temp + \".y, \" + temp + \".w\\n\" +\n\n\t\t\t\t\"mul \" + temp + \".x, \" + data + \".y, \" + temp + \".x\\n\" +\n\t\t\t\t\"add \" + temp + \".x, \" + temp + \".x, \" + temp + \".y\\n\" +\n\t\t\t\t\"mul \" + temp + \".xyz, \" + temp + \".x, \" + normalReg + \".xyz\\n\" +\n\n\t\t\t\t\"mul \" + refractionDir + \", \" + data + \".y, \" + viewDirReg + \"\\n\" +\n\t\t\t\t\"sub \" + refractionDir + \".xyz, \" + refractionDir + \".xyz, \" + temp + \".xyz\\n\" +\n\t\t\t\t\"nrm \" + refractionDir + \".xyz, \" + refractionDir + \".xyz\\n\";\n\t\t\tcode += ShaderCompilerHelper.getTexCubeSampleCode(temp, cubeMapReg, this._envMap, shaderObject.useSmoothTextures, shaderObject.useMipmapping, refractionDir) +\n\t\t\t\t\"mov \" + refractionColor + \".y, \" + temp + \".y\\n\";\n\n\t\t\t// BLUE\n\t\t\tcode += \"dp3 \" + temp + \".x, \" + viewDirReg + \".xyz, \" + normalReg + \".xyz\\n\" +\n\t\t\t\t\"mul \" + temp + \".w, \" + temp + \".x, \" + temp + \".x\\n\" +\n\t\t\t\t\"sub \" + temp + \".w, \" + data2 + \".x, \" + temp + \".w\\n\" +\n\t\t\t\t\"mul \" + temp + \".w, \" + data + \".z, \" + temp + \".w\\n\" +\n\t\t\t\t\"mul \" + temp + \".w, \" + data + \".z, \" + temp + \".w\\n\" +\n\t\t\t\t\"sub \" + temp + \".w, \" + data2 + \".x, \" + temp + \".w\\n\" +\n\t\t\t\t\"sqt \" + temp + \".y, \" + temp + \".w\\n\" +\n\n\t\t\t\t\"mul \" + temp + \".x, \" + data + \".z, \" + temp + \".x\\n\" +\n\t\t\t\t\"add \" + temp + \".x, \" + temp + \".x, \" + temp + \".y\\n\" +\n\t\t\t\t\"mul \" + temp + \".xyz, \" + temp + \".x, \" + normalReg + \".xyz\\n\" +\n\n\t\t\t\t\"mul \" + refractionDir + \", \" + data + \".z, \" + viewDirReg + \"\\n\" +\n\t\t\t\t\"sub \" + refractionDir + \".xyz, \" + refractionDir + \".xyz, \" + temp + \".xyz\\n\" +\n\t\t\t\t\"nrm \" + refractionDir + \".xyz, \" + refractionDir + \".xyz\\n\";\n\t\t\tcode += ShaderCompilerHelper.getTexCubeSampleCode(temp, cubeMapReg, this._envMap, shaderObject.useSmoothTextures, shaderObject.useMipmapping, refractionDir) +\n\t\t\t\t\"mov \" + refractionColor + \".z, \" + temp + \".z\\n\";\n\t\t}\n\n\t\tregisterCache.removeFragmentTempUsage(refractionDir);\n\n\t\tcode += \"sub \" + refractionColor + \".xyz, \" + refractionColor + \".xyz, \" + targetReg + \".xyz\\n\" +\n\t\t\t\"mul \" + refractionColor + \".xyz, \" + refractionColor + \".xyz, \" + data + \".w\\n\" +\n\t\t\t\"add \" + targetReg + \".xyz, \" + targetReg + \".xyz, \" + refractionColor + \".xyz\\n\";\n\n\t\tregisterCache.removeFragmentTempUsage(refractionColor);\n\n\t\t// restore\n\t\tcode += \"neg \" + viewDirReg + \".xyz, \" + viewDirReg + \".xyz\\n\";\n\n\t\treturn code;\n\t}\n}\n\nexport = EffectRefractionEnvMapMethod;",
    "import Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport ShaderObjectBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderObjectBase\");\nimport ShaderRegisterCache\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterData\");\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterElement\");\n\nimport MethodVO\t\t\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/data/MethodVO\");\nimport EffectMethodBase\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/EffectMethodBase\");\n\n/**\n * EffectRimLightMethod provides a method to add rim lighting to a material. This adds a glow-like effect to edges of objects.\n */\nclass EffectRimLightMethod extends EffectMethodBase\n{\n\tpublic static ADD:string = \"add\";\n\tpublic static MULTIPLY:string = \"multiply\";\n\tpublic static MIX:string = \"mix\";\n\n\tprivate _color:number /*uint*/;\n\tprivate _blendMode:string;\n\tprivate _colorR:number;\n\tprivate _colorG:number;\n\tprivate _colorB:number;\n\tprivate _strength:number;\n\tprivate _power:number;\n\n\t/**\n\t * Creates a new <code>EffectRimLightMethod</code> object.\n\t *\n\t * @param color The colour of the rim light.\n\t * @param strength The strength of the rim light.\n\t * @param power The power of the rim light. Higher values will result in a higher edge fall-off.\n\t * @param blend The blend mode with which to add the light to the object.\n\t */\n\tconstructor(color:number /*uint*/ = 0xffffff, strength:number = .4, power:number = 2, blend:string = \"mix\")\n\t{\n\t\tsuper();\n\n\t\tthis._blendMode = blend;\n\t\tthis._strength = strength;\n\t\tthis._power = power;\n\n\t\tthis.color = color;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iInitConstants(shaderObject:ShaderObjectBase, methodVO:MethodVO)\n\t{\n\t\tshaderObject.fragmentConstantData[methodVO.fragmentConstantsIndex + 3] = 1;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iInitVO(shaderObject:ShaderObjectBase, methodVO:MethodVO)\n\t{\n\t\tmethodVO.needsNormals = true;\n\t\tmethodVO.needsView = true;\n\t}\n\n\n\t/**\n\t * The blend mode with which to add the light to the object.\n\t *\n\t * EffectRimLightMethod.MULTIPLY multiplies the rim light with the material's colour.\n\t * EffectRimLightMethod.ADD adds the rim light with the material's colour.\n\t * EffectRimLightMethod.MIX provides normal alpha blending.\n\t */\n\tpublic get blendMode():string\n\t{\n\t\treturn this._blendMode;\n\t}\n\n\tpublic set blendMode(value:string)\n\t{\n\t\tif (this._blendMode == value)\n\t\t\treturn;\n\n\t\tthis._blendMode = value;\n\n\t\tthis.iInvalidateShaderProgram();\n\t}\n\n\t/**\n\t * The color of the rim light.\n\t */\n\tpublic get color():number /*uint*/\n\t{\n\t\treturn this._color;\n\t}\n\n\tpublic set color(value:number /*uint*/)\n\t{\n\t\tthis._color = value;\n\t\tthis._colorR = ((value >> 16) & 0xff)/0xff;\n\t\tthis._colorG = ((value >> 8) & 0xff)/0xff;\n\t\tthis._colorB = (value & 0xff)/0xff;\n\t}\n\n\t/**\n\t * The strength of the rim light.\n\t */\n\tpublic get strength():number\n\t{\n\t\treturn this._strength;\n\t}\n\n\tpublic set strength(value:number)\n\t{\n\t\tthis._strength = value;\n\t}\n\n\t/**\n\t * The power of the rim light. Higher values will result in a higher edge fall-off.\n\t */\n\tpublic get power():number\n\t{\n\t\treturn this._power;\n\t}\n\n\tpublic set power(value:number)\n\t{\n\t\tthis._power = value;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iActivate(shaderObject:ShaderObjectBase, methodVO:MethodVO, stage:Stage)\n\t{\n\t\tvar index:number /*int*/ = methodVO.fragmentConstantsIndex;\n\t\tvar data:Array<number> = shaderObject.fragmentConstantData;\n\t\tdata[index] = this._colorR;\n\t\tdata[index + 1] = this._colorG;\n\t\tdata[index + 2] = this._colorB;\n\t\tdata[index + 4] = this._strength;\n\t\tdata[index + 5] = this._power;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iGetFragmentCode(shaderObject:ShaderObjectBase, methodVO:MethodVO, targetReg:ShaderRegisterElement, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tvar dataRegister:ShaderRegisterElement = registerCache.getFreeFragmentConstant();\n\t\tvar dataRegister2:ShaderRegisterElement = registerCache.getFreeFragmentConstant();\n\t\tvar temp:ShaderRegisterElement = registerCache.getFreeFragmentVectorTemp();\n\t\tvar code:string = \"\";\n\n\t\tmethodVO.fragmentConstantsIndex = dataRegister.index*4;\n\n\t\tcode += \"dp3 \" + temp + \".x, \" + sharedRegisters.viewDirFragment + \".xyz, \" + sharedRegisters.normalFragment + \".xyz\\n\" +\n\t\t\t\"sat \" + temp + \".x, \" + temp + \".x\\n\" +\n\t\t\t\"sub \" + temp + \".x, \" + dataRegister + \".w, \" + temp + \".x\\n\" +\n\t\t\t\"pow \" + temp + \".x, \" + temp + \".x, \" + dataRegister2 + \".y\\n\" +\n\t\t\t\"mul \" + temp + \".x, \" + temp + \".x, \" + dataRegister2 + \".x\\n\" +\n\t\t\t\"sub \" + temp + \".x, \" + dataRegister + \".w, \" + temp + \".x\\n\" +\n\t\t\t\"mul \" + targetReg + \".xyz, \" + targetReg + \".xyz, \" + temp + \".x\\n\" +\n\t\t\t\"sub \" + temp + \".w, \" + dataRegister + \".w, \" + temp + \".x\\n\";\n\n\t\tif (this._blendMode == EffectRimLightMethod.ADD) {\n\t\t\tcode += \"mul \" + temp + \".xyz, \" + temp + \".w, \" + dataRegister + \".xyz\\n\" +\n\t\t\t\t\"add \" + targetReg + \".xyz, \" + targetReg + \".xyz, \" + temp + \".xyz\\n\";\n\t\t} else if (this._blendMode == EffectRimLightMethod.MULTIPLY) {\n\t\t\tcode += \"mul \" + temp + \".xyz, \" + temp + \".w, \" + dataRegister + \".xyz\\n\" +\n\t\t\t\t\"mul \" + targetReg + \".xyz, \" + targetReg + \".xyz, \" + temp + \".xyz\\n\";\n\t\t} else {\n\t\t\tcode += \"sub \" + temp + \".xyz, \" + dataRegister + \".xyz, \" + targetReg + \".xyz\\n\" +\n\t\t\t\t\"mul \" + temp + \".xyz, \" + temp + \".xyz, \" + temp + \".w\\n\" +\n\t\t\t\t\"add \" + targetReg + \".xyz, \" + targetReg + \".xyz, \" + temp + \".xyz\\n\";\n\t\t}\n\n\t\treturn code;\n\t}\n}\n\nexport = EffectRimLightMethod;",
    "import ShaderObjectBase\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderObjectBase\");\nimport ShaderLightingObject\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderLightingObject\");\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterData\");\nimport ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterElement\");\n\nimport MethodVO\t\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/data/MethodVO\");\nimport ShadingMethodBase\t\t\t= require(\"awayjs-methodmaterials/lib/methods/ShadingMethodBase\");\n\n/**\n * LightingMethodBase provides an abstract base method for shading methods that uses lights.\n * Used for diffuse and specular shaders only.\n */\nclass LightingMethodBase extends ShadingMethodBase\n{\n\t/**\n\t * A method that is exposed to wrappers in case the strength needs to be controlled\n\t */\n\tpublic _iModulateMethod:(shaderObject:ShaderObjectBase, methodVO:MethodVO, targetReg:ShaderRegisterElement, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData) => string;\n\n\t/**\n\t * Creates a new LightingMethodBase.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t * Get the fragment shader code that will be needed before any per-light code is added.\n\t * @param methodVO The MethodVO object containing the method data for the currently compiled material pass.\n\t * @param regCache The register cache used during the compilation.\n\t * @private\n\t */\n\tpublic iGetFragmentPreLightingCode(shaderObject:ShaderLightingObject, methodVO:MethodVO, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"\";\n\t}\n\n\t/**\n\t * Get the fragment shader code that will generate the code relevant to a single light.\n\t *\n\t * @param methodVO The MethodVO object containing the method data for the currently compiled material pass.\n\t * @param lightDirReg The register containing the light direction vector.\n\t * @param lightColReg The register containing the light colour.\n\t * @param regCache The register cache used during the compilation.\n\t */\n\tpublic iGetFragmentCodePerLight(shaderObject:ShaderLightingObject, methodVO:MethodVO, lightDirReg:ShaderRegisterElement, lightColReg:ShaderRegisterElement, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"\";\n\t}\n\n\t/**\n\t * Get the fragment shader code that will generate the code relevant to a single light probe object.\n\t *\n\t * @param methodVO The MethodVO object containing the method data for the currently compiled material pass.\n\t * @param cubeMapReg The register containing the cube map for the current probe\n\t * @param weightRegister A string representation of the register + component containing the current weight\n\t * @param regCache The register cache providing any necessary registers to the shader\n\t */\n\tpublic iGetFragmentCodePerProbe(shaderObject:ShaderLightingObject, methodVO:MethodVO, cubeMapReg:ShaderRegisterElement, weightRegister:string, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"\";\n\t}\n\n\t/**\n\t * Get the fragment shader code that should be added after all per-light code. Usually composits everything to the target register.\n\t *\n\t * @param methodVO The MethodVO object containing the method data for the currently compiled material pass.\n\t * @param regCache The register cache used during the compilation.\n\t * @param targetReg The register containing the final shading output.\n\t * @private\n\t */\n\tpublic iGetFragmentPostLightingCode(shaderObject:ShaderLightingObject, methodVO:MethodVO, targetReg:ShaderRegisterElement, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"\";\n\t}\n}\n\nexport = LightingMethodBase;",
    "import Texture2DBase\t\t\t\t= require(\"awayjs-core/lib/textures/Texture2DBase\");\n\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport ShaderObjectBase\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderObjectBase\");\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterData\");\nimport ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterElement\");\nimport ShaderCompilerHelper\t\t\t= require(\"awayjs-renderergl/lib/utils/ShaderCompilerHelper\");\n\nimport MethodVO\t\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/data/MethodVO\");\nimport ShadingMethodBase\t\t\t= require(\"awayjs-methodmaterials/lib/methods/ShadingMethodBase\");\n\n/**\n * NormalBasicMethod is the default method for standard tangent-space normal mapping.\n */\nclass NormalBasicMethod extends ShadingMethodBase\n{\n\tprivate _texture:Texture2DBase;\n\tprivate _useTexture:boolean;\n\tpublic _pNormalTextureRegister:ShaderRegisterElement;\n\n\t/**\n\t * Creates a new NormalBasicMethod object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\tpublic iIsUsed(shaderObject:ShaderObjectBase):boolean\n\t{\n\t\tif (!this._useTexture || !shaderObject.normalDependencies)\n\t\t\treturn false;\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iInitVO(shaderObject:ShaderObjectBase, methodVO:MethodVO)\n\t{\n\t\tmethodVO.needsUV = this._useTexture;\n\t}\n\n\t/**\n\t * Indicates whether or not this method outputs normals in tangent space. Override for object-space normals.\n\t */\n\tpublic iOutputsTangentNormals():boolean\n\t{\n\t\treturn true;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic copyFrom(method:ShadingMethodBase)\n\t{\n\t\tvar s:any = method;\n\t\tvar bnm:NormalBasicMethod = <NormalBasicMethod> method;\n\n\t\tif (bnm.normalMap != null)\n\t\t\tthis.normalMap = bnm.normalMap;\n\t}\n\n\t/**\n\t * The texture containing the normals per pixel.\n\t */\n\tpublic get normalMap():Texture2DBase\n\t{\n\t\treturn this._texture;\n\t}\n\n\tpublic set normalMap(value:Texture2DBase)\n\t{\n\t\tvar b:boolean = (value != null);\n\n\t\tif (b != this._useTexture || (value && this._texture && (value.format != this._texture.format)))\n\t\t\tthis.iInvalidateShaderProgram();\n\n\t\tthis._useTexture = b;\n\t\tthis._texture = value;\n\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iCleanCompilationData()\n\t{\n\t\tsuper.iCleanCompilationData();\n\t\tthis._pNormalTextureRegister = null;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic dispose()\n\t{\n\t\tif (this._texture)\n\t\t\tthis._texture = null;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iActivate(shaderObject:ShaderObjectBase, methodVO:MethodVO, stage:Stage)\n\t{\n\t\tif (methodVO.texturesIndex >= 0)\n\t\t\tstage.activateTexture(methodVO.texturesIndex, this._texture, shaderObject.repeatTextures, shaderObject.useSmoothTextures, shaderObject.useMipmapping);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iGetFragmentCode(shaderObject:ShaderObjectBase, methodVO:MethodVO, targetReg:ShaderRegisterElement, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tthis._pNormalTextureRegister = registerCache.getFreeTextureReg();\n\n\t\tmethodVO.texturesIndex = this._pNormalTextureRegister.index;\n\n\t\treturn ShaderCompilerHelper.getTex2DSampleCode(targetReg, sharedRegisters, this._pNormalTextureRegister, this._texture, shaderObject.useSmoothTextures, shaderObject.repeatTextures, shaderObject.useMipmapping) +\n\t\t\t\"sub \" + targetReg + \".xyz, \" + targetReg + \".xyz, \" + sharedRegisters.commons + \".xxx\\n\" +\n\t\t\t\"nrm \" + targetReg + \".xyz, \" + targetReg + \"\\n\";\n\t}\n}\n\nexport = NormalBasicMethod;",
    "import Texture2DBase\t\t\t\t\t= require(\"awayjs-core/lib/textures/Texture2DBase\");\n\nimport ShaderObjectBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderObjectBase\");\nimport ShaderRegisterCache\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterData\");\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterElement\");\nimport ShaderCompilerHelper\t\t\t\t= require(\"awayjs-renderergl/lib/utils/ShaderCompilerHelper\");\n\nimport MethodVO\t\t\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/data/MethodVO\");\nimport NormalBasicMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/NormalBasicMethod\");\nimport ShadingMethodBase\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/ShadingMethodBase\");\n\n/**\n * NormalHeightMapMethod provides a normal map method that uses a height map to calculate the normals.\n */\nclass NormalHeightMapMethod extends NormalBasicMethod\n{\n\tprivate _worldXYRatio:number;\n\tprivate _worldXZRatio:number;\n\n\t/**\n\t * Creates a new NormalHeightMapMethod method.\n\t *\n\t * @param heightMap The texture containing the height data. 0 means low, 1 means high.\n\t * @param worldWidth The width of the 'world'. This is used to map uv coordinates' u component to scene dimensions.\n\t * @param worldHeight The height of the 'world'. This is used to map the height map values to scene dimensions.\n\t * @param worldDepth The depth of the 'world'. This is used to map uv coordinates' v component to scene dimensions.\n\t */\n\tconstructor(heightMap:Texture2DBase, worldWidth:number, worldHeight:number, worldDepth:number)\n\t{\n\t\tsuper();\n\n\t\tthis.normalMap = heightMap;\n\t\tthis._worldXYRatio = worldWidth/worldHeight;\n\t\tthis._worldXZRatio = worldDepth/worldHeight;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iInitConstants(shaderObject:ShaderObjectBase, methodVO:MethodVO)\n\t{\n\t\tvar index:number /*int*/ = methodVO.fragmentConstantsIndex;\n\t\tvar data:Array<number> = shaderObject.fragmentConstantData;\n\t\tdata[index] = 1/this.normalMap.width;\n\t\tdata[index + 1] = 1/this.normalMap.height;\n\t\tdata[index + 2] = 0;\n\t\tdata[index + 3] = 1;\n\t\tdata[index + 4] = this._worldXYRatio;\n\t\tdata[index + 5] = this._worldXZRatio;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get tangentSpace():boolean\n\t{\n\t\treturn false;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic copyFrom(method:ShadingMethodBase)\n\t{\n\t\tsuper.copyFrom(method);\n\n\t\tthis._worldXYRatio = (<NormalHeightMapMethod> method)._worldXYRatio;\n\t\tthis._worldXZRatio = (<NormalHeightMapMethod> method)._worldXZRatio;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iGetFragmentCode(shaderObject:ShaderObjectBase, methodVO:MethodVO, targetReg:ShaderRegisterElement, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tvar temp:ShaderRegisterElement = registerCache.getFreeFragmentVectorTemp();\n\t\tvar dataReg:ShaderRegisterElement = registerCache.getFreeFragmentConstant();\n\t\tvar dataReg2:ShaderRegisterElement = registerCache.getFreeFragmentConstant();\n\t\tthis._pNormalTextureRegister = registerCache.getFreeTextureReg();\n\t\tmethodVO.texturesIndex = this._pNormalTextureRegister.index;\n\t\tmethodVO.fragmentConstantsIndex = dataReg.index*4;\n\n\t\treturn ShaderCompilerHelper.getTex2DSampleCode(targetReg, sharedRegisters, this._pNormalTextureRegister, this.normalMap, shaderObject.useSmoothTextures, shaderObject.repeatTextures, shaderObject.useMipmapping, sharedRegisters.uvVarying, \"clamp\") +\n\n\t\t\t\"add \" + temp + \", \" + sharedRegisters.uvVarying + \", \" + dataReg + \".xzzz\\n\" +\n\n\t\t\tShaderCompilerHelper.getTex2DSampleCode(temp, sharedRegisters, this._pNormalTextureRegister, this.normalMap, shaderObject.useSmoothTextures, shaderObject.repeatTextures, shaderObject.useMipmapping, temp, \"clamp\") +\n\n\t\t\t\"sub \" + targetReg + \".x, \" + targetReg + \".x, \" + temp + \".x\\n\" +\n\t\t\t\"add \" + temp + \", \" + sharedRegisters.uvVarying + \", \" + dataReg + \".zyzz\\n\" +\n\n\t\t\tShaderCompilerHelper.getTex2DSampleCode(temp, sharedRegisters, this._pNormalTextureRegister, this.normalMap, shaderObject.useSmoothTextures, shaderObject.repeatTextures, shaderObject.useMipmapping, temp, \"clamp\") +\n\n\t\t\t\"sub \" + targetReg + \".z, \" + targetReg + \".z, \" + temp + \".x\\n\" +\n\t\t\t\"mov \" + targetReg + \".y, \" + dataReg + \".w\\n\" +\n\t\t\t\"mul \" + targetReg + \".xz, \" + targetReg + \".xz, \" + dataReg2 + \".xy\\n\" +\n\t\t\t\"nrm \" + targetReg + \".xyz, \" + targetReg + \".xyz\\n\";\n\t}\n}\n\nexport = NormalHeightMapMethod;",
    "import Texture2DBase\t\t\t\t\t= require(\"awayjs-core/lib/textures/Texture2DBase\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport ShaderObjectBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderObjectBase\");\nimport ShaderRegisterCache\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterData\");\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterElement\");\nimport ShaderCompilerHelper\t\t\t\t= require(\"awayjs-renderergl/lib/utils/ShaderCompilerHelper\");\n\nimport MethodVO\t\t\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/data/MethodVO\");\nimport NormalBasicMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/NormalBasicMethod\");\n\n/**\n * NormalSimpleWaterMethod provides a basic normal map method to create water ripples by translating two wave normal maps.\n */\nclass NormalSimpleWaterMethod extends NormalBasicMethod\n{\n\tprivate _texture2:Texture2DBase;\n\tprivate _normalTextureRegister2:ShaderRegisterElement;\n\tprivate _useSecondNormalMap:boolean = false;\n\tprivate _water1OffsetX:number = 0;\n\tprivate _water1OffsetY:number = 0;\n\tprivate _water2OffsetX:number = 0;\n\tprivate _water2OffsetY:number = 0;\n\n\t/**\n\t * Creates a new NormalSimpleWaterMethod object.\n\t * @param waveMap1 A normal map containing one layer of a wave structure.\n\t * @param waveMap2 A normal map containing a second layer of a wave structure.\n\t */\n\tconstructor(waveMap1:Texture2DBase, waveMap2:Texture2DBase)\n\t{\n\t\tsuper();\n\t\tthis.normalMap = waveMap1;\n\t\tthis.secondaryNormalMap = waveMap2;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iInitConstants(shaderObject:ShaderObjectBase, methodVO:MethodVO)\n\t{\n\t\tvar index:number = methodVO.fragmentConstantsIndex;\n\t\tvar data:Array<number> = shaderObject.fragmentConstantData;\n\t\tdata[index] = .5;\n\t\tdata[index + 1] = 0;\n\t\tdata[index + 2] = 0;\n\t\tdata[index + 3] = 1;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iInitVO(shaderObject:ShaderObjectBase, methodVO:MethodVO)\n\t{\n\t\tsuper.iInitVO(shaderObject, methodVO);\n\n\t\tthis._useSecondNormalMap = this.normalMap != this.secondaryNormalMap;\n\t}\n\n\t/**\n\t * The translation of the first wave layer along the X-axis.\n\t */\n\tpublic get water1OffsetX():number\n\t{\n\t\treturn this._water1OffsetX;\n\t}\n\n\tpublic set water1OffsetX(value:number)\n\t{\n\t\tthis._water1OffsetX = value;\n\t}\n\n\t/**\n\t * The translation of the first wave layer along the Y-axis.\n\t */\n\tpublic get water1OffsetY():number\n\t{\n\t\treturn this._water1OffsetY;\n\t}\n\n\tpublic set water1OffsetY(value:number)\n\t{\n\t\tthis._water1OffsetY = value;\n\t}\n\n\t/**\n\t * The translation of the second wave layer along the X-axis.\n\t */\n\tpublic get water2OffsetX():number\n\t{\n\t\treturn this._water2OffsetX;\n\t}\n\n\tpublic set water2OffsetX(value:number)\n\t{\n\t\tthis._water2OffsetX = value;\n\t}\n\n\t/**\n\t * The translation of the second wave layer along the Y-axis.\n\t */\n\tpublic get water2OffsetY():number\n\t{\n\t\treturn this._water2OffsetY;\n\t}\n\n\tpublic set water2OffsetY(value:number)\n\t{\n\t\tthis._water2OffsetY = value;\n\t}\n\n\t/**\n\t * A second normal map that will be combined with the first to create a wave-like animation pattern.\n\t */\n\tpublic get secondaryNormalMap():Texture2DBase\n\t{\n\t\treturn this._texture2;\n\t}\n\n\tpublic set secondaryNormalMap(value:Texture2DBase)\n\t{\n\t\tthis._texture2 = value;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iCleanCompilationData()\n\t{\n\t\tsuper.iCleanCompilationData();\n\t\tthis._normalTextureRegister2 = null;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\t\tthis._texture2 = null;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iActivate(shaderObject:ShaderObjectBase, methodVO:MethodVO, stage:Stage)\n\t{\n\t\tsuper.iActivate(shaderObject, methodVO, stage);\n\n\t\tvar data:Array<number> = shaderObject.fragmentConstantData;\n\t\tvar index:number = methodVO.fragmentConstantsIndex;\n\n\t\tdata[index + 4] = this._water1OffsetX;\n\t\tdata[index + 5] = this._water1OffsetY;\n\t\tdata[index + 6] = this._water2OffsetX;\n\t\tdata[index + 7] = this._water2OffsetY;\n\n\t\t//if (this._useSecondNormalMap >= 0)\n\t\tif (this._useSecondNormalMap)\n\t\t\tstage.activateTexture(methodVO.texturesIndex + 1, this._texture2, shaderObject.repeatTextures, shaderObject.useSmoothTextures, shaderObject.useMipmapping);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iGetFragmentCode(shaderObject:ShaderObjectBase, methodVO:MethodVO, targetReg:ShaderRegisterElement, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tvar temp:ShaderRegisterElement = registerCache.getFreeFragmentVectorTemp();\n\t\tvar dataReg:ShaderRegisterElement = registerCache.getFreeFragmentConstant();\n\t\tvar dataReg2:ShaderRegisterElement = registerCache.getFreeFragmentConstant();\n\t\tthis._pNormalTextureRegister = registerCache.getFreeTextureReg();\n\t\tthis._normalTextureRegister2 = this._useSecondNormalMap? registerCache.getFreeTextureReg():this._pNormalTextureRegister;\n\t\tmethodVO.texturesIndex = this._pNormalTextureRegister.index;\n\n\t\tmethodVO.fragmentConstantsIndex = dataReg.index*4;\n\n\t\treturn \"add \" + temp + \", \" + sharedRegisters.uvVarying + \", \" + dataReg2 + \".xyxy\\n\" +\n\t\t\tShaderCompilerHelper.getTex2DSampleCode(targetReg, sharedRegisters, this._pNormalTextureRegister, this.normalMap, shaderObject.useSmoothTextures, shaderObject.repeatTextures, shaderObject.useMipmapping, temp) +\n\t\t\t\"add \" + temp + \", \" + sharedRegisters.uvVarying + \", \" + dataReg2 + \".zwzw\\n\" +\n\t\t\tShaderCompilerHelper.getTex2DSampleCode(temp, sharedRegisters, this._normalTextureRegister2, this._texture2, shaderObject.useSmoothTextures, shaderObject.repeatTextures, shaderObject.useMipmapping, temp) +\n\t\t\t\"add \" + targetReg + \", \" + targetReg + \", \" + temp + \"\t\t\\n\" +\n\t\t\t\"mul \" + targetReg + \", \" + targetReg + \", \" + dataReg + \".x\t\\n\" +\n\t\t\t\"sub \" + targetReg + \".xyz, \" + targetReg + \".xyz, \" + sharedRegisters.commons + \".xxx\t\\n\" +\n\t\t\t\"nrm \" + targetReg + \".xyz, \" + targetReg + \".xyz\t\t\t\t\t\t\t\\n\";\n\t}\n}\n\nexport = NormalSimpleWaterMethod;",
    "import AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\n\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\n\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport RenderableBase\t\t\t\t= require(\"awayjs-renderergl/lib/pool/RenderableBase\");\nimport ShadingMethodEvent\t\t\t= require(\"awayjs-renderergl/lib/events/ShadingMethodEvent\");\nimport ShaderObjectBase\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderObjectBase\");\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterData\");\nimport ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterElement\");\n\nimport MethodVO\t\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/data/MethodVO\");\n\n\n/**\n * ShadingMethodBase provides an abstract base method for shading methods, used by compiled passes to compile\n * the final shading program.\n */\nclass ShadingMethodBase extends AssetBase\n{\n\tpublic static assetType:string = \"[asset ShadingMethod]\";\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn ShadingMethodBase.assetType;\n\t}\n\n\t/**\n\t * Create a new ShadingMethodBase object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\tpublic iIsUsed(shaderObject:ShaderObjectBase):boolean\n\t{\n\t\treturn true;\n\t}\n\n\t/**\n\t * Initializes the properties for a MethodVO, including register and texture indices.\n\t *\n\t * @param methodVO The MethodVO object linking this method with the pass currently being compiled.\n\t *\n\t * @internal\n\t */\n\tpublic iInitVO(shaderObject:ShaderObjectBase, methodVO:MethodVO)\n\t{\n\n\t}\n\n\t/**\n\t * Initializes unchanging shader constants using the data from a MethodVO.\n\t *\n\t * @param methodVO The MethodVO object linking this method with the pass currently being compiled.\n\t *\n\t * @internal\n\t */\n\tpublic iInitConstants(shaderObject:ShaderObjectBase, methodVO:MethodVO)\n\t{\n\n\n\t}\n\n\t/**\n\t * Indicates whether or not this method expects normals in tangent space. Override for object-space normals.\n\t */\n\tpublic iUsesTangentSpace():boolean\n\t{\n\t\treturn true;\n\t}\n\n\t/**\n\t * Cleans up any resources used by the current object.\n\t */\n\tpublic dispose()\n\t{\n\n\t}\n\n\t/**\n\t * Resets the compilation state of the method.\n\t *\n\t * @internal\n\t */\n\tpublic iReset()\n\t{\n\t\tthis.iCleanCompilationData();\n\t}\n\n\t/**\n\t * Resets the method's state for compilation.\n\t *\n\t * @internal\n\t */\n\tpublic iCleanCompilationData()\n\t{\n\t}\n\n\t/**\n\t * Get the vertex shader code for this method.\n\t * @param vo The MethodVO object linking this method with the pass currently being compiled.\n\t * @param regCache The register cache used during the compilation.\n\t *\n\t * @internal\n\t */\n\tpublic iGetVertexCode(shaderObject:ShaderObjectBase, methodVO:MethodVO, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"\";\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iGetFragmentCode(shaderObject:ShaderObjectBase, methodVO:MethodVO, targetReg:ShaderRegisterElement, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn null;\n\t}\n\n\t/**\n\t * Sets the render state for this method.\n\t *\n\t * @param methodVO The MethodVO object linking this method with the pass currently being compiled.\n\t * @param stage The Stage object currently used for rendering.\n\t *\n\t * @internal\n\t */\n\tpublic iActivate(shaderObject:ShaderObjectBase, methodVO:MethodVO, stage:Stage)\n\t{\n\n\t}\n\n\t/**\n\t * Sets the render state for a single renderable.\n\t *\n\t * @param vo The MethodVO object linking this method with the pass currently being compiled.\n\t * @param renderable The renderable currently being rendered.\n\t * @param stage The Stage object currently used for rendering.\n\t * @param camera The camera from which the scene is currently rendered.\n\t *\n\t * @internal\n\t */\n\tpublic iSetRenderState(shaderObject:ShaderObjectBase, methodVO:MethodVO, renderable:RenderableBase, stage:Stage, camera:Camera)\n\t{\n\n\t}\n\n\t/**\n\t * Clears the render state for this method.\n\t * @param vo The MethodVO object linking this method with the pass currently being compiled.\n\t * @param stage The Stage object currently used for rendering.\n\t *\n\t * @internal\n\t */\n\tpublic iDeactivate(shaderObject:ShaderObjectBase, methodVO:MethodVO, stage:Stage)\n\t{\n\n\t}\n\n\t/**\n\t * Marks the shader program as invalid, so it will be recompiled before the next render.\n\t *\n\t * @internal\n\t */\n\tpublic iInvalidateShaderProgram()\n\t{\n\t\tthis.dispatchEvent(new ShadingMethodEvent(ShadingMethodEvent.SHADER_INVALIDATED));\n\t}\n\n\t/**\n\t * Copies the state from a ShadingMethodBase object into the current object.\n\t */\n\tpublic copyFrom(method:ShadingMethodBase)\n\t{\n\t}\n}\n\nexport = ShadingMethodBase;",
    "import Event\t\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\nimport Texture2DBase\t\t\t\t\t= require(\"awayjs-core/lib/textures/Texture2DBase\");\n\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport DirectionalLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\nimport CascadeShadowMapper\t\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/CascadeShadowMapper\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport RenderableBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/pool/RenderableBase\");\nimport ShadingMethodEvent\t\t\t\t= require(\"awayjs-renderergl/lib/events/ShadingMethodEvent\");\nimport ShaderLightingObject\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderLightingObject\");\nimport ShaderObjectBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderObjectBase\");\nimport ShaderRegisterCache\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterData\");\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterElement\");\nimport ShaderCompilerHelper\t\t\t\t= require(\"awayjs-renderergl/lib/utils/ShaderCompilerHelper\");\n\nimport MethodVO\t\t\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/data/MethodVO\");\nimport ShadowMapMethodBase\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/ShadowMapMethodBase\");\nimport ShadowMethodBase\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/ShadowMethodBase\");\n\n/**\n * ShadowCascadeMethod is a shadow map method to apply cascade shadow mapping on materials.\n * Must be used with a DirectionalLight with a CascadeShadowMapper assigned to its shadowMapper property.\n *\n * @see away.lights.CascadeShadowMapper\n */\nclass ShadowCascadeMethod extends ShadowMapMethodBase\n{\n\tprivate _baseMethod:ShadowMethodBase;\n\tprivate _cascadeShadowMapper:CascadeShadowMapper;\n\tprivate _depthMapCoordVaryings:Array<ShaderRegisterElement>;\n\tprivate _cascadeProjections:Array<ShaderRegisterElement>;\n\n\t/**\n\t * Creates a new ShadowCascadeMethod object.\n\t *\n\t * @param shadowMethodBase The shadow map sampling method used to sample individual cascades (fe: ShadowHardMethod, ShadowSoftMethod)\n\t */\n\tconstructor(shadowMethodBase:ShadowMethodBase)\n\t{\n\t\tsuper(shadowMethodBase.castingLight);\n\n\t\tthis._baseMethod = shadowMethodBase;\n\t\tif (!(this._pCastingLight instanceof DirectionalLight))\n\t\t\tthrow new Error(\"ShadowCascadeMethod is only compatible with DirectionalLight\");\n\n\t\tthis._cascadeShadowMapper = <CascadeShadowMapper> this._pCastingLight.shadowMapper;\n\n\t\tif (!this._cascadeShadowMapper)\n\t\t\tthrow new Error(\"ShadowCascadeMethod requires a light that has a CascadeShadowMapper instance assigned to shadowMapper.\");\n\n\t\tthis._cascadeShadowMapper.addEventListener(Event.CHANGE, (event:Event) => this.onCascadeChange(event));\n\t\tthis._baseMethod.addEventListener(ShadingMethodEvent.SHADER_INVALIDATED, (event:ShadingMethodEvent) => this.onShaderInvalidated(event));\n\t}\n\n\t/**\n\t * The shadow map sampling method used to sample individual cascades. These are typically those used in conjunction\n\t * with a DirectionalShadowMapper.\n\t *\n\t * @see ShadowHardMethod\n\t * @see ShadowSoftMethod\n\t */\n\tpublic get baseMethod():ShadowMethodBase\n\t{\n\t\treturn this._baseMethod;\n\t}\n\n\tpublic set baseMethod(value:ShadowMethodBase)\n\t{\n\t\tif (this._baseMethod == value)\n\t\t\treturn;\n\n\t\tthis._baseMethod.removeEventListener(ShadingMethodEvent.SHADER_INVALIDATED, (event:ShadingMethodEvent) => this.onShaderInvalidated(event));\n\n\t\tthis._baseMethod = value;\n\n\t\tthis._baseMethod.addEventListener(ShadingMethodEvent.SHADER_INVALIDATED, (event:ShadingMethodEvent) => this.onShaderInvalidated(event));\n\n\t\tthis.iInvalidateShaderProgram();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iInitVO(shaderObject:ShaderLightingObject, methodVO:MethodVO)\n\t{\n\t\tvar tempVO:MethodVO = new MethodVO(this._baseMethod);\n\t\tthis._baseMethod.iInitVO(shaderObject, tempVO);\n\n\t\tmethodVO.needsGlobalVertexPos = true;\n\t\tmethodVO.needsProjection = true;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iInitConstants(shaderObject:ShaderObjectBase, methodVO:MethodVO)\n\t{\n\t\tvar fragmentData:Array<number> = shaderObject.fragmentConstantData;\n\t\tvar vertexData:Array<number> = shaderObject.vertexConstantData;\n\t\tvar index:number = methodVO.fragmentConstantsIndex;\n\t\tfragmentData[index] = 1.0;\n\t\tfragmentData[index + 1] = 1/255.0;\n\t\tfragmentData[index + 2] = 1/65025.0;\n\t\tfragmentData[index + 3] = 1/16581375.0;\n\n\t\tfragmentData[index + 6] = .5;\n\t\tfragmentData[index + 7] = -.5;\n\n\t\tindex = methodVO.vertexConstantsIndex;\n\t\tvertexData[index] = .5;\n\t\tvertexData[index + 1] = -.5;\n\t\tvertexData[index + 2] = 0;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iCleanCompilationData()\n\t{\n\t\tsuper.iCleanCompilationData();\n\t\tthis._cascadeProjections = null;\n\t\tthis._depthMapCoordVaryings = null;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iGetVertexCode(shaderObject:ShaderObjectBase, methodVO:MethodVO, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tvar code:string = \"\";\n\t\tvar dataReg:ShaderRegisterElement = registerCache.getFreeVertexConstant();\n\n\t\tthis.initProjectionsRegs(registerCache);\n\t\tmethodVO.vertexConstantsIndex = dataReg.index*4;\n\n\t\tvar temp:ShaderRegisterElement = registerCache.getFreeVertexVectorTemp();\n\n\t\tfor (var i:number = 0; i < this._cascadeShadowMapper.numCascades; ++i) {\n\t\t\tcode += \"m44 \" + temp + \", \" + sharedRegisters.globalPositionVertex + \", \" + this._cascadeProjections[i] + \"\\n\" +\n\t\t\t\t\"add \" + this._depthMapCoordVaryings[i] + \", \" + temp + \", \" + dataReg + \".zzwz\\n\";\n\t\t}\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * Creates the registers for the cascades' projection coordinates.\n\t */\n\tprivate initProjectionsRegs(registerCache:ShaderRegisterCache)\n\t{\n\t\tthis._cascadeProjections = new Array<ShaderRegisterElement>(this._cascadeShadowMapper.numCascades);\n\t\tthis._depthMapCoordVaryings = new Array<ShaderRegisterElement>(this._cascadeShadowMapper.numCascades);\n\n\t\tfor (var i:number = 0; i < this._cascadeShadowMapper.numCascades; ++i) {\n\t\t\tthis._depthMapCoordVaryings[i] = registerCache.getFreeVarying();\n\t\t\tthis._cascadeProjections[i] = registerCache.getFreeVertexConstant();\n\t\t\tregisterCache.getFreeVertexConstant();\n\t\t\tregisterCache.getFreeVertexConstant();\n\t\t\tregisterCache.getFreeVertexConstant();\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iGetFragmentCode(shaderObject:ShaderObjectBase, methodVO:MethodVO, targetReg:ShaderRegisterElement, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tvar numCascades:number = this._cascadeShadowMapper.numCascades;\n\t\tvar depthMapRegister:ShaderRegisterElement = registerCache.getFreeTextureReg();\n\t\tvar decReg:ShaderRegisterElement = registerCache.getFreeFragmentConstant();\n\t\tvar dataReg:ShaderRegisterElement = registerCache.getFreeFragmentConstant();\n\t\tvar planeDistanceReg:ShaderRegisterElement = registerCache.getFreeFragmentConstant();\n\t\tvar planeDistances:Array<string> = Array<string>( planeDistanceReg + \".x\", planeDistanceReg + \".y\", planeDistanceReg + \".z\", planeDistanceReg + \".w\" );\n\t\tvar code:string;\n\n\t\tmethodVO.fragmentConstantsIndex = decReg.index*4;\n\t\tmethodVO.texturesIndex = depthMapRegister.index;\n\n\t\tvar inQuad:ShaderRegisterElement = registerCache.getFreeFragmentVectorTemp();\n\t\tregisterCache.addFragmentTempUsages(inQuad, 1);\n\t\tvar uvCoord:ShaderRegisterElement = registerCache.getFreeFragmentVectorTemp();\n\t\tregisterCache.addFragmentTempUsages(uvCoord, 1);\n\n\t\t// assume lowest partition is selected, will be overwritten later otherwise\n\t\tcode = \"mov \" + uvCoord + \", \" + this._depthMapCoordVaryings[numCascades - 1] + \"\\n\";\n\n\t\tfor (var i:number = numCascades - 2; i >= 0; --i) {\n\t\t\tvar uvProjection:ShaderRegisterElement = this._depthMapCoordVaryings[i];\n\n\t\t\t// calculate if in texturemap (result == 0 or 1, only 1 for a single partition)\n\t\t\tcode += \"slt \" + inQuad + \".z, \" + sharedRegisters.projectionFragment + \".z, \" + planeDistances[i] + \"\\n\"; // z = x > minX, w = y > minY\n\n\t\t\tvar temp:ShaderRegisterElement = registerCache.getFreeFragmentVectorTemp();\n\n\t\t\t// linearly interpolate between old and new uv coords using predicate value == conditional toggle to new value if predicate == 1 (true)\n\t\t\tcode += \"sub \" + temp + \", \" + uvProjection + \", \" + uvCoord + \"\\n\" +\n\t\t\t\t\"mul \" + temp + \", \" + temp + \", \" + inQuad + \".z\\n\" +\n\t\t\t\t\"add \" + uvCoord + \", \" + uvCoord + \", \" + temp + \"\\n\";\n\t\t}\n\n\t\tregisterCache.removeFragmentTempUsage(inQuad);\n\n\t\tcode += \"div \" + uvCoord + \", \" + uvCoord + \", \" + uvCoord + \".w\\n\" +\n\t\t\t\"mul \" + uvCoord + \".xy, \" + uvCoord + \".xy, \" + dataReg + \".zw\\n\" +\n\t\t\t\"add \" + uvCoord + \".xy, \" + uvCoord + \".xy, \" + dataReg + \".zz\\n\";\n\n\t\tcode += this._baseMethod._iGetCascadeFragmentCode(shaderObject, methodVO, decReg, depthMapRegister, uvCoord, targetReg, registerCache, sharedRegisters) +\n\t\t\t\"add \" + targetReg + \".w, \" + targetReg + \".w, \" + dataReg + \".y\\n\";\n\n\t\tregisterCache.removeFragmentTempUsage(uvCoord);\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iActivate(shaderObject:ShaderObjectBase, methodVO:MethodVO, stage:Stage)\n\t{\n\t\tstage.activateTexture(methodVO.texturesIndex, <Texture2DBase> this._pCastingLight.shadowMapper.depthMap, shaderObject.repeatTextures, shaderObject.useSmoothTextures, shaderObject.useMipmapping);\n\n\t\tvar vertexData:Array<number> = shaderObject.vertexConstantData;\n\t\tvar vertexIndex:number = methodVO.vertexConstantsIndex;\n\n\t\tshaderObject.vertexConstantData[methodVO.vertexConstantsIndex + 3] = -1/(this._cascadeShadowMapper.depth*this._pEpsilon);\n\n\t\tvar numCascades:number = this._cascadeShadowMapper.numCascades;\n\t\tvertexIndex += 4;\n\t\tfor (var k:number = 0; k < numCascades; ++k) {\n\t\t\tthis._cascadeShadowMapper.getDepthProjections(k).copyRawDataTo(vertexData, vertexIndex, true);\n\t\t\tvertexIndex += 16;\n\t\t}\n\n\t\tvar fragmentData:Array<number> = shaderObject.fragmentConstantData;\n\t\tvar fragmentIndex:number = methodVO.fragmentConstantsIndex;\n\t\tfragmentData[fragmentIndex + 5] = 1 - this._pAlpha;\n\n\t\tvar nearPlaneDistances:Array<number> = this._cascadeShadowMapper._iNearPlaneDistances;\n\n\t\tfragmentIndex += 8;\n\t\tfor (var i:number = 0; i < numCascades; ++i)\n\t\t\tfragmentData[fragmentIndex + i] = nearPlaneDistances[i];\n\n\t\tthis._baseMethod.iActivateForCascade(shaderObject, methodVO, stage);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iSetRenderState(shaderObject:ShaderObjectBase, methodVO:MethodVO, renderable:RenderableBase, stage:Stage, camera:Camera)\n\t{\n\t}\n\n\t/**\n\t * Called when the shadow mappers cascade configuration changes.\n\t */\n\tprivate onCascadeChange(event:Event)\n\t{\n\t\tthis.iInvalidateShaderProgram();\n\t}\n\n\t/**\n\t * Called when the base method's shader code is invalidated.\n\t */\n\tprivate onShaderInvalidated(event:ShadingMethodEvent)\n\t{\n\t\tthis.iInvalidateShaderProgram();\n\t}\n}\n\nexport = ShadowCascadeMethod;",
    "import BitmapData\t\t\t\t\t\t= require(\"awayjs-core/lib/data/BitmapData\");\nimport BitmapTexture\t\t\t\t\t= require(\"awayjs-core/lib/textures/BitmapTexture\");\n\nimport DirectionalLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport ShaderLightingObject\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderLightingObject\");\nimport ShaderObjectBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderObjectBase\");\nimport ShaderRegisterCache\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterData\");\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterElement\");\n\nimport MethodVO\t\t\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/data/MethodVO\");\nimport ShadowMethodBase\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/ShadowMethodBase\");\n\n/**\n * ShadowDitheredMethod provides a soft shadowing technique by randomly distributing sample points differently for each fragment.\n */\nclass ShadowDitheredMethod extends ShadowMethodBase\n{\n\tprivate static _grainTexture:BitmapTexture;\n\tprivate static _grainUsages:number /*int*/;\n\tprivate static _grainBitmapData:BitmapData;\n\tprivate _depthMapSize:number /*int*/;\n\tprivate _range:number;\n\tprivate _numSamples:number /*int*/;\n\n\t/**\n\t * Creates a new ShadowDitheredMethod object.\n\t * @param castingLight The light casting the shadows\n\t * @param numSamples The amount of samples to take for dithering. Minimum 1, maximum 24.\n\t */\n\tconstructor(castingLight:DirectionalLight, numSamples:number /*int*/ = 4, range:number = 1)\n\t{\n\t\tsuper(castingLight);\n\n\t\tthis._depthMapSize = this._pCastingLight.shadowMapper.depthMapSize;\n\n\t\tthis.numSamples = numSamples;\n\t\tthis.range = range;\n\n\t\t++ShadowDitheredMethod._grainUsages;\n\n\t\tif (!ShadowDitheredMethod._grainTexture)\n\t\t\tthis.initGrainTexture();\n\t}\n\n\t/**\n\t * The amount of samples to take for dithering. Minimum 1, maximum 24. The actual maximum may depend on the\n\t * complexity of the shader.\n\t */\n\tpublic get numSamples():number /*int*/\n\t{\n\t\treturn this._numSamples;\n\t}\n\n\tpublic set numSamples(value:number /*int*/)\n\t{\n\t\tthis._numSamples = value;\n\t\tif (this._numSamples < 1)\n\t\t\tthis._numSamples = 1; else if (this._numSamples > 24)\n\t\t\tthis._numSamples = 24;\n\t\tthis.iInvalidateShaderProgram();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iInitVO(shaderObject:ShaderLightingObject, methodVO:MethodVO)\n\t{\n\t\tsuper.iInitVO(shaderObject, methodVO);\n\n\t\tmethodVO.needsProjection = true;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iInitConstants(shaderObject:ShaderObjectBase, methodVO:MethodVO)\n\t{\n\t\tsuper.iInitConstants(shaderObject, methodVO);\n\n\t\tvar fragmentData:Array<number> = shaderObject.fragmentConstantData;\n\t\tvar index:number /*int*/ = methodVO.fragmentConstantsIndex;\n\t\tfragmentData[index + 8] = 1/this._numSamples;\n\t}\n\n\t/**\n\t * The range in the shadow map in which to distribute the samples.\n\t */\n\tpublic get range():number\n\t{\n\t\treturn this._range*2;\n\t}\n\n\tpublic set range(value:number)\n\t{\n\t\tthis._range = value/2;\n\t}\n\n\t/**\n\t * Creates a texture containing the dithering noise texture.\n\t */\n\tprivate initGrainTexture()\n\t{\n\t\tShadowDitheredMethod._grainBitmapData = new BitmapData(64, 64, false);\n\t\tvar vec:Array<number> /*uint*/ = new Array<number>();\n\t\tvar len:number /*uint*/ = 4096;\n\t\tvar step:number = 1/(this._depthMapSize*this._range);\n\t\tvar r:number, g:number;\n\n\t\tfor (var i:number /*uint*/ = 0; i < len; ++i) {\n\t\t\tr = 2*(Math.random() - .5);\n\t\t\tg = 2*(Math.random() - .5);\n\t\t\tif (r < 0)\n\t\t\t\tr -= step; else\n\t\t\t\tr += step;\n\t\t\tif (g < 0)\n\t\t\t\tg -= step; else\n\t\t\t\tg += step;\n\t\t\tif (r > 1)\n\t\t\t\tr = 1; else if (r < -1)\n\t\t\t\tr = -1;\n\t\t\tif (g > 1)\n\t\t\t\tg = 1; else if (g < -1)\n\t\t\t\tg = -1;\n\t\t\tvec[i] = (Math.floor((r*.5 + .5)*0xff) << 16) | (Math.floor((g*.5 + .5)*0xff) << 8);\n\t\t}\n\n\t\tShadowDitheredMethod._grainBitmapData.setArray(ShadowDitheredMethod._grainBitmapData.rect, vec);\n\t\tShadowDitheredMethod._grainTexture = new BitmapTexture(ShadowDitheredMethod._grainBitmapData);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic dispose()\n\t{\n\t\tif (--ShadowDitheredMethod._grainUsages == 0) {\n\t\t\tShadowDitheredMethod._grainTexture.dispose();\n\t\t\tShadowDitheredMethod._grainBitmapData.dispose();\n\t\t\tShadowDitheredMethod._grainTexture = null;\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iActivate(shaderObject:ShaderObjectBase, methodVO:MethodVO, stage:Stage)\n\t{\n\t\tsuper.iActivate(shaderObject, methodVO, stage);\n\n\t\tvar data:Array<number> = shaderObject.fragmentConstantData;\n\t\tvar index:number /*uint*/ = methodVO.fragmentConstantsIndex;\n\t\tdata[index + 9] = (stage.width - 1)/63;\n\t\tdata[index + 10] = (stage.height - 1)/63;\n\t\tdata[index + 11] = 2*this._range/this._depthMapSize;\n\n\t\tstage.activateTexture(methodVO.texturesIndex + 1, ShadowDitheredMethod._grainTexture, shaderObject.repeatTextures, shaderObject.useSmoothTextures, shaderObject.useMipmapping);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pGetPlanarFragmentCode(methodVO:MethodVO, targetReg:ShaderRegisterElement, regCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tvar depthMapRegister:ShaderRegisterElement = regCache.getFreeTextureReg();\n\t\tvar decReg:ShaderRegisterElement = regCache.getFreeFragmentConstant();\n\t\tvar dataReg:ShaderRegisterElement = regCache.getFreeFragmentConstant();\n\t\tvar customDataReg:ShaderRegisterElement = regCache.getFreeFragmentConstant();\n\n\t\tmethodVO.fragmentConstantsIndex = decReg.index*4;\n\t\tmethodVO.texturesIndex = depthMapRegister.index;\n\n\t\treturn this.getSampleCode(customDataReg, depthMapRegister, decReg, targetReg, regCache, sharedRegisters);\n\t}\n\n\t/**\n\t * Get the actual shader code for shadow mapping\n\t * @param regCache The register cache managing the registers.\n\t * @param depthMapRegister The texture register containing the depth map.\n\t * @param decReg The register containing the depth map decoding data.\n\t * @param targetReg The target register to add the shadow coverage.\n\t */\n\tprivate getSampleCode(customDataReg:ShaderRegisterElement, depthMapRegister:ShaderRegisterElement, decReg:ShaderRegisterElement, targetReg:ShaderRegisterElement, regCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tvar code:string = \"\";\n\t\tvar grainRegister:ShaderRegisterElement = regCache.getFreeTextureReg();\n\t\tvar uvReg:ShaderRegisterElement = regCache.getFreeFragmentVectorTemp();\n\t\tvar numSamples:number /*int*/ = this._numSamples;\n\t\tregCache.addFragmentTempUsages(uvReg, 1);\n\n\t\tvar temp:ShaderRegisterElement = regCache.getFreeFragmentVectorTemp();\n\n\t\tvar projectionReg:ShaderRegisterElement = sharedRegisters.projectionFragment;\n\n\t\tcode += \"div \" + uvReg + \", \" + projectionReg + \", \" + projectionReg + \".w\\n\" + \"mul \" + uvReg + \".xy, \" + uvReg + \".xy, \" + customDataReg + \".yz\\n\";\n\n\t\twhile (numSamples > 0) {\n\t\t\tif (numSamples == this._numSamples)\n\t\t\t\tcode += \"tex \" + uvReg + \", \" + uvReg + \", \" + grainRegister + \" <2d,nearest,repeat,mipnone>\\n\";\n\t\t\telse\n\t\t\t\tcode += \"tex \" + uvReg + \", \" + uvReg + \".zwxy, \" + grainRegister + \" <2d,nearest,repeat,mipnone>\\n\";\n\n\t\t\t// keep grain in uvReg.zw\n\t\t\tcode += \"sub \" + uvReg + \".zw, \" + uvReg + \".xy, fc0.xx\\n\" + // uv-.5\n\t\t\t\t\"mul \" + uvReg + \".zw, \" + uvReg + \".zw, \" + customDataReg + \".w\\n\"; // (tex unpack scale and tex scale in one)\n\n\t\t\tif (numSamples == this._numSamples) {\n\t\t\t\t// first sample\n\t\t\t\tcode += \"add \" + uvReg + \".xy, \" + uvReg + \".zw, \" + this._pDepthMapCoordReg + \".xy\\n\" +\n\t\t\t\t\t\"tex \" + temp + \", \" + uvReg + \", \" + depthMapRegister + \" <2d,nearest,clamp,mipnone>\\n\" +\n\t\t\t\t\t\"dp4 \" + temp + \".z, \" + temp + \", \" + decReg + \"\\n\" +\n\t\t\t\t\t\"slt \" + targetReg + \".w, \" + this._pDepthMapCoordReg + \".z, \" + temp + \".z\\n\"; // 0 if in shadow\n\t\t\t} else {\n\t\t\t\tcode += this.addSample(uvReg, depthMapRegister, decReg, targetReg, regCache);\n\t\t\t}\n\n\t\t\tif (numSamples > 4)\n\t\t\t\tcode += \"add \" + uvReg + \".xy, \" + uvReg + \".xy, \" + uvReg + \".zw\\n\" + this.addSample(uvReg, depthMapRegister, decReg, targetReg, regCache);\n\n\t\t\tif (numSamples > 1)\n\t\t\t\tcode += \"sub \" + uvReg + \".xy, \" + this._pDepthMapCoordReg + \".xy, \" + uvReg + \".zw\\n\" + this.addSample(uvReg, depthMapRegister, decReg, targetReg, regCache);\n\n\t\t\tif (numSamples > 5)\n\t\t\t\tcode += \"sub \" + uvReg + \".xy, \" + uvReg + \".xy, \" + uvReg + \".zw\\n\" + this.addSample(uvReg, depthMapRegister, decReg, targetReg, regCache);\n\n\t\t\tif (numSamples > 2) {\n\t\t\t\tcode += \"neg \" + uvReg + \".w, \" + uvReg + \".w\\n\"; // will be rotated 90 degrees when being accessed as wz\n\t\t\t\tcode += \"add \" + uvReg + \".xy, \" + uvReg + \".wz, \" + this._pDepthMapCoordReg + \".xy\\n\" + this.addSample(uvReg, depthMapRegister, decReg, targetReg, regCache);\n\t\t\t}\n\n\t\t\tif (numSamples > 6)\n\t\t\t\tcode += \"add \" + uvReg + \".xy, \" + uvReg + \".xy, \" + uvReg + \".wz\\n\" + this.addSample(uvReg, depthMapRegister, decReg, targetReg, regCache);\n\n\t\t\tif (numSamples > 3)\n\t\t\t\tcode += \"sub \" + uvReg + \".xy, \" + this._pDepthMapCoordReg + \".xy, \" + uvReg + \".wz\\n\" + this.addSample(uvReg, depthMapRegister, decReg, targetReg, regCache);\n\n\t\t\tif (numSamples > 7)\n\t\t\t\tcode += \"sub \" + uvReg + \".xy, \" + uvReg + \".xy, \" + uvReg + \".wz\\n\" + this.addSample(uvReg, depthMapRegister, decReg, targetReg, regCache);\n\n\t\t\tnumSamples -= 8;\n\t\t}\n\n\t\tregCache.removeFragmentTempUsage(uvReg);\n\t\tcode += \"mul \" + targetReg + \".w, \" + targetReg + \".w, \" + customDataReg + \".x\\n\"; // average\n\t\treturn code;\n\t}\n\n\t/**\n\t * Adds the code for another tap to the shader code.\n\t * @param uvReg The uv register for the tap.\n\t * @param depthMapRegister The texture register containing the depth map.\n\t * @param decReg The register containing the depth map decoding data.\n\t * @param targetReg The target register to add the tap comparison result.\n\t * @param regCache The register cache managing the registers.\n\t * @return\n\t */\n\tprivate addSample(uvReg:ShaderRegisterElement, depthMapRegister:ShaderRegisterElement, decReg:ShaderRegisterElement, targetReg:ShaderRegisterElement, regCache:ShaderRegisterCache):string\n\t{\n\t\tvar temp:ShaderRegisterElement = regCache.getFreeFragmentVectorTemp();\n\n\t\treturn \"tex \" + temp + \", \" + uvReg + \", \" + depthMapRegister + \" <2d,nearest,clamp,mipnone>\\n\" +\n\t\t\t\"dp4 \" + temp + \".z, \" + temp + \", \" + decReg + \"\\n\" +\n\t\t\t\"slt \" + temp + \".z, \" + this._pDepthMapCoordReg + \".z, \" + temp + \".z\\n\" + // 0 if in shadow\n\t\t\t\"add \" + targetReg + \".w, \" + targetReg + \".w, \" + temp + \".z\\n\";\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iActivateForCascade(shaderObject:ShaderObjectBase, methodVO:MethodVO, stage:Stage)\n\t{\n\t\tvar data:Array<number> = shaderObject.fragmentConstantData;\n\t\tvar index:number /*uint*/ = methodVO.secondaryFragmentConstantsIndex;\n\t\tdata[index] = 1/this._numSamples;\n\t\tdata[index + 1] = (stage.width - 1)/63;\n\t\tdata[index + 2] = (stage.height - 1)/63;\n\t\tdata[index + 3] = 2*this._range/this._depthMapSize;\n\n\t\tstage.activateTexture(methodVO.texturesIndex + 1, ShadowDitheredMethod._grainTexture, shaderObject.repeatTextures, shaderObject.useSmoothTextures, shaderObject.useMipmapping);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGetCascadeFragmentCode(shaderObject:ShaderObjectBase, methodVO:MethodVO, decodeRegister:ShaderRegisterElement, depthTexture:ShaderRegisterElement, depthProjection:ShaderRegisterElement, targetRegister:ShaderRegisterElement, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tthis._pDepthMapCoordReg = depthProjection;\n\n\t\tvar dataReg:ShaderRegisterElement = registerCache.getFreeFragmentConstant();\n\t\tmethodVO.secondaryFragmentConstantsIndex = dataReg.index*4;\n\n\t\treturn this.getSampleCode(dataReg, depthTexture, decodeRegister, targetRegister, registerCache, sharedRegisters);\n\t}\n}\n\nexport = ShadowDitheredMethod;",
    "import DirectionalLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport ShaderLightingObject\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderLightingObject\");\nimport ShaderObjectBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderObjectBase\");\nimport ShaderRegisterCache\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterData\");\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterElement\");\n\nimport MethodVO\t\t\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/data/MethodVO\");\nimport ShadowMethodBase\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/ShadowMethodBase\");\n\n/**\n * ShadowFilteredMethod provides a softened shadowing technique by bilinearly interpolating shadow comparison\n * results of neighbouring pixels.\n */\nclass ShadowFilteredMethod extends ShadowMethodBase\n{\n\t/**\n\t * Creates a new DiffuseBasicMethod object.\n\t *\n\t * @param castingLight The light casting the shadow\n\t */\n\tconstructor(castingLight:DirectionalLight)\n\t{\n\t\tsuper(castingLight);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iInitConstants(shaderObject:ShaderLightingObject, methodVO:MethodVO)\n\t{\n\t\tsuper.iInitConstants(shaderObject, methodVO);\n\n\t\tvar fragmentData:Array<number> = shaderObject.fragmentConstantData;\n\t\tvar index:number /*int*/ = methodVO.fragmentConstantsIndex;\n\t\tfragmentData[index + 8] = .5;\n\t\tvar size:number /*int*/ = this.castingLight.shadowMapper.depthMapSize;\n\t\tfragmentData[index + 9] = size;\n\t\tfragmentData[index + 10] = 1/size;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pGetPlanarFragmentCode(methodVO:MethodVO, targetReg:ShaderRegisterElement, regCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tvar depthMapRegister:ShaderRegisterElement = regCache.getFreeTextureReg();\n\t\tvar decReg:ShaderRegisterElement = regCache.getFreeFragmentConstant();\n\t\tvar dataReg:ShaderRegisterElement = regCache.getFreeFragmentConstant();\n\t\t// TODO: not used\n\t\tdataReg = dataReg;\n\t\tvar customDataReg:ShaderRegisterElement = regCache.getFreeFragmentConstant();\n\t\tvar depthCol:ShaderRegisterElement = regCache.getFreeFragmentVectorTemp();\n\t\tvar uvReg:ShaderRegisterElement;\n\t\tvar code:string = \"\";\n\t\tmethodVO.fragmentConstantsIndex = decReg.index*4;\n\n\t\tregCache.addFragmentTempUsages(depthCol, 1);\n\n\t\tuvReg = regCache.getFreeFragmentVectorTemp();\n\t\tregCache.addFragmentTempUsages(uvReg, 1);\n\n\t\tcode += \"mov \" + uvReg + \", \" + this._pDepthMapCoordReg + \"\\n\" +\n\n\t\t\t\"tex \" + depthCol + \", \" + this._pDepthMapCoordReg + \", \" + depthMapRegister + \" <2d, nearest, clamp>\\n\" + \"dp4 \" + depthCol + \".z, \" + depthCol + \", \" + decReg + \"\\n\" + \"slt \" + uvReg + \".z, \" + this._pDepthMapCoordReg + \".z, \" + depthCol + \".z\\n\" +   // 0 if in shadow\n\n\t\t\t\"add \" + uvReg + \".x, \" + this._pDepthMapCoordReg + \".x, \" + customDataReg + \".z\\n\" + \t// (1, 0)\n\t\t\t\"tex \" + depthCol + \", \" + uvReg + \", \" + depthMapRegister + \" <2d, nearest, clamp>\\n\" + \"dp4 \" + depthCol + \".z, \" + depthCol + \", \" + decReg + \"\\n\" + \"slt \" + uvReg + \".w, \" + this._pDepthMapCoordReg + \".z, \" + depthCol + \".z\\n\" +   // 0 if in shadow\n\n\t\t\t\"mul \" + depthCol + \".x, \" + this._pDepthMapCoordReg + \".x, \" + customDataReg + \".y\\n\" + \"frc \" + depthCol + \".x, \" + depthCol + \".x\\n\" + \"sub \" + uvReg + \".w, \" + uvReg + \".w, \" + uvReg + \".z\\n\" + \"mul \" + uvReg + \".w, \" + uvReg + \".w, \" + depthCol + \".x\\n\" + \"add \" + targetReg + \".w, \" + uvReg + \".z, \" + uvReg + \".w\\n\" +\n\n\t\t\t\"mov \" + uvReg + \".x, \" + this._pDepthMapCoordReg + \".x\\n\" + \"add \" + uvReg + \".y, \" + this._pDepthMapCoordReg + \".y, \" + customDataReg + \".z\\n\" +\t// (0, 1)\n\t\t\t\"tex \" + depthCol + \", \" + uvReg + \", \" + depthMapRegister + \" <2d, nearest, clamp>\\n\" + \"dp4 \" + depthCol + \".z, \" + depthCol + \", \" + decReg + \"\\n\" + \"slt \" + uvReg + \".z, \" + this._pDepthMapCoordReg + \".z, \" + depthCol + \".z\\n\" +   // 0 if in shadow\n\n\t\t\t\"add \" + uvReg + \".x, \" + this._pDepthMapCoordReg + \".x, \" + customDataReg + \".z\\n\" +\t// (1, 1)\n\t\t\t\"tex \" + depthCol + \", \" + uvReg + \", \" + depthMapRegister + \" <2d, nearest, clamp>\\n\" + \"dp4 \" + depthCol + \".z, \" + depthCol + \", \" + decReg + \"\\n\" + \"slt \" + uvReg + \".w, \" + this._pDepthMapCoordReg + \".z, \" + depthCol + \".z\\n\" +   // 0 if in shadow\n\n\t\t\t// recalculate fraction, since we ran out of registers :(\n\t\t\t\"mul \" + depthCol + \".x, \" + this._pDepthMapCoordReg + \".x, \" + customDataReg + \".y\\n\" + \"frc \" + depthCol + \".x, \" + depthCol + \".x\\n\" + \"sub \" + uvReg + \".w, \" + uvReg + \".w, \" + uvReg + \".z\\n\" + \"mul \" + uvReg + \".w, \" + uvReg + \".w, \" + depthCol + \".x\\n\" + \"add \" + uvReg + \".w, \" + uvReg + \".z, \" + uvReg + \".w\\n\" +\n\n\t\t\t\"mul \" + depthCol + \".x, \" + this._pDepthMapCoordReg + \".y, \" + customDataReg + \".y\\n\" + \"frc \" + depthCol + \".x, \" + depthCol + \".x\\n\" + \"sub \" + uvReg + \".w, \" + uvReg + \".w, \" + targetReg + \".w\\n\" + \"mul \" + uvReg + \".w, \" + uvReg + \".w, \" + depthCol + \".x\\n\" + \"add \" + targetReg + \".w, \" + targetReg + \".w, \" + uvReg + \".w\\n\";\n\n\t\tregCache.removeFragmentTempUsage(depthCol);\n\t\tregCache.removeFragmentTempUsage(uvReg);\n\n\t\tmethodVO.texturesIndex = depthMapRegister.index;\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iActivateForCascade(shaderObject:ShaderObjectBase, methodVO:MethodVO, stage:Stage)\n\t{\n\t\tvar size:number /*int*/ = this.castingLight.shadowMapper.depthMapSize;\n\t\tvar index:number /*int*/ = methodVO.secondaryFragmentConstantsIndex;\n\t\tvar data:Array<number> = shaderObject.fragmentConstantData;\n\t\tdata[index] = size;\n\t\tdata[index + 1] = 1/size;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGetCascadeFragmentCode(shaderObject:ShaderObjectBase, methodVO:MethodVO, decodeRegister:ShaderRegisterElement, depthTexture:ShaderRegisterElement, depthProjection:ShaderRegisterElement, targetRegister:ShaderRegisterElement, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tvar code:string;\n\t\tvar dataReg:ShaderRegisterElement = registerCache.getFreeFragmentConstant();\n\t\tmethodVO.secondaryFragmentConstantsIndex = dataReg.index*4;\n\t\tvar temp:ShaderRegisterElement = registerCache.getFreeFragmentVectorTemp();\n\t\tregisterCache.addFragmentTempUsages(temp, 1);\n\t\tvar predicate:ShaderRegisterElement = registerCache.getFreeFragmentVectorTemp();\n\t\tregisterCache.addFragmentTempUsages(predicate, 1);\n\n\t\tcode = \"tex \" + temp + \", \" + depthProjection + \", \" + depthTexture + \" <2d, nearest, clamp>\\n\" + \"dp4 \" + temp + \".z, \" + temp + \", \" + decodeRegister + \"\\n\" + \"slt \" + predicate + \".x, \" + depthProjection + \".z, \" + temp + \".z\\n\" +\n\n\t\t\t\"add \" + depthProjection + \".x, \" + depthProjection + \".x, \" + dataReg + \".y\\n\" + \"tex \" + temp + \", \" + depthProjection + \", \" + depthTexture + \" <2d, nearest, clamp>\\n\" + \"dp4 \" + temp + \".z, \" + temp + \", \" + decodeRegister + \"\\n\" + \"slt \" + predicate + \".z, \" + depthProjection + \".z, \" + temp + \".z\\n\" +\n\n\t\t\t\"add \" + depthProjection + \".y, \" + depthProjection + \".y, \" + dataReg + \".y\\n\" + \"tex \" + temp + \", \" + depthProjection + \", \" + depthTexture + \" <2d, nearest, clamp>\\n\" + \"dp4 \" + temp + \".z, \" + temp + \", \" + decodeRegister + \"\\n\" + \"slt \" + predicate + \".w, \" + depthProjection + \".z, \" + temp + \".z\\n\" +\n\n\t\t\t\"sub \" + depthProjection + \".x, \" + depthProjection + \".x, \" + dataReg + \".y\\n\" + \"tex \" + temp + \", \" + depthProjection + \", \" + depthTexture + \" <2d, nearest, clamp>\\n\" + \"dp4 \" + temp + \".z, \" + temp + \", \" + decodeRegister + \"\\n\" + \"slt \" + predicate + \".y, \" + depthProjection + \".z, \" + temp + \".z\\n\" +\n\n\t\t\t\"mul \" + temp + \".xy, \" + depthProjection + \".xy, \" + dataReg + \".x\\n\" + \"frc \" + temp + \".xy, \" + temp + \".xy\\n\" +\n\n\t\t\t// some strange register juggling to prevent agal bugging out\n\t\t\t\"sub \" + depthProjection + \", \" + predicate + \".xyzw, \" + predicate + \".zwxy\\n\" + \"mul \" + depthProjection + \", \" + depthProjection + \", \" + temp + \".x\\n\" +\n\n\t\t\t\"add \" + predicate + \".xy, \" + predicate + \".xy, \" + depthProjection + \".zw\\n\" +\n\n\t\t\t\"sub \" + predicate + \".y, \" + predicate + \".y, \" + predicate + \".x\\n\" + \"mul \" + predicate + \".y, \" + predicate + \".y, \" + temp + \".y\\n\" + \"add \" + targetRegister + \".w, \" + predicate + \".x, \" + predicate + \".y\\n\";\n\n\t\tregisterCache.removeFragmentTempUsage(temp);\n\t\tregisterCache.removeFragmentTempUsage(predicate);\n\t\treturn code;\n\t}\n}\n\nexport = ShadowFilteredMethod;",
    "import LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\n\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport ShaderObjectBase\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderObjectBase\");\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterData\");\nimport ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterElement\");\n\nimport MethodVO\t\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/data/MethodVO\");\nimport ShadowMethodBase\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/ShadowMethodBase\");\n\n/**\n * ShadowHardMethod provides the cheapest shadow map method by using a single tap without any filtering.\n */\nclass ShadowHardMethod extends ShadowMethodBase\n{\n\t/**\n\t * Creates a new ShadowHardMethod object.\n\t */\n\tconstructor(castingLight:LightBase)\n\t{\n\t\tsuper(castingLight);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pGetPlanarFragmentCode(methodVO:MethodVO, targetReg:ShaderRegisterElement, regCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tvar depthMapRegister:ShaderRegisterElement = regCache.getFreeTextureReg();\n\t\tvar decReg:ShaderRegisterElement = regCache.getFreeFragmentConstant();\n\n\t\t// needs to be reserved anyway. DO NOT REMOVE\n\t\tvar dataReg:ShaderRegisterElement = regCache.getFreeFragmentConstant();\n\n\t\tvar depthCol:ShaderRegisterElement = regCache.getFreeFragmentVectorTemp();\n\t\tvar code:string = \"\";\n\n\t\tmethodVO.fragmentConstantsIndex = decReg.index*4;\n\t\tmethodVO.texturesIndex = depthMapRegister.index;\n\n\t\tcode += \"tex \" + depthCol + \", \" + this._pDepthMapCoordReg + \", \" + depthMapRegister + \" <2d, nearest, clamp>\\n\" +\n\t\t\t\"dp4 \" + depthCol + \".z, \" + depthCol + \", \" + decReg + \"\\n\" +\n\t\t\t\"slt \" + targetReg + \".w, \" + this._pDepthMapCoordReg + \".z, \" + depthCol + \".z\\n\"; // 0 if in shadow\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pGetPointFragmentCode(methodVO:MethodVO, targetReg:ShaderRegisterElement, regCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tvar depthMapRegister:ShaderRegisterElement = regCache.getFreeTextureReg();\n\t\tvar decReg:ShaderRegisterElement = regCache.getFreeFragmentConstant();\n\t\tvar epsReg:ShaderRegisterElement = regCache.getFreeFragmentConstant();\n\t\tvar posReg:ShaderRegisterElement = regCache.getFreeFragmentConstant();\n\t\tvar depthSampleCol:ShaderRegisterElement = regCache.getFreeFragmentVectorTemp();\n\t\tregCache.addFragmentTempUsages(depthSampleCol, 1);\n\t\tvar lightDir:ShaderRegisterElement = regCache.getFreeFragmentVectorTemp();\n\t\tvar code:string = \"\";\n\n\t\tmethodVO.fragmentConstantsIndex = decReg.index*4;\n\t\tmethodVO.texturesIndex = depthMapRegister.index;\n\n\t\tcode += \"sub \" + lightDir + \", \" + sharedRegisters.globalPositionVarying + \", \" + posReg + \"\\n\" +\n\t\t\t\"dp3 \" + lightDir + \".w, \" + lightDir + \".xyz, \" + lightDir + \".xyz\\n\" +\n\t\t\t\"mul \" + lightDir + \".w, \" + lightDir + \".w, \" + posReg + \".w\\n\" +\n\t\t\t\"nrm \" + lightDir + \".xyz, \" + lightDir + \".xyz\\n\" +\n\n\t\t\t\"tex \" + depthSampleCol + \", \" + lightDir + \", \" + depthMapRegister + \" <cube, nearest, clamp>\\n\" +\n\t\t\t\"dp4 \" + depthSampleCol + \".z, \" + depthSampleCol + \", \" + decReg + \"\\n\" +\n\t\t\t\"add \" + targetReg + \".w, \" + lightDir + \".w, \" + epsReg + \".x\\n\" +    // offset by epsilon\n\n\t\t\t\"slt \" + targetReg + \".w, \" + targetReg + \".w, \" + depthSampleCol + \".z\\n\"; // 0 if in shadow\n\n\t\tregCache.removeFragmentTempUsage(depthSampleCol);\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGetCascadeFragmentCode(shaderObject:ShaderObjectBase, methodVO:MethodVO, decodeRegister:ShaderRegisterElement, depthTexture:ShaderRegisterElement, depthProjection:ShaderRegisterElement, targetRegister:ShaderRegisterElement, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tvar temp:ShaderRegisterElement = registerCache.getFreeFragmentVectorTemp();\n\t\treturn \"tex \" + temp + \", \" + depthProjection + \", \" + depthTexture + \" <2d, nearest, clamp>\\n\" +\n\t\t\t\"dp4 \" + temp + \".z, \" + temp + \", \" + decodeRegister + \"\\n\" +\n\t\t\t\"slt \" + targetRegister + \".w, \" + depthProjection + \".z, \" + temp + \".z\\n\"; // 0 if in shadow\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iActivateForCascade(shaderObject:ShaderObjectBase, methodVO:MethodVO, stage:Stage)\n\t{\n\t}\n}\n\nexport = ShadowHardMethod;",
    "import IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\nimport ShadowMapperBase\t\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/ShadowMapperBase\");\n\nimport ShadingMethodBase\t\t\t= require(\"awayjs-methodmaterials/lib/methods/ShadingMethodBase\");\n\n/**\n * ShadowMapMethodBase provides an abstract base method for shadow map methods.\n */\nclass ShadowMapMethodBase extends ShadingMethodBase implements IAsset\n{\n\tpublic static assetType:string = \"[asset ShadowMapMethod]\";\n\n\tpublic _pCastingLight:LightBase;\n\tpublic _pShadowMapper:ShadowMapperBase;\n\n\tpublic _pEpsilon:number = .02;\n\tpublic _pAlpha:number = 1;\n\n\t/**\n\t * Creates a new ShadowMapMethodBase object.\n\t * @param castingLight The light used to cast shadows.\n\t */\n\tconstructor(castingLight:LightBase)\n\t{\n\t\tsuper();\n\t\tthis._pCastingLight = castingLight;\n\t\tcastingLight.castsShadows = true;\n\t\tthis._pShadowMapper = castingLight.shadowMapper;\n\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn ShadowMapMethodBase.assetType;\n\t}\n\n\t/**\n\t * The \"transparency\" of the shadows. This allows making shadows less strong.\n\t */\n\tpublic get alpha():number\n\t{\n\t\treturn this._pAlpha;\n\t}\n\n\tpublic set alpha(value:number)\n\t{\n\t\tthis._pAlpha = value;\n\t}\n\n\t/**\n\t * The light casting the shadows.\n\t */\n\tpublic get castingLight():LightBase\n\t{\n\t\treturn this._pCastingLight;\n\t}\n\n\t/**\n\t * A small value to counter floating point precision errors when comparing values in the shadow map with the\n\t * calculated depth value. Increase this if shadow banding occurs, decrease it if the shadow seems to be too detached.\n\t */\n\tpublic get epsilon():number\n\t{\n\t\treturn this._pEpsilon;\n\t}\n\n\tpublic set epsilon(value:number)\n\t{\n\t\tthis._pEpsilon = value;\n\t}\n}\n\nexport = ShadowMapMethodBase;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport CubeTextureBase\t\t\t\t= require(\"awayjs-core/lib/textures/CubeTextureBase\");\nimport Texture2DBase\t\t\t\t= require(\"awayjs-core/lib/textures/Texture2DBase\");\n\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\nimport DirectionalShadowMapper\t\t= require(\"awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper\");\n\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport RenderableBase\t\t\t\t= require(\"awayjs-renderergl/lib/pool/RenderableBase\");\nimport ShaderLightingObject\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderLightingObject\");\nimport ShaderObjectBase\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderObjectBase\");\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterData\");\nimport ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterElement\");\n\nimport MethodVO\t\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/data/MethodVO\");\nimport ShadowMapMethodBase\t\t\t= require(\"awayjs-methodmaterials/lib/methods/ShadowMapMethodBase\");\n\n/**\n * ShadowMethodBase provides an abstract method for simple (non-wrapping) shadow map methods.\n */\nclass ShadowMethodBase extends ShadowMapMethodBase\n{\n\tpublic _pDepthMapCoordReg:ShaderRegisterElement;\n\tpublic _pUsePoint:boolean;\n\n\t/**\n\t * Creates a new ShadowMethodBase object.\n\t * @param castingLight The light used to cast shadows.\n\t */\n\tconstructor(castingLight:LightBase)\n\t{\n\t\tthis._pUsePoint = (castingLight instanceof PointLight);\n\n\t\tsuper(castingLight);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iInitVO(shaderObject:ShaderLightingObject, methodVO:MethodVO)\n\t{\n\t\tmethodVO.needsView = true;\n\t\tmethodVO.needsGlobalVertexPos = true;\n\t\tmethodVO.needsGlobalFragmentPos = this._pUsePoint;\n\t\tmethodVO.needsNormals = shaderObject.numLights > 0;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iInitConstants(shaderObject:ShaderObjectBase, methodVO:MethodVO)\n\t{\n\t\tvar fragmentData:Array<number> = shaderObject.fragmentConstantData;\n\t\tvar vertexData:Array<number> = shaderObject.vertexConstantData;\n\t\tvar index:number /*int*/ = methodVO.fragmentConstantsIndex;\n\t\tfragmentData[index] = 1.0;\n\t\tfragmentData[index + 1] = 1/255.0;\n\t\tfragmentData[index + 2] = 1/65025.0;\n\t\tfragmentData[index + 3] = 1/16581375.0;\n\n\t\tfragmentData[index + 6] = 0;\n\t\tfragmentData[index + 7] = 1;\n\n\t\tif (this._pUsePoint) {\n\t\t\tfragmentData[index + 8] = 0;\n\t\t\tfragmentData[index + 9] = 0;\n\t\t\tfragmentData[index + 10] = 0;\n\t\t\tfragmentData[index + 11] = 1;\n\t\t}\n\n\t\tindex = methodVO.vertexConstantsIndex;\n\t\tif (index != -1) {\n\t\t\tvertexData[index] = .5;\n\t\t\tvertexData[index + 1] = .5;\n\t\t\tvertexData[index + 2] = 0.0;\n\t\t\tvertexData[index + 3] = 1.0;\n\t\t}\n\t}\n\n\t/**\n\t * Wrappers that override the vertex shader need to set this explicitly\n\t */\n\tpublic get _iDepthMapCoordReg():ShaderRegisterElement\n\t{\n\t\treturn this._pDepthMapCoordReg;\n\t}\n\n\tpublic set _iDepthMapCoordReg(value:ShaderRegisterElement)\n\t{\n\t\tthis._pDepthMapCoordReg = value;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iCleanCompilationData()\n\t{\n\t\tsuper.iCleanCompilationData();\n\n\t\tthis._pDepthMapCoordReg = null;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iGetVertexCode(shaderObject:ShaderObjectBase, methodVO:MethodVO, regCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn this._pUsePoint? this._pGetPointVertexCode(methodVO, regCache, sharedRegisters):this.pGetPlanarVertexCode(methodVO, regCache, sharedRegisters);\n\t}\n\n\t/**\n\t * Gets the vertex code for shadow mapping with a point light.\n\t *\n\t * @param methodVO The MethodVO object linking this method with the pass currently being compiled.\n\t * @param regCache The register cache used during the compilation.\n\t */\n\tpublic _pGetPointVertexCode(methodVO:MethodVO, regCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tmethodVO.vertexConstantsIndex = -1;\n\t\treturn \"\";\n\t}\n\n\t/**\n\t * Gets the vertex code for shadow mapping with a planar shadow map (fe: directional lights).\n\t *\n\t * @param methodVO The MethodVO object linking this method with the pass currently being compiled.\n\t * @param regCache The register cache used during the compilation.\n\t */\n\tpublic pGetPlanarVertexCode(methodVO:MethodVO, regCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tvar code:string = \"\";\n\t\tvar temp:ShaderRegisterElement = regCache.getFreeVertexVectorTemp();\n\t\tvar dataReg:ShaderRegisterElement = regCache.getFreeVertexConstant();\n\t\tvar depthMapProj:ShaderRegisterElement = regCache.getFreeVertexConstant();\n\t\tregCache.getFreeVertexConstant();\n\t\tregCache.getFreeVertexConstant();\n\t\tregCache.getFreeVertexConstant();\n\t\tthis._pDepthMapCoordReg = regCache.getFreeVarying();\n\t\tmethodVO.vertexConstantsIndex = dataReg.index*4;\n\n\t\t// todo: can epsilon be applied here instead of fragment shader?\n\n\t\tcode += \"m44 \" + temp + \", \" + sharedRegisters.globalPositionVertex + \", \" + depthMapProj + \"\\n\" + \"div \" + temp + \", \" + temp + \", \" + temp + \".w\\n\" + \"mul \" + temp + \".xy, \" + temp + \".xy, \" + dataReg + \".xy\\n\" + \"add \" + this._pDepthMapCoordReg + \", \" + temp + \", \" + dataReg + \".xxwz\\n\";\n\t\t//\"sub \" + this._pDepthMapCoordReg + \".z, \" + this._pDepthMapCoordReg + \".z, \" + this._pDepthMapCoordReg + \".w\\n\";\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iGetFragmentCode(shaderObject:ShaderObjectBase, methodVO:MethodVO, targetReg:ShaderRegisterElement, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tvar code:string = this._pUsePoint? this._pGetPointFragmentCode(methodVO, targetReg, registerCache, sharedRegisters):this._pGetPlanarFragmentCode(methodVO, targetReg, registerCache, sharedRegisters);\n\t\tcode += \"add \" + targetReg + \".w, \" + targetReg + \".w, fc\" + (methodVO.fragmentConstantsIndex/4 + 1) + \".y\\n\" + \"sat \" + targetReg + \".w, \" + targetReg + \".w\\n\";\n\t\treturn code;\n\t}\n\n\t/**\n\t * Gets the fragment code for shadow mapping with a planar shadow map.\n\t * @param methodVO The MethodVO object linking this method with the pass currently being compiled.\n\t * @param regCache The register cache used during the compilation.\n\t * @param targetReg The register to contain the shadow coverage\n\t * @return\n\t */\n\tpublic _pGetPlanarFragmentCode(methodVO:MethodVO, targetReg:ShaderRegisterElement, regCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tthrow new AbstractMethodError();\n\t\treturn \"\";\n\t}\n\n\t/**\n\t * Gets the fragment code for shadow mapping with a point light.\n\t * @param methodVO The MethodVO object linking this method with the pass currently being compiled.\n\t * @param regCache The register cache used during the compilation.\n\t * @param targetReg The register to contain the shadow coverage\n\t * @return\n\t */\n\tpublic _pGetPointFragmentCode(methodVO:MethodVO, targetReg:ShaderRegisterElement, regCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tthrow new AbstractMethodError();\n\t\treturn \"\";\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iSetRenderState(shaderObject:ShaderObjectBase, methodVO:MethodVO, renderable:RenderableBase, stage:Stage, camera:Camera)\n\t{\n\t\tif (!this._pUsePoint)\n\t\t\t(<DirectionalShadowMapper> this._pShadowMapper).iDepthProjection.copyRawDataTo(shaderObject.vertexConstantData, methodVO.vertexConstantsIndex + 4, true);\n\t}\n\n\t/**\n\t * Gets the fragment code for combining this method with a cascaded shadow map method.\n\t * @param methodVO The MethodVO object linking this method with the pass currently being compiled.\n\t * @param regCache The register cache used during the compilation.\n\t * @param decodeRegister The register containing the data to decode the shadow map depth value.\n\t * @param depthTexture The texture containing the shadow map.\n\t * @param depthProjection The projection of the fragment relative to the light.\n\t * @param targetRegister The register to contain the shadow coverage\n\t * @return\n\t */\n\tpublic _iGetCascadeFragmentCode(shaderObject:ShaderObjectBase, methodVO:MethodVO, decodeRegister:ShaderRegisterElement, depthTexture:ShaderRegisterElement, depthProjection:ShaderRegisterElement, targetRegister:ShaderRegisterElement, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tthrow new Error(\"This shadow method is incompatible with cascade shadows\");\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iActivate(shaderObject:ShaderObjectBase, methodVO:MethodVO, stage:Stage)\n\t{\n\t\tvar fragmentData:Array<number> = shaderObject.fragmentConstantData;\n\t\tvar index:number /*int*/ = methodVO.fragmentConstantsIndex;\n\n\t\tif (this._pUsePoint)\n\t\t\tfragmentData[index + 4] = -Math.pow(1/((<PointLight> this._pCastingLight).fallOff*this._pEpsilon), 2);\n\t\telse\n\t\t\tshaderObject.vertexConstantData[methodVO.vertexConstantsIndex + 3] = -1/((<DirectionalShadowMapper> this._pShadowMapper).depth*this._pEpsilon);\n\n\t\tfragmentData[index + 5] = 1 - this._pAlpha;\n\n\t\tif (this._pUsePoint) {\n\t\t\tvar pos:Vector3D = this._pCastingLight.scenePosition;\n\t\t\tfragmentData[index + 8] = pos.x;\n\t\t\tfragmentData[index + 9] = pos.y;\n\t\t\tfragmentData[index + 10] = pos.z;\n\t\t\t// used to decompress distance\n\t\t\tvar f:number = (<PointLight> this._pCastingLight).fallOff;\n\t\t\tfragmentData[index + 11] = 1/(2*f*f);\n\t\t}\n\n\t\tif (!this._pUsePoint)\n\t\t\tstage.activateRenderTexture(methodVO.texturesIndex, <Texture2DBase> this._pCastingLight.shadowMapper.depthMap);\n\t\t//else\n\t\t//\tstage.activateCubeRenderTexture(methodVO.texturesIndex, <CubeTextureBase> this._pCastingLight.shadowMapper.depthMap);\n\t}\n\n\t/**\n\t * Sets the method state for cascade shadow mapping.\n\t */\n\tpublic iActivateForCascade(shaderObject:ShaderObjectBase, methodVO:MethodVO, stage:Stage)\n\t{\n\t\tthrow new Error(\"This shadow method is incompatible with cascade shadows\");\n\t}\n}\n\nexport = ShadowMethodBase;",
    "import NearDirectionalShadowMapper\t\t= require(\"awayjs-display/lib/materials/shadowmappers/NearDirectionalShadowMapper\");\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport RenderableBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/pool/RenderableBase\");\nimport ShadingMethodEvent\t\t\t\t= require(\"awayjs-renderergl/lib/events/ShadingMethodEvent\");\nimport ShaderLightingObject\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderLightingObject\");\nimport ShaderObjectBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderObjectBase\");\nimport ShaderRegisterCache\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterData\");\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterElement\");\n\nimport MethodVO\t\t\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/data/MethodVO\");\nimport ShadowMethodBase\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/ShadowMethodBase\");\n\n// TODO: shadow mappers references in materials should be an interface so that this class should NOT extend ShadowMapMethodBase just for some delegation work\n/**\n * ShadowNearMethod provides a shadow map method that restricts the shadowed area near the camera to optimize\n * shadow map usage. This method needs to be used in conjunction with a NearDirectionalShadowMapper.\n *\n * @see away.lights.NearDirectionalShadowMapper\n */\nclass ShadowNearMethod extends ShadowMethodBase\n{\n\tprivate _baseMethod:ShadowMethodBase;\n\n\tprivate _fadeRatio:number;\n\tprivate _nearShadowMapper:NearDirectionalShadowMapper;\n\n\tprivate _onShaderInvalidatedDelegate:Function;\n\n\t/**\n\t * Creates a new ShadowNearMethod object.\n\t * @param baseMethod The shadow map sampling method used to sample individual cascades (fe: ShadowHardMethod, ShadowSoftMethod)\n\t * @param fadeRatio The amount of shadow fading to the outer shadow area. A value of 1 would mean the shadows start fading from the camera's near plane.\n\t */\n\tconstructor(baseMethod:ShadowMethodBase, fadeRatio:number = .1)\n\t{\n\t\tsuper(baseMethod.castingLight);\n\n\t\tthis._onShaderInvalidatedDelegate = (event:ShadingMethodEvent) => this.onShaderInvalidated(event);\n\n\t\tthis._baseMethod = baseMethod;\n\t\tthis._fadeRatio = fadeRatio;\n\t\tthis._nearShadowMapper = <NearDirectionalShadowMapper> this._pCastingLight.shadowMapper;\n\t\tif (!this._nearShadowMapper)\n\t\t\tthrow new Error(\"ShadowNearMethod requires a light that has a NearDirectionalShadowMapper instance assigned to shadowMapper.\");\n\t\tthis._baseMethod.addEventListener(ShadingMethodEvent.SHADER_INVALIDATED, this._onShaderInvalidatedDelegate);\n\t}\n\n\t/**\n\t * The base shadow map method on which this method's shading is based.\n\t */\n\tpublic get baseMethod():ShadowMethodBase\n\t{\n\t\treturn this._baseMethod;\n\t}\n\n\tpublic set baseMethod(value:ShadowMethodBase)\n\t{\n\t\tif (this._baseMethod == value)\n\t\t\treturn;\n\n\t\tthis._baseMethod.removeEventListener(ShadingMethodEvent.SHADER_INVALIDATED, this._onShaderInvalidatedDelegate);\n\n\t\tthis._baseMethod = value;\n\n\t\tthis._baseMethod.addEventListener(ShadingMethodEvent.SHADER_INVALIDATED, this._onShaderInvalidatedDelegate);\n\n\t\tthis.iInvalidateShaderProgram();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iInitConstants(shaderObject:ShaderObjectBase, methodVO:MethodVO)\n\t{\n\t\tsuper.iInitConstants(shaderObject, methodVO);\n\t\tthis._baseMethod.iInitConstants(shaderObject, methodVO);\n\n\t\tvar fragmentData:Array<number> = shaderObject.fragmentConstantData;\n\t\tvar index:number /*int*/ = methodVO.secondaryFragmentConstantsIndex;\n\t\tfragmentData[index + 2] = 0;\n\t\tfragmentData[index + 3] = 1;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iInitVO(shaderObject:ShaderLightingObject, methodVO:MethodVO)\n\t{\n\t\tthis._baseMethod.iInitVO(shaderObject, methodVO);\n\n\t\tmethodVO.needsProjection = true;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic dispose()\n\t{\n\t\tthis._baseMethod.removeEventListener(ShadingMethodEvent.SHADER_INVALIDATED, this._onShaderInvalidatedDelegate);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get alpha():number\n\t{\n\t\treturn this._baseMethod.alpha;\n\t}\n\n\tpublic set alpha(value:number)\n\t{\n\t\tthis._baseMethod.alpha = value;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get epsilon():number\n\t{\n\t\treturn this._baseMethod.epsilon;\n\t}\n\n\tpublic set epsilon(value:number)\n\t{\n\t\tthis._baseMethod.epsilon = value;\n\t}\n\n\t/**\n\t * The amount of shadow fading to the outer shadow area. A value of 1 would mean the shadows start fading from the camera's near plane.\n\t */\n\tpublic get fadeRatio():number\n\t{\n\t\treturn this._fadeRatio;\n\t}\n\n\tpublic set fadeRatio(value:number)\n\t{\n\t\tthis._fadeRatio = value;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iGetFragmentCode(shaderObject:ShaderObjectBase, methodVO:MethodVO, targetReg:ShaderRegisterElement, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tvar code:string = this._baseMethod.iGetFragmentCode(shaderObject, methodVO, targetReg, registerCache, sharedRegisters);\n\n\t\tvar dataReg:ShaderRegisterElement = registerCache.getFreeFragmentConstant();\n\t\tvar temp:ShaderRegisterElement = registerCache.getFreeFragmentSingleTemp();\n\t\tmethodVO.secondaryFragmentConstantsIndex = dataReg.index*4;\n\n\t\tcode += \"abs \" + temp + \", \" + sharedRegisters.projectionFragment + \".w\\n\" +\n\t\t\t\"sub \" + temp + \", \" + temp + \", \" + dataReg + \".x\\n\" +\n\t\t\t\"mul \" + temp + \", \" + temp + \", \" + dataReg + \".y\\n\" +\n\t\t\t\"sat \" + temp + \", \" + temp + \"\\n\" +\n\t\t\t\"sub \" + temp + \", \" + dataReg + \".w,\" + temp + \"\\n\" +\n\t\t\t\"sub \" + targetReg + \".w, \" + dataReg + \".w,\" + targetReg + \".w\\n\" +\n\t\t\t\"mul \" + targetReg + \".w, \" + targetReg + \".w, \" + temp + \"\\n\" +\n\t\t\t\"sub \" + targetReg + \".w, \" + dataReg + \".w,\" + targetReg + \".w\\n\";\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iActivate(shaderObject:ShaderObjectBase, methodVO:MethodVO, stage:Stage)\n\t{\n\t\tthis._baseMethod.iActivate(shaderObject, methodVO, stage);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iDeactivate(shaderObject:ShaderObjectBase, methodVO:MethodVO, stage:Stage)\n\t{\n\t\tthis._baseMethod.iDeactivate(shaderObject, methodVO, stage);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iSetRenderState(shaderObject:ShaderObjectBase, methodVO:MethodVO, renderable:RenderableBase, stage:Stage, camera:Camera)\n\t{\n\t\t// todo: move this to activate (needs camera)\n\t\tvar near:number = camera.projection.near;\n\t\tvar d:number = camera.projection.far - near;\n\t\tvar maxDistance:number = this._nearShadowMapper.coverageRatio;\n\t\tvar minDistance:number = maxDistance*(1 - this._fadeRatio);\n\n\t\tmaxDistance = near + maxDistance*d;\n\t\tminDistance = near + minDistance*d;\n\n\t\tvar fragmentData:Array<number> = shaderObject.fragmentConstantData;\n\t\tvar index:number /*int*/ = methodVO.secondaryFragmentConstantsIndex;\n\t\tfragmentData[index] = minDistance;\n\t\tfragmentData[index + 1] = 1/(maxDistance - minDistance);\n\n\t\tthis._baseMethod.iSetRenderState(shaderObject, methodVO, renderable, stage, camera);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iGetVertexCode(shaderObject:ShaderObjectBase, methodVO:MethodVO, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn this._baseMethod.iGetVertexCode(shaderObject, methodVO, registerCache, sharedRegisters);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iReset()\n\t{\n\t\tthis._baseMethod.iReset();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iCleanCompilationData()\n\t{\n\t\tsuper.iCleanCompilationData();\n\t\tthis._baseMethod.iCleanCompilationData();\n\t}\n\n\t/**\n\t * Called when the base method's shader code is invalidated.\n\t */\n\tprivate onShaderInvalidated(event:ShadingMethodEvent)\n\t{\n\t\tthis.iInvalidateShaderProgram();\n\t}\n}\n\nexport = ShadowNearMethod;",
    "import PoissonLookup\t\t\t\t\t= require(\"awayjs-core/lib/geom/PoissonLookup\");\n\nimport DirectionalLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport ShaderObjectBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderObjectBase\");\nimport ShaderRegisterCache\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterData\");\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterElement\");\n\nimport MethodVO\t\t\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/data/MethodVO\");\nimport ShadowMethodBase\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/ShadowMethodBase\");\n\n/**\n * ShadowSoftMethod provides a soft shadowing technique by randomly distributing sample points.\n */\nclass ShadowSoftMethod extends ShadowMethodBase\n{\n\tprivate _range:number = 1;\n\tprivate _numSamples:number /*int*/;\n\tprivate _offsets:Array<number>;\n\n\t/**\n\t * Creates a new DiffuseBasicMethod object.\n\t *\n\t * @param castingLight The light casting the shadows\n\t * @param numSamples The amount of samples to take for dithering. Minimum 1, maximum 32.\n\t */\n\tconstructor(castingLight:DirectionalLight, numSamples:number /*int*/ = 5, range:number = 1)\n\t{\n\t\tsuper(castingLight);\n\n\t\tthis.numSamples = numSamples;\n\t\tthis.range = range;\n\t}\n\n\t/**\n\t * The amount of samples to take for dithering. Minimum 1, maximum 32. The actual maximum may depend on the\n\t * complexity of the shader.\n\t */\n\tpublic get numSamples():number /*int*/\n\t{\n\t\treturn this._numSamples;\n\t}\n\n\tpublic set numSamples(value:number /*int*/)\n\t{\n\t\tthis._numSamples = value;\n\t\t\n\t\tif (this._numSamples < 1)\n\t\t\tthis._numSamples = 1;\n\t\telse if (this._numSamples > 32)\n\t\t\tthis._numSamples = 32;\n\n\t\tthis._offsets = PoissonLookup.getDistribution(this._numSamples);\n\t\t\n\t\tthis.iInvalidateShaderProgram();\n\t}\n\n\t/**\n\t * The range in the shadow map in which to distribute the samples.\n\t */\n\tpublic get range():number\n\t{\n\t\treturn this._range;\n\t}\n\n\tpublic set range(value:number)\n\t{\n\t\tthis._range = value;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iInitConstants(shaderObject:ShaderObjectBase, methodVO:MethodVO)\n\t{\n\t\tsuper.iInitConstants(shaderObject, methodVO);\n\n\t\tshaderObject.fragmentConstantData[methodVO.fragmentConstantsIndex + 8] = 1/this._numSamples;\n\t\tshaderObject.fragmentConstantData[methodVO.fragmentConstantsIndex + 9] = 0;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iActivate(shaderObject:ShaderObjectBase, methodVO:MethodVO, stage:Stage)\n\t{\n\t\tsuper.iActivate(shaderObject, methodVO, stage);\n\n\t\tvar texRange:number = .5*this._range/this._pCastingLight.shadowMapper.depthMapSize;\n\t\tvar data:Array<number> = shaderObject.fragmentConstantData;\n\t\tvar index:number /*uint*/ = methodVO.fragmentConstantsIndex + 10;\n\t\tvar len:number /*uint*/ = this._numSamples << 1;\n\n\t\tfor (var i:number /*int*/ = 0; i < len; ++i)\n\t\t\tdata[index + i] = this._offsets[i]*texRange;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pGetPlanarFragmentCode(methodVO:MethodVO, targetReg:ShaderRegisterElement, regCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\t// todo: move some things to super\n\t\tvar depthMapRegister:ShaderRegisterElement = regCache.getFreeTextureReg();\n\t\tvar decReg:ShaderRegisterElement = regCache.getFreeFragmentConstant();\n\t\tvar dataReg:ShaderRegisterElement = regCache.getFreeFragmentConstant();\n\t\tvar customDataReg:ShaderRegisterElement = regCache.getFreeFragmentConstant();\n\n\t\tmethodVO.fragmentConstantsIndex = decReg.index*4;\n\t\tmethodVO.texturesIndex = depthMapRegister.index;\n\n\t\treturn this.getSampleCode(regCache, depthMapRegister, decReg, targetReg, customDataReg);\n\t}\n\n\t/**\n\t * Adds the code for another tap to the shader code.\n\t * @param uv The uv register for the tap.\n\t * @param texture The texture register containing the depth map.\n\t * @param decode The register containing the depth map decoding data.\n\t * @param target The target register to add the tap comparison result.\n\t * @param regCache The register cache managing the registers.\n\t * @return\n\t */\n\tprivate addSample(uv:ShaderRegisterElement, texture:ShaderRegisterElement, decode:ShaderRegisterElement, target:ShaderRegisterElement, regCache:ShaderRegisterCache):string\n\t{\n\t\tvar temp:ShaderRegisterElement = regCache.getFreeFragmentVectorTemp();\n\t\treturn \"tex \" + temp + \", \" + uv + \", \" + texture + \" <2d,nearest,clamp>\\n\" +\n\t\t\t\"dp4 \" + temp + \".z, \" + temp + \", \" + decode + \"\\n\" +\n\t\t\t\"slt \" + uv + \".w, \" + this._pDepthMapCoordReg + \".z, \" + temp + \".z\\n\" + // 0 if in shadow\n\t\t\t\"add \" + target + \".w, \" + target + \".w, \" + uv + \".w\\n\";\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iActivateForCascade(shaderObject:ShaderObjectBase, methodVO:MethodVO, stage:Stage)\n\t{\n\t\tsuper.iActivate(shaderObject, methodVO, stage);\n\n\t\tvar texRange:number = this._range/this._pCastingLight.shadowMapper.depthMapSize;\n\t\tvar data:Array<number> = shaderObject.fragmentConstantData;\n\t\tvar index:number /*uint*/ = methodVO.secondaryFragmentConstantsIndex;\n\t\tvar len:number /*uint*/ = this._numSamples << 1;\n\t\tdata[index] = 1/this._numSamples;\n\t\tdata[index + 1] = 0;\n\t\tindex += 2;\n\n\t\tfor (var i:number /*int*/ = 0; i < len; ++i)\n\t\t\tdata[index + i] = this._offsets[i]*texRange;\n\n\t\tif (len%4 == 0) {\n\t\t\tdata[index + len] = 0;\n\t\t\tdata[index + len + 1] = 0;\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGetCascadeFragmentCode(shaderObject:ShaderObjectBase, methodVO:MethodVO, decodeRegister:ShaderRegisterElement, depthTexture:ShaderRegisterElement, depthProjection:ShaderRegisterElement, targetRegister:ShaderRegisterElement, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tthis._pDepthMapCoordReg = depthProjection;\n\n\t\tvar dataReg:ShaderRegisterElement = registerCache.getFreeFragmentConstant();\n\t\tmethodVO.secondaryFragmentConstantsIndex = dataReg.index*4;\n\n\t\treturn this.getSampleCode(registerCache, depthTexture, decodeRegister, targetRegister, dataReg);\n\t}\n\n\t/**\n\t * Get the actual shader code for shadow mapping\n\t * @param regCache The register cache managing the registers.\n\t * @param depthTexture The texture register containing the depth map.\n\t * @param decodeRegister The register containing the depth map decoding data.\n\t * @param targetReg The target register to add the shadow coverage.\n\t * @param dataReg The register containing additional data.\n\t */\n\tprivate getSampleCode(regCache:ShaderRegisterCache, depthTexture:ShaderRegisterElement, decodeRegister:ShaderRegisterElement, targetRegister:ShaderRegisterElement, dataReg:ShaderRegisterElement):string\n\t{\n\t\tvar uvReg:ShaderRegisterElement;\n\t\tvar code:string;\n\t\tvar offsets:Array<string> = new Array<string>(dataReg + \".zw\");\n\t\tuvReg = regCache.getFreeFragmentVectorTemp();\n\t\tregCache.addFragmentTempUsages(uvReg, 1);\n\n\t\tvar temp:ShaderRegisterElement = regCache.getFreeFragmentVectorTemp();\n\n\t\tvar numRegs:number /*int*/ = this._numSamples >> 1;\n\t\tfor (var i:number /*int*/ = 0; i < numRegs; ++i) {\n\t\t\tvar reg:ShaderRegisterElement = regCache.getFreeFragmentConstant();\n\t\t\toffsets.push(reg + \".xy\");\n\t\t\toffsets.push(reg + \".zw\");\n\t\t}\n\n\t\tfor (i = 0; i < this._numSamples; ++i) {\n\t\t\tif (i == 0) {\n\t\t\t\tcode = \"add \" + uvReg + \", \" + this._pDepthMapCoordReg + \", \" + dataReg + \".zwyy\\n\" +\n\t\t\t\t\t\"tex \" + temp + \", \" + uvReg + \", \" + depthTexture + \" <2d,nearest,clamp>\\n\" +\n\t\t\t\t\t\"dp4 \" + temp + \".z, \" + temp + \", \" + decodeRegister + \"\\n\" +\n\t\t\t\t\t\"slt \" + targetRegister + \".w, \" + this._pDepthMapCoordReg + \".z, \" + temp + \".z\\n\"; // 0 if in shadow;\n\t\t\t} else {\n\t\t\t\tcode += \"add \" + uvReg + \".xy, \" + this._pDepthMapCoordReg + \".xy, \" + offsets[i] + \"\\n\" +\n\t\t\t\t\tthis.addSample(uvReg, depthTexture, decodeRegister, targetRegister, regCache);\n\t\t\t}\n\t\t}\n\n\t\tregCache.removeFragmentTempUsage(uvReg);\n\n\t\tcode += \"mul \" + targetRegister + \".w, \" + targetRegister + \".w, \" + dataReg + \".x\\n\"; // average\n\n\t\treturn code;\n\t}\n}\n\nexport = ShadowSoftMethod;",
    "import ShaderLightingObject\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderLightingObject\");\nimport ShaderRegisterCache\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterData\");\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterElement\");\n\nimport MethodVO\t\t\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/data/MethodVO\");\nimport SpecularBasicMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/SpecularBasicMethod\");\n\n/**\n * SpecularAnisotropicMethod provides a specular method resulting in anisotropic highlights. These are typical for\n * surfaces with microfacet details such as tiny grooves. In particular, this uses the Heidrich-Seidel distrubution.\n * The tangent vectors are used as the surface groove directions.\n */\nclass SpecularAnisotropicMethod extends SpecularBasicMethod\n{\n\t/**\n\t * Creates a new SpecularAnisotropicMethod object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iInitVO(shaderObject:ShaderLightingObject, methodVO:MethodVO)\n\t{\n\t\tmethodVO.needsTangents = true;\n\t\tmethodVO.needsView = true;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iGetFragmentCodePerLight(shaderObject:ShaderLightingObject, methodVO:MethodVO, lightDirReg:ShaderRegisterElement, lightColReg:ShaderRegisterElement, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tvar code:string = \"\";\n\t\tvar t:ShaderRegisterElement;\n\n\t\tif (this._pIsFirstLight)\n\t\t\tt = this._pTotalLightColorReg;\n\t\telse {\n\t\t\tt = registerCache.getFreeFragmentVectorTemp();\n\t\t\tregisterCache.addFragmentTempUsages(t, 1);\n\t\t}\n\n\t\t// (sin(l,t) * sin(v,t) - cos(l,t)*cos(v,t)) ^ k\n\n\t\tcode += \"nrm \" + t + \".xyz, \" + sharedRegisters.tangentVarying + \".xyz\\n\" +\n\t\t\t\"dp3 \" + t + \".w, \" + t + \".xyz, \" + lightDirReg + \".xyz\\n\" +\n\t\t\t\"dp3 \" + t + \".z, \" + t + \".xyz, \" + sharedRegisters.viewDirFragment + \".xyz\\n\";\n\n\t\t// (sin(t.w) * sin(t.z) - cos(t.w)*cos(t.z)) ^ k\n\t\tcode += \"sin \" + t + \".x, \" + t + \".w\\n\" +\n\t\t\t\"sin \" + t + \".y, \" + t + \".z\\n\" +\n\t\t\t// (t.x * t.y - cos(t.w)*cos(t.z)) ^ k\n\t\t\t\"mul \" + t + \".x, \" + t + \".x, \" + t + \".y\\n\" +\n\t\t\t// (t.x - cos(t.w)*cos(t.z)) ^ k\n\t\t\t\"cos \" + t + \".z, \" + t + \".z\\n\" +\n\t\t\t\"cos \" + t + \".w, \" + t + \".w\\n\" +\n\t\t\t// (t.x - t.w*t.z) ^ k\n\t\t\t\"mul \" + t + \".w, \" + t + \".w, \" + t + \".z\\n\" +\n\t\t\t// (t.x - t.w) ^ k\n\t\t\t\"sub \" + t + \".w, \" + t + \".x, \" + t + \".w\\n\";\n\n\t\tif (this._pUseTexture) {\n\t\t\t// apply gloss modulation from texture\n\t\t\tcode += \"mul \" + this._pSpecularTexData + \".w, \" + this._pSpecularTexData + \".y, \" + this._pSpecularDataRegister + \".w\\n\" +\n\t\t\t\t\"pow \" + t + \".w, \" + t + \".w, \" + this._pSpecularTexData + \".w\\n\";\n\t\t} else\n\t\t\tcode += \"pow \" + t + \".w, \" + t + \".w, \" + this._pSpecularDataRegister + \".w\\n\";\n\n\t\t// attenuate\n\t\tcode += \"mul \" + t + \".w, \" + t + \".w, \" + lightDirReg + \".w\\n\";\n\n\t\tif (this._iModulateMethod != null)\n\t\t\tcode += this._iModulateMethod(shaderObject, methodVO, t, registerCache, sharedRegisters);\n\n\t\tcode += \"mul \" + t + \".xyz, \" + lightColReg + \".xyz, \" + t + \".w\\n\";\n\n\t\tif (!this._pIsFirstLight) {\n\t\t\tcode += \"add \" + this._pTotalLightColorReg + \".xyz, \" + this._pTotalLightColorReg + \".xyz, \" + t + \".xyz\\n\";\n\t\t\tregisterCache.removeFragmentTempUsage(t);\n\t\t}\n\n\t\tthis._pIsFirstLight = false;\n\n\t\treturn code;\n\t}\n}\n\nexport = SpecularAnisotropicMethod;",
    "import Texture2DBase\t\t\t\t= require(\"awayjs-core/lib/textures/Texture2DBase\");\n\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport ShaderLightingObject\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderLightingObject\");\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterData\");\nimport ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterElement\");\nimport ShaderCompilerHelper\t\t\t= require(\"awayjs-renderergl/lib/utils/ShaderCompilerHelper\");\n\nimport MethodVO\t\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/data/MethodVO\");\nimport LightingMethodBase\t\t\t= require(\"awayjs-methodmaterials/lib/methods/LightingMethodBase\");\nimport ShadingMethodBase\t\t\t= require(\"awayjs-methodmaterials/lib/methods/ShadingMethodBase\");\n\n/**\n * SpecularBasicMethod provides the default shading method for Blinn-Phong specular highlights (an optimized but approximated\n * version of Phong specularity).\n */\nclass SpecularBasicMethod extends LightingMethodBase\n{\n\tpublic _pUseTexture:boolean;\n\tpublic _pTotalLightColorReg:ShaderRegisterElement;\n\tpublic _pSpecularTextureRegister:ShaderRegisterElement;\n\tpublic _pSpecularTexData:ShaderRegisterElement;\n\tpublic _pSpecularDataRegister:ShaderRegisterElement;\n\n\tprivate _texture:Texture2DBase;\n\n\tprivate _gloss:number = 50;\n\tprivate _specular:number = 1;\n\tprivate _specularColor:number = 0xffffff;\n\tpublic _iSpecularR:number = 1;\n\tpublic _iSpecularG:number = 1;\n\tpublic _iSpecularB:number = 1;\n\tpublic _pIsFirstLight:boolean;\n\n\t/**\n\t * Creates a new SpecularBasicMethod object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\tpublic iIsUsed(shaderObject:ShaderLightingObject):boolean\n\t{\n\t\tif (!shaderObject.numLights)\n\t\t\treturn false;\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iInitVO(shaderObject:ShaderLightingObject, methodVO:MethodVO)\n\t{\n\t\tmethodVO.needsUV = this._pUseTexture;\n\t\tmethodVO.needsNormals = shaderObject.numLights > 0;\n\t\tmethodVO.needsView = shaderObject.numLights > 0;\n\t}\n\n\t/**\n\t * The sharpness of the specular highlight.\n\t */\n\tpublic get gloss():number\n\t{\n\t\treturn this._gloss;\n\t}\n\n\tpublic set gloss(value:number)\n\t{\n\t\tthis._gloss = value;\n\t}\n\n\t/**\n\t * The overall strength of the specular highlights.\n\t */\n\tpublic get specular():number\n\t{\n\t\treturn this._specular;\n\t}\n\n\tpublic set specular(value:number)\n\t{\n\t\tif (value == this._specular)\n\t\t\treturn;\n\n\t\tthis._specular = value;\n\t\tthis.updateSpecular();\n\t}\n\n\t/**\n\t * The colour of the specular reflection of the surface.\n\t */\n\tpublic get specularColor():number\n\t{\n\t\treturn this._specularColor;\n\t}\n\n\tpublic set specularColor(value:number)\n\t{\n\t\tif (this._specularColor == value)\n\t\t\treturn;\n\n\t\t// specular is now either enabled or disabled\n\t\tif (this._specularColor == 0 || value == 0)\n\t\t\tthis.iInvalidateShaderProgram();\n\n\t\tthis._specularColor = value;\n\t\tthis.updateSpecular();\n\t}\n\n\t/**\n\t * The bitmapData that encodes the specular highlight strength per texel in the red channel, and the sharpness\n\t * in the green channel. You can use SpecularBitmapTexture if you want to easily set specular and gloss maps\n\t * from grayscale images, but prepared images are preferred.\n\t */\n\tpublic get texture():Texture2DBase\n\t{\n\t\treturn this._texture;\n\t}\n\n\tpublic set texture(value:Texture2DBase)\n\t{\n\t\tvar b:boolean = ( value != null );\n\n\t\tif (b != this._pUseTexture || (value && this._texture && (value.format != this._texture.format)))\n\t\t\tthis.iInvalidateShaderProgram();\n\n\t\tthis._pUseTexture = b;\n\t\tthis._texture = value;\n\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic copyFrom(method:ShadingMethodBase)\n\t{\n\n\t\tvar m:any = method;\n\t\tvar bsm:SpecularBasicMethod = <SpecularBasicMethod> method;\n\n\t\tvar spec:SpecularBasicMethod = bsm;//SpecularBasicMethod(method);\n\t\tthis.texture = spec.texture;\n\t\tthis.specular = spec.specular;\n\t\tthis.specularColor = spec.specularColor;\n\t\tthis.gloss = spec.gloss;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iCleanCompilationData()\n\t{\n\t\tsuper.iCleanCompilationData();\n\t\tthis._pTotalLightColorReg = null;\n\t\tthis._pSpecularTextureRegister = null;\n\t\tthis._pSpecularTexData = null;\n\t\tthis._pSpecularDataRegister = null;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iGetFragmentPreLightingCode(shaderObject:ShaderLightingObject, methodVO:MethodVO, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tvar code:string = \"\";\n\n\t\tthis._pIsFirstLight = true;\n\n\t\tthis._pSpecularDataRegister = registerCache.getFreeFragmentConstant();\n\t\tmethodVO.fragmentConstantsIndex = this._pSpecularDataRegister.index*4;\n\n\t\tif (this._pUseTexture) {\n\n\t\t\tthis._pSpecularTexData = registerCache.getFreeFragmentVectorTemp();\n\t\t\tregisterCache.addFragmentTempUsages(this._pSpecularTexData, 1);\n\t\t\tthis._pSpecularTextureRegister = registerCache.getFreeTextureReg();\n\t\t\tmethodVO.texturesIndex = this._pSpecularTextureRegister.index;\n\t\t\tcode = ShaderCompilerHelper.getTex2DSampleCode(this._pSpecularTexData, sharedRegisters, this._pSpecularTextureRegister, this._texture, shaderObject.useSmoothTextures, shaderObject.repeatTextures, shaderObject.useMipmapping);\n\n\t\t} else {\n\n\t\t\tthis._pSpecularTextureRegister = null;\n\t\t}\n\n\t\tthis._pTotalLightColorReg = registerCache.getFreeFragmentVectorTemp();\n\t\tregisterCache.addFragmentTempUsages(this._pTotalLightColorReg, 1);\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iGetFragmentCodePerLight(shaderObject:ShaderLightingObject, methodVO:MethodVO, lightDirReg:ShaderRegisterElement, lightColReg:ShaderRegisterElement, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tvar code:string = \"\";\n\t\tvar t:ShaderRegisterElement;\n\n\t\tif (this._pIsFirstLight) {\n\t\t\tt = this._pTotalLightColorReg;\n\t\t} else {\n\t\t\tt = registerCache.getFreeFragmentVectorTemp();\n\t\t\tregisterCache.addFragmentTempUsages(t, 1);\n\t\t}\n\n\t\tvar viewDirReg:ShaderRegisterElement = sharedRegisters.viewDirFragment;\n\t\tvar normalReg:ShaderRegisterElement = sharedRegisters.normalFragment;\n\n\t\t// blinn-phong half vector model\n\t\tcode += \"add \" + t + \", \" + lightDirReg + \", \" + viewDirReg + \"\\n\" +\n\t\t\t\t\"nrm \" + t + \".xyz, \" + t + \"\\n\" +\n\t\t\t\t\"dp3 \" + t + \".w, \" + normalReg + \", \" + t + \"\\n\" +\n\t\t\t\t\"sat \" + t + \".w, \" + t + \".w\\n\";\n\n\t\tif (this._pUseTexture) {\n\t\t\t// apply gloss modulation from texture\n\t\t\tcode += \"mul \" + this._pSpecularTexData + \".w, \" + this._pSpecularTexData + \".y, \" + this._pSpecularDataRegister + \".w\\n\" +\n\t\t\t\t\t\"pow \" + t + \".w, \" + t + \".w, \" + this._pSpecularTexData + \".w\\n\";\n\t\t} else {\n\t\t\tcode += \"pow \" + t + \".w, \" + t + \".w, \" + this._pSpecularDataRegister + \".w\\n\";\n\t\t}\n\n\t\t// attenuate\n\t\tif (shaderObject.usesLightFallOff)\n\t\t\tcode += \"mul \" + t + \".w, \" + t + \".w, \" + lightDirReg + \".w\\n\";\n\n\t\tif (this._iModulateMethod != null)\n\t\t\tcode += this._iModulateMethod(shaderObject, methodVO, t, registerCache, sharedRegisters);\n\n\t\tcode += \"mul \" + t + \".xyz, \" + lightColReg + \", \" + t + \".w\\n\";\n\n\t\tif (!this._pIsFirstLight) {\n\t\t\tcode += \"add \" + this._pTotalLightColorReg + \".xyz, \" + this._pTotalLightColorReg + \", \" + t + \"\\n\";\n\t\t\tregisterCache.removeFragmentTempUsage(t);\n\t\t}\n\n\t\tthis._pIsFirstLight = false;\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iGetFragmentCodePerProbe(shaderObject:ShaderLightingObject, methodVO:MethodVO, cubeMapReg:ShaderRegisterElement, weightRegister:string, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tvar code:string = \"\";\n\t\tvar t:ShaderRegisterElement;\n\n\t\t// write in temporary if not first light, so we can add to total diffuse colour\n\t\tif (this._pIsFirstLight) {\n\t\t\tt = this._pTotalLightColorReg;\n\t\t} else {\n\t\t\tt = registerCache.getFreeFragmentVectorTemp();\n\t\t\tregisterCache.addFragmentTempUsages(t, 1);\n\t\t}\n\n\t\tvar normalReg:ShaderRegisterElement = sharedRegisters.normalFragment;\n\t\tvar viewDirReg:ShaderRegisterElement = sharedRegisters.viewDirFragment;\n\n\t\tcode += \"dp3 \" + t + \".w, \" + normalReg + \", \" + viewDirReg + \"\\n\" +\n\t\t\t\t\"add \" + t + \".w, \" + t + \".w, \" + t + \".w\\n\" +\n\t\t\t\t\"mul \" + t + \", \" + t + \".w, \" + normalReg + \"\\n\" +\n\t\t\t\t\"sub \" + t + \", \" + t + \", \" + viewDirReg + \"\\n\" +\n\t\t\t\t\"tex \" + t + \", \" + t + \", \" + cubeMapReg + \" <cube,\" + (shaderObject.useSmoothTextures? \"linear\":\"nearest\") + \",miplinear>\\n\" +\n\t\t\t\t\"mul \" + t + \".xyz, \" + t + \", \" + weightRegister + \"\\n\";\n\n\t\tif (this._iModulateMethod != null)\n\t\t\tcode += this._iModulateMethod(shaderObject, methodVO, t, registerCache, sharedRegisters);\n\n\t\tif (!this._pIsFirstLight) {\n\t\t\tcode += \"add \" + this._pTotalLightColorReg + \".xyz, \" + this._pTotalLightColorReg + \", \" + t + \"\\n\";\n\t\t\tregisterCache.removeFragmentTempUsage(t);\n\t\t}\n\n\t\tthis._pIsFirstLight = false;\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iGetFragmentPostLightingCode(shaderObject:ShaderLightingObject, methodVO:MethodVO, targetReg:ShaderRegisterElement, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tvar code:string = \"\";\n\n\t\tif (sharedRegisters.shadowTarget)\n\t\t\tcode += \"mul \" + this._pTotalLightColorReg + \".xyz, \" + this._pTotalLightColorReg + \", \" + sharedRegisters.shadowTarget + \".w\\n\";\n\n\t\tif (this._pUseTexture) {\n\t\t\t// apply strength modulation from texture\n\t\t\tcode += \"mul \" + this._pTotalLightColorReg + \".xyz, \" + this._pTotalLightColorReg + \", \" + this._pSpecularTexData + \".x\\n\";\n\t\t\tregisterCache.removeFragmentTempUsage(this._pSpecularTexData);\n\t\t}\n\n\t\t// apply material's specular reflection\n\t\tcode += \"mul \" + this._pTotalLightColorReg + \".xyz, \" + this._pTotalLightColorReg + \", \" + this._pSpecularDataRegister + \"\\n\" +\n\t\t\t\"add \" + targetReg + \".xyz, \" + targetReg + \", \" + this._pTotalLightColorReg + \"\\n\";\n\t\tregisterCache.removeFragmentTempUsage(this._pTotalLightColorReg);\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iActivate(shaderObject:ShaderLightingObject, methodVO:MethodVO, stage:Stage)\n\t{\n\t\tif (methodVO.texturesIndex >= 0)\n\t\t\tstage.activateTexture(methodVO.texturesIndex, this._texture, shaderObject.repeatTextures, shaderObject.useSmoothTextures, shaderObject.useMipmapping);\n\n\t\tvar index:number = methodVO.fragmentConstantsIndex;\n\t\tvar data:Array<number> = shaderObject.fragmentConstantData;\n\t\tdata[index] = this._iSpecularR;\n\t\tdata[index + 1] = this._iSpecularG;\n\t\tdata[index + 2] = this._iSpecularB;\n\t\tdata[index + 3] = this._gloss;\n\t}\n\n\t/**\n\t * Updates the specular color data used by the render state.\n\t */\n\tprivate updateSpecular()\n\t{\n\t\tthis._iSpecularR = (( this._specularColor >> 16) & 0xff)/0xff*this._specular;\n\t\tthis._iSpecularG = (( this._specularColor >> 8) & 0xff)/0xff*this._specular;\n\t\tthis._iSpecularB = ( this._specularColor & 0xff)/0xff*this._specular;\n\t}\n}\n\nexport = SpecularBasicMethod;",
    "import Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport ShaderLightingObject\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderLightingObject\");\nimport ShaderObjectBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderObjectBase\");\nimport ShaderRegisterCache\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterData\");\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterElement\");\n\nimport MethodVO\t\t\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/data/MethodVO\");\nimport SpecularBasicMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/SpecularBasicMethod\");\nimport SpecularCompositeMethod\t\t\t= require(\"awayjs-methodmaterials/lib/methods/SpecularCompositeMethod\");\n\n/**\n * SpecularCelMethod provides a shading method to add specular cel (cartoon) shading.\n */\nclass SpecularCelMethod extends SpecularCompositeMethod\n{\n\tprivate _dataReg:ShaderRegisterElement;\n\tprivate _smoothness:number = .1;\n\tprivate _specularCutOff:number = .1;\n\n\t/**\n\t * Creates a new SpecularCelMethod object.\n\t * @param specularCutOff The threshold at which the specular highlight should be shown.\n\t * @param baseMethod An optional specular method on which the cartoon shading is based. If ommitted, SpecularBasicMethod is used.\n\t */\n\tconstructor(specularCutOff:number = .5, baseMethod:SpecularBasicMethod = null)\n\t{\n\t\tsuper(null, baseMethod);\n\n\t\tthis.baseMethod._iModulateMethod = (shaderObject:ShaderObjectBase, methodVO:MethodVO, targetReg:ShaderRegisterElement, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData) => this.clampSpecular(shaderObject, methodVO, targetReg, registerCache, sharedRegisters);\n\n\t\tthis._specularCutOff = specularCutOff;\n\t}\n\n\t/**\n\t * The smoothness of the highlight edge.\n\t */\n\tpublic get smoothness():number\n\t{\n\t\treturn this._smoothness;\n\t}\n\n\tpublic set smoothness(value:number)\n\t{\n\t\tthis._smoothness = value;\n\t}\n\n\t/**\n\t * The threshold at which the specular highlight should be shown.\n\t */\n\tpublic get specularCutOff():number\n\t{\n\t\treturn this._specularCutOff;\n\t}\n\n\tpublic set specularCutOff(value:number)\n\t{\n\t\tthis._specularCutOff = value;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iActivate(shaderObject:ShaderLightingObject, methodVO:MethodVO, stage:Stage)\n\t{\n\t\tsuper.iActivate(shaderObject, methodVO, stage);\n\n\t\tvar index:number /*int*/ = methodVO.secondaryFragmentConstantsIndex;\n\t\tvar data:Array<number> = shaderObject.fragmentConstantData;\n\t\tdata[index] = this._smoothness;\n\t\tdata[index + 1] = this._specularCutOff;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iCleanCompilationData()\n\t{\n\t\tsuper.iCleanCompilationData();\n\t\tthis._dataReg = null;\n\t}\n\n\t/**\n\t * Snaps the specular shading strength of the wrapped method to zero or one, depending on whether or not it exceeds the specularCutOff\n\t * @param vo The MethodVO used to compile the current shader.\n\t * @param t The register containing the specular strength in the \"w\" component, and either the half-vector or the reflection vector in \"xyz\".\n\t * @param regCache The register cache used for the shader compilation.\n\t * @param sharedRegisters The shared register data for this shader.\n\t * @return The AGAL fragment code for the method.\n\t */\n\tprivate clampSpecular(shaderObject:ShaderObjectBase, methodVO:MethodVO, targetReg:ShaderRegisterElement, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"sub \" + targetReg + \".y, \" + targetReg + \".w, \" + this._dataReg + \".y\\n\" + // x - cutoff\n\t\t\t\"div \" + targetReg + \".y, \" + targetReg + \".y, \" + this._dataReg + \".x\\n\" + // (x - cutoff)/epsilon\n\t\t\t\"sat \" + targetReg + \".y, \" + targetReg + \".y\\n\" +\n\t\t\t\"sge \" + targetReg + \".w, \" + targetReg + \".w, \" + this._dataReg + \".y\\n\" +\n\t\t\t\"mul \" + targetReg + \".w, \" + targetReg + \".w, \" + targetReg + \".y\\n\";\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iGetFragmentPreLightingCode(shaderObject:ShaderLightingObject, methodVO:MethodVO, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tthis._dataReg = registerCache.getFreeFragmentConstant();\n\t\tmethodVO.secondaryFragmentConstantsIndex = this._dataReg.index*4;\n\n\t\treturn super.iGetFragmentPreLightingCode(shaderObject, methodVO, registerCache, sharedRegisters);\n\t}\n}\n\nexport = SpecularCelMethod;",
    "import Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\n\nimport Texture2DBase\t\t\t\t\t= require(\"awayjs-core/lib/textures/Texture2DBase\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport RenderableBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/pool/RenderableBase\");\nimport ShadingMethodEvent\t\t\t\t= require(\"awayjs-renderergl/lib/events/ShadingMethodEvent\");\nimport ShaderLightingObject\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderLightingObject\");\nimport ShaderObjectBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderObjectBase\");\nimport ShaderRegisterCache\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterData\");\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterElement\");\n\nimport MethodVO\t\t\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/data/MethodVO\");\nimport SpecularBasicMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/SpecularBasicMethod\");\n\n/**\n * SpecularCompositeMethod provides a base class for specular methods that wrap a specular method to alter the\n * calculated specular reflection strength.\n */\nclass SpecularCompositeMethod extends SpecularBasicMethod\n{\n\tprivate _baseMethod:SpecularBasicMethod;\n\n\tprivate _onShaderInvalidatedDelegate:Function;\n\n\t/**\n\t * Creates a new <code>SpecularCompositeMethod</code> object.\n\t *\n\t * @param modulateMethod The method which will add the code to alter the base method's strength. It needs to have the signature modSpecular(t:ShaderRegisterElement, regCache:ShaderRegisterCache):string, in which t.w will contain the specular strength and t.xyz will contain the half-vector or the reflection vector.\n\t * @param baseMethod The base specular method on which this method's shading is based.\n\t */\n\tconstructor(modulateMethod:(shaderObject:ShaderObjectBase, methodVO:MethodVO, targetReg:ShaderRegisterElement, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData) => string, baseMethod:SpecularBasicMethod = null)\n\t{\n\t\tsuper();\n\n\t\tthis._onShaderInvalidatedDelegate = (event:ShadingMethodEvent) => this.onShaderInvalidated(event);\n\n\t\tthis._baseMethod = baseMethod || new SpecularBasicMethod();\n\t\tthis._baseMethod._iModulateMethod = modulateMethod;\n\t\tthis._baseMethod.addEventListener(ShadingMethodEvent.SHADER_INVALIDATED, this._onShaderInvalidatedDelegate);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iInitVO(shaderObject:ShaderLightingObject, methodVO:MethodVO)\n\t{\n\t\tthis._baseMethod.iInitVO(shaderObject, methodVO);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iInitConstants(shaderObject:ShaderObjectBase, methodVO:MethodVO)\n\t{\n\t\tthis._baseMethod.iInitConstants(shaderObject, methodVO);\n\t}\n\n\t/**\n\t * The base specular method on which this method's shading is based.\n\t */\n\tpublic get baseMethod():SpecularBasicMethod\n\t{\n\t\treturn this._baseMethod;\n\t}\n\n\tpublic set baseMethod(value:SpecularBasicMethod)\n\t{\n\t\tif (this._baseMethod == value)\n\t\t\treturn;\n\n\t\tthis._baseMethod.removeEventListener(ShadingMethodEvent.SHADER_INVALIDATED, this._onShaderInvalidatedDelegate);\n\n\t\tthis._baseMethod = value;\n\n\t\tthis._baseMethod.addEventListener(ShadingMethodEvent.SHADER_INVALIDATED, this._onShaderInvalidatedDelegate);\n\n\t\tthis.iInvalidateShaderProgram();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get gloss():number\n\t{\n\t\treturn this._baseMethod.gloss;\n\t}\n\n\tpublic set gloss(value:number)\n\t{\n\t\tthis._baseMethod.gloss = value;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get specular():number\n\t{\n\t\treturn this._baseMethod.specular;\n\t}\n\n\tpublic set specular(value:number)\n\t{\n\t\tthis._baseMethod.specular = value;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic dispose()\n\t{\n\t\tthis._baseMethod.removeEventListener(ShadingMethodEvent.SHADER_INVALIDATED, this._onShaderInvalidatedDelegate);\n\t\tthis._baseMethod.dispose();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get texture():Texture2DBase\n\t{\n\t\treturn this._baseMethod.texture;\n\t}\n\n\tpublic set texture(value:Texture2DBase)\n\t{\n\t\tthis._baseMethod.texture = value;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iActivate(shaderObject:ShaderLightingObject, methodVO:MethodVO, stage:Stage)\n\t{\n\t\tthis._baseMethod.iActivate(shaderObject, methodVO, stage);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iSetRenderState(shaderObject:ShaderLightingObject, methodVO:MethodVO, renderable:RenderableBase, stage:Stage, camera:Camera)\n\t{\n\t\tthis._baseMethod.iSetRenderState(shaderObject, methodVO, renderable, stage, camera);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iDeactivate(shaderObject:ShaderObjectBase, methodVO:MethodVO, stage:Stage)\n\t{\n\t\tthis._baseMethod.iDeactivate(shaderObject, methodVO, stage);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iGetVertexCode(shaderObject:ShaderObjectBase, methodVO:MethodVO, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn this._baseMethod.iGetVertexCode(shaderObject, methodVO, registerCache, sharedRegisters);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iGetFragmentPreLightingCode(shaderObject:ShaderLightingObject, methodVO:MethodVO, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn this._baseMethod.iGetFragmentPreLightingCode(shaderObject, methodVO, registerCache, sharedRegisters);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iGetFragmentCodePerLight(shaderObject:ShaderLightingObject, methodVO:MethodVO, lightDirReg:ShaderRegisterElement, lightColReg:ShaderRegisterElement, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn this._baseMethod.iGetFragmentCodePerLight(shaderObject, methodVO, lightDirReg, lightColReg, registerCache, sharedRegisters);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t * @return\n\t */\n\tpublic iGetFragmentCodePerProbe(shaderObject:ShaderLightingObject, methodVO:MethodVO, cubeMapReg:ShaderRegisterElement, weightRegister:string, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn this._baseMethod.iGetFragmentCodePerProbe(shaderObject, methodVO, cubeMapReg, weightRegister, registerCache, sharedRegisters);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iGetFragmentPostLightingCode(shaderObject:ShaderLightingObject, methodVO:MethodVO, targetReg:ShaderRegisterElement, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn this._baseMethod.iGetFragmentPostLightingCode(shaderObject, methodVO, targetReg, registerCache, sharedRegisters);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iReset()\n\t{\n\t\tthis._baseMethod.iReset();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iCleanCompilationData()\n\t{\n\t\tsuper.iCleanCompilationData();\n\t\tthis._baseMethod.iCleanCompilationData();\n\t}\n\n\t/**\n\t * Called when the base method's shader code is invalidated.\n\t */\n\tprivate onShaderInvalidated(event:ShadingMethodEvent)\n\t{\n\t\tthis.iInvalidateShaderProgram();\n\t}\n}\n\nexport = SpecularCompositeMethod;",
    "import Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport ShaderLightingObject\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderLightingObject\");\nimport ShaderObjectBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderObjectBase\");\nimport ShaderRegisterCache\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterData\");\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterElement\");\n\nimport MethodVO\t\t\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/data/MethodVO\");\nimport SpecularBasicMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/SpecularBasicMethod\");\nimport SpecularCompositeMethod\t\t\t= require(\"awayjs-methodmaterials/lib/methods/SpecularCompositeMethod\");\n\n/**\n * SpecularFresnelMethod provides a specular shading method that causes stronger highlights on grazing view angles.\n */\nclass SpecularFresnelMethod extends SpecularCompositeMethod\n{\n\tprivate _dataReg:ShaderRegisterElement;\n\tprivate _incidentLight:boolean;\n\tprivate _fresnelPower:number = 5;\n\tprivate _normalReflectance:number = .028; // default value for skin\n\n\t/**\n\t * Creates a new SpecularFresnelMethod object.\n\t * @param basedOnSurface Defines whether the fresnel effect should be based on the view angle on the surface (if true), or on the angle between the light and the view.\n\t * @param baseMethod The specular method to which the fresnel equation. Defaults to SpecularBasicMethod.\n\t */\n\tconstructor(basedOnSurface:boolean = true, baseMethod:SpecularBasicMethod = null)\n\t{\n\t\t// may want to offer diff speculars\n\t\tsuper(null, baseMethod);\n\n\t\tthis.baseMethod._iModulateMethod = (shaderObject:ShaderObjectBase, methodVO:MethodVO, targetReg:ShaderRegisterElement, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData) => this.modulateSpecular(shaderObject, methodVO, targetReg, registerCache, sharedRegisters);\n\n\t\tthis._incidentLight = !basedOnSurface;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iInitConstants(shaderObject:ShaderObjectBase, methodVO:MethodVO)\n\t{\n\n\t\tvar index:number = methodVO.secondaryFragmentConstantsIndex;\n\t\tshaderObject.fragmentConstantData[index + 2] = 1;\n\t\tshaderObject.fragmentConstantData[index + 3] = 0;\n\t}\n\n\t/**\n\t * Defines whether the fresnel effect should be based on the view angle on the surface (if true), or on the angle between the light and the view.\n\t */\n\tpublic get basedOnSurface():boolean\n\t{\n\t\treturn !this._incidentLight;\n\t}\n\n\tpublic set basedOnSurface(value:boolean)\n\t{\n\t\tif (this._incidentLight != value)\n\t\t\treturn;\n\n\t\tthis._incidentLight = !value;\n\n\t\tthis.iInvalidateShaderProgram();\n\t}\n\n\t/**\n\t * The power used in the Fresnel equation. Higher values make the fresnel effect more pronounced. Defaults to 5.\n\t */\n\tpublic get fresnelPower():number\n\t{\n\t\treturn this._fresnelPower;\n\t}\n\n\tpublic set fresnelPower(value:number)\n\t{\n\t\tthis._fresnelPower = value;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iCleanCompilationData()\n\t{\n\t\tsuper.iCleanCompilationData();\n\t\tthis._dataReg = null;\n\t}\n\n\t/**\n\t * The minimum amount of reflectance, ie the reflectance when the view direction is normal to the surface or light direction.\n\t */\n\tpublic get normalReflectance():number\n\t{\n\t\treturn this._normalReflectance;\n\t}\n\n\tpublic set normalReflectance(value:number)\n\t{\n\t\tthis._normalReflectance = value;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iActivate(shaderObject:ShaderLightingObject, methodVO:MethodVO, stage:Stage)\n\t{\n\t\tsuper.iActivate(shaderObject, methodVO, stage);\n\n\t\tvar fragmentData:Array<number> = shaderObject.fragmentConstantData;\n\n\t\tvar index:number = methodVO.secondaryFragmentConstantsIndex;\n\t\tfragmentData[index] = this._normalReflectance;\n\t\tfragmentData[index + 1] = this._fresnelPower;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iGetFragmentPreLightingCode(shaderObject:ShaderLightingObject, methodVO:MethodVO, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tthis._dataReg = registerCache.getFreeFragmentConstant();\n\n\t\tmethodVO.secondaryFragmentConstantsIndex = this._dataReg.index*4;\n\n\t\treturn super.iGetFragmentPreLightingCode(shaderObject, methodVO, registerCache, sharedRegisters);\n\t}\n\n\t/**\n\t * Applies the fresnel effect to the specular strength.\n\t *\n\t * @param vo The MethodVO object containing the method data for the currently compiled material pass.\n\t * @param target The register containing the specular strength in the \"w\" component, and the half-vector/reflection vector in \"xyz\".\n\t * @param regCache The register cache used for the shader compilation.\n\t * @param sharedRegisters The shared registers created by the compiler.\n\t * @return The AGAL fragment code for the method.\n\t */\n\tprivate modulateSpecular(shaderObject:ShaderObjectBase, methodVO:MethodVO, targetReg:ShaderRegisterElement, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tvar code:string;\n\n\t\tcode = \"dp3 \" + targetReg + \".y, \" + sharedRegisters.viewDirFragment + \".xyz, \" + (this._incidentLight? targetReg : sharedRegisters.normalFragment) + \".xyz\\n\" +   // dot(V, H)\n\t\t\t\"sub \" + targetReg + \".y, \" + this._dataReg + \".z, \" + targetReg + \".y\\n\" +             // base = 1-dot(V, H)\n\t\t\t\"pow \" + targetReg + \".x, \" + targetReg + \".y, \" + this._dataReg + \".y\\n\" +             // exp = pow(base, 5)\n\t\t\t\"sub \" + targetReg + \".y, \" + this._dataReg + \".z, \" + targetReg + \".y\\n\" +             // 1 - exp\n\t\t\t\"mul \" + targetReg + \".y, \" + this._dataReg + \".x, \" + targetReg + \".y\\n\" +             // f0*(1 - exp)\n\t\t\t\"add \" + targetReg + \".y, \" + targetReg + \".x, \" + targetReg + \".y\\n\" +          // exp + f0*(1 - exp)\n\t\t\t\"mul \" + targetReg + \".w, \" + targetReg + \".w, \" + targetReg + \".y\\n\";\n\n\t\treturn code;\n\t}\n\n}\n\nexport = SpecularFresnelMethod;",
    "import ShaderLightingObject\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderLightingObject\");\nimport ShaderRegisterCache\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterData\");\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterElement\");\n\nimport MethodVO\t\t\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/data/MethodVO\");\nimport SpecularBasicMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/SpecularBasicMethod\");\n\n/**\n * SpecularPhongMethod provides a specular method that provides Phong highlights.\n */\nclass SpecularPhongMethod extends SpecularBasicMethod\n{\n\t/**\n\t * Creates a new SpecularPhongMethod object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iGetFragmentCodePerLight(shaderObject:ShaderLightingObject, methodVO:MethodVO, lightDirReg:ShaderRegisterElement, lightColReg:ShaderRegisterElement, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tvar code:string = \"\";\n\t\tvar t:ShaderRegisterElement;\n\n\t\tif (this._pIsFirstLight) {\n\t\t\tt = this._pTotalLightColorReg;\n\t\t} else {\n\t\t\tt = registerCache.getFreeFragmentVectorTemp();\n\t\t\tregisterCache.addFragmentTempUsages(t, 1);\n\t\t}\n\n\t\tvar viewDirReg:ShaderRegisterElement =sharedRegisters.viewDirFragment;\n\t\tvar normalReg:ShaderRegisterElement =sharedRegisters.normalFragment;\n\n\t\t// phong model\n\t\tcode += \"dp3 \" + t + \".w, \" + lightDirReg + \", \" + normalReg + \"\\n\" + // sca1 = light.normal\n\n\t\t\t//find the reflected light vector R\n\t\t\t\"add \" + t + \".w, \" + t + \".w, \" + t + \".w\\n\" + // sca1 = sca1*2\n\t\t\t\"mul \" + t + \".xyz, \" + normalReg + \", \" + t + \".w\\n\" + // vec1 = normal*sca1\n\t\t\t\"sub \" + t + \".xyz, \" + t + \", \" + lightDirReg + \"\\n\" + // vec1 = vec1 - light (light vector is negative)\n\n\t\t\t//smooth the edge as incidence angle approaches 90\n\t\t\t\"add \" + t + \".w, \" + t + \".w, \" +sharedRegisters.commons + \".w\\n\" + // sca1 = sca1 + smoothtep;\n\t\t\t\"sat \" + t + \".w, \" + t + \".w\\n\" + // sca1 range 0 - 1\n\t\t\t\"mul \" + t + \".xyz, \" + t + \", \" + t + \".w\\n\" + // vec1 = vec1*sca1\n\n\t\t\t//find the dot product between R and V\n\t\t\t\"dp3 \" + t + \".w, \" + t + \", \" + viewDirReg + \"\\n\" + // sca1 = vec1.view\n\t\t\t\"sat \" + t + \".w, \" + t + \".w\\n\";\n\n\t\tif (this._pUseTexture) {\n\t\t\t// apply gloss modulation from texture\n\t\t\tcode += \"mul \" + this._pSpecularTexData + \".w, \" + this._pSpecularTexData + \".y, \" + this._pSpecularDataRegister + \".w\\n\" + \"pow \" + t + \".w, \" + t + \".w, \" + this._pSpecularTexData + \".w\\n\";\n\t\t} else\n\t\t\tcode += \"pow \" + t + \".w, \" + t + \".w, \" + this._pSpecularDataRegister + \".w\\n\";\n\n\t\t// attenuate\n\t\tif (shaderObject.usesLightFallOff)\n\t\t\tcode += \"mul \" + t + \".w, \" + t + \".w, \" + lightDirReg + \".w\\n\";\n\n\t\tif (this._iModulateMethod != null)\n\t\t\tcode += this._iModulateMethod(shaderObject, methodVO, t, registerCache, sharedRegisters);\n\n\t\tcode += \"mul \" + t + \".xyz, \" + lightColReg + \".xyz, \" + t + \".w\\n\";\n\n\t\tif (!this._pIsFirstLight) {\n\t\t\tcode += \"add \" + this._pTotalLightColorReg + \".xyz, \" + this._pTotalLightColorReg + \".xyz, \" + t + \".xyz\\n\";\n\t\t\tregisterCache.removeFragmentTempUsage(t);\n\t\t}\n\n\t\tthis._pIsFirstLight = false;\n\n\t\treturn code;\n\t}\n}\n\nexport = SpecularPhongMethod;",
    "class PassMode\n{\n\t/**\n\t *\n\t */\n\tpublic static EFFECTS:number = 0x01;\n\n\t/**\n\t *\n\t */\n\tpublic static LIGHTING:number = 0x02;\n\n\t/**\n\t *\n\t */\n\tpublic static SUPER_SHADER:number = 0x03;\n}\n\nexport = PassMode;",
    "import TriangleSubGeometry\t\t\t\t= require(\"awayjs-core/lib/data/TriangleSubGeometry\");\nimport ColorTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Matrix\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\nimport Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Matrix3DUtils\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport AbstractMethodError\t\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport Event\t\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\nimport MaterialBase\t\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport IRenderObjectOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderObjectOwner\");\nimport LightPickerBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/LightPickerBase\");\nimport LightSources\t\t\t\t\t\t= require(\"awayjs-display/lib/materials/LightSources\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport RendererBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/base/RendererBase\");\nimport ShaderLightingObject\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderLightingObject\");\nimport ShadingMethodEvent\t\t\t\t= require(\"awayjs-renderergl/lib/events/ShadingMethodEvent\");\nimport ShaderObjectBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderObjectBase\");\nimport ShaderRegisterCache\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterData\");\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterElement\");\nimport RenderableBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/pool/RenderableBase\");\nimport RenderPassBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/passes/RenderPassBase\");\nimport IRenderLightingPass\t\t\t\t= require(\"awayjs-renderergl/lib/passes/IRenderLightingPass\");\nimport IRenderableClass\t\t\t\t\t= require(\"awayjs-renderergl/lib/pool/IRenderableClass\");\n\nimport MethodVO\t\t\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/data/MethodVO\");\nimport RenderMethodMaterialObject\t\t= require(\"awayjs-methodmaterials/lib/compilation/RenderMethodMaterialObject\");\nimport AmbientBasicMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/AmbientBasicMethod\");\nimport DiffuseBasicMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/DiffuseBasicMethod\");\nimport EffectColorTransformMethod\t\t= require(\"awayjs-methodmaterials/lib/methods/EffectColorTransformMethod\");\nimport EffectMethodBase\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/EffectMethodBase\");\nimport LightingMethodBase\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/LightingMethodBase\");\nimport NormalBasicMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/NormalBasicMethod\");\nimport ShadowMapMethodBase\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/ShadowMapMethodBase\");\nimport SpecularBasicMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/SpecularBasicMethod\");\nimport MethodPassMode\t\t\t\t\t= require(\"awayjs-methodmaterials/lib/passes/MethodPassMode\");\n\n/**\n * CompiledPass forms an abstract base class for the default compiled pass materials provided by Away3D,\n * using material methods to define their appearance.\n */\nclass MethodPass extends RenderPassBase implements IRenderLightingPass\n{\n\tprivate _maxLights:number = 3;\n\n\tprivate _mode:number = 0x03;\n\tprivate _material:MaterialBase;\n\tprivate _lightPicker:LightPickerBase;\n\n\tprivate _includeCasters:boolean = true;\n\n\tpublic _iColorTransformMethodVO:MethodVO;\n\tpublic _iNormalMethodVO:MethodVO;\n\tpublic _iAmbientMethodVO:MethodVO;\n\tpublic _iShadowMethodVO:MethodVO;\n\tpublic _iDiffuseMethodVO:MethodVO;\n\tpublic _iSpecularMethodVO:MethodVO;\n\tpublic _iMethodVOs:Array<MethodVO> = new Array<MethodVO>();\n\n\tpublic _numEffectDependencies:number = 0;\n\n\tprivate _onLightsChangeDelegate:(event:Event) => void;\n\tprivate _onMethodInvalidatedDelegate:(event:ShadingMethodEvent) => void;\n\n\tpublic numDirectionalLights:number = 0;\n\n\tpublic numPointLights:number = 0;\n\n\tpublic numLightProbes:number = 0;\n\n\tpublic pointLightsOffset:number = 0;\n\t\n\tpublic directionalLightsOffset:number= 0;\n\t\n\tpublic lightProbesOffset:number = 0;\n\t\n\t/**\n\t *\n\t */\n\tpublic get mode():number\n\t{\n\t\treturn this._mode;\n\t}\n\n\tpublic set mode(value:number)\n\t{\n\t\tif (this._mode == value)\n\t\t\treturn;\n\t\t\n\t\tthis._mode = value;\n\n\t\tthis._updateLights();\n\t}\n\n\t/**\n\t * Indicates whether or not shadow casting lights need to be included.\n\t */\n\tpublic get includeCasters():boolean\n\t{\n\t\treturn this._includeCasters;\n\t}\n\n\tpublic set includeCasters(value:boolean)\n\t{\n\t\tif (this._includeCasters == value)\n\t\t\treturn;\n\n\t\tthis._includeCasters = value;\n\n\t\tthis._updateLights();\n\t}\n\n\t/**\n\t * \n\t * @returns {LightPickerBase}\n\t */\n\tpublic get lightPicker():LightPickerBase\n\t{\n\t\treturn this._lightPicker;\n\t}\n\n\tpublic set lightPicker(value:LightPickerBase)\n\t{\n\t\t//if (this._lightPicker == value)\n\t\t//\treturn;\n\n\t\tif (this._lightPicker)\n\t\t\tthis._lightPicker.removeEventListener(Event.CHANGE, this._onLightsChangeDelegate);\n\n\t\tthis._lightPicker = value;\n\n\t\tif (this._lightPicker)\n\t\t\tthis._lightPicker.addEventListener(Event.CHANGE, this._onLightsChangeDelegate);\n\n\t\tthis._updateLights();\n\t}\n\t\n\t/**\n\t * Whether or not to use fallOff and radius properties for lights. This can be used to improve performance and\n\t * compatibility for constrained mode.\n\t */\n\tpublic get enableLightFallOff():boolean\n\t{\n\t\treturn this._material.enableLightFallOff;\n\t}\n\n\t/**\n\t * Define which light source types to use for diffuse reflections. This allows choosing between regular lights\n\t * and/or light probes for diffuse reflections.\n\t *\n\t * @see away3d.materials.LightSources\n\t */\n\tpublic get diffuseLightSources():number\n\t{\n\t\treturn this._material.diffuseLightSources;\n\t}\n\n\t/**\n\t * Define which light source types to use for specular reflections. This allows choosing between regular lights\n\t * and/or light probes for specular reflections.\n\t *\n\t * @see away3d.materials.LightSources\n\t */\n\tpublic get specularLightSources():number\n\t{\n\t\treturn this._material.specularLightSources;\n\t}\n\n\t/**\n\t * Creates a new CompiledPass object.\n\t *\n\t * @param material The material to which this pass belongs.\n\t */\n\tconstructor(mode:number, renderObject:RenderMethodMaterialObject, renderObjectOwner:MaterialBase, renderableClass:IRenderableClass, stage:Stage)\n\t{\n\t\tsuper(renderObject, renderObjectOwner, renderableClass, stage);\n\n\t\tthis._mode = mode;\n\n\t\tthis._material = renderObjectOwner;\n\n\t\tthis._onLightsChangeDelegate = (event:Event) => this.onLightsChange(event);\n\t\t\n\t\tthis._onMethodInvalidatedDelegate = (event:ShadingMethodEvent) => this.onMethodInvalidated(event);\n\n\t\tthis.lightPicker = renderObjectOwner.lightPicker;\n\n\t\tif (this._shader == null)\n\t\t\tthis._updateShader();\n\t}\n\n\tprivate _updateShader()\n\t{\n\t\tif ((this.numDirectionalLights || this.numPointLights || this.numLightProbes) && !(this._shader instanceof ShaderLightingObject)) {\n\t\t\tif (this._shader != null)\n\t\t\t\tthis._shader.dispose();\n\n\t\t\tthis._shader = new ShaderLightingObject(this._renderableClass, this, this._stage);\n\t\t} else if (!(this._shader instanceof ShaderObjectBase)) {\n\t\t\tif (this._shader != null)\n\t\t\t\tthis._shader.dispose();\n\n\t\t\tthis._shader = new ShaderObjectBase(this._renderableClass, this, this._stage);\n\t\t}\n\t}\n\n\t/**\n\t * Initializes the unchanging constant data for this material.\n\t */\n\tpublic _iInitConstantData(shaderObject:ShaderObjectBase)\n\t{\n\t\tsuper._iInitConstantData(shaderObject);\n\n\t\t//Updates method constants if they have changed.\n\t\tvar len:number = this._iMethodVOs.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._iMethodVOs[i].method.iInitConstants(shaderObject, this._iMethodVOs[i]);\n\t}\n\n\t/**\n\t * The ColorTransform object to transform the colour of the material with. Defaults to null.\n\t */\n\tpublic get colorTransform():ColorTransform\n\t{\n\t\treturn this.colorTransformMethod? this.colorTransformMethod.colorTransform : null;\n\t}\n\n\tpublic set colorTransform(value:ColorTransform)\n\t{\n\t\tif (value) {\n\t\t\tif (this.colorTransformMethod == null)\n\t\t\t\tthis.colorTransformMethod = new EffectColorTransformMethod();\n\n\t\t\tthis.colorTransformMethod.colorTransform = value;\n\n\t\t} else if (!value) {\n\t\t\tif (this.colorTransformMethod)\n\t\t\t\tthis.colorTransformMethod = null;\n\t\t}\n\t}\n\n\t/**\n\t * The EffectColorTransformMethod object to transform the colour of the material with. Defaults to null.\n\t */\n\tpublic get colorTransformMethod():EffectColorTransformMethod\n\t{\n\t\treturn this._iColorTransformMethodVO? <EffectColorTransformMethod> this._iColorTransformMethodVO.method : null;\n\t}\n\n\tpublic set colorTransformMethod(value:EffectColorTransformMethod)\n\t{\n\t\tif (this._iColorTransformMethodVO && this._iColorTransformMethodVO.method == value)\n\t\t\treturn;\n\n\t\tif (this._iColorTransformMethodVO) {\n\t\t\tthis._removeDependency(this._iColorTransformMethodVO);\n\t\t\tthis._iColorTransformMethodVO = null;\n\t\t}\n\n\t\tif (value) {\n\t\t\tthis._iColorTransformMethodVO = new MethodVO(value);\n\t\t\tthis._addDependency(this._iColorTransformMethodVO);\n\t\t}\n\t}\n\n\tprivate _removeDependency(methodVO:MethodVO, effectsDependency:boolean = false)\n\t{\n\t\tvar index:number = this._iMethodVOs.indexOf(methodVO);\n\n\t\tif (!effectsDependency)\n\t\t\tthis._numEffectDependencies--;\n\n\t\tmethodVO.method.removeEventListener(ShadingMethodEvent.SHADER_INVALIDATED, this._onMethodInvalidatedDelegate);\n\t\tthis._iMethodVOs.splice(index, 1);\n\n\t\tthis.invalidatePass();\n\t}\n\n\tprivate _addDependency(methodVO:MethodVO, effectsDependency:boolean = false, index:number = -1)\n\t{\n\t\tmethodVO.method.addEventListener(ShadingMethodEvent.SHADER_INVALIDATED, this._onMethodInvalidatedDelegate);\n\n\t\tif (effectsDependency) {\n\t\t\tif (index != -1)\n\t\t\t\tthis._iMethodVOs.splice(index + this._iMethodVOs.length - this._numEffectDependencies, 0, methodVO);\n\t\t\telse\n\t\t\t\tthis._iMethodVOs.push(methodVO);\n\t\t\tthis._numEffectDependencies++;\n\t\t} else {\n\t\t\tthis._iMethodVOs.splice(this._iMethodVOs.length - this._numEffectDependencies, 0, methodVO);\n\t\t}\n\n\t\tthis.invalidatePass();\n\t}\n\n\t/**\n\t * Appends an \"effect\" shading method to the shader. Effect methods are those that do not influence the lighting\n\t * but modulate the shaded colour, used for fog, outlines, etc. The method will be applied to the result of the\n\t * methods added prior.\n\t */\n\tpublic addEffectMethod(method:EffectMethodBase)\n\t{\n\t\tthis._addDependency(new MethodVO(method), true);\n\t}\n\n\t/**\n\t * The number of \"effect\" methods added to the material.\n\t */\n\tpublic get numEffectMethods():number\n\t{\n\t\treturn this._numEffectDependencies;\n\t}\n\n\t/**\n\t * Queries whether a given effects method was added to the material.\n\t *\n\t * @param method The method to be queried.\n\t * @return true if the method was added to the material, false otherwise.\n\t */\n\tpublic hasEffectMethod(method:EffectMethodBase):boolean\n\t{\n\t\treturn this.getDependencyForMethod(method) != null;\n\t}\n\n\t/**\n\t * Returns the method added at the given index.\n\t * @param index The index of the method to retrieve.\n\t * @return The method at the given index.\n\t */\n\tpublic getEffectMethodAt(index:number):EffectMethodBase\n\t{\n\t\tif (index < 0 || index > this._numEffectDependencies - 1)\n\t\t\treturn null;\n\n\t\treturn <EffectMethodBase> this._iMethodVOs[index + this._iMethodVOs.length - this._numEffectDependencies].method;\n\t}\n\n\t/**\n\t * Adds an effect method at the specified index amongst the methods already added to the material. Effect\n\t * methods are those that do not influence the lighting but modulate the shaded colour, used for fog, outlines,\n\t * etc. The method will be applied to the result of the methods with a lower index.\n\t */\n\tpublic addEffectMethodAt(method:EffectMethodBase, index:number)\n\t{\n\t\tthis._addDependency(new MethodVO(method), true, index);\n\t}\n\n\t/**\n\t * Removes an effect method from the material.\n\t * @param method The method to be removed.\n\t */\n\tpublic removeEffectMethod(method:EffectMethodBase)\n\t{\n\t\tvar methodVO:MethodVO = this.getDependencyForMethod(method);\n\n\t\tif (methodVO != null)\n\t\t\tthis._removeDependency(methodVO, true);\n\t}\n\n\n\t/**\n\t * remove an effect method at the specified index from the material.\n\t */\n\tpublic removeEffectMethodAt(index:number)\n\t{\n\t\tif (index < 0 || index > this._numEffectDependencies - 1)\n\t\t\treturn;\n\n\t\tvar methodVO:MethodVO = this._iMethodVOs[index + this._iMethodVOs.length - this._numEffectDependencies];\n\n\t\tif (methodVO != null)\n\t\t\tthis._removeDependency(methodVO, true);\n\t}\n\n\n\tprivate getDependencyForMethod(method:EffectMethodBase):MethodVO\n\t{\n\t\tvar len:number = this._iMethodVOs.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tif (this._iMethodVOs[i].method == method)\n\t\t\t\treturn this._iMethodVOs[i];\n\n\t\treturn null;\n\t}\n\n\t/**\n\t * The method used to generate the per-pixel normals. Defaults to NormalBasicMethod.\n\t */\n\tpublic get normalMethod():NormalBasicMethod\n\t{\n\t\treturn this._iNormalMethodVO? <NormalBasicMethod> this._iNormalMethodVO.method : null;\n\t}\n\n\tpublic set normalMethod(value:NormalBasicMethod)\n\t{\n\t\tif (this._iNormalMethodVO && this._iNormalMethodVO.method == value)\n\t\t\treturn;\n\n\t\tif (this._iNormalMethodVO) {\n\t\t\tthis._removeDependency(this._iNormalMethodVO);\n\t\t\tthis._iNormalMethodVO = null;\n\t\t}\n\n\t\tif (value) {\n\t\t\tthis._iNormalMethodVO = new MethodVO(value);\n\t\t\tthis._addDependency(this._iNormalMethodVO);\n\t\t}\n\t}\n\n\t/**\n\t * The method that provides the ambient lighting contribution. Defaults to AmbientBasicMethod.\n\t */\n\tpublic get ambientMethod():AmbientBasicMethod\n\t{\n\t\treturn this._iAmbientMethodVO? <AmbientBasicMethod> this._iAmbientMethodVO.method : null;\n\t}\n\n\tpublic set ambientMethod(value:AmbientBasicMethod)\n\t{\n\t\tif (this._iAmbientMethodVO && this._iAmbientMethodVO.method == value)\n\t\t\treturn;\n\n\t\tif (this._iAmbientMethodVO) {\n\t\t\tthis._removeDependency(this._iAmbientMethodVO);\n\t\t\tthis._iAmbientMethodVO = null;\n\t\t}\n\n\t\tif (value) {\n\t\t\tthis._iAmbientMethodVO = new MethodVO(value);\n\t\t\tthis._addDependency(this._iAmbientMethodVO);\n\t\t}\n\t}\n\n\t/**\n\t * The method used to render shadows cast on this surface, or null if no shadows are to be rendered. Defaults to null.\n\t */\n\tpublic get shadowMethod():ShadowMapMethodBase\n\t{\n\t\treturn this._iShadowMethodVO? <ShadowMapMethodBase> this._iShadowMethodVO.method : null;\n\t}\n\n\tpublic set shadowMethod(value:ShadowMapMethodBase)\n\t{\n\t\tif (this._iShadowMethodVO && this._iShadowMethodVO.method == value)\n\t\t\treturn;\n\n\t\tif (this._iShadowMethodVO) {\n\t\t\tthis._removeDependency(this._iShadowMethodVO);\n\t\t\tthis._iShadowMethodVO = null;\n\t\t}\n\n\t\tif (value) {\n\t\t\tthis._iShadowMethodVO = new MethodVO(value);\n\t\t\tthis._addDependency(this._iShadowMethodVO);\n\t\t}\n\t}\n\n\t/**\n\t * The method that provides the diffuse lighting contribution. Defaults to DiffuseBasicMethod.\n\t */\n\tpublic get diffuseMethod():DiffuseBasicMethod\n\t{\n\t\treturn this._iDiffuseMethodVO? <DiffuseBasicMethod> this._iDiffuseMethodVO.method : null;\n\t}\n\n\tpublic set diffuseMethod(value:DiffuseBasicMethod)\n\t{\n\t\tif (this._iDiffuseMethodVO && this._iDiffuseMethodVO.method == value)\n\t\t\treturn;\n\n\t\tif (this._iDiffuseMethodVO) {\n\t\t\tthis._removeDependency(this._iDiffuseMethodVO);\n\t\t\tthis._iDiffuseMethodVO = null;\n\t\t}\n\n\t\tif (value) {\n\t\t\tthis._iDiffuseMethodVO = new MethodVO(value);\n\t\t\tthis._addDependency(this._iDiffuseMethodVO);\n\t\t}\n\t}\n\n\t/**\n\t * The method that provides the specular lighting contribution. Defaults to SpecularBasicMethod.\n\t */\n\tpublic get specularMethod():SpecularBasicMethod\n\t{\n\t\treturn this._iSpecularMethodVO? <SpecularBasicMethod> this._iSpecularMethodVO.method : null;\n\t}\n\n\tpublic set specularMethod(value:SpecularBasicMethod)\n\t{\n\t\tif (this._iSpecularMethodVO && this._iSpecularMethodVO.method == value)\n\t\t\treturn;\n\n\t\tif (this._iSpecularMethodVO) {\n\t\t\tthis._removeDependency(this._iSpecularMethodVO);\n\t\t\tthis._iSpecularMethodVO = null;\n\t\t}\n\n\t\tif (value) {\n\t\t\tthis._iSpecularMethodVO = new MethodVO(value);\n\t\t\tthis._addDependency(this._iSpecularMethodVO);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\n\t\tif (this._lightPicker)\n\t\t\tthis._lightPicker.removeEventListener(Event.CHANGE, this._onLightsChangeDelegate);\n\t\t\n\t\twhile (this._iMethodVOs.length)\n\t\t\tthis._removeDependency(this._iMethodVOs[0]);\n\n\t\tthis._iMethodVOs = null;\n\t}\n\n\t/**\n\t * Called when any method's shader code is invalidated.\n\t */\n\tprivate onMethodInvalidated(event:ShadingMethodEvent)\n\t{\n\t\tthis.invalidatePass();\n\t}\n\n\t// RENDER LOOP\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iActivate(camera:Camera)\n\t{\n\t\tsuper._iActivate(camera);\n\n\t\tvar methodVO:MethodVO;\n\t\tvar len:number = this._iMethodVOs.length;\n\t\tfor (var i:number = 0; i < len; ++i) {\n\t\t\tmethodVO = this._iMethodVOs[i];\n\t\t\tif (methodVO.useMethod)\n\t\t\t\tmethodVO.method.iActivate(this._shader, methodVO, this._stage);\n\t\t}\n\t}\n\n\t/**\n\t *\n\t *\n\t * @param renderable\n\t * @param stage\n\t * @param camera\n\t */\n\tpublic _iRender(renderable:RenderableBase, camera:Camera, viewProjection:Matrix3D)\n\t{\n\t\tsuper._iRender(renderable, camera, viewProjection);\n\n\t\tvar methodVO:MethodVO;\n\t\tvar len:number = this._iMethodVOs.length;\n\t\tfor (var i:number = 0; i < len; ++i) {\n\t\t\tmethodVO = this._iMethodVOs[i];\n\t\t\tif (methodVO.useMethod)\n\t\t\t\tmethodVO.method.iSetRenderState(this._shader, methodVO, renderable, this._stage, camera);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iDeactivate()\n\t{\n\t\tsuper._iDeactivate();\n\n\t\tvar methodVO:MethodVO;\n\t\tvar len:number = this._iMethodVOs.length;\n\t\tfor (var i:number = 0; i < len; ++i) {\n\t\t\tmethodVO = this._iMethodVOs[i];\n\t\t\tif (methodVO.useMethod)\n\t\t\t\tmethodVO.method.iDeactivate(this._shader, methodVO, this._stage);\n\t\t}\n\t}\n\n\tpublic _iIncludeDependencies(shaderObject:ShaderLightingObject)\n\t{\n\t\tsuper._iIncludeDependencies(shaderObject);\n\n\t\t//TODO: fragment animtion should be compatible with lighting pass\n\t\tshaderObject.usesFragmentAnimation = Boolean(this._mode == MethodPassMode.SUPER_SHADER);\n\n\t\tif (!shaderObject.usesTangentSpace && this.numPointLights > 0 && shaderObject.usesLights) {\n\t\t\tshaderObject.globalPosDependencies++;\n\n\t\t\tif (Boolean(this._mode & MethodPassMode.EFFECTS))\n\t\t\t\tshaderObject.usesGlobalPosFragment = true;\n\t\t}\n\n\t\tvar i:number;\n\t\tvar len:number = this._iMethodVOs.length;\n\t\tfor (i = 0; i < len; ++i)\n\t\t\tthis.setupAndCountDependencies(shaderObject, this._iMethodVOs[i]);\n\n\t\tfor (i = 0; i < len; ++i)\n\t\t\tthis._iMethodVOs[i].useMethod = this._iMethodVOs[i].method.iIsUsed(shaderObject);\n\t}\n\n\n\t/**\n\t * Counts the dependencies for a given method.\n\t * @param method The method to count the dependencies for.\n\t * @param methodVO The method's data for this material.\n\t */\n\tprivate setupAndCountDependencies(shaderObject:ShaderObjectBase, methodVO:MethodVO)\n\t{\n\t\tmethodVO.reset();\n\n\t\tmethodVO.method.iInitVO(shaderObject, methodVO);\n\n\t\tif (methodVO.needsProjection)\n\t\t\tshaderObject.projectionDependencies++;\n\n\t\tif (methodVO.needsGlobalVertexPos) {\n\n\t\t\tshaderObject.globalPosDependencies++;\n\n\t\t\tif (methodVO.needsGlobalFragmentPos)\n\t\t\t\tshaderObject.usesGlobalPosFragment = true;\n\n\t\t} else if (methodVO.needsGlobalFragmentPos) {\n\t\t\tshaderObject.globalPosDependencies++;\n\t\t\tshaderObject.usesGlobalPosFragment = true;\n\t\t}\n\n\t\tif (methodVO.needsNormals)\n\t\t\tshaderObject.normalDependencies++;\n\n\t\tif (methodVO.needsTangents)\n\t\t\tshaderObject.tangentDependencies++;\n\n\t\tif (methodVO.needsView)\n\t\t\tshaderObject.viewDirDependencies++;\n\n\t\tif (methodVO.needsUV)\n\t\t\tshaderObject.uvDependencies++;\n\n\t\tif (methodVO.needsSecondaryUV)\n\t\t\tshaderObject.secondaryUVDependencies++;\n\t}\n\n\tpublic _iGetPreLightingVertexCode(shaderObject:ShaderObjectBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tvar code:string = \"\";\n\n\t\tif (this._iAmbientMethodVO && this._iAmbientMethodVO.useMethod)\n\t\t\tcode += this._iAmbientMethodVO.method.iGetVertexCode(shaderObject, this._iAmbientMethodVO, registerCache, sharedRegisters);\n\n\t\tif (this._iDiffuseMethodVO && this._iDiffuseMethodVO.useMethod)\n\t\t\tcode += this._iDiffuseMethodVO.method.iGetVertexCode(shaderObject, this._iDiffuseMethodVO, registerCache, sharedRegisters);\n\n\t\tif (this._iSpecularMethodVO && this._iSpecularMethodVO.useMethod)\n\t\t\tcode += this._iSpecularMethodVO.method.iGetVertexCode(shaderObject, this._iSpecularMethodVO, registerCache, sharedRegisters);\n\n\t\treturn code;\n\t}\n\n\tpublic _iGetPreLightingFragmentCode(shaderObject:ShaderObjectBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tvar code:string = \"\";\n\n\t\tif (this._iAmbientMethodVO && this._iAmbientMethodVO.useMethod) {\n\t\t\tcode += this._iAmbientMethodVO.method.iGetFragmentCode(shaderObject, this._iAmbientMethodVO, sharedRegisters.shadedTarget, registerCache, sharedRegisters);\n\n\t\t\tif (this._iAmbientMethodVO.needsNormals)\n\t\t\t\tregisterCache.removeFragmentTempUsage(sharedRegisters.normalFragment);\n\n\t\t\tif (this._iAmbientMethodVO.needsView)\n\t\t\t\tregisterCache.removeFragmentTempUsage(sharedRegisters.viewDirFragment);\n\t\t}\n\n\t\tif (this._iDiffuseMethodVO && this._iDiffuseMethodVO.useMethod)\n\t\t\tcode += (<LightingMethodBase> this._iDiffuseMethodVO.method).iGetFragmentPreLightingCode(<ShaderLightingObject> shaderObject, this._iDiffuseMethodVO, registerCache, sharedRegisters);\n\n\t\tif (this._iSpecularMethodVO && this._iSpecularMethodVO.useMethod)\n\t\t\tcode += (<LightingMethodBase> this._iSpecularMethodVO.method).iGetFragmentPreLightingCode(<ShaderLightingObject> shaderObject, this._iSpecularMethodVO, registerCache, sharedRegisters);\n\n\t\treturn code;\n\t}\n\n\tpublic _iGetPerLightDiffuseFragmentCode(shaderObject:ShaderLightingObject, lightDirReg:ShaderRegisterElement, diffuseColorReg:ShaderRegisterElement, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn (<LightingMethodBase> this._iDiffuseMethodVO.method).iGetFragmentCodePerLight(shaderObject, this._iDiffuseMethodVO, lightDirReg, diffuseColorReg, registerCache, sharedRegisters);\n\t}\n\n\tpublic _iGetPerLightSpecularFragmentCode(shaderObject:ShaderLightingObject, lightDirReg:ShaderRegisterElement, specularColorReg:ShaderRegisterElement, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn (<LightingMethodBase> this._iSpecularMethodVO.method).iGetFragmentCodePerLight(shaderObject, this._iSpecularMethodVO, lightDirReg, specularColorReg, registerCache, sharedRegisters);\n\t}\n\n\tpublic _iGetPerProbeDiffuseFragmentCode(shaderObject:ShaderLightingObject, texReg:ShaderRegisterElement, weightReg:string, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn (<LightingMethodBase> this._iDiffuseMethodVO.method).iGetFragmentCodePerProbe(shaderObject, this._iDiffuseMethodVO, texReg, weightReg, registerCache, sharedRegisters);\n\t}\n\n\tpublic _iGetPerProbeSpecularFragmentCode(shaderObject:ShaderLightingObject, texReg:ShaderRegisterElement, weightReg:string, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn (<LightingMethodBase> this._iSpecularMethodVO.method).iGetFragmentCodePerProbe(shaderObject, this._iSpecularMethodVO, texReg, weightReg, registerCache, sharedRegisters);\n\t}\n\n\tpublic _iGetPostLightingVertexCode(shaderObject:ShaderLightingObject, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tvar code:string = \"\";\n\n\t\tif (this._iShadowMethodVO)\n\t\t\tcode += this._iShadowMethodVO.method.iGetVertexCode(shaderObject, this._iShadowMethodVO, registerCache, sharedRegisters);\n\n\t\treturn code;\n\t}\n\n\tpublic _iGetPostLightingFragmentCode(shaderObject:ShaderLightingObject, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tvar code:string = \"\";\n\n\t\tif (shaderObject.useAlphaPremultiplied && this._pEnableBlending) {\n\t\t\tcode += \"add \" + sharedRegisters.shadedTarget + \".w, \" + sharedRegisters.shadedTarget + \".w, \" + sharedRegisters.commons + \".z\\n\" +\n\t\t\t\"div \" + sharedRegisters.shadedTarget + \".xyz, \" + sharedRegisters.shadedTarget + \", \" + sharedRegisters.shadedTarget + \".w\\n\" +\n\t\t\t\"sub \" + sharedRegisters.shadedTarget + \".w, \" + sharedRegisters.shadedTarget + \".w, \" + sharedRegisters.commons + \".z\\n\" +\n\t\t\t\"sat \" + sharedRegisters.shadedTarget + \".xyz, \" + sharedRegisters.shadedTarget + \"\\n\";\n\t\t}\n\n\t\tif (this._iShadowMethodVO)\n\t\t\tcode += this._iShadowMethodVO.method.iGetFragmentCode(shaderObject, this._iShadowMethodVO, sharedRegisters.shadowTarget, registerCache, sharedRegisters);\n\n\t\tif (this._iDiffuseMethodVO && this._iDiffuseMethodVO.useMethod) {\n\t\t\tcode += (<LightingMethodBase> this._iDiffuseMethodVO.method).iGetFragmentPostLightingCode(shaderObject, this._iDiffuseMethodVO, sharedRegisters.shadedTarget, registerCache, sharedRegisters);\n\n\t\t\t// resolve other dependencies as well?\n\t\t\tif (this._iDiffuseMethodVO.needsNormals)\n\t\t\t\tregisterCache.removeFragmentTempUsage(sharedRegisters.normalFragment);\n\n\t\t\tif (this._iDiffuseMethodVO.needsView)\n\t\t\t\tregisterCache.removeFragmentTempUsage(sharedRegisters.viewDirFragment);\n\t\t}\n\n\t\tif (this._iSpecularMethodVO && this._iSpecularMethodVO.useMethod) {\n\t\t\tcode += (<LightingMethodBase> this._iSpecularMethodVO.method).iGetFragmentPostLightingCode(shaderObject, this._iSpecularMethodVO, sharedRegisters.shadedTarget, registerCache, sharedRegisters);\n\t\t\tif (this._iSpecularMethodVO.needsNormals)\n\t\t\t\tregisterCache.removeFragmentTempUsage(sharedRegisters.normalFragment);\n\t\t\tif (this._iSpecularMethodVO.needsView)\n\t\t\t\tregisterCache.removeFragmentTempUsage(sharedRegisters.viewDirFragment);\n\t\t}\n\n\t\tif (this._iShadowMethodVO)\n\t\t\tregisterCache.removeFragmentTempUsage(sharedRegisters.shadowTarget);\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * Indicates whether or not normals are allowed in tangent space. This is only the case if no object-space\n\t * dependencies exist.\n\t */\n\tpublic _pUsesTangentSpace(shaderObject:ShaderLightingObject):boolean\n\t{\n\t\tif (shaderObject.usesProbes)\n\t\t\treturn false;\n\n\t\tvar methodVO:MethodVO;\n\t\tvar len:number = this._iMethodVOs.length;\n\t\tfor (var i:number = 0; i < len; ++i) {\n\t\t\tmethodVO = this._iMethodVOs[i];\n\t\t\tif (methodVO.useMethod && !methodVO.method.iUsesTangentSpace())\n\t\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Indicates whether or not normals are output in tangent space.\n\t */\n\tpublic _pOutputsTangentNormals(shaderObject:ShaderObjectBase):boolean\n\t{\n\t\treturn (<NormalBasicMethod> this._iNormalMethodVO.method).iOutputsTangentNormals();\n\t}\n\n\t/**\n\t * Indicates whether or not normals are output by the pass.\n\t */\n\tpublic _pOutputsNormals(shaderObject:ShaderObjectBase):boolean\n\t{\n\t\treturn this._iNormalMethodVO && this._iNormalMethodVO.useMethod;\n\t}\n\n\n\tpublic _iGetNormalVertexCode(shaderObject:ShaderObjectBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn this._iNormalMethodVO.method.iGetVertexCode(shaderObject, this._iNormalMethodVO, registerCache, sharedRegisters);\n\t}\n\n\tpublic _iGetNormalFragmentCode(shaderObject:ShaderObjectBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tvar code:string = this._iNormalMethodVO.method.iGetFragmentCode(shaderObject, this._iNormalMethodVO, sharedRegisters.normalFragment, registerCache, sharedRegisters);\n\n\t\tif (this._iNormalMethodVO.needsView)\n\t\t\tregisterCache.removeFragmentTempUsage(sharedRegisters.viewDirFragment);\n\n\t\tif (this._iNormalMethodVO.needsGlobalFragmentPos || this._iNormalMethodVO.needsGlobalVertexPos)\n\t\t\tregisterCache.removeVertexTempUsage(sharedRegisters.globalPositionVertex);\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGetVertexCode(shaderObject:ShaderObjectBase, regCache:ShaderRegisterCache, sharedReg:ShaderRegisterData):string\n\t{\n\t\tvar code:string = \"\";\n\t\tvar methodVO:MethodVO;\n\t\tvar len:number = this._iMethodVOs.length;\n\t\tfor (var i:number = len - this._numEffectDependencies; i < len; i++) {\n\t\t\tmethodVO = this._iMethodVOs[i];\n\t\t\tif (methodVO.useMethod) {\n\t\t\t\tcode += methodVO.method.iGetVertexCode(shaderObject, methodVO, regCache, sharedReg);\n\n\t\t\t\tif (methodVO.needsGlobalVertexPos || methodVO.needsGlobalFragmentPos)\n\t\t\t\t\tregCache.removeVertexTempUsage(sharedReg.globalPositionVertex);\n\t\t\t}\n\t\t}\n\n\t\tif (this._iColorTransformMethodVO && this._iColorTransformMethodVO.useMethod)\n\t\t\tcode += this._iColorTransformMethodVO.method.iGetVertexCode(shaderObject, this._iColorTransformMethodVO, regCache, sharedReg);\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGetFragmentCode(shaderObject:ShaderObjectBase, regCache:ShaderRegisterCache, sharedReg:ShaderRegisterData):string\n\t{\n\t\tvar code:string = \"\";\n\t\tvar alphaReg:ShaderRegisterElement;\n\n\t\tif (this.preserveAlpha && this._numEffectDependencies > 0) {\n\t\t\talphaReg = regCache.getFreeFragmentSingleTemp();\n\t\t\tregCache.addFragmentTempUsages(alphaReg, 1);\n\t\t\tcode += \"mov \" + alphaReg + \", \" + sharedReg.shadedTarget + \".w\\n\";\n\t\t}\n\n\t\tvar methodVO:MethodVO;\n\t\tvar len:number = this._iMethodVOs.length;\n\t\tfor (var i:number = len - this._numEffectDependencies; i < len; i++) {\n\t\t\tmethodVO = this._iMethodVOs[i];\n\t\t\tif (methodVO.useMethod) {\n\t\t\t\tcode += methodVO.method.iGetFragmentCode(shaderObject, methodVO, sharedReg.shadedTarget, regCache, sharedReg);\n\n\t\t\t\tif (methodVO.needsNormals)\n\t\t\t\t\tregCache.removeFragmentTempUsage(sharedReg.normalFragment);\n\n\t\t\t\tif (methodVO.needsView)\n\t\t\t\t\tregCache.removeFragmentTempUsage(sharedReg.viewDirFragment);\n\n\t\t\t}\n\t\t}\n\n\t\tif (this.preserveAlpha && this._numEffectDependencies > 0) {\n\t\t\tcode += \"mov \" + sharedReg.shadedTarget + \".w, \" + alphaReg + \"\\n\";\n\t\t\tregCache.removeFragmentTempUsage(alphaReg);\n\t\t}\n\n\t\tif (this._iColorTransformMethodVO && this._iColorTransformMethodVO.useMethod)\n\t\t\tcode += this._iColorTransformMethodVO.method.iGetFragmentCode(shaderObject, this._iColorTransformMethodVO, sharedReg.shadedTarget, regCache, sharedReg);\n\n\t\treturn code;\n\t}\n\t/**\n\t * Indicates whether the shader uses any shadows.\n\t */\n\tpublic _iUsesShadows(shaderObject:ShaderObjectBase):boolean\n\t{\n\t\treturn Boolean(this._iShadowMethodVO && (this._lightPicker.castingDirectionalLights.length > 0 || this._lightPicker.castingPointLights.length > 0));\n\t}\n\n\t/**\n\t * Indicates whether the shader uses any specular component.\n\t */\n\tpublic _iUsesSpecular(shaderObject:ShaderObjectBase):boolean\n\t{\n\t\treturn Boolean(this._iSpecularMethodVO);\n\t}\n\n\t/**\n\t * Indicates whether the shader uses any specular component.\n\t */\n\tpublic _iUsesDiffuse(shaderObject:ShaderObjectBase):boolean\n\t{\n\t\treturn Boolean(this._iDiffuseMethodVO);\n\t}\n\n\n\tprivate onLightsChange(event:Event)\n\t{\n\t\tthis._updateLights();\n\t}\n\n\tprivate _updateLights()\n\t{\n\t\tvar numDirectionalLightsOld:number = this.numDirectionalLights;\n\t\tvar numPointLightsOld:number = this.numPointLights;\n\t\tvar numLightProbesOld:number = this.numLightProbes;\n\n\t\tif (this._lightPicker && (this._mode & MethodPassMode.LIGHTING)) {\n\t\t\tthis.numDirectionalLights = this.calculateNumDirectionalLights(this._lightPicker.numDirectionalLights);\n\t\t\tthis.numPointLights = this.calculateNumPointLights(this._lightPicker.numPointLights);\n\t\t\tthis.numLightProbes = this.calculateNumProbes(this._lightPicker.numLightProbes);\n\n\t\t\tif (this._includeCasters) {\n\t\t\t\tthis.numDirectionalLights += this._lightPicker.numCastingDirectionalLights;\n\t\t\t\tthis.numPointLights += this._lightPicker.numCastingPointLights;\n\t\t\t}\n\n\t\t} else {\n\t\t\tthis.numDirectionalLights = 0;\n\t\t\tthis.numPointLights = 0;\n\t\t\tthis.numLightProbes = 0;\n\t\t}\n\n\t\tif (numDirectionalLightsOld != this.numDirectionalLights || numPointLightsOld != this.numPointLights || numLightProbesOld != this.numLightProbes) {\n\t\t\tthis._updateShader();\n\n\t\t\tthis.invalidatePass();\n\t\t}\n\t}\n\n\t/**\n\t * Calculates the amount of directional lights this material will support.\n\t * @param numDirectionalLights The maximum amount of directional lights to support.\n\t * @return The amount of directional lights this material will support, bounded by the amount necessary.\n\t */\n\tprivate calculateNumDirectionalLights(numDirectionalLights:number):number\n\t{\n\t\treturn Math.min(numDirectionalLights - this.directionalLightsOffset, this._maxLights);\n\t}\n\n\t/**\n\t * Calculates the amount of point lights this material will support.\n\t * @param numDirectionalLights The maximum amount of point lights to support.\n\t * @return The amount of point lights this material will support, bounded by the amount necessary.\n\t */\n\tprivate calculateNumPointLights(numPointLights:number):number\n\t{\n\t\tvar numFree:number = this._maxLights - this.numDirectionalLights;\n\t\treturn Math.min(numPointLights - this.pointLightsOffset, numFree);\n\t}\n\n\t/**\n\t * Calculates the amount of light probes this material will support.\n\t * @param numDirectionalLights The maximum amount of light probes to support.\n\t * @return The amount of light probes this material will support, bounded by the amount necessary.\n\t */\n\tprivate calculateNumProbes(numLightProbes:number):number\n\t{\n\t\tvar numChannels:number = 0;\n\n\t\tif ((this.specularLightSources & LightSources.PROBES) != 0)\n\t\t\t++numChannels;\n\n\t\tif ((this.diffuseLightSources & LightSources.PROBES) != 0)\n\t\t\t++numChannels;\n\n\t\t// 4 channels available\n\t\treturn Math.min(numLightProbes - this.lightProbesOffset, (4/numChannels) | 0);\n\t}\n}\n\nexport = MethodPass;",
    "import TriangleSubGeometry\t\t\t\t= require(\"awayjs-core/lib/data/TriangleSubGeometry\");\nimport Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport RenderTexture\t\t\t\t\t= require(\"awayjs-core/lib/textures/RenderTexture\");\n\nimport LightBase\t\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport MaterialBase\t\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport IRenderObjectOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderObjectOwner\");\n\nimport ContextGLProgramType\t\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLProgramType\");\nimport IContextGL\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/IContextGL\");\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport RendererBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/base/RendererBase\");\nimport RenderObjectBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/RenderObjectBase\");\nimport RenderableBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/pool/RenderableBase\");\nimport ShaderObjectBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderObjectBase\");\nimport ShaderRegisterCache\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterData\");\nimport IRenderableClass\t\t\t\t\t= require(\"awayjs-renderergl/lib/pool/IRenderableClass\");\nimport RenderPassBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/passes/RenderPassBase\");\n\n/**\n * The SingleObjectDepthPass provides a material pass that renders a single object to a depth map from the point\n * of view from a light.\n */\nclass SingleObjectDepthPass extends RenderPassBase\n{\n\tprivate _textures:Object;\n\tprivate _projections:Object;\n\tprivate _textureSize:number /*uint*/ = 512;\n\tprivate _polyOffset:Array<number> = Array<number>(15, 0, 0, 0);\n\tprivate _enc:Array<number>;\n\tprivate _projectionTexturesInvalid:Boolean = true;\n\n\t/**\n\t * The size of the depth map texture to render to.\n\t */\n\tpublic get textureSize():number\n\t{\n\t\treturn this._textureSize;\n\t}\n\n\tpublic set textureSize(value:number)\n\t{\n\t\tthis._textureSize = value;\n\t}\n\n\t/**\n\t * The amount by which the rendered object will be inflated, to prevent depth map rounding errors.\n\t */\n\tpublic get polyOffset():number\n\t{\n\t\treturn this._polyOffset[0];\n\t}\n\n\tpublic set polyOffset(value:number)\n\t{\n\t\tthis._polyOffset[0] = value;\n\t}\n\n\t/**\n\t * Creates a new SingleObjectDepthPass object.\n\t */\n\tconstructor(renderObject:RenderObjectBase, renderObjectOwner:IRenderObjectOwner, renderableClass:IRenderableClass, stage:Stage)\n\t{\n\t\tsuper(renderObject, renderObjectOwner, renderableClass, stage);\n\n\t\t//this._pNumUsedStreams = 2;\n\t\t//this._pNumUsedVertexConstants = 7;\n\t\t//this._enc = Array<number>(1.0, 255.0, 65025.0, 16581375.0, 1.0/255.0, 1.0/255.0, 1.0/255.0, 0.0);\n\t\t//\n\t\t//this._pAnimatableAttributes = Array<string>(\"va0\", \"va1\");\n\t\t//this._pAnimationTargetRegisters = Array<string>(\"vt0\", \"vt1\");\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic dispose()\n\t{\n\t\tif (this._textures) {\n\t\t\tfor (var key in this._textures) {\n\t\t\t\tvar texture:RenderTexture = this._textures[key];\n\t\t\t\ttexture.dispose();\n\t\t\t}\n\t\t\tthis._textures = null;\n\t\t}\n\t}\n\n\t/**\n\t * Updates the projection textures used to contain the depth renders.\n\t */\n\tprivate updateProjectionTextures()\n\t{\n\t\tif (this._textures) {\n\t\t\tfor (var key in this._textures) {\n\t\t\t\tvar texture:RenderTexture = this._textures[key];\n\t\t\t\ttexture.dispose();\n\t\t\t}\n\t\t}\n\n\t\tthis._textures = new Object();\n\t\tthis._projections = new Object();\n\t\tthis._projectionTexturesInvalid = false;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGetVertexCode():string\n\t{\n\t\tvar code:string;\n\t\t// offset\n\t\tcode = \"mul vt7, vt1, vc4.x\t\\n\" +\n\t\t\t\t\"add vt7, vt7, vt0\\n\" +\n\t\t\t\t\"mov vt7.w, vt0.w\\n\";\n\t\t// project\n\t\tcode += \"m44 vt2, vt7, vc0\\n\" +\n\t\t\t\t\"mov op, vt2\\n\";\n\n\t\t// perspective divide\n\t\tcode += \"div v0, vt2, vt2.w\\n\";\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGetFragmentCode(shaderObject:ShaderObjectBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tvar code:string = \"\";\n\n\t\t// encode float -> rgba\n\t\tcode += \"mul ft0, fc0, v0.z\\n\" +\n\t\t\t\t\"frc ft0, ft0\\n\" +\n\t\t\t\t\"mul ft1, ft0.yzww, fc1\\n\" +\n\t\t\t\t\"sub ft0, ft0, ft1\\n\" +\n\t\t\t\t\"mov oc, ft0\\n\";\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * Gets the depth maps rendered for this object from all lights.\n\t * @param renderable The renderable for which to retrieve the depth maps.\n\t * @param stage3DProxy The Stage3DProxy object currently used for rendering.\n\t * @return A list of depth map textures for all supported lights.\n\t */\n\tpublic _iGetDepthMap(renderable:RenderableBase):RenderTexture\n\t{\n\t\treturn this._textures[renderable.renderableOwner.id];\n\t}\n\n\t/**\n\t * Retrieves the depth map projection maps for all lights.\n\t * @param renderable The renderable for which to retrieve the projection maps.\n\t * @return A list of projection maps for all supported lights.\n\t */\n\tpublic _iGetProjection(renderable:RenderableBase):Matrix3D\n\t{\n\t\treturn this._projections[renderable.renderableOwner.id];\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iRender(renderable:RenderableBase, camera:Camera, viewProjection:Matrix3D)\n\t{\n\t\tvar matrix:Matrix3D;\n\t\tvar context:IContextGL = this._stage.context;\n\t\tvar len:number /*uint*/;\n\t\tvar light:LightBase;\n\t\tvar lights:Array<LightBase> = this._renderObjectOwner.lightPicker.allPickedLights;\n\t\tvar rId:number = renderable.renderableOwner.id;\n\n\t\tif (!this._textures[rId])\n\t\t\tthis._textures[rId] = new RenderTexture(this._textureSize, this._textureSize);\n\n\t\tif (!this._projections[rId])\n\t\t\tthis._projections[rId] = new Matrix3D();\n\n\t\tlen = lights.length;\n\n\t\t// local position = enough\n\t\tlight = lights[0];\n\n\t\tmatrix = light.iGetObjectProjectionMatrix(renderable.sourceEntity, camera, this._projections[rId]);\n\n\t\tthis._stage.setRenderTarget(this._textures[rId], true);\n\t\tcontext.clear(1.0, 1.0, 1.0);\n\t\tcontext.setProgramConstantsFromMatrix(ContextGLProgramType.VERTEX, 0, matrix, true);\n\t\tcontext.setProgramConstantsFromArray(ContextGLProgramType.FRAGMENT, 0, this._enc, 2);\n\n\t\tthis._stage.activateBuffer(0, renderable.getVertexData(TriangleSubGeometry.POSITION_DATA), renderable.getVertexOffset(TriangleSubGeometry.POSITION_DATA), TriangleSubGeometry.POSITION_FORMAT);\n\t\tthis._stage.activateBuffer(1, renderable.getVertexData(TriangleSubGeometry.NORMAL_DATA), renderable.getVertexOffset(TriangleSubGeometry.NORMAL_DATA), TriangleSubGeometry.NORMAL_FORMAT);\n\t\tcontext.drawTriangles(this._stage.getIndexBuffer(renderable.getIndexData()), 0, renderable.numTriangles);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iActivate(camera:Camera)\n\t{\n\t\tif (this._projectionTexturesInvalid)\n\t\t\tthis.updateProjectionTextures();\n\n\t\t// never scale\n\t\tsuper._iActivate(camera);\n\n\t\tthis._stage.context.setProgramConstantsFromArray(ContextGLProgramType.VERTEX, 4, this._polyOffset, 1);\n\t}\n}\n\nexport = SingleObjectDepthPass;",
    "import IRenderObjectOwner\t\t\t= require(\"awayjs-display/lib/base/IRenderObjectOwner\");\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport IRenderablePool\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderablePool\");\nimport IRenderObject\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderObject\");\n\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport RendererBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/base/RendererBase\");\nimport RenderableBase\t\t\t\t= require(\"awayjs-renderergl/lib/pool/RenderableBase\");\nimport RenderablePoolBase\t\t\t= require(\"awayjs-renderergl/lib/pool/RenderablePoolBase\");\nimport IRenderableClass\t\t\t\t= require(\"awayjs-renderergl/lib/pool/IRenderableClass\");\nimport RenderObjectPool\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/RenderObjectPool\");\nimport SkyboxRenderObject\t\t\t= require(\"awayjs-renderergl/lib/compilation/SkyboxRenderObject\");\nimport DepthRenderObject\t\t\t= require(\"awayjs-renderergl/lib/compilation/DepthRenderObject\");\nimport DistanceRenderObject\t\t\t= require(\"awayjs-renderergl/lib/compilation/DistanceRenderObject\");\nimport RenderObjectBase\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/RenderObjectBase\");\nimport RenderMethodMaterialObject\t= require(\"awayjs-methodmaterials/lib/compilation/RenderMethodMaterialObject\");\n\n/**\n * @class away.pool.MethodRenderablePool\n */\nclass MethodRenderablePool extends RenderablePoolBase\n{\n\tprivate _methodMaterialRenderObjectPool:RenderObjectPool;\n\n\t/**\n\t * //TODO\n\t *\n\t * @param renderableClass\n\t */\n\tconstructor(renderableClass:IRenderableClass, stage:Stage)\n\t{\n\t\tsuper(renderableClass, stage);\n\n\t\tthis._methodMaterialRenderObjectPool = new RenderObjectPool(RenderMethodMaterialObject, this._renderableClass, this._stage);\n\t}\n\n\t/**\n\t *\n\t * @param material\n\t * @param renderable\n\t */\n\tpublic getMethodRenderObject(renderObjectOwner:IRenderObjectOwner):RenderObjectBase\n\t{\n\t\treturn this._methodMaterialRenderObjectPool.getItem(renderObjectOwner);\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param renderableClass\n\t * @returns MethodRenderablePool\n\t */\n\tpublic static getPool(renderableClass:IRenderableClass, stage:Stage):MethodRenderablePool\n\t{\n\t\tvar pools:Object = (RenderablePoolBase._pools[stage.stageIndex] || (RenderablePoolBase._pools[stage.stageIndex] = new Object()));\n\n\t\treturn (pools[renderableClass.id] || (pools[renderableClass.id] = new MethodRenderablePool(renderableClass, stage)));\n\t}\n}\n\nexport = MethodRenderablePool;",
    "import BillboardRenderable\t\t\t= require(\"awayjs-renderergl/lib/pool/BillboardRenderable\");\nimport LineSegmentRenderable\t\t= require(\"awayjs-renderergl/lib/pool/LineSegmentRenderable\");\nimport LineSubMeshRenderable\t\t= require(\"awayjs-renderergl/lib/pool/LineSubMeshRenderable\");\nimport TriangleSubMeshRenderable\t= require(\"awayjs-renderergl/lib/pool/TriangleSubMeshRenderable\");\nimport CurveSubMeshRenderable\t\t= require(\"awayjs-renderergl/lib/pool/CurveSubMeshRenderable\");\nimport RendererPoolBase\t\t\t\t= require(\"awayjs-renderergl/lib/pool/RendererPoolBase\");\nimport RendererBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/base/RendererBase\");\n\nimport MethodRenderablePool\t\t\t= require(\"awayjs-methodmaterials/lib/pool/MethodRenderablePool\");\n\n/**\n * MethodRendererPool forms an abstract base class for classes that are used in the rendering pipeline to render the\n * contents of a partition\n *\n * @class away.render.MethodRendererPool\n */\nclass MethodRendererPool extends RendererPoolBase\n{\n\t/**\n\t * Creates a new MethodRendererPool object.\n\t */\n\tconstructor(renderer:RendererBase)\n\t{\n\t\tsuper(renderer);\n\t}\n\n\tpublic _pUpdatePool()\n\t{\n\t\tthis._billboardRenderablePool = MethodRenderablePool.getPool(BillboardRenderable, this._pStage);\n\t\tthis._lineSegmentRenderablePool = MethodRenderablePool.getPool(LineSegmentRenderable, this._pStage);\n\t\tthis._triangleSubMeshRenderablePool = MethodRenderablePool.getPool(TriangleSubMeshRenderable, this._pStage);\n\t\tthis._lineSubMeshRenderablePool = MethodRenderablePool.getPool(LineSubMeshRenderable, this._pStage);\n\t\tthis._curveSubMeshRenderablePool = MethodRenderablePool.getPool(CurveSubMeshRenderable, this._pStage);\n\t}\n}\n\nexport = MethodRendererPool;"
  ]
}