var Sampler2D = require("awayjs-core/lib/image/Sampler2D");
var URLLoader = require("awayjs-core/lib/net/URLLoader");
var URLLoaderDataFormat = require("awayjs-core/lib/net/URLLoaderDataFormat");
var URLRequest = require("awayjs-core/lib/net/URLRequest");
var URLLoaderEvent = require("awayjs-core/lib/events/URLLoaderEvent");
var ParserUtils = require("awayjs-core/lib/parsers/ParserUtils");
var RequestAnimationFrame = require("awayjs-core/lib/utils/RequestAnimationFrame");
var Debug = require("awayjs-core/lib/utils/Debug");
var View = require("awayjs-display/lib/View");
var PointLight = require("awayjs-display/lib/display/PointLight");
var StaticLightPicker = require("awayjs-display/lib/materials/lightpickers/StaticLightPicker");
var PrimitiveTorusPrefab = require("awayjs-display/lib/prefabs/PrimitiveTorusPrefab");
var DefaultRenderer = require("awayjs-renderergl/lib/DefaultRenderer");
var MethodMaterial = require("awayjs-methodmaterials/lib/MethodMaterial");
var ElementsType = require("awayjs-display/lib/graphics/ElementsType");
var TorusObject3DDemo = (function () {
    function TorusObject3DDemo() {
        var _this = this;
        this.t = 0;
        this.tPos = 0;
        this.radius = 1000;
        this.follow = true;
        Debug.THROW_ERRORS = false;
        Debug.LOG_PI_ERRORS = false;
        this.meshes = new Array();
        this.light = new PointLight();
        this.view = new View(new DefaultRenderer());
        this.pointLight = new PointLight();
        this.lightPicker = new StaticLightPicker([this.pointLight]);
        this.view.scene.addChild(this.pointLight);
        var perspectiveLens = this.view.camera.projection;
        perspectiveLens.fieldOfView = 75;
        this.view.camera.z = 0;
        this.view.backgroundColor = 0x000000;
        this.view.backgroundAlpha = 1;
        this.view.scene.addChild(this.light);
        this.raf = new RequestAnimationFrame(this.tick, this);
        this.raf.start();
        this.onResize();
        document.onmousedown = function (event) { return _this.followObject(event); };
        window.onresize = function (event) { return _this.onResize(event); };
        this.loadResources();
    }
    TorusObject3DDemo.prototype.loadResources = function () {
        var _this = this;
        var urlRequest = new URLRequest("assets/custom_uv_horizontal.png");
        var urlLoader = new URLLoader();
        urlLoader.dataFormat = URLLoaderDataFormat.BLOB;
        urlLoader.addEventListener(URLLoaderEvent.LOAD_COMPLETE, function (event) { return _this.imageCompleteHandler(event); });
        urlLoader.load(urlRequest);
    };
    TorusObject3DDemo.prototype.imageCompleteHandler = function (event) {
        var _this = this;
        var urlLoader = event.target;
        this._image = ParserUtils.blobToImage(urlLoader.data);
        this._image.onload = function (event) { return _this.onImageLoadComplete(event); };
    };
    TorusObject3DDemo.prototype.onImageLoadComplete = function (event) {
        var matTx = new MethodMaterial(ParserUtils.imageToBitmapImage2D(this._image));
        matTx.style.sampler = new Sampler2D(true, true, true);
        matTx.lightPicker = this.lightPicker;
        var torus = new PrimitiveTorusPrefab(matTx, ElementsType.TRIANGLE, 150, 50, 32, 32, false);
        var l = 10;
        for (var c = 0; c < l; c++) {
            var t = Math.PI * 2 * c / l;
            var mesh = torus.getNewObject();
            mesh.x = Math.cos(t) * this.radius;
            mesh.y = 0;
            mesh.z = Math.sin(t) * this.radius;
            this.view.scene.addChild(mesh);
            this.meshes.push(mesh);
        }
    };
    TorusObject3DDemo.prototype.tick = function (dt) {
        this.tPos += .02;
        for (var c = 0; c < this.meshes.length; c++) {
            var objPos = Math.PI * 2 * c / this.meshes.length;
            this.t += .005;
            var s = 1.2 + Math.sin(this.t + objPos);
            this.meshes[c].rotationY += 2 * (c / this.meshes.length);
            this.meshes[c].rotationX += 2 * (c / this.meshes.length);
            this.meshes[c].rotationZ += 2 * (c / this.meshes.length);
            this.meshes[c].scaleX = this.meshes[c].scaleY = this.meshes[c].scaleZ = s;
            this.meshes[c].x = Math.cos(objPos + this.tPos) * this.radius;
            this.meshes[c].y = Math.sin(this.t) * 500;
            this.meshes[c].z = Math.sin(objPos + this.tPos) * this.radius;
            if (this.follow && c == 0)
                this.view.camera.lookAt(this.meshes[c].transform.position);
        }
        //this.view.camera.y = Math.sin( this.tPos ) * 1500;
        this.view.camera.y = Math.sin(this.tPos) * 1500;
        this.view.render();
    };
    TorusObject3DDemo.prototype.onResize = function (event) {
        if (event === void 0) { event = null; }
        this.view.y = 0;
        this.view.x = 0;
        this.view.width = window.innerWidth;
        this.view.height = window.innerHeight;
    };
    TorusObject3DDemo.prototype.followObject = function (e) {
        this.follow = !this.follow;
    };
    return TorusObject3DDemo;
})();

//# sourceMappingURL=data:application/json;base64,