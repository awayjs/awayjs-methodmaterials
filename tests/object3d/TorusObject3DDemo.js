"use strict";
var Sampler2D_1 = require("awayjs-core/lib/image/Sampler2D");
var URLLoader_1 = require("awayjs-core/lib/net/URLLoader");
var URLLoaderDataFormat_1 = require("awayjs-core/lib/net/URLLoaderDataFormat");
var URLRequest_1 = require("awayjs-core/lib/net/URLRequest");
var URLLoaderEvent_1 = require("awayjs-core/lib/events/URLLoaderEvent");
var ParserUtils_1 = require("awayjs-core/lib/parsers/ParserUtils");
var RequestAnimationFrame_1 = require("awayjs-core/lib/utils/RequestAnimationFrame");
var Debug_1 = require("awayjs-core/lib/utils/Debug");
var View_1 = require("awayjs-display/lib/View");
var PointLight_1 = require("awayjs-display/lib/display/PointLight");
var ElementsType_1 = require("awayjs-display/lib/graphics/ElementsType");
var StaticLightPicker_1 = require("awayjs-display/lib/materials/lightpickers/StaticLightPicker");
var PrimitiveTorusPrefab_1 = require("awayjs-display/lib/prefabs/PrimitiveTorusPrefab");
var DefaultRenderer_1 = require("awayjs-renderergl/lib/DefaultRenderer");
var MethodMaterial_1 = require("awayjs-methodmaterials/lib/MethodMaterial");
var TorusObject3DDemo = (function () {
    function TorusObject3DDemo() {
        var _this = this;
        this.t = 0;
        this.tPos = 0;
        this.radius = 1000;
        this.follow = true;
        Debug_1.default.THROW_ERRORS = false;
        Debug_1.default.LOG_PI_ERRORS = false;
        this.sprites = new Array();
        this.light = new PointLight_1.default();
        this.view = new View_1.default(new DefaultRenderer_1.default());
        this.pointLight = new PointLight_1.default();
        this.lightPicker = new StaticLightPicker_1.default([this.pointLight]);
        this.view.scene.addChild(this.pointLight);
        var perspectiveLens = this.view.camera.projection;
        perspectiveLens.fieldOfView = 75;
        this.view.camera.z = 0;
        this.view.backgroundColor = 0x000000;
        this.view.backgroundAlpha = 1;
        this.view.scene.addChild(this.light);
        this.raf = new RequestAnimationFrame_1.default(this.tick, this);
        this.raf.start();
        this.onResize();
        document.onmousedown = function (event) { return _this.followObject(event); };
        window.onresize = function (event) { return _this.onResize(event); };
        this.loadResources();
    }
    TorusObject3DDemo.prototype.loadResources = function () {
        var _this = this;
        var urlRequest = new URLRequest_1.default("assets/custom_uv_horizontal.png");
        var urlLoader = new URLLoader_1.default();
        urlLoader.dataFormat = URLLoaderDataFormat_1.default.BLOB;
        urlLoader.addEventListener(URLLoaderEvent_1.default.LOAD_COMPLETE, function (event) { return _this.imageCompleteHandler(event); });
        urlLoader.load(urlRequest);
    };
    TorusObject3DDemo.prototype.imageCompleteHandler = function (event) {
        var _this = this;
        var urlLoader = event.target;
        this._image = ParserUtils_1.default.blobToImage(urlLoader.data);
        this._image.onload = function (event) { return _this.onImageLoadComplete(event); };
    };
    TorusObject3DDemo.prototype.onImageLoadComplete = function (event) {
        var matTx = new MethodMaterial_1.default(ParserUtils_1.default.imageToBitmapImage2D(this._image));
        matTx.style.sampler = new Sampler2D_1.default(true, true, true);
        matTx.lightPicker = this.lightPicker;
        var torus = new PrimitiveTorusPrefab_1.default(matTx, ElementsType_1.default.TRIANGLE, 150, 50, 32, 32, false);
        var l = 10;
        //var radius:number = 1000;
        for (var c = 0; c < l; c++) {
            var t = Math.PI * 2 * c / l;
            var sprite = torus.getNewObject();
            sprite.x = Math.cos(t) * this.radius;
            sprite.y = 0;
            sprite.z = Math.sin(t) * this.radius;
            this.view.scene.addChild(sprite);
            this.sprites.push(sprite);
        }
    };
    TorusObject3DDemo.prototype.tick = function (dt) {
        this.tPos += .02;
        for (var c = 0; c < this.sprites.length; c++) {
            var objPos = Math.PI * 2 * c / this.sprites.length;
            this.t += .005;
            var s = 1.2 + Math.sin(this.t + objPos);
            this.sprites[c].rotationY += 2 * (c / this.sprites.length);
            this.sprites[c].rotationX += 2 * (c / this.sprites.length);
            this.sprites[c].rotationZ += 2 * (c / this.sprites.length);
            this.sprites[c].scaleX = this.sprites[c].scaleY = this.sprites[c].scaleZ = s;
            this.sprites[c].x = Math.cos(objPos + this.tPos) * this.radius;
            this.sprites[c].y = Math.sin(this.t) * 500;
            this.sprites[c].z = Math.sin(objPos + this.tPos) * this.radius;
            if (this.follow && c == 0)
                this.view.camera.lookAt(this.sprites[c].transform.position);
        }
        //this.view.camera.y = Math.sin( this.tPos ) * 1500;
        this.view.camera.y = Math.sin(this.tPos) * 1500;
        this.view.render();
    };
    TorusObject3DDemo.prototype.onResize = function (event) {
        if (event === void 0) { event = null; }
        this.view.y = 0;
        this.view.x = 0;
        this.view.width = window.innerWidth;
        this.view.height = window.innerHeight;
    };
    TorusObject3DDemo.prototype.followObject = function (e) {
        this.follow = !this.follow;
    };
    return TorusObject3DDemo;
}());

//# sourceMappingURL=data:application/json;base64,
