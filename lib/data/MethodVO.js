/**
 * MethodVO contains data for a given shader object for the use within a single material.
 * This allows shader methods to be shared across materials while their non-public state differs.
 */
var MethodVO = (function () {
    /**
     * Creates a new MethodVO object.
     */
    function MethodVO(method) {
        this.useMethod = true;
        this.method = method;
    }
    /**
     * Resets the values of the value object to their "unused" state.
     */
    MethodVO.prototype.reset = function () {
        this.method.iReset();
        this.texturesIndex = -1;
        this.vertexConstantsIndex = -1;
        this.fragmentConstantsIndex = -1;
        this.needsProjection = false;
        this.needsView = false;
        this.needsNormals = false;
        this.needsTangents = false;
        this.needsUV = false;
        this.needsSecondaryUV = false;
        this.needsGlobalVertexPos = false;
        this.needsGlobalFragmentPos = false;
    };
    return MethodVO;
})();
module.exports = MethodVO;

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImF3YXlqcy1tZXRob2RtYXRlcmlhbHMvbGliL2RhdGEvTWV0aG9kVk8udHMiXSwibmFtZXMiOlsiTWV0aG9kVk8iLCJNZXRob2RWTy5jb25zdHJ1Y3RvciIsIk1ldGhvZFZPLnJlc2V0Il0sIm1hcHBpbmdzIjoiQUFFQSxBQUlBOzs7R0FERztJQUNHLFFBQVE7SUEwQmJBOztPQUVHQTtJQUNIQSxTQTdCS0EsUUFBUUEsQ0E2QkRBLE1BQXdCQTtRQTNCN0JDLGNBQVNBLEdBQVdBLElBQUlBLENBQUNBO1FBNkIvQkEsSUFBSUEsQ0FBQ0EsTUFBTUEsR0FBR0EsTUFBTUEsQ0FBQ0E7SUFDdEJBLENBQUNBO0lBRUREOztPQUVHQTtJQUNJQSx3QkFBS0EsR0FBWkE7UUFFQ0UsSUFBSUEsQ0FBQ0EsTUFBTUEsQ0FBQ0EsTUFBTUEsRUFBRUEsQ0FBQ0E7UUFFckJBLElBQUlBLENBQUNBLGFBQWFBLEdBQUdBLENBQUNBLENBQUNBLENBQUNBO1FBQ3hCQSxJQUFJQSxDQUFDQSxvQkFBb0JBLEdBQUdBLENBQUNBLENBQUNBLENBQUNBO1FBQy9CQSxJQUFJQSxDQUFDQSxzQkFBc0JBLEdBQUdBLENBQUNBLENBQUNBLENBQUNBO1FBRWpDQSxJQUFJQSxDQUFDQSxlQUFlQSxHQUFHQSxLQUFLQSxDQUFDQTtRQUM3QkEsSUFBSUEsQ0FBQ0EsU0FBU0EsR0FBR0EsS0FBS0EsQ0FBQ0E7UUFDdkJBLElBQUlBLENBQUNBLFlBQVlBLEdBQUdBLEtBQUtBLENBQUNBO1FBQzFCQSxJQUFJQSxDQUFDQSxhQUFhQSxHQUFHQSxLQUFLQSxDQUFDQTtRQUMzQkEsSUFBSUEsQ0FBQ0EsT0FBT0EsR0FBR0EsS0FBS0EsQ0FBQ0E7UUFDckJBLElBQUlBLENBQUNBLGdCQUFnQkEsR0FBR0EsS0FBS0EsQ0FBQ0E7UUFDOUJBLElBQUlBLENBQUNBLG9CQUFvQkEsR0FBR0EsS0FBS0EsQ0FBQ0E7UUFDbENBLElBQUlBLENBQUNBLHNCQUFzQkEsR0FBR0EsS0FBS0EsQ0FBQ0E7SUFDckNBLENBQUNBO0lBQ0ZGLGVBQUNBO0FBQURBLENBdERBLEFBc0RDQSxJQUFBO0FBRUQsQUFBa0IsaUJBQVQsUUFBUSxDQUFDIiwiZmlsZSI6ImRhdGEvTWV0aG9kVk8uanMiLCJzb3VyY2VSb290IjoiLi4vIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFNoYWRpbmdNZXRob2RCYXNlXHRcdFx0PSByZXF1aXJlKFwiYXdheWpzLW1ldGhvZG1hdGVyaWFscy9saWIvbWV0aG9kcy9TaGFkaW5nTWV0aG9kQmFzZVwiKTtcclxuXHJcbi8qKlxyXG4gKiBNZXRob2RWTyBjb250YWlucyBkYXRhIGZvciBhIGdpdmVuIHNoYWRlciBvYmplY3QgZm9yIHRoZSB1c2Ugd2l0aGluIGEgc2luZ2xlIG1hdGVyaWFsLlxyXG4gKiBUaGlzIGFsbG93cyBzaGFkZXIgbWV0aG9kcyB0byBiZSBzaGFyZWQgYWNyb3NzIG1hdGVyaWFscyB3aGlsZSB0aGVpciBub24tcHVibGljIHN0YXRlIGRpZmZlcnMuXHJcbiAqL1xyXG5jbGFzcyBNZXRob2RWT1xyXG57XHJcblx0cHVibGljIHVzZU1ldGhvZDpib29sZWFuID0gdHJ1ZTtcclxuXHJcblx0cHVibGljIG1ldGhvZDpTaGFkaW5nTWV0aG9kQmFzZTtcclxuXHJcblx0Ly8gcHVibGljIHJlZ2lzdGVyIGluZGljZXNcclxuXHRwdWJsaWMgdGV4dHVyZXNJbmRleDpudW1iZXI7XHJcblx0cHVibGljIHNlY29uZGFyeVRleHR1cmVzSW5kZXg6bnVtYmVyOyAvLyBzb21ldGltZXMgbmVlZGVkIGZvciBjb21wb3NpdGVzXHJcblx0cHVibGljIHZlcnRleENvbnN0YW50c0luZGV4Om51bWJlcjtcclxuXHRwdWJsaWMgc2Vjb25kYXJ5VmVydGV4Q29uc3RhbnRzSW5kZXg6bnVtYmVyOyAvLyBzb21ldGltZXMgbmVlZGVkIGZvciBjb21wb3NpdGVzXHJcblx0cHVibGljIGZyYWdtZW50Q29uc3RhbnRzSW5kZXg6bnVtYmVyO1xyXG5cdHB1YmxpYyBzZWNvbmRhcnlGcmFnbWVudENvbnN0YW50c0luZGV4Om51bWJlcjsgLy8gc29tZXRpbWVzIG5lZWRlZCBmb3IgY29tcG9zaXRlc1xyXG5cclxuXHQvLyBpbnRlcm5hbCBzdHVmZiBmb3IgdGhlIG1hdGVyaWFsIHRvIGtub3cgYmVmb3JlIGFzc2VtYmxpbmcgY29kZVxyXG5cdHB1YmxpYyBuZWVkc1Byb2plY3Rpb246Ym9vbGVhbjtcclxuXHRwdWJsaWMgbmVlZHNWaWV3OmJvb2xlYW47XHJcblx0cHVibGljIG5lZWRzTm9ybWFsczpib29sZWFuO1xyXG5cdHB1YmxpYyBuZWVkc1RhbmdlbnRzOmJvb2xlYW47XHJcblx0cHVibGljIG5lZWRzVVY6Ym9vbGVhbjtcclxuXHRwdWJsaWMgbmVlZHNTZWNvbmRhcnlVVjpib29sZWFuO1xyXG5cdHB1YmxpYyBuZWVkc0dsb2JhbFZlcnRleFBvczpib29sZWFuO1xyXG5cdHB1YmxpYyBuZWVkc0dsb2JhbEZyYWdtZW50UG9zOmJvb2xlYW47XHJcblxyXG5cdHB1YmxpYyB1c2VzVGV4dHVyZTpib29sZWFuO1xyXG5cclxuXHQvKipcclxuXHQgKiBDcmVhdGVzIGEgbmV3IE1ldGhvZFZPIG9iamVjdC5cclxuXHQgKi9cclxuXHRjb25zdHJ1Y3RvcihtZXRob2Q6U2hhZGluZ01ldGhvZEJhc2UpXHJcblx0e1xyXG5cdFx0dGhpcy5tZXRob2QgPSBtZXRob2Q7XHJcblx0fVxyXG5cclxuXHQvKipcclxuXHQgKiBSZXNldHMgdGhlIHZhbHVlcyBvZiB0aGUgdmFsdWUgb2JqZWN0IHRvIHRoZWlyIFwidW51c2VkXCIgc3RhdGUuXHJcblx0ICovXHJcblx0cHVibGljIHJlc2V0KClcclxuXHR7XHJcblx0XHR0aGlzLm1ldGhvZC5pUmVzZXQoKTtcclxuXHJcblx0XHR0aGlzLnRleHR1cmVzSW5kZXggPSAtMTtcclxuXHRcdHRoaXMudmVydGV4Q29uc3RhbnRzSW5kZXggPSAtMTtcclxuXHRcdHRoaXMuZnJhZ21lbnRDb25zdGFudHNJbmRleCA9IC0xO1xyXG5cclxuXHRcdHRoaXMubmVlZHNQcm9qZWN0aW9uID0gZmFsc2U7XHJcblx0XHR0aGlzLm5lZWRzVmlldyA9IGZhbHNlO1xyXG5cdFx0dGhpcy5uZWVkc05vcm1hbHMgPSBmYWxzZTtcclxuXHRcdHRoaXMubmVlZHNUYW5nZW50cyA9IGZhbHNlO1xyXG5cdFx0dGhpcy5uZWVkc1VWID0gZmFsc2U7XHJcblx0XHR0aGlzLm5lZWRzU2Vjb25kYXJ5VVYgPSBmYWxzZTtcclxuXHRcdHRoaXMubmVlZHNHbG9iYWxWZXJ0ZXhQb3MgPSBmYWxzZTtcclxuXHRcdHRoaXMubmVlZHNHbG9iYWxGcmFnbWVudFBvcyA9IGZhbHNlO1xyXG5cdH1cclxufVxyXG5cclxuZXhwb3J0ID0gTWV0aG9kVk87XHJcbiJdfQ==